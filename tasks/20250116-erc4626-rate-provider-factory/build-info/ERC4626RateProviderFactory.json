{
  "id": "395a81d5c02b64bc98f2814911ef205e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.11",
  "solcLongVersion": "0.8.11+commit.d7f03943",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/BaseRateProviderFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IBaseRateProviderFactory.sol\";\n\n/**\n * @title Base Rate Provider Factory\n * @notice Base Factory for creating RateProviders\n * @dev This is a base contract for building factories that create RateProviders.\n */\ncontract BaseRateProviderFactory is IBaseRateProviderFactory {\n    // Mapping of rate providers created by this factory.\n    mapping(address => bool) private _isRateProviderFromFactory;\n\n    event RateProviderCreated(address indexed rateProvider);\n\n    function isRateProviderFromFactory(address rateProvider) external view returns (bool) {\n        return _isRateProviderFromFactory[rateProvider];\n    }\n\n    function _onCreate(address rateProvider) internal {\n        _isRateProviderFromFactory[rateProvider] = true;\n        emit RateProviderCreated(rateProvider);\n    }\n}\n"
      },
      "contracts/interfaces/IBaseRateProviderFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\ninterface IBaseRateProviderFactory {\n    /**\n     * @dev Checks if a rate provider was created by the derived factory.\n     * @param rateProvider - Address of the rate provider to check.\n     * @return bool - True if the rate provider was created by the derived factory.\n     */\n    function isRateProviderFromFactory(address rateProvider) external view returns (bool);\n}\n"
      },
      "contracts/ERC4626RateProviderFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./BaseRateProviderFactory.sol\";\nimport \"./ERC4626RateProvider.sol\";\n\n/**\n * @title ERC4626 Rate Provider Factory\n * @notice Factory for creating ERC4626RateProviders\n * @dev This contract is used to create ERC4626RateProvider contracts.\n */\ncontract ERC4626RateProviderFactory is BaseRateProviderFactory {\n    /**\n     * @notice Deploys a new ERC4626RateProvider contract using an ERC4626 contract.\n     * @param erc4626 - The ERC4626 contract.\n     */\n    function create(IERC4626 erc4626) external returns (ERC4626RateProvider) {\n        ERC4626RateProvider rateProvider = new ERC4626RateProvider(erc4626);\n        _onCreate(address(rateProvider));\n        return rateProvider;\n    }\n}\n"
      },
      "contracts/ERC4626RateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\n\nimport \"./interfaces/IRateProvider.sol\";\n\n/**\n * @title ERC4626 Rate Provider\n * @notice Returns an 18 decimal fixed point number that is the exchange rate of the\n * shares of an ERC4626 to the underlying asset\n */\ncontract ERC4626RateProvider is IRateProvider {\n    IERC4626 public immutable erc4626;\n    uint256 public immutable fixedPointOne;\n\n    constructor(IERC4626 _erc4626) {\n        erc4626 = _erc4626;\n        uint256 underlyingDecimals = IERC4626(_erc4626.asset()).decimals();\n        // Balancer does not support tokens with more than 18 decimals so this will never underflow\n        fixedPointOne = 10**(18 + _erc4626.decimals() - underlyingDecimals);\n    }\n\n    /**\n     * @return An 18 decimal fixed point number that is the exchange rate of the\n     * shares of an ERC4626 to the underlying asset\n     */\n    function getRate() external view override returns (uint256) {\n        return erc4626.convertToAssets(fixedPointOne);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20.sol\";\nimport \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n *\n * _Available since v4.7._\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"
      },
      "contracts/interfaces/IRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n// TODO: pull this from the monorepo\ninterface IRateProvider {\n    function getRate() external view returns (uint256);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "contracts/WstETHRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IRateProvider.sol\";\nimport \"./interfaces/IwstETH.sol\";\n\n/**\n * @title Wrapped stETH Rate Provider\n * @notice Returns the value of wstETH in terms of stETH\n */\ncontract WstETHRateProvider is IRateProvider {\n    IwstETH public immutable wstETH;\n\n    constructor(IwstETH _wstETH) {\n        wstETH = _wstETH;\n    }\n\n    /**\n     * @return the value of wstETH in terms of stETH\n     */\n    function getRate() external view override returns (uint256) {\n        return wstETH.stEthPerToken();\n    }\n}\n"
      },
      "contracts/interfaces/IwstETH.sol": {
        "content": "// SPDX-FileCopyrightText: 2021 Lido <info@lido.fi>\n\n// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\n\n/**\n * @title StETH token wrapper with static balances.\n * @dev It's an ERC20 token that represents the account's share of the total\n * supply of stETH tokens. WstETH token's balance only changes on transfers,\n * unlike StETH that is also changed when oracles report staking rewards and\n * penalties. It's a \"power user\" token for DeFi protocols which don't\n * support rebasable tokens.\n *\n * The contract is also a trustless wrapper that accepts stETH tokens and mints\n * wstETH in return. Then the user unwraps, the contract burns user's wstETH\n * and sends user locked stETH in return.\n *\n * The contract provides the staking shortcut: user can send ETH with regular\n * transfer and get wstETH in return. The contract will send ETH to Lido submit\n * method, staking it and wrapping the received stETH.\n *\n */\ninterface IwstETH {\n    /**\n     * @notice Get amount of wstETH for a one stETH\n     * @return Amount of stETH for 1 wstETH\n     */\n    function stEthPerToken() external view returns (uint256);\n}\n"
      },
      "contracts/StaticATokenRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IRateProvider.sol\";\nimport \"./interfaces/IStaticAToken.sol\";\n\n/**\n * @title Wrapped aToken Rate Provider\n * @notice Returns the value of a wrapped (static) aToken in terms of the underlying (dynamic) aToken\n */\ncontract StaticATokenRateProvider is IRateProvider {\n    ILendingPool public immutable lendingPool;\n    address public immutable asset;\n\n    constructor(IStaticAToken _waToken) {\n        lendingPool = _waToken.LENDING_POOL();\n        asset = _waToken.ASSET();\n    }\n\n    /**\n     * @return The value of the wrapped aToken in terms of the underlying aToken\n     */\n    function getRate() external view override returns (uint256) {\n        // This pulls the implementation of used in the StaticAToken contract\n        // except avoiding storing relevant variables in storage for gas reasons.\n        // solhint-disable-next-line max-line-length\n        // see: https://github.com/aave/protocol-v2/blob/ac58fea62bb8afee23f66197e8bce6d79ecda292/contracts/protocol/tokenization/StaticATokenLM.sol#L255-L257\n        uint256 rate = lendingPool.getReserveNormalizedIncome(asset);\n\n        // getRate returns a 18 decimal fixed point number, but `rate` has 27 decimals (i.e. a 'ray' value)\n        // so we need to convert it.\n        return rate / 10**9;\n    }\n}\n"
      },
      "contracts/interfaces/IStaticAToken.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./ILendingPool.sol\";\n\ninterface IStaticAToken {\n    /**\n     * @dev returns the address of the staticAToken's underlying asset\n     */\n    function ASSET() external view returns (address);\n\n    /**\n     * @dev returns the address of the staticAToken's lending pool\n     */\n    function LENDING_POOL() external view returns (ILendingPool);\n\n    /**\n     * @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27\n     */\n    function rate() external view returns (uint256);\n}\n"
      },
      "contracts/interfaces/ILendingPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\ninterface ILendingPool {\n    /**\n     * @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27\n     */\n    function getReserveNormalizedIncome(address asset) external view returns (uint256);\n}\n"
      },
      "contracts/CTokenRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IRateProvider.sol\";\nimport \"./interfaces/ICToken.sol\";\n\n/**\n * @title cToken Rate Provider\n * @notice Returns the value of a cToken in terms of its underlying\n */\ncontract CTokenRateProvider is IRateProvider {\n    ICToken public immutable cToken;\n\n    constructor(ICToken _cToken) {\n        require(_cToken.isCToken(), \"Provided address is not cToken\");\n        cToken = _cToken;\n    }\n\n    /**\n     * @return the value of RateProvider's cToken in terms of its underlying\n     */\n    function getRate() external view override returns (uint256) {\n        return cToken.exchangeRateStored();\n    }\n}\n"
      },
      "contracts/interfaces/ICToken.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\ninterface ICToken {\n    /**\n     * @notice Indicator that this is a CToken contract (for inspection)\n     */\n    function isCToken() external view returns (bool);\n\n    /**\n     * @notice Calculates the exchange rate from the underlying to the CToken\n     */\n    function exchangeRateStored() external view returns (uint256);\n}\n"
      },
      "contracts/ChainlinkRegistryRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./interfaces/IRateProvider.sol\";\n\n/**\n * @title Chainlink Registry Rate Provider\n * @notice Returns a Chainlink price feed's quote for the provided currency pair\n * @dev This rate provider uses the Chainlink pricefeed registry as the source of truth\n *      while caching the underlying feed to query in order to save gas.\n */\ncontract ChainlinkRegistryRateProvider is IRateProvider {\n    FeedRegistryInterface public immutable registry;\n    address public immutable base;\n    address public immutable quote;\n\n    // We cache the price feed for the given currency pair on this contract\n    // This avoids unnecessarily querying the Chainlink registry.\n    AggregatorV3Interface internal _feed;\n\n    // Rate providers are expected to respond with a fixed-point value with 18 decimals\n    // We then need to scale the price feed's output to match this.\n    uint256 internal _scalingFactor;\n\n    /**\n     * @param _registry - The Chainlink price feed registry contract\n     * @param _base - The identifier for the currency which the quoted rate will be denominated in\n     * @param _quote - The identifier for the currency for which a price will be quoted\n     */\n    constructor(\n        FeedRegistryInterface _registry,\n        address _base,\n        address _quote\n    ) {\n        registry = _registry;\n        base = _base;\n        quote = _quote;\n\n        // Initialise price feed cache\n        _feed = _registry.getFeed(_base, _quote);\n        _scalingFactor = 10**SafeMath.sub(18, _feed.decimals());\n    }\n\n    /**\n     * @return the value of the quote currency in terms of the base currency\n     */\n    function getRate() external view override returns (uint256) {\n        (, int256 price, , , ) = _feed.latestRoundData();\n        require(price > 0, \"Invalid price rate response\");\n        return uint256(price) * _scalingFactor;\n    }\n\n    /**\n     * @notice updates cached address of Chainlink price feed used to source quotes\n     * @dev The cache may fall out of sync with the canonical price feed as listed on the Chainlink registry\n     *      Any address may call this function to update the cache to match the registry.\n     */\n    function updateCachedFeed() external {\n        AggregatorV3Interface priceFeed = registry.getFeed(base, quote);\n\n        // Price feeds with more than 18 decimals are not supported.\n        _scalingFactor = 10**SafeMath.sub(18, priceFeed.decimals());\n        _feed = priceFeed;\n    }\n}\n"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
      },
      "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport \"./AggregatorV2V3Interface.sol\";\n\ninterface FeedRegistryInterface {\n  struct Phase {\n    uint16 phaseId;\n    uint80 startingAggregatorRoundId;\n    uint80 endingAggregatorRoundId;\n  }\n\n  event FeedProposed(\n    address indexed asset,\n    address indexed denomination,\n    address indexed proposedAggregator,\n    address currentAggregator,\n    address sender\n  );\n  event FeedConfirmed(\n    address indexed asset,\n    address indexed denomination,\n    address indexed latestAggregator,\n    address previousAggregator,\n    uint16 nextPhaseId,\n    address sender\n  );\n\n  // V3 AggregatorV3Interface\n\n  function decimals(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint256\n    );\n\n  function latestRoundData(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function getRoundData(\n    address base,\n    address quote,\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  // V2 AggregatorInterface\n\n  function latestAnswer(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      int256 answer\n    );\n\n  function latestTimestamp(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint256 timestamp\n    );\n\n  function latestRound(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint256 roundId\n    );\n\n  function getAnswer(\n    address base,\n    address quote,\n    uint256 roundId\n  )\n    external\n    view\n    returns (\n      int256 answer\n    );\n\n  function getTimestamp(\n    address base,\n    address quote,\n    uint256 roundId\n  )\n    external\n    view\n    returns (\n      uint256 timestamp\n    );\n\n  // Registry getters\n\n  function getFeed(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      AggregatorV2V3Interface aggregator\n    );\n\n  function getPhaseFeed(\n    address base,\n    address quote,\n    uint16 phaseId\n  )\n    external\n    view\n    returns (\n      AggregatorV2V3Interface aggregator\n    );\n\n  function isFeedEnabled(\n    address aggregator\n  )\n    external\n    view\n    returns (\n      bool\n    );\n\n  function getPhase(\n    address base,\n    address quote,\n    uint16 phaseId\n  )\n    external\n    view\n    returns (\n      Phase memory phase\n    );\n\n  // Round helpers\n\n  function getRoundFeed(\n    address base,\n    address quote,\n    uint80 roundId\n  )\n    external\n    view\n    returns (\n      AggregatorV2V3Interface aggregator\n    );\n\n  function getPhaseRange(\n    address base,\n    address quote,\n    uint16 phaseId\n  )\n    external\n    view\n    returns (\n      uint80 startingRoundId,\n      uint80 endingRoundId\n    );\n\n  function getPreviousRoundId(\n    address base,\n    address quote,\n    uint80 roundId\n  ) external\n    view\n    returns (\n      uint80 previousRoundId\n    );\n\n  function getNextRoundId(\n    address base,\n    address quote,\n    uint80 roundId\n  ) external\n    view\n    returns (\n      uint80 nextRoundId\n    );\n\n  // Feed management\n\n  function proposeFeed(\n    address base,\n    address quote,\n    address aggregator\n  ) external;\n\n  function confirmFeed(\n    address base,\n    address quote,\n    address aggregator\n  ) external;\n\n  // Proposed aggregator\n\n  function getProposedFeed(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      AggregatorV2V3Interface proposedAggregator\n    );\n\n  function proposedGetRoundData(\n    address base,\n    address quote,\n    uint80 roundId\n  )\n    external\n    view\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function proposedLatestRoundData(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  // Phases\n  function getCurrentPhaseId(\n    address base,\n    address quote\n  )\n    external\n    view\n    returns (\n      uint16 currentPhaseId\n    );\n}\n"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AggregatorInterface.sol\";\nimport \"./AggregatorV3Interface.sol\";\n\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface\n{\n}\n"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorInterface {\n  function latestAnswer()\n    external\n    view\n    returns (\n      int256\n    );\n  \n  function latestTimestamp()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  function latestRound()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  function getAnswer(\n    uint256 roundId\n  )\n    external\n    view\n    returns (\n      int256\n    );\n\n  function getTimestamp(\n    uint256 roundId\n  )\n    external\n    view\n    returns (\n      uint256\n    );\n\n  event AnswerUpdated(\n    int256 indexed current,\n    uint256 indexed roundId,\n    uint256 updatedAt\n  );\n\n  event NewRound(\n    uint256 indexed roundId,\n    address indexed startedBy,\n    uint256 startedAt\n  );\n}\n"
      },
      "contracts/ChainlinkRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./interfaces/IRateProvider.sol\";\n\n/**\n * @title Chainlink Rate Provider\n * @notice Returns a Chainlink price feed's quote for the provided currency pair\n * @dev This rate provider is a simplification of ChainlinkReistryRateProvider which is fixed to a particular pricefeed.\n *      This is expected to be used in environments where the Chainlink registry is not available.\n */\ncontract ChainlinkRateProvider is IRateProvider {\n    AggregatorV3Interface public immutable pricefeed;\n\n    // Rate providers are expected to respond with a fixed-point value with 18 decimals\n    // We then need to scale the price feed's output to match this.\n    uint256 internal immutable _scalingFactor;\n\n    /**\n     * @param feed - The Chainlink price feed contract\n     */\n    constructor(AggregatorV3Interface feed) {\n        pricefeed = feed;\n        _scalingFactor = 10**SafeMath.sub(18, feed.decimals());\n    }\n\n    /**\n     * @return the value of the quote currency in terms of the base currency\n     */\n    function getRate() external view override returns (uint256) {\n        (, int256 price, , , ) = pricefeed.latestRoundData();\n        require(price > 0, \"Invalid price rate response\");\n        return uint256(price) * _scalingFactor;\n    }\n}\n"
      },
      "contracts/ChainlinkRateProviderFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nimport \"./BaseRateProviderFactory.sol\";\nimport \"./ChainlinkRateProvider.sol\";\n\n/**\n * @title Chainlink Rate Provider Factory\n * @notice Factory for creating ChainlinkRateProviders\n * @dev This contract is used to create ChainlinkRateProvider contracts.\n *      RateProviders created by this factory are to be used in environments\n *      where the Chainlink registry is not available.\n */\ncontract ChainlinkRateProviderFactory is BaseRateProviderFactory {\n    /**\n     * @notice Deploys a new ChainlinkRateProvider contract using a price feed.\n     * @param feed - The Chainlink price feed contract.\n     */\n    function create(AggregatorV3Interface feed) external returns (ChainlinkRateProvider) {\n        ChainlinkRateProvider rateProvider = new ChainlinkRateProvider(feed);\n        _onCreate(address(rateProvider));\n        return rateProvider;\n    }\n}\n"
      },
      "contracts/BinanceBeaconEthRateProvider.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IRateProvider.sol\";\nimport \"./interfaces/IwBETH.sol\";\n\n/**\n * @title Wrapped Binance Beacon ETH Rate Provider\n * @notice Returns the value of wBETH in terms of ETH\n */\ncontract BinanceBeaconEthRateProvider is IRateProvider {\n    IwBETH public immutable wBETH;\n\n    constructor(IwBETH _wBETH) {\n        wBETH = _wBETH;\n    }\n\n    /**\n     * @return the value of wBETH in terms of ETH\n     */\n    function getRate() external view override returns (uint256) {\n        return wBETH.exchangeRate();\n    }\n}\n"
      },
      "contracts/interfaces/IwBETH.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/**\n * @title Token wrapper for Binance ETH staking deposits.\n */\ninterface IwBETH {\n    /**\n     * @notice Get amount of ETH for 1 wBETH\n     * @return Amount of ETH for 1 wBETH\n     */\n    function exchangeRate() external view returns (uint256);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 9999
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "AggregatorInterface": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "int256",
                  "name": "current",
                  "type": "int256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "name": "AnswerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "startedBy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                }
              ],
              "name": "NewRound",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRound",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getAnswer(uint256)": "b5ab58dc",
              "getTimestamp(uint256)": "b633620c",
              "latestAnswer()": "50d25bcd",
              "latestRound()": "668a0f02",
              "latestTimestamp()": "8205bf6a"
            }
          }
        }
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "AggregatorV2V3Interface": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "int256",
                  "name": "current",
                  "type": "int256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                }
              ],
              "name": "AnswerUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "startedBy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                }
              ],
              "name": "NewRound",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRound",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "description()": "7284e416",
              "getAnswer(uint256)": "b5ab58dc",
              "getRoundData(uint80)": "9a6fc8f5",
              "getTimestamp(uint256)": "b633620c",
              "latestAnswer()": "50d25bcd",
              "latestRound()": "668a0f02",
              "latestRoundData()": "feaf968c",
              "latestTimestamp()": "8205bf6a",
              "version()": "54fd4d50"
            }
          }
        }
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "AggregatorV3Interface": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "description()": "7284e416",
              "getRoundData(uint80)": "9a6fc8f5",
              "latestRoundData()": "feaf968c",
              "version()": "54fd4d50"
            }
          }
        }
      },
      "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol": {
        "FeedRegistryInterface": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "denomination",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "latestAggregator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAggregator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "nextPhaseId",
                  "type": "uint16"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "FeedConfirmed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "denomination",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "proposedAggregator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "currentAggregator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "FeedProposed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "aggregator",
                  "type": "address"
                }
              ],
              "name": "confirmFeed",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "getCurrentPhaseId",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "currentPhaseId",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "getFeed",
              "outputs": [
                {
                  "internalType": "contract AggregatorV2V3Interface",
                  "name": "aggregator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                }
              ],
              "name": "getNextRoundId",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "nextRoundId",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "phaseId",
                  "type": "uint16"
                }
              ],
              "name": "getPhase",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "phaseId",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint80",
                      "name": "startingAggregatorRoundId",
                      "type": "uint80"
                    },
                    {
                      "internalType": "uint80",
                      "name": "endingAggregatorRoundId",
                      "type": "uint80"
                    }
                  ],
                  "internalType": "struct FeedRegistryInterface.Phase",
                  "name": "phase",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "phaseId",
                  "type": "uint16"
                }
              ],
              "name": "getPhaseFeed",
              "outputs": [
                {
                  "internalType": "contract AggregatorV2V3Interface",
                  "name": "aggregator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "phaseId",
                  "type": "uint16"
                }
              ],
              "name": "getPhaseRange",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "startingRoundId",
                  "type": "uint80"
                },
                {
                  "internalType": "uint80",
                  "name": "endingRoundId",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                }
              ],
              "name": "getPreviousRoundId",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "previousRoundId",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "getProposedFeed",
              "outputs": [
                {
                  "internalType": "contract AggregatorV2V3Interface",
                  "name": "proposedAggregator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundFeed",
              "outputs": [
                {
                  "internalType": "contract AggregatorV2V3Interface",
                  "name": "aggregator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "name": "getTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "aggregator",
                  "type": "address"
                }
              ],
              "name": "isFeedEnabled",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "latestAnswer",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "latestRound",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "roundId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "latestTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "aggregator",
                  "type": "address"
                }
              ],
              "name": "proposeFeed",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                },
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                }
              ],
              "name": "proposedGetRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "id",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "proposedLatestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "id",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quote",
                  "type": "address"
                }
              ],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "confirmFeed(address,address,address)": "045abf4b",
              "decimals(address,address)": "58e2d3a8",
              "description(address,address)": "fa820de9",
              "getAnswer(address,address,uint256)": "15cd4ad2",
              "getCurrentPhaseId(address,address)": "30322818",
              "getFeed(address,address)": "d2edb6dd",
              "getNextRoundId(address,address,uint80)": "a051538e",
              "getPhase(address,address,uint16)": "ff0601c0",
              "getPhaseFeed(address,address,uint16)": "52dbeb8b",
              "getPhaseRange(address,address,uint16)": "c1ce86fc",
              "getPreviousRoundId(address,address,uint80)": "9e3ff6fd",
              "getProposedFeed(address,address)": "5ad9d9df",
              "getRoundData(address,address,uint80)": "fc58749e",
              "getRoundFeed(address,address,uint80)": "c639cd91",
              "getTimestamp(address,address,uint256)": "91624c95",
              "isFeedEnabled(address)": "b099d43b",
              "latestAnswer(address,address)": "d4c282a3",
              "latestRound(address,address)": "ec62f44b",
              "latestRoundData(address,address)": "bcfd032d",
              "latestTimestamp(address,address)": "672ff44f",
              "proposeFeed(address,address,address)": "9eed82b0",
              "proposedGetRoundData(address,address,uint80)": "8916524a",
              "proposedLatestRoundData(address,address)": "d0188fc6",
              "version(address,address)": "af34b03a"
            }
          }
        }
      },
      "@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "IERC4626": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "asset",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "assetTokenAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "name": "convertToAssets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "name": "convertToShares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "maxDeposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "maxAssets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "maxMint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "maxShares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "maxRedeem",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "maxShares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "maxWithdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "maxAssets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "name": "previewDeposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "name": "previewMint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "name": "previewRedeem",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "name": "previewWithdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "redeem",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalAssets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalManagedAssets",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "assets",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "asset()": "38d52e0f",
              "balanceOf(address)": "70a08231",
              "convertToAssets(uint256)": "07a2d13a",
              "convertToShares(uint256)": "c6e6f592",
              "decimals()": "313ce567",
              "deposit(uint256,address)": "6e553f65",
              "maxDeposit(address)": "402d267d",
              "maxMint(address)": "c63d75b6",
              "maxRedeem(address)": "d905777e",
              "maxWithdraw(address)": "ce96cb77",
              "mint(uint256,address)": "94bf804d",
              "name()": "06fdde03",
              "previewDeposit(uint256)": "ef8b30f7",
              "previewMint(uint256)": "b3d7f6b9",
              "previewRedeem(uint256)": "4cdad506",
              "previewWithdraw(uint256)": "0a28a477",
              "redeem(uint256,address,address)": "ba087652",
              "symbol()": "95d89b41",
              "totalAssets()": "01e1d114",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256,address,address)": "b460af94"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc6004d285e685b2ef3d861b2e72181c03739a8995fd4a20ceb9f830d76e7afa64736f6c634300080b0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH1 0x4 0xD2 DUP6 0xE6 DUP6 0xB2 0xEF RETURNDATASIZE DUP7 SHL 0x2E PUSH19 0x181C03739A8995FD4A20CEB9F830D76E7AFA64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:7;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc6004d285e685b2ef3d861b2e72181c03739a8995fd4a20ceb9f830d76e7afa64736f6c634300080b0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH1 0x4 0xD2 DUP6 0xE6 DUP6 0xB2 0xEF RETURNDATASIZE DUP7 SHL 0x2E PUSH19 0x181C03739A8995FD4A20CEB9F830D76E7AFA64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "482:6210:7:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/BaseRateProviderFactory.sol": {
        "BaseRateProviderFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "RateProviderCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "isRateProviderFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060e88061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806319912f7114602d575b600080fd5b606360383660046077565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215608857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460ab57600080fd5b939250505056fea2646970667358221220e4247958d9bce5a0ce5d67f8983fdb20bef3d45ce26993b7d3d7c5641f2f25ef64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE8 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19912F71 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x63 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH1 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x24 PUSH26 0x58D9BCE5A0CE5D67F8983FDB20BEF3D45CE26993B7D3D7C5641F 0x2F 0x25 0xEF PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "944:573:8:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@isRateProviderFromFactory_1022": {
                  "entryPoint": null,
                  "id": 1022,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 119,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:517:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:239:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "289:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "213:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "224:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "231:42:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "220:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "220:54:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:65:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:73:25"
                              },
                              "nodeType": "YulIf",
                              "src": "200:93:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "302:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "312:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:25",
                            "type": ""
                          }
                        ],
                        "src": "14:309:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "423:92:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "433:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "445:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "456:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "441:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "441:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "433:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "475:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "500:6:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "493:6:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "493:14:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "486:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "486:22:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "468:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "468:41:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "468:41:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "392:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "403:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "414:4:25",
                            "type": ""
                          }
                        ],
                        "src": "328:187:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806319912f7114602d575b600080fd5b606360383660046077565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215608857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460ab57600080fd5b939250505056fea2646970667358221220e4247958d9bce5a0ce5d67f8983fdb20bef3d45ce26993b7d3d7c5641f2f25ef64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19912F71 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x63 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH1 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x24 PUSH26 0x58D9BCE5A0CE5D67F8983FDB20BEF3D45CE26993B7D3D7C5641F 0x2F 0x25 0xEF PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "944:573:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:150;;;;;;:::i;:::-;1300:40;;1277:4;1300:40;;;;;;;;;;;;;;1197:150;;;;493:14:25;;486:22;468:41;;456:2;441:18;1197:150:8;;;;;;;14:309:25;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:25:o"
            },
            "methodIdentifiers": {
              "isRateProviderFromFactory(address)": "19912f71"
            }
          }
        }
      },
      "contracts/BinanceBeaconEthRateProvider.sol": {
        "BinanceBeaconEthRateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IwBETH",
                  "name": "_wBETH",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wBETH",
              "outputs": [
                {
                  "internalType": "contract IwBETH",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1060": {
                  "entryPoint": null,
                  "id": 1060,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_contract$_IwBETH_$1605_fromMemory": {
                  "entryPoint": 64,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:321:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "110:209:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "156:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "165:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "168:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "158:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "158:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "158:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "131:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "140:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "127:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "127:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "152:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "123:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "123:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "120:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "181:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "200:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "185:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "273:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "282:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "285:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "275:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "275:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "275:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "232:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "243:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "258:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "263:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "254:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "254:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "267:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "250:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "250:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "239:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "239:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "229:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "229:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "222:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "222:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "219:70:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "298:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "308:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IwBETH_$1605_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "76:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "87:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "99:6:25",
                            "type": ""
                          }
                        ],
                        "src": "14:305:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IwBETH_$1605_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b5060405161021738038061021783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161018761009060003960008181605b015260a601526101876000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063679aefce1461003b578063b89ba51a14610056575b600080fd5b6100436100a2565b6040519081526020015b60405180910390f35b61007d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161004d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610138565b905090565b60006020828403121561014a57600080fd5b505191905056fea264697066735822122038d1cddb5757d6c3acc9995ab45fe18e422eedfb541c8a51252aa7161ed3c4b164736f6c634300080b0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x217 CODESIZE SUB DUP1 PUSH2 0x217 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x187 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x5B ADD MSTORE PUSH1 0xA6 ADD MSTORE PUSH2 0x187 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB89BA51A EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BA0B9A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD1 0xCD 0xDB JUMPI JUMPI 0xD6 0xC3 0xAC 0xC9 SWAP10 GAS 0xB4 0x5F 0xE1 DUP15 TIMESTAMP 0x2E 0xED 0xFB SLOAD SHR DUP11 MLOAD 0x25 0x2A 0xA7 AND 0x1E 0xD3 0xC4 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "902:333:9:-:0;;;999:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1036:14:9;;;902:333;;14:305:25;99:6;152:2;140:9;131:7;127:23;123:32;120:52;;;168:1;165;158:12;120:52;194:16;;-1:-1:-1;;;;;239:31:25;;229:42;;219:70;;285:1;282;275:12;219:70;308:5;14:305;-1:-1:-1;;;14:305:25:o;:::-;902:333:9;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getRate_1072": {
                  "entryPoint": 162,
                  "id": 1072,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@wBETH_1049": {
                  "entryPoint": null,
                  "id": 1049,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 312,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IwBETH_$1605__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:628:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "312:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "322:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "334:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "345:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "330:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "322:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "379:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "387:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "375:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "375:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "357:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "357:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "357:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IwBETH_$1605__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "281:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "292:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "303:4:25",
                            "type": ""
                          }
                        ],
                        "src": "196:241:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "523:103:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "569:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "578:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "581:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "571:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "571:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "571:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "544:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "553:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "540:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "540:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "565:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "536:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "536:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "533:52:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "594:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "610:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "604:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "604:16:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "594:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "489:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "500:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "512:6:25",
                            "type": ""
                          }
                        ],
                        "src": "442:184:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IwBETH_$1605__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1049": [
                  {
                    "length": 32,
                    "start": 91
                  },
                  {
                    "length": 32,
                    "start": 166
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063679aefce1461003b578063b89ba51a14610056575b600080fd5b6100436100a2565b6040519081526020015b60405180910390f35b61007d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161004d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610138565b905090565b60006020828403121561014a57600080fd5b505191905056fea264697066735822122038d1cddb5757d6c3acc9995ab45fe18e422eedfb541c8a51252aa7161ed3c4b164736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB89BA51A EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BA0B9A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD1 0xCD 0xDB JUMPI JUMPI 0xD6 0xC3 0xAC 0xC9 SWAP10 GAS 0xB4 0x5F 0xE1 DUP15 TIMESTAMP 0x2E 0xED 0xFB SLOAD SHR DUP11 MLOAD 0x25 0x2A 0xA7 AND 0x1E 0xD3 0xC4 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "902:333:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:104;;;:::i;:::-;;;160:25:25;;;148:2;133:18;1129:104:9;;;;;;;;963:29;;;;;;;;387:42:25;375:55;;;357:74;;345:2;330:18;963:29:9;196:241:25;1129:104:9;1180:7;1206:5;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1199:27;;1129:104;:::o;442:184:25:-;512:6;565:2;553:9;544:7;540:23;536:32;533:52;;;581:1;578;571:12;533:52;-1:-1:-1;604:16:25;;442:184;-1:-1:-1;442:184:25:o"
            },
            "methodIdentifiers": {
              "getRate()": "679aefce",
              "wBETH()": "b89ba51a"
            }
          }
        }
      },
      "contracts/CTokenRateProvider.sol": {
        "CTokenRateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ICToken",
                  "name": "_cToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "cToken",
              "outputs": [
                {
                  "internalType": "contract ICToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1101": {
                  "entryPoint": null,
                  "id": 1101,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 290,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_ICToken_$1553_fromMemory": {
                  "entryPoint": 242,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_907712cd5520644a684bbdbea382092593712ea80ccab615d4105508ea74a68c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:963:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "111:209:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "157:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "166:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "169:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "159:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "159:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "159:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "141:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "128:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "128:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "153:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "124:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "124:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "121:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "182:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "201:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "195:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "195:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "186:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "274:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "283:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "276:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "276:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "276:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "233:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "244:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "259:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "264:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "255:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "255:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "268:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "251:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "251:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "240:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "240:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "230:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "230:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "220:70:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "299:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ICToken_$1553_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "77:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "88:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "100:6:25",
                            "type": ""
                          }
                        ],
                        "src": "14:306:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "403:199:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "449:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "458:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "461:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "451:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "451:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "451:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "424:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "433:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "420:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "420:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "445:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "416:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "413:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "474:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "487:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "487:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "478:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "556:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "565:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "568:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "558:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "558:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "558:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "525:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "546:5:25"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "539:6:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "539:13:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "532:6:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "532:21:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "522:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "522:32:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "515:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "515:40:25"
                              },
                              "nodeType": "YulIf",
                              "src": "512:60:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "581:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "591:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "581:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "369:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "380:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "392:6:25",
                            "type": ""
                          }
                        ],
                        "src": "325:277:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "781:180:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "798:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "809:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "791:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "791:21:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "791:21:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "832:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "843:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "828:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "828:18:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "848:2:25",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "821:30:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "821:30:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "871:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "882:2:25",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "867:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "867:18:25"
                                  },
                                  {
                                    "hexValue": "50726f76696465642061646472657373206973206e6f742063546f6b656e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "887:32:25",
                                    "type": "",
                                    "value": "Provided address is not cToken"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "860:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "860:60:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "860:60:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "929:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "941:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "952:2:25",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "937:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "937:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "929:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_907712cd5520644a684bbdbea382092593712ea80ccab615d4105508ea74a68c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "758:9:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "772:4:25",
                            "type": ""
                          }
                        ],
                        "src": "607:354:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ICToken_$1553_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_907712cd5520644a684bbdbea382092593712ea80ccab615d4105508ea74a68c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Provided address is not cToken\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b506040516102eb3803806102eb83398101604081905261002f916100f2565b806001600160a01b031663fe9c44ae6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561006d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100919190610122565b6100e15760405162461bcd60e51b815260206004820152601e60248201527f50726f76696465642061646472657373206973206e6f742063546f6b656e0000604482015260640160405180910390fd5b6001600160a01b0316608052610144565b60006020828403121561010457600080fd5b81516001600160a01b038116811461011b57600080fd5b9392505050565b60006020828403121561013457600080fd5b8151801515811461011b57600080fd5b60805161018761016460003960008181605b015260a601526101876000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063679aefce1461003b57806369e527da14610056575b600080fd5b6100436100a2565b6040519081526020015b60405180910390f35b61007d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161004d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610138565b905090565b60006020828403121561014a57600080fd5b505191905056fea264697066735822122098cb755dd59f708fce28e17d5e5d2749be839a0ca0272f3d60e72df567b069f964736f6c634300080b0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2EB CODESIZE SUB DUP1 PUSH2 0x2EB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFE9C44AE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x122 JUMP JUMPDEST PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642061646472657373206973206E6F742063546F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x144 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x187 PUSH2 0x164 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x5B ADD MSTORE PUSH1 0xA6 ADD MSTORE PUSH2 0x187 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x69E527DA EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x182DF0F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xCB PUSH22 0x5DD59F708FCE28E17D5E5D2749BE839A0CA0272F3D60 0xE7 0x2D CREATE2 PUSH8 0xB069F964736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "897:434:10:-:0;;;986:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1033:7;-1:-1:-1;;;;;1033:16:10;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1025:61;;;;-1:-1:-1;;;1025:61:10;;809:2:25;1025:61:10;;;791:21:25;848:2;828:18;;;821:30;887:32;867:18;;;860:60;937:18;;1025:61:10;;;;;;;;-1:-1:-1;;;;;1096:16:10;;;897:434;;14:306:25;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:25;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:25:o;325:277::-;392:6;445:2;433:9;424:7;420:23;416:32;413:52;;;461:1;458;451:12;413:52;493:9;487:16;546:5;539:13;532:21;525:5;522:32;512:60;;568:1;565;558:12;607:354;897:434:10;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@cToken_1083": {
                  "entryPoint": null,
                  "id": 1083,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getRate_1113": {
                  "entryPoint": 162,
                  "id": 1113,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 312,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ICToken_$1553__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:629:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "313:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "323:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "335:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "346:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "331:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "331:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "323:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "380:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "388:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "376:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "376:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "358:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ICToken_$1553__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "282:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "293:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "304:4:25",
                            "type": ""
                          }
                        ],
                        "src": "196:242:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "524:103:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "570:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "579:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "582:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "572:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "572:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "572:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "554:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "541:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "541:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "566:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "534:52:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "595:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "611:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "605:16:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "490:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "501:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "513:6:25",
                            "type": ""
                          }
                        ],
                        "src": "443:184:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ICToken_$1553__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1083": [
                  {
                    "length": 32,
                    "start": 91
                  },
                  {
                    "length": 32,
                    "start": 166
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063679aefce1461003b57806369e527da14610056575b600080fd5b6100436100a2565b6040519081526020015b60405180910390f35b61007d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161004d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610138565b905090565b60006020828403121561014a57600080fd5b505191905056fea264697066735822122098cb755dd59f708fce28e17d5e5d2749be839a0ca0272f3d60e72df567b069f964736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x69E527DA EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x182DF0F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xCB PUSH22 0x5DD59F708FCE28E17D5E5D2749BE839A0CA0272F3D60 0xE7 0x2D CREATE2 PUSH8 0xB069F964736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "897:434:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:111;;;:::i;:::-;;;160:25:25;;;148:2;133:18;1218:111:10;;;;;;;;948:31;;;;;;;;388:42:25;376:55;;;358:74;;346:2;331:18;948:31:10;196:242:25;1218:111:10;1269:7;1295:6;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1288:34;;1218:111;:::o;443:184:25:-;513:6;566:2;554:9;545:7;541:23;537:32;534:52;;;582:1;579;572:12;534:52;-1:-1:-1;605:16:25;;443:184;-1:-1:-1;443:184:25:o"
            },
            "methodIdentifiers": {
              "cToken()": "69e527da",
              "getRate()": "679aefce"
            }
          }
        }
      },
      "contracts/ChainlinkRateProvider.sol": {
        "ChainlinkRateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract AggregatorV3Interface",
                  "name": "feed",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pricefeed",
              "outputs": [
                {
                  "internalType": "contract AggregatorV3Interface",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1152": {
                  "entryPoint": null,
                  "id": 1152,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@sub_875": {
                  "entryPoint": 214,
                  "id": 875,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_AggregatorV3Interface_$102_fromMemory": {
                  "entryPoint": 235,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint8_fromMemory": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 340,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 568,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 407,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 580,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 318,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2249:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "124:209:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "170:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "179:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "182:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "172:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "172:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "172:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "145:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "154:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "141:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "141:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "166:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "137:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "137:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "134:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "195:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "214:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "208:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "208:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "199:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "287:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "296:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "299:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "289:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "289:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "289:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "246:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "257:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "272:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "277:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "268:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "268:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "281:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "264:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "264:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "253:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "253:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "243:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "243:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "236:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "236:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "233:70:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "312:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "322:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "312:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_AggregatorV3Interface_$102_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "90:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "101:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "113:6:25",
                            "type": ""
                          }
                        ],
                        "src": "14:319:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "417:194:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "463:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "472:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "475:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "465:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "465:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "465:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "438:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "447:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "434:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "434:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "459:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "430:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "430:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "427:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "488:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "507:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "501:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "492:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "565:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "574:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "577:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "567:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "567:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "567:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "539:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "550:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "557:4:25",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "546:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "546:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "536:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "536:27:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "529:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "529:35:25"
                              },
                              "nodeType": "YulIf",
                              "src": "526:55:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "590:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "600:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "590:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "383:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "394:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "406:6:25",
                            "type": ""
                          }
                        ],
                        "src": "338:273:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "648:95:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "665:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "672:3:25",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "677:10:25",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "668:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "668:20:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "658:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "658:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "658:31:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "705:1:25",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "708:4:25",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "698:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "698:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "698:15:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "729:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "732:4:25",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "722:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "722:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "722:15:25"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "616:127:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "812:358:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "822:16:25",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "837:1:25",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "826:7:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "847:16:25",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "856:7:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "847:5:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "872:13:25",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "880:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:4:25"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "936:228:25",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "981:22:25",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "983:16:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "983:18:25"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "983:18:25"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "956:4:25"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "970:1:25",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "966:3:25"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "966:6:25"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "974:4:25"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "962:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "962:17:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "953:2:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "953:27:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "950:53:25"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "1042:29:25",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "1044:25:25",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "1057:5:25"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "1064:4:25"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "1053:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1053:16:25"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "1044:5:25"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1023:8:25"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1033:7:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1019:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1019:22:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "1016:55:25"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1084:23:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1096:4:25"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1102:4:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "1092:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1092:15:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "1084:4:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1120:34:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1136:7:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1145:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1132:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1132:22:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "1120:8:25"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "905:8:25"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "915:7:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "902:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "902:21:25"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "924:3:25",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "898:3:25",
                                "statements": []
                              },
                              "src": "894:270:25"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "776:5:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "783:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "796:5:25",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "803:4:25",
                            "type": ""
                          }
                        ],
                        "src": "748:422:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1234:747:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1272:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1286:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1295:1:25",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1286:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "1309:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1254:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1247:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1247:16:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1244:80:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1357:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1371:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1380:1:25",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1371:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "1394:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1343:4:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1336:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1336:12:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1333:76:25"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1445:52:25",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "1459:10:25",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1468:1:25",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "1459:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "1482:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1438:59:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1443:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1513:123:25",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "1548:22:25",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1550:16:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1550:18:25"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "1550:18:25"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "1533:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1543:3:25",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "1530:2:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1530:17:25"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "1527:43:25"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "1583:25:25",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "1596:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1606:1:25",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "1592:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1592:16:25"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "1583:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "1621:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1506:130:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1511:1:25",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1425:4:25"
                              },
                              "nodeType": "YulSwitch",
                              "src": "1418:218:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1734:70:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1748:28:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1761:4:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1767:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "1757:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1757:19:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1748:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "1789:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "1658:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1664:2:25",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1655:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1655:12:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "1672:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1682:2:25",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1669:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1669:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1651:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1651:35:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "1695:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1701:3:25",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1692:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1692:13:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "1710:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1720:2:25",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1707:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1707:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1688:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1688:36:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1648:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1648:77:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1645:159:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1813:57:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1855:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1861:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "1836:18:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1836:34:25"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1817:7:25",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1826:6:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1915:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1917:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1917:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1917:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1885:7:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1902:1:25",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "1898:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1898:6:25"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1906:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "1894:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1894:19:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1882:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1882:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1879:58:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1946:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1959:7:25"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1955:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1955:20:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1946:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "1205:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "1211:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "1224:5:25",
                            "type": ""
                          }
                        ],
                        "src": "1175:806:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2056:61:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2066:45:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2096:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2102:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2075:20:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2075:36:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2066:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "2027:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "2033:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "2046:5:25",
                            "type": ""
                          }
                        ],
                        "src": "1986:131:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2171:76:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2193:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2195:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2195:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2195:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2187:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2190:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2184:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2184:8:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2181:34:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2224:17:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2236:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2239:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2232:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2232:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "2224:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2153:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2156:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "2162:4:25",
                            "type": ""
                          }
                        ],
                        "src": "2122:125:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_AggregatorV3Interface_$102_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60c060405234801561001057600080fd5b5060405161059838038061059883398101604081905261002f916100eb565b806001600160a01b03166080816001600160a01b0316815250506100c26012826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b0919061011b565b60ff166100d660201b6101d81760201c565b6100cd90600a610238565b60a0525061025b565b60006100e28284610244565b90505b92915050565b6000602082840312156100fd57600080fd5b81516001600160a01b038116811461011457600080fd5b9392505050565b60006020828403121561012d57600080fd5b815160ff8116811461011457600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561018f5781600019048211156101755761017561013e565b8085161561018257918102915b93841c9390800290610159565b509250929050565b6000826101a6575060016100e5565b816101b3575060006100e5565b81600181146101c957600281146101d3576101ef565b60019150506100e5565b60ff8411156101e4576101e461013e565b50506001821b6100e5565b5060208310610133831016604e8410600b8410161715610212575081810a6100e5565b61021c8383610154565b80600019048211156102305761023061013e565b029392505050565b60006100e28383610197565b6000828210156102565761025661013e565b500390565b60805160a05161031361028560003960006101ad0152600081816040015260a701526103136000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063590f21131461003b578063679aefce1461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100946100a2565b604051908152602001610083565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610134919061020a565b505050915050600081136101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207072696365207261746520726573706f6e73650000000000604482015260640160405180910390fd5b6101d27f000000000000000000000000000000000000000000000000000000000000000082610289565b91505090565b60006101e482846102c6565b9392505050565b805169ffffffffffffffffffff8116811461020557600080fd5b919050565b600080600080600060a0868803121561022257600080fd5b61022b866101eb565b945060208601519350604086015192506060860151915061024e608087016101eb565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156102c1576102c161025a565b500290565b6000828210156102d8576102d861025a565b50039056fea2646970667358221220d63119c5aa52e8d3de418d4c093cb4e4180332c4cd845177955dff5da719c82d64736f6c634300080b0033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x598 CODESIZE SUB DUP1 PUSH2 0x598 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0xC2 PUSH1 0x12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xD6 PUSH1 0x20 SHL PUSH2 0x1D8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH1 0xA PUSH2 0x238 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH2 0x25B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2 DUP3 DUP5 PUSH2 0x244 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x18F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x13E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x182 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x159 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A6 JUMPI POP PUSH1 0x1 PUSH2 0xE5 JUMP JUMPDEST DUP2 PUSH2 0x1B3 JUMPI POP PUSH1 0x0 PUSH2 0xE5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D3 JUMPI PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E4 JUMPI PUSH2 0x1E4 PUSH2 0x13E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xE5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x212 JUMPI POP DUP2 DUP2 EXP PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x21C DUP4 DUP4 PUSH2 0x154 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x230 PUSH2 0x13E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2 DUP4 DUP4 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x256 JUMPI PUSH2 0x256 PUSH2 0x13E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x313 PUSH2 0x285 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1AD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x40 ADD MSTORE PUSH1 0xA7 ADD MSTORE PUSH2 0x313 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x590F2113 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207072696365207261746520726573706F6E73650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH32 0x0 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4 DUP3 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B DUP7 PUSH2 0x1EB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x24E PUSH1 0x80 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C1 JUMPI PUSH2 0x2C1 PUSH2 0x25A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D8 PUSH2 0x25A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 BALANCE NOT 0xC5 0xAA MSTORE 0xE8 0xD3 0xDE COINBASE DUP14 0x4C MULMOD EXTCODECOPY 0xB4 0xE4 XOR SUB ORIGIN 0xC4 0xCD DUP5 MLOAD PUSH24 0x955DFF5DA719C82D64736F6C634300080B00330000000000 ",
              "sourceMap": "1311:858:11:-:0;;;1695:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1757:4;-1:-1:-1;;;;;1745:16:11;;;-1:-1:-1;;;;;1745:16:11;;;;;1792:33;1805:2;1809:4;-1:-1:-1;;;;;1809:13:11;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1792:33;;:12;;;;;:33;;:::i;:::-;1788:37;;:2;:37;:::i;:::-;1771:54;;-1:-1:-1;1311:858:11;;3122:96:7;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;;3122:96;;;;;:::o;14:319:25:-;113:6;166:2;154:9;145:7;141:23;137:32;134:52;;;182:1;179;172:12;134:52;208:16;;-1:-1:-1;;;;;253:31:25;;243:42;;233:70;;299:1;296;289:12;233:70;322:5;14:319;-1:-1:-1;;;14:319:25:o;338:273::-;406:6;459:2;447:9;438:7;434:23;430:32;427:52;;;475:1;472;465:12;427:52;507:9;501:16;557:4;550:5;546:16;539:5;536:27;526:55;;577:1;574;567:12;616:127;677:10;672:3;668:20;665:1;658:31;708:4;705:1;698:15;732:4;729:1;722:15;748:422;837:1;880:5;837:1;894:270;915:7;905:8;902:21;894:270;;;974:4;970:1;966:6;962:17;956:4;953:27;950:53;;;983:18;;:::i;:::-;1033:7;1023:8;1019:22;1016:55;;;1053:16;;;;1016:55;1132:22;;;;1092:15;;;;894:270;;;898:3;748:422;;;;;:::o;1175:806::-;1224:5;1254:8;1244:80;;-1:-1:-1;1295:1:25;1309:5;;1244:80;1343:4;1333:76;;-1:-1:-1;1380:1:25;1394:5;;1333:76;1425:4;1443:1;1438:59;;;;1511:1;1506:130;;;;1418:218;;1438:59;1468:1;1459:10;;1482:5;;;1506:130;1543:3;1533:8;1530:17;1527:43;;;1550:18;;:::i;:::-;-1:-1:-1;;1606:1:25;1592:16;;1621:5;;1418:218;;1720:2;1710:8;1707:16;1701:3;1695:4;1692:13;1688:36;1682:2;1672:8;1669:16;1664:2;1658:4;1655:12;1651:35;1648:77;1645:159;;;-1:-1:-1;1757:19:25;;;1789:5;;1645:159;1836:34;1861:8;1855:4;1836:34;:::i;:::-;1906:6;1902:1;1898:6;1894:19;1885:7;1882:32;1879:58;;;1917:18;;:::i;:::-;1955:20;;1175:806;-1:-1:-1;;;1175:806:25:o;1986:131::-;2046:5;2075:36;2102:8;2096:4;2075:36;:::i;2122:125::-;2162:4;2190:1;2187;2184:8;2181:34;;;2195:18;;:::i;:::-;-1:-1:-1;2232:9:25;;2122:125::o;:::-;1311:858:11;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getRate_1180": {
                  "entryPoint": 162,
                  "id": 1180,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pricefeed_1126": {
                  "entryPoint": null,
                  "id": 1126,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sub_875": {
                  "entryPoint": 472,
                  "id": 875,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
                  "entryPoint": 522,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_uint80_fromMemory": {
                  "entryPoint": 491,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_AggregatorV3Interface_$102__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 649,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 710,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 602,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2023:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "144:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "154:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "166:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "177:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "162:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "162:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "154:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "196:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "211:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "219:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "207:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "207:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "189:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "189:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$102__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "113:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "124:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "135:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:255:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "375:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "385:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "397:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "408:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "393:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "393:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "385:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "427:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "438:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "420:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "420:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "420:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "344:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "355:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "366:4:25",
                            "type": ""
                          }
                        ],
                        "src": "274:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "515:120:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "525:22:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "540:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "534:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "534:13:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:5:25"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "613:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "622:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "625:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "615:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "615:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "615:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "569:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "580:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "587:22:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "576:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "576:34:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "566:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "566:45:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "559:53:25"
                              },
                              "nodeType": "YulIf",
                              "src": "556:73:25"
                            }
                          ]
                        },
                        "name": "abi_decode_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "494:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "505:5:25",
                            "type": ""
                          }
                        ],
                        "src": "456:179:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "786:327:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "833:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "842:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "845:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "835:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "835:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "835:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "807:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "816:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "803:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "803:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "828:3:25",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "799:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "799:33:25"
                              },
                              "nodeType": "YulIf",
                              "src": "796:53:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "858:49:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "897:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "868:28:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "868:39:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "858:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "916:35:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "936:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "947:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "932:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "932:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "926:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "926:25:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "916:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "960:35:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "980:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "991:2:25",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "976:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "976:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "970:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "970:25:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1004:35:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1024:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1035:2:25",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1020:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1020:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1014:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1014:25:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1004:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1048:59:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1091:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1102:3:25",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1087:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1087:19:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1058:28:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1058:49:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1048:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "720:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "731:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "743:6:25",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "751:6:25",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "759:6:25",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "767:6:25",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "775:6:25",
                            "type": ""
                          }
                        ],
                        "src": "640:473:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1292:177:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1309:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1320:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1302:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1302:21:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1302:21:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1343:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1354:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1339:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1339:18:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1359:2:25",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1332:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1332:30:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1332:30:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1382:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1393:2:25",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1378:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1378:18:25"
                                  },
                                  {
                                    "hexValue": "496e76616c6964207072696365207261746520726573706f6e7365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1398:29:25",
                                    "type": "",
                                    "value": "Invalid price rate response"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1371:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1371:57:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1371:57:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1437:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1449:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1460:2:25",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1445:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1437:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1269:9:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1283:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1118:351:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1506:152:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1523:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1526:77:25",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1516:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1516:88:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1516:88:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1620:1:25",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1623:4:25",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1613:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1613:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1613:15:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1644:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1647:4:25",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1637:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1637:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1637:15:25"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1474:184:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1715:176:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1834:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1836:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1836:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1836:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "1746:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1739:6:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1739:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1732:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1732:17:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "1754:1:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1761:66:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "1829:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "1757:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1757:74:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1751:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1751:81:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1728:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1728:105:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1725:131:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1865:20:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1880:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1883:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1876:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1876:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "1865:7:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1694:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1697:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "1703:7:25",
                            "type": ""
                          }
                        ],
                        "src": "1663:228:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1945:76:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1967:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1969:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1969:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1969:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1961:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1964:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1958:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1958:8:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1955:34:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1998:17:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2010:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2013:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2006:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2006:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "1998:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1927:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1930:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "1936:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1896:125:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$102__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid price rate response\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1126": [
                  {
                    "length": 32,
                    "start": 64
                  },
                  {
                    "length": 32,
                    "start": 167
                  }
                ],
                "1128": [
                  {
                    "length": 32,
                    "start": 429
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063590f21131461003b578063679aefce1461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100946100a2565b604051908152602001610083565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610134919061020a565b505050915050600081136101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207072696365207261746520726573706f6e73650000000000604482015260640160405180910390fd5b6101d27f000000000000000000000000000000000000000000000000000000000000000082610289565b91505090565b60006101e482846102c6565b9392505050565b805169ffffffffffffffffffff8116811461020557600080fd5b919050565b600080600080600060a0868803121561022257600080fd5b61022b866101eb565b945060208601519350604086015192506060860151915061024e608087016101eb565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156102c1576102c161025a565b500290565b6000828210156102d8576102d861025a565b50039056fea2646970667358221220d63119c5aa52e8d3de418d4c093cb4e4180332c4cd845177955dff5da719c82d64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x590F2113 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207072696365207261746520726573706F6E73650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH32 0x0 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4 DUP3 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B DUP7 PUSH2 0x1EB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x24E PUSH1 0x80 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C1 JUMPI PUSH2 0x2C1 PUSH2 0x25A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D8 PUSH2 0x25A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 BALANCE NOT 0xC5 0xAA MSTORE 0xE8 0xD3 0xDE COINBASE DUP14 0x4C MULMOD EXTCODECOPY 0xB4 0xE4 XOR SUB ORIGIN 0xC4 0xCD DUP5 MLOAD PUSH24 0x955DFF5DA719C82D64736F6C634300080B00330000000000 ",
              "sourceMap": "1311:858:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:48;;;;;;;;219:42:25;207:55;;;189:74;;177:2;162:18;1365:48:11;;;;;;;;1931:236;;;:::i;:::-;;;420:25:25;;;408:2;393:18;1931:236:11;274:177:25;1931:236:11;1982:7;2004:12;2026:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2001:52;;;;;;2079:1;2071:5;:9;2063:49;;;;;;;1320:2:25;2063:49:11;;;1302:21:25;1359:2;1339:18;;;1332:30;1398:29;1378:18;;;1371:57;1445:18;;2063:49:11;;;;;;;;2129:31;2146:14;2137:5;2129:31;:::i;:::-;2122:38;;;1931:236;:::o;3122:96:7:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:7:o;456:179:25:-;534:13;;587:22;576:34;;566:45;;556:73;;625:1;622;615:12;556:73;456:179;;;:::o;640:473::-;743:6;751;759;767;775;828:3;816:9;807:7;803:23;799:33;796:53;;;845:1;842;835:12;796:53;868:39;897:9;868:39;:::i;:::-;858:49;;947:2;936:9;932:18;926:25;916:35;;991:2;980:9;976:18;970:25;960:35;;1035:2;1024:9;1020:18;1014:25;1004:35;;1058:49;1102:3;1091:9;1087:19;1058:49;:::i;:::-;1048:59;;640:473;;;;;;;;:::o;1474:184::-;1526:77;1523:1;1516:88;1623:4;1620:1;1613:15;1647:4;1644:1;1637:15;1663:228;1703:7;1829:1;1761:66;1757:74;1754:1;1751:81;1746:1;1739:9;1732:17;1728:105;1725:131;;;1836:18;;:::i;:::-;-1:-1:-1;1876:9:25;;1663:228::o;1896:125::-;1936:4;1964:1;1961;1958:8;1955:34;;;1969:18;;:::i;:::-;-1:-1:-1;2006:9:25;;1896:125::o"
            },
            "methodIdentifiers": {
              "getRate()": "679aefce",
              "pricefeed()": "590f2113"
            }
          }
        }
      },
      "contracts/ChainlinkRateProviderFactory.sol": {
        "ChainlinkRateProviderFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "RateProviderCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract AggregatorV3Interface",
                  "name": "feed",
                  "type": "address"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "contract ChainlinkRateProvider",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "isRateProviderFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506107b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806319912f711461003b5780639ed9331814610089575b600080fd5b6100746100493660046101c5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61009c6100973660046101c5565b6100c1565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610080565b600080826040516100d190610193565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f08015801561010a573d6000803e3d6000fd5b5090506101168161011c565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f7a8e6b463d413484480a3a8120e5fb841491c52541ac3f649ac41d9b0d088aa69190a250565b610598806101ea83390190565b73ffffffffffffffffffffffffffffffffffffffff811681146101c257600080fd5b50565b6000602082840312156101d757600080fd5b81356101e2816101a0565b939250505056fe60c060405234801561001057600080fd5b5060405161059838038061059883398101604081905261002f916100eb565b806001600160a01b03166080816001600160a01b0316815250506100c26012826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b0919061011b565b60ff166100d660201b6101d81760201c565b6100cd90600a610238565b60a0525061025b565b60006100e28284610244565b90505b92915050565b6000602082840312156100fd57600080fd5b81516001600160a01b038116811461011457600080fd5b9392505050565b60006020828403121561012d57600080fd5b815160ff8116811461011457600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561018f5781600019048211156101755761017561013e565b8085161561018257918102915b93841c9390800290610159565b509250929050565b6000826101a6575060016100e5565b816101b3575060006100e5565b81600181146101c957600281146101d3576101ef565b60019150506100e5565b60ff8411156101e4576101e461013e565b50506001821b6100e5565b5060208310610133831016604e8410600b8410161715610212575081810a6100e5565b61021c8383610154565b80600019048211156102305761023061013e565b029392505050565b60006100e28383610197565b6000828210156102565761025661013e565b500390565b60805160a05161031361028560003960006101ad0152600081816040015260a701526103136000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063590f21131461003b578063679aefce1461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100946100a2565b604051908152602001610083565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610134919061020a565b505050915050600081136101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207072696365207261746520726573706f6e73650000000000604482015260640160405180910390fd5b6101d27f000000000000000000000000000000000000000000000000000000000000000082610289565b91505090565b60006101e482846102c6565b9392505050565b805169ffffffffffffffffffff8116811461020557600080fd5b919050565b600080600080600060a0868803121561022257600080fd5b61022b866101eb565b945060208601519350604086015192506060860151915061024e608087016101eb565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156102c1576102c161025a565b500290565b6000828210156102d8576102d861025a565b50039056fea2646970667358221220d63119c5aa52e8d3de418d4c093cb4e4180332c4cd845177955dff5da719c82d64736f6c634300080b0033a26469706673582212208545191171d6cbe07ca9e851b783478bdf364e6ec6f4a1ac2740e028fc47d0b864736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19912F71 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9ED93318 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x7A8E6B463D413484480A3A8120E5FB841491C52541AC3F649AC41D9B0D088AA6 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x598 DUP1 PUSH2 0x1EA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E2 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x598 CODESIZE SUB DUP1 PUSH2 0x598 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0xC2 PUSH1 0x12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xD6 PUSH1 0x20 SHL PUSH2 0x1D8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH1 0xA PUSH2 0x238 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH2 0x25B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2 DUP3 DUP5 PUSH2 0x244 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x18F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x13E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x182 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x159 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A6 JUMPI POP PUSH1 0x1 PUSH2 0xE5 JUMP JUMPDEST DUP2 PUSH2 0x1B3 JUMPI POP PUSH1 0x0 PUSH2 0xE5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D3 JUMPI PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E4 JUMPI PUSH2 0x1E4 PUSH2 0x13E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xE5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x212 JUMPI POP DUP2 DUP2 EXP PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x21C DUP4 DUP4 PUSH2 0x154 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x230 PUSH2 0x13E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2 DUP4 DUP4 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x256 JUMPI PUSH2 0x256 PUSH2 0x13E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x313 PUSH2 0x285 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1AD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x40 ADD MSTORE PUSH1 0xA7 ADD MSTORE PUSH2 0x313 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x590F2113 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207072696365207261746520726573706F6E73650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH32 0x0 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4 DUP3 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B DUP7 PUSH2 0x1EB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x24E PUSH1 0x80 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C1 JUMPI PUSH2 0x2C1 PUSH2 0x25A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D8 PUSH2 0x25A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 BALANCE NOT 0xC5 0xAA MSTORE 0xE8 0xD3 0xDE COINBASE DUP14 0x4C MULMOD EXTCODECOPY 0xB4 0xE4 XOR SUB ORIGIN 0xC4 0xCD DUP5 MLOAD PUSH24 0x955DFF5DA719C82D64736F6C634300080B0033A264697066 PUSH20 0x582212208545191171D6CBE07CA9E851B783478B 0xDF CALLDATASIZE 0x4E PUSH15 0xC6F4A1AC2740E028FC47D0B864736F PUSH13 0x634300080B0033000000000000 ",
              "sourceMap": "1180:466:12:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_onCreate_1038": {
                  "entryPoint": 284,
                  "id": 1038,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@create_1218": {
                  "entryPoint": 193,
                  "id": 1218,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isRateProviderFromFactory_1022": {
                  "entryPoint": null,
                  "id": 1022,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_AggregatorV3Interface_$102": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_AggregatorV3Interface_$102__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ChainlinkRateProvider_$1181__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 416,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1416:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:109:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "100:42:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:54:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:65:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "72:73:25"
                              },
                              "nodeType": "YulIf",
                              "src": "69:93:25"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48:5:25",
                            "type": ""
                          }
                        ],
                        "src": "14:154:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "243:177:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "289:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "298:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "301:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "291:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "291:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "291:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "264:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "273:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "260:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "260:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "285:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "253:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "314:36:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "327:12:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "327:23:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "318:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "384:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "359:24:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "359:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "359:31:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "399:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "409:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "209:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "220:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "232:6:25",
                            "type": ""
                          }
                        ],
                        "src": "173:247:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "520:92:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "530:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "553:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "538:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "538:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "572:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "597:6:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "590:6:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "590:14:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "583:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "583:22:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "565:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "565:41:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "565:41:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "489:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "500:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "511:4:25",
                            "type": ""
                          }
                        ],
                        "src": "425:187:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "716:177:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "762:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "771:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "774:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "764:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "764:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "764:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "737:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "746:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "733:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "733:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "758:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "729:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "729:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "726:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "787:36:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "813:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:12:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "800:23:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "791:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "832:24:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "832:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "832:31:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "872:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "882:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_AggregatorV3Interface_$102",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "682:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "693:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "705:6:25",
                            "type": ""
                          }
                        ],
                        "src": "617:276:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1029:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1039:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1051:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1062:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1047:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1047:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1039:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1081:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1096:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1104:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1092:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1092:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1074:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1074:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1074:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ChainlinkRateProvider_$1181__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "998:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1009:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1020:4:25",
                            "type": ""
                          }
                        ],
                        "src": "898:256:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1289:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1299:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1311:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1322:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1307:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1299:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1341:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1356:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1364:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1352:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1352:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1334:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1334:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1334:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$102__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1258:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1269:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1280:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1159:255:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_contract$_AggregatorV3Interface_$102(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ChainlinkRateProvider_$1181__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$102__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806319912f711461003b5780639ed9331814610089575b600080fd5b6100746100493660046101c5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61009c6100973660046101c5565b6100c1565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610080565b600080826040516100d190610193565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f08015801561010a573d6000803e3d6000fd5b5090506101168161011c565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f7a8e6b463d413484480a3a8120e5fb841491c52541ac3f649ac41d9b0d088aa69190a250565b610598806101ea83390190565b73ffffffffffffffffffffffffffffffffffffffff811681146101c257600080fd5b50565b6000602082840312156101d757600080fd5b81356101e2816101a0565b939250505056fe60c060405234801561001057600080fd5b5060405161059838038061059883398101604081905261002f916100eb565b806001600160a01b03166080816001600160a01b0316815250506100c26012826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b0919061011b565b60ff166100d660201b6101d81760201c565b6100cd90600a610238565b60a0525061025b565b60006100e28284610244565b90505b92915050565b6000602082840312156100fd57600080fd5b81516001600160a01b038116811461011457600080fd5b9392505050565b60006020828403121561012d57600080fd5b815160ff8116811461011457600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561018f5781600019048211156101755761017561013e565b8085161561018257918102915b93841c9390800290610159565b509250929050565b6000826101a6575060016100e5565b816101b3575060006100e5565b81600181146101c957600281146101d3576101ef565b60019150506100e5565b60ff8411156101e4576101e461013e565b50506001821b6100e5565b5060208310610133831016604e8410600b8410161715610212575081810a6100e5565b61021c8383610154565b80600019048211156102305761023061013e565b029392505050565b60006100e28383610197565b6000828210156102565761025661013e565b500390565b60805160a05161031361028560003960006101ad0152600081816040015260a701526103136000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063590f21131461003b578063679aefce1461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100946100a2565b604051908152602001610083565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610134919061020a565b505050915050600081136101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207072696365207261746520726573706f6e73650000000000604482015260640160405180910390fd5b6101d27f000000000000000000000000000000000000000000000000000000000000000082610289565b91505090565b60006101e482846102c6565b9392505050565b805169ffffffffffffffffffff8116811461020557600080fd5b919050565b600080600080600060a0868803121561022257600080fd5b61022b866101eb565b945060208601519350604086015192506060860151915061024e608087016101eb565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156102c1576102c161025a565b500290565b6000828210156102d8576102d861025a565b50039056fea2646970667358221220d63119c5aa52e8d3de418d4c093cb4e4180332c4cd845177955dff5da719c82d64736f6c634300080b0033a26469706673582212208545191171d6cbe07ca9e851b783478bdf364e6ec6f4a1ac2740e028fc47d0b864736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19912F71 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9ED93318 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x7A8E6B463D413484480A3A8120E5FB841491C52541AC3F649AC41D9B0D088AA6 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x598 DUP1 PUSH2 0x1EA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E2 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x598 CODESIZE SUB DUP1 PUSH2 0x598 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0xC2 PUSH1 0x12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xD6 PUSH1 0x20 SHL PUSH2 0x1D8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH1 0xA PUSH2 0x238 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH2 0x25B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2 DUP3 DUP5 PUSH2 0x244 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x18F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x13E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x182 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x159 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A6 JUMPI POP PUSH1 0x1 PUSH2 0xE5 JUMP JUMPDEST DUP2 PUSH2 0x1B3 JUMPI POP PUSH1 0x0 PUSH2 0xE5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D3 JUMPI PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1E4 JUMPI PUSH2 0x1E4 PUSH2 0x13E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xE5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x212 JUMPI POP DUP2 DUP2 EXP PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x21C DUP4 DUP4 PUSH2 0x154 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x230 PUSH2 0x13E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2 DUP4 DUP4 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x256 JUMPI PUSH2 0x256 PUSH2 0x13E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x313 PUSH2 0x285 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1AD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x40 ADD MSTORE PUSH1 0xA7 ADD MSTORE PUSH2 0x313 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x590F2113 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207072696365207261746520726573706F6E73650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH32 0x0 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4 DUP3 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B DUP7 PUSH2 0x1EB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x24E PUSH1 0x80 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C1 JUMPI PUSH2 0x2C1 PUSH2 0x25A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D8 PUSH2 0x25A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 BALANCE NOT 0xC5 0xAA MSTORE 0xE8 0xD3 0xDE COINBASE DUP14 0x4C MULMOD EXTCODECOPY 0xB4 0xE4 XOR SUB ORIGIN 0xC4 0xCD DUP5 MLOAD PUSH24 0x955DFF5DA719C82D64736F6C634300080B0033A264697066 PUSH20 0x582212208545191171D6CBE07CA9E851B783478B 0xDF CALLDATASIZE 0x4E PUSH15 0xC6F4A1AC2740E028FC47D0B864736F PUSH13 0x634300080B0033000000000000 ",
              "sourceMap": "1180:466:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:150:8;;;;;;:::i;:::-;1300:40;;1277:4;1300:40;;;;;;;;;;;;;;1197:150;;;;590:14:25;;583:22;565:41;;553:2;538:18;1197:150:8;;;;;;;;1403:241:12;;;;;;:::i;:::-;;:::i;:::-;;;1104:42:25;1092:55;;;1074:74;;1062:2;1047:18;1403:241:12;898:256:25;1403:241:12;1465:21;1498:34;1561:4;1535:31;;;;;:::i;:::-;1104:42:25;1092:55;;;1074:74;;1062:2;1047:18;1535:31:12;;;;;;;;;;;;;;;;;;;;;;;1498:68;;1576:32;1594:12;1576:9;:32::i;:::-;1625:12;1403:241;-1:-1:-1;;1403:241:12:o;1353:162:8:-;1413:40;;;:26;:40;;;;;;;;;;;:47;;;;1456:4;1413:47;;;1475:33;;;1413:26;1475:33;1353:162;:::o;-1:-1:-1:-;;;;;;;;:::o;14:154:25:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:25:o"
            },
            "methodIdentifiers": {
              "create(address)": "9ed93318",
              "isRateProviderFromFactory(address)": "19912f71"
            }
          }
        }
      },
      "contracts/ChainlinkRegistryRateProvider.sol": {
        "ChainlinkRegistryRateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract FeedRegistryInterface",
                  "name": "_registry",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_base",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_quote",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "base",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "quote",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "contract FeedRegistryInterface",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "updateCachedFeed",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1284": {
                  "entryPoint": null,
                  "id": 1284,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@sub_875": {
                  "entryPoint": 373,
                  "id": 875,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_AggregatorV2V3Interface_$56_fromMemory": {
                  "entryPoint": 505,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_FeedRegistryInterface_$413t_addresst_address_fromMemory": {
                  "entryPoint": 421,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint8_fromMemory": {
                  "entryPoint": 544,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 603,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 856,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 676,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 870,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 581,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_contract_FeedRegistryInterface": {
                  "entryPoint": 396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3324:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "82:86:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "116:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "131:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "136:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "127:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "127:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "140:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "123:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "123:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "112:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "112:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "102:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "102:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "95:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "95:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "92:70:25"
                            }
                          ]
                        },
                        "name": "validator_revert_contract_FeedRegistryInterface",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "71:5:25",
                            "type": ""
                          }
                        ],
                        "src": "14:154:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "317:473:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "363:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "372:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "375:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "365:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "365:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "365:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "338:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "347:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "334:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "334:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "359:2:25",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "330:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "327:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "388:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "407:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "401:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "401:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "392:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "474:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_FeedRegistryInterface",
                                  "nodeType": "YulIdentifier",
                                  "src": "426:47:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "426:54:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "426:54:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "489:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "499:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "513:40:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "538:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "549:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "534:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "534:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "528:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "528:25:25"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "517:7:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "610:7:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_FeedRegistryInterface",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:47:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "562:56:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "562:56:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "627:17:25",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "637:7:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "627:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "653:40:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "678:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "689:2:25",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "674:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "674:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "668:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "668:25:25"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nodeType": "YulTypedName",
                                  "src": "657:7:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "750:7:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_FeedRegistryInterface",
                                  "nodeType": "YulIdentifier",
                                  "src": "702:47:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "702:56:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "702:56:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "767:17:25",
                              "value": {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "777:7:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_FeedRegistryInterface_$413t_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "267:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "278:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "290:6:25",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "298:6:25",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "306:6:25",
                            "type": ""
                          }
                        ],
                        "src": "173:617:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "924:175:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "934:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "946:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "957:2:25",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "942:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "942:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:4:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "969:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "987:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "992:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "983:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "983:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "996:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "979:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "979:19:25"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "973:2:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1014:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1029:6:25"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1037:2:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1025:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1025:15:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1007:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1007:34:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1007:34:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1061:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1072:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1057:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1057:18:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:6:25"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1089:2:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1077:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1077:15:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1050:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1050:43:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1050:43:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "885:9:25",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "896:6:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "904:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "915:4:25",
                            "type": ""
                          }
                        ],
                        "src": "795:304:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1215:193:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1261:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1270:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1273:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1263:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1263:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1263:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1236:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1245:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1232:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1232:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1257:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1228:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1225:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1286:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1305:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1299:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1299:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1290:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1372:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_FeedRegistryInterface",
                                  "nodeType": "YulIdentifier",
                                  "src": "1324:47:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1324:54:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1324:54:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1387:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1397:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1387:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_AggregatorV2V3Interface_$56_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1181:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1192:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1204:6:25",
                            "type": ""
                          }
                        ],
                        "src": "1104:304:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1492:194:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1538:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1547:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1550:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1540:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1540:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1540:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1513:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1522:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1509:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1509:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1534:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1505:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1505:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1502:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1563:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1582:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1576:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1576:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1567:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1640:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1649:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1652:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1642:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1642:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1642:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1614:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1625:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1632:4:25",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1621:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1621:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1611:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1611:27:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1604:35:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1601:55:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1665:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1675:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1665:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1458:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1469:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1481:6:25",
                            "type": ""
                          }
                        ],
                        "src": "1413:273:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1723:95:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1740:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1747:3:25",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1752:10:25",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1743:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1743:20:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1733:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1733:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1733:31:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1780:1:25",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1783:4:25",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1773:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1773:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1773:15:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1804:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1807:4:25",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1797:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1797:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1797:15:25"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1691:127:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1887:358:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1897:16:25",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1912:1:25",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1901:7:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1922:16:25",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "1931:7:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1922:5:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1947:13:25",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "1955:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "1947:4:25"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2011:228:25",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2056:22:25",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "2058:16:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2058:18:25"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2058:18:25"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "2031:4:25"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2045:1:25",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "2041:3:25"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2041:6:25"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "2049:4:25"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "2037:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2037:17:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2028:2:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2028:27:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2025:53:25"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2117:29:25",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2119:25:25",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "2132:5:25"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "2139:4:25"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "2128:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2128:16:25"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "2119:5:25"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "2098:8:25"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2108:7:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "2094:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2094:22:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2091:55:25"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2159:23:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "2171:4:25"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "2177:4:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "2167:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2167:15:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "2159:4:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2195:34:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2211:7:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "2220:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2207:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2207:22:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "2195:8:25"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1980:8:25"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1990:7:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1977:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1977:21:25"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1999:3:25",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1973:3:25",
                                "statements": []
                              },
                              "src": "1969:270:25"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "1851:5:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "1858:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "1871:5:25",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "1878:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1823:422:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2309:747:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2347:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2361:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2370:1:25",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "2361:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2384:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2329:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2322:16:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2319:80:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2432:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2446:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2455:1:25",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "2446:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2469:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2418:4:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2411:12:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2408:76:25"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2520:52:25",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "2534:10:25",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2543:1:25",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "2534:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "2557:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2513:59:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2518:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2588:123:25",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "2623:22:25",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2625:16:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2625:18:25"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2625:18:25"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "2608:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2618:3:25",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "2605:2:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2605:17:25"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "2602:43:25"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "2658:25:25",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "2671:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2681:1:25",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2667:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2667:16:25"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "2658:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "2696:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2581:130:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2586:1:25",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "2500:4:25"
                              },
                              "nodeType": "YulSwitch",
                              "src": "2493:218:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2809:70:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2823:28:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "2836:4:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "2842:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "2832:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2832:19:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "2823:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2864:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "2733:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2739:2:25",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2730:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2730:12:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "2747:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2757:2:25",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2744:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2744:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2726:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2726:35:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "2770:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2776:3:25",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2767:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2767:13:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "2785:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2795:2:25",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2782:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2782:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2763:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2763:36:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "2723:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2723:77:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2720:159:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2888:57:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2930:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2936:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "2911:18:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2911:34:25"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2892:7:25",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2901:6:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2990:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2992:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2992:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2992:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2960:7:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2977:1:25",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "2973:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2973:6:25"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2981:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "2969:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2969:19:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2957:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2957:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2954:58:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3021:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3034:7:25"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3043:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "3030:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3030:20:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "3021:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "2280:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "2286:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "2299:5:25",
                            "type": ""
                          }
                        ],
                        "src": "2250:806:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3131:61:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3141:45:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "3171:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "3177:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3150:20:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3150:36:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "3141:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "3102:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "3108:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "3121:5:25",
                            "type": ""
                          }
                        ],
                        "src": "3061:131:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3246:76:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3268:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3270:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3270:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3270:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3262:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3265:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3259:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3259:8:25"
                              },
                              "nodeType": "YulIf",
                              "src": "3256:34:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3299:17:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3311:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3314:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3307:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3307:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "3299:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "3228:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "3231:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "3237:4:25",
                            "type": ""
                          }
                        ],
                        "src": "3197:125:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_contract_FeedRegistryInterface(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_FeedRegistryInterface_$413t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_FeedRegistryInterface(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_FeedRegistryInterface(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_FeedRegistryInterface(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_contract$_AggregatorV2V3Interface_$56_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_FeedRegistryInterface(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60e06040523480156200001157600080fd5b5060405162000aa238038062000aa28339810160408190526200003491620001a5565b6001600160a01b03838116608081905283821660a081905291831660c081905260405163d2edb6dd60e01b8152600481019390935260248301529063d2edb6dd90604401602060405180830381865afa15801562000096573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bc9190620001f9565b600080546001600160a01b0319166001600160a01b039290921691821790556040805163313ce56760e01b815290516200015b92601292909163313ce567916004808201926020929091908290030181865afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000147919062000220565b60ff166200017560201b620004161760201c565b6200016890600a62000358565b6001555062000380915050565b600062000183828462000366565b90505b92915050565b6001600160a01b0381168114620001a257600080fd5b50565b600080600060608486031215620001bb57600080fd5b8351620001c8816200018c565b6020850151909350620001db816200018c565b6040850151909250620001ee816200018c565b809150509250925092565b6000602082840312156200020c57600080fd5b815162000219816200018c565b9392505050565b6000602082840312156200023357600080fd5b815160ff811681146200021957600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200029c57816000190482111562000280576200028062000245565b808516156200028e57918102915b93841c939080029062000260565b509250929050565b600082620002b55750600162000186565b81620002c45750600062000186565b8160018114620002dd5760028114620002e85762000308565b600191505062000186565b60ff841115620002fc57620002fc62000245565b50506001821b62000186565b5060208310610133831016604e8410600b84101617156200032d575081810a62000186565b6200033983836200025b565b806000190482111562000350576200035062000245565b029392505050565b6000620001838383620002a4565b6000828210156200037b576200037b62000245565b500390565b60805160a05160c0516106df620003c36000396000818161010901526102ab0152600081816071015261028301526000818160d801526102d601526106df6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637b103999116100505780637b103999146100d35780637d035248146100fa578063999b93af1461010457600080fd5b80635001f3b51461006c578063679aefce146100bd575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c561012b565b6040519081526020016100b4565b6100937f000000000000000000000000000000000000000000000000000000000000000081565b610102610246565b005b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60008054604080517ffeaf968c0000000000000000000000000000000000000000000000000000000081529051839273ffffffffffffffffffffffffffffffffffffffff169163feaf968c9160048083019260a09291908290030181865afa15801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf919061044a565b50505091505060008113610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207072696365207261746520726573706f6e73650000000000604482015260640160405180910390fd5b60015461024090826104c9565b91505090565b6040517fd2edb6dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d2edb6dd90604401602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610506565b90506103c160128273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610543565b60ff16610416565b6103cc90600a610686565b600155600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006104228284610692565b90505b92915050565b805169ffffffffffffffffffff8116811461044557600080fd5b919050565b600080600080600060a0868803121561046257600080fd5b61046b8661042b565b945060208601519350604086015192506060860151915061048e6080870161042b565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105015761050161049a565b500290565b60006020828403121561051857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461053c57600080fd5b9392505050565b60006020828403121561055557600080fd5b815160ff8116811461053c57600080fd5b600181815b808511156105bf57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156105a5576105a561049a565b808516156105b257918102915b93841c939080029061056b565b509250929050565b6000826105d657506001610425565b816105e357506000610425565b81600181146105f957600281146106035761061f565b6001915050610425565b60ff8411156106145761061461049a565b50506001821b610425565b5060208310610133831016604e8410600b8410161715610642575081810a610425565b61064c8383610566565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561067e5761067e61049a565b029392505050565b600061042283836105c7565b6000828210156106a4576106a461049a565b50039056fea2646970667358221220f8b18be5a557cb68680784d102efa043b6b262ba01186fb7bf86b9798c2a994364736f6c634300080b0033",
              "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAA2 CODESIZE SUB DUP1 PUSH3 0xAA2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x80 DUP2 SWAP1 MSTORE DUP4 DUP3 AND PUSH1 0xA0 DUP2 SWAP1 MSTORE SWAP2 DUP4 AND PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH1 0x40 MLOAD PUSH4 0xD2EDB6DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0xD2EDB6DD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xBC SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH3 0x15B SWAP3 PUSH1 0x12 SWAP3 SWAP1 SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x121 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x147 SWAP2 SWAP1 PUSH3 0x220 JUMP JUMPDEST PUSH1 0xFF AND PUSH3 0x175 PUSH1 0x20 SHL PUSH3 0x416 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x168 SWAP1 PUSH1 0xA PUSH3 0x358 JUMP JUMPDEST PUSH1 0x1 SSTORE POP PUSH3 0x380 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x183 DUP3 DUP5 PUSH3 0x366 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x1C8 DUP2 PUSH3 0x18C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x1DB DUP2 PUSH3 0x18C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x1EE DUP2 PUSH3 0x18C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x219 DUP2 PUSH3 0x18C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x29C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x280 JUMPI PUSH3 0x280 PUSH3 0x245 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x28E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x260 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x2B5 JUMPI POP PUSH1 0x1 PUSH3 0x186 JUMP JUMPDEST DUP2 PUSH3 0x2C4 JUMPI POP PUSH1 0x0 PUSH3 0x186 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x2DD JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x2E8 JUMPI PUSH3 0x308 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x186 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x2FC JUMPI PUSH3 0x2FC PUSH3 0x245 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x186 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x32D JUMPI POP DUP2 DUP2 EXP PUSH3 0x186 JUMP JUMPDEST PUSH3 0x339 DUP4 DUP4 PUSH3 0x25B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x350 JUMPI PUSH3 0x350 PUSH3 0x245 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x183 DUP4 DUP4 PUSH3 0x2A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x37B JUMPI PUSH3 0x37B PUSH3 0x245 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x6DF PUSH3 0x3C3 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x109 ADD MSTORE PUSH2 0x2AB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x71 ADD MSTORE PUSH2 0x283 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xD8 ADD MSTORE PUSH2 0x2D6 ADD MSTORE PUSH2 0x6DF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7D035248 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x999B93AF EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x93 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x246 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207072696365207261746520726573706F6E73650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x240 SWAP1 DUP3 PUSH2 0x4C9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD2EDB6DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD2EDB6DD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C1 PUSH1 0x12 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x416 JUMP JUMPDEST PUSH2 0x3CC SWAP1 PUSH1 0xA PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x422 DUP3 DUP5 PUSH2 0x692 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46B DUP7 PUSH2 0x42B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x48E PUSH1 0x80 DUP8 ADD PUSH2 0x42B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x49A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5BF JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0x49A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x5B2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x56B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5D6 JUMPI POP PUSH1 0x1 PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH2 0x5E3 JUMPI POP PUSH1 0x0 PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5F9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x603 JUMPI PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x425 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x49A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x425 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x642 JUMPI POP DUP2 DUP2 EXP PUSH2 0x425 JUMP JUMPDEST PUSH2 0x64C DUP4 DUP4 PUSH2 0x566 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x67E JUMPI PUSH2 0x67E PUSH2 0x49A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x422 DUP4 DUP4 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6A4 JUMPI PUSH2 0x6A4 PUSH2 0x49A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xB1 DUP12 0xE5 0xA5 JUMPI 0xCB PUSH9 0x680784D102EFA043B6 0xB2 PUSH3 0xBA0118 PUSH16 0xB7BF86B9798C2A994364736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "1261:2103:13:-:0;;;2099:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2215:20:13;;;;;;;2245:12;;;;;;;2267:14;;;;;;;2339:32;;-1:-1:-1;;;2339:32:13;;;;;1007:34:25;;;;1057:18;;;1050:43;2215:20:13;2339:17;;942:18:25;;2339:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2331:5;:40;;-1:-1:-1;;;;;;2331:40:13;-1:-1:-1;;;;;2331:40:13;;;;;;;;;2419:16;;;-1:-1:-1;;;2419:16:13;;;;2402:34;;2415:2;;2331:40;;2419:14;;:16;;;;;;;;;;;;;;;2331:40;2419:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2402:34;;:12;;;;;:34;;:::i;:::-;2398:38;;:2;:38;:::i;:::-;2381:14;:55;-1:-1:-1;1261:2103:13;;-1:-1:-1;;1261:2103:13;3122:96:7;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;;3122:96;;;;;:::o;14:154:25:-;-1:-1:-1;;;;;112:31:25;;102:42;;92:70;;158:1;155;148:12;92:70;14:154;:::o;173:617::-;290:6;298;306;359:2;347:9;338:7;334:23;330:32;327:52;;;375:1;372;365:12;327:52;407:9;401:16;426:54;474:5;426:54;:::i;:::-;549:2;534:18;;528:25;499:5;;-1:-1:-1;562:56:25;528:25;562:56;:::i;:::-;689:2;674:18;;668:25;637:7;;-1:-1:-1;702:56:25;668:25;702:56;:::i;:::-;777:7;767:17;;;173:617;;;;;:::o;1104:304::-;1204:6;1257:2;1245:9;1236:7;1232:23;1228:32;1225:52;;;1273:1;1270;1263:12;1225:52;1305:9;1299:16;1324:54;1372:5;1324:54;:::i;:::-;1397:5;1104:304;-1:-1:-1;;;1104:304:25:o;1413:273::-;1481:6;1534:2;1522:9;1513:7;1509:23;1505:32;1502:52;;;1550:1;1547;1540:12;1502:52;1582:9;1576:16;1632:4;1625:5;1621:16;1614:5;1611:27;1601:55;;1652:1;1649;1642:12;1691:127;1752:10;1747:3;1743:20;1740:1;1733:31;1783:4;1780:1;1773:15;1807:4;1804:1;1797:15;1823:422;1912:1;1955:5;1912:1;1969:270;1990:7;1980:8;1977:21;1969:270;;;2049:4;2045:1;2041:6;2037:17;2031:4;2028:27;2025:53;;;2058:18;;:::i;:::-;2108:7;2098:8;2094:22;2091:55;;;2128:16;;;;2091:55;2207:22;;;;2167:15;;;;1969:270;;;1973:3;1823:422;;;;;:::o;2250:806::-;2299:5;2329:8;2319:80;;-1:-1:-1;2370:1:25;2384:5;;2319:80;2418:4;2408:76;;-1:-1:-1;2455:1:25;2469:5;;2408:76;2500:4;2518:1;2513:59;;;;2586:1;2581:130;;;;2493:218;;2513:59;2543:1;2534:10;;2557:5;;;2581:130;2618:3;2608:8;2605:17;2602:43;;;2625:18;;:::i;:::-;-1:-1:-1;;2681:1:25;2667:16;;2696:5;;2493:218;;2795:2;2785:8;2782:16;2776:3;2770:4;2767:13;2763:36;2757:2;2747:8;2744:16;2739:2;2733:4;2730:12;2726:35;2723:77;2720:159;;;-1:-1:-1;2832:19:25;;;2864:5;;2720:159;2911:34;2936:8;2930:4;2911:34;:::i;:::-;2981:6;2977:1;2973:6;2969:19;2960:7;2957:32;2954:58;;;2992:18;;:::i;:::-;3030:20;;2250:806;-1:-1:-1;;;2250:806:25:o;3061:131::-;3121:5;3150:36;3177:8;3171:4;3150:36;:::i;3197:125::-;3237:4;3265:1;3262;3259:8;3256:34;;;3270:18;;:::i;:::-;-1:-1:-1;3307:9:25;;3197:125::o;:::-;1261:2103:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@base_1233": {
                  "entryPoint": null,
                  "id": 1233,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getRate_1312": {
                  "entryPoint": 299,
                  "id": 1312,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@quote_1235": {
                  "entryPoint": null,
                  "id": 1235,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@registry_1231": {
                  "entryPoint": null,
                  "id": 1231,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sub_875": {
                  "entryPoint": 1046,
                  "id": 875,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@updateCachedFeed_1342": {
                  "entryPoint": 582,
                  "id": 1342,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_contract$_AggregatorV2V3Interface_$56_fromMemory": {
                  "entryPoint": 1286,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
                  "entryPoint": 1098,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_uint8_fromMemory": {
                  "entryPoint": 1347,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint80_fromMemory": {
                  "entryPoint": 1067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_FeedRegistryInterface_$413__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 1382,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 1670,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 1479,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 1225,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 1682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1178,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4706:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "190:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:226:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "346:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "356:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "368:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "379:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "364:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "364:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "356:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "398:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "409:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "315:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "326:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "337:4:25",
                            "type": ""
                          }
                        ],
                        "src": "245:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "557:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "567:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "579:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "590:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "575:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "575:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "609:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "624:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "632:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "620:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "620:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "602:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "602:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "602:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_FeedRegistryInterface_$413__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "526:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "537:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "548:4:25",
                            "type": ""
                          }
                        ],
                        "src": "427:255:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "746:120:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "756:22:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "771:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "765:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "765:13:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "756:5:25"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "844:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "853:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "856:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "846:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "846:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "846:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "800:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "811:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "818:22:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "807:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "807:34:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "797:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "797:45:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "790:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "790:53:25"
                              },
                              "nodeType": "YulIf",
                              "src": "787:73:25"
                            }
                          ]
                        },
                        "name": "abi_decode_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "725:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "736:5:25",
                            "type": ""
                          }
                        ],
                        "src": "687:179:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1017:327:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1064:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1073:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1076:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1066:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1066:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1066:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1038:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1047:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1034:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1034:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1059:3:25",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1030:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1030:33:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1027:53:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1089:49:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1128:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1099:28:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1099:39:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1147:35:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1167:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1178:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1163:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1163:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1157:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1157:25:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1147:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1191:35:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1222:2:25",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1207:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1207:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1201:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1201:25:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1191:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1235:35:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1255:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1266:2:25",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1251:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1251:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1245:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1245:25:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1235:6:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1279:59:25",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1322:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1333:3:25",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1318:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1318:19:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint80_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1289:28:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1289:49:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "951:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "962:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "974:6:25",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "982:6:25",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "990:6:25",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "998:6:25",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1006:6:25",
                            "type": ""
                          }
                        ],
                        "src": "871:473:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1523:177:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1551:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1533:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1533:21:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1533:21:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1574:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1585:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1570:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1570:18:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1590:2:25",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1563:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1563:30:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1563:30:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1613:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1624:2:25",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1609:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1609:18:25"
                                  },
                                  {
                                    "hexValue": "496e76616c6964207072696365207261746520726573706f6e7365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1629:29:25",
                                    "type": "",
                                    "value": "Invalid price rate response"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1602:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1602:57:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1602:57:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1668:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1680:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1691:2:25",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1676:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1676:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1668:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1500:9:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1514:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1349:351:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1737:152:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1754:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1757:77:25",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1747:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1747:88:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1747:88:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1851:1:25",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1854:4:25",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1844:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1844:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1844:15:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1875:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1878:4:25",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1868:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1868:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1868:15:25"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1705:184:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1946:176:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2065:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2067:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2067:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2067:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "1977:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1970:6:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1970:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1963:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1963:17:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "1985:1:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1992:66:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "2060:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "1988:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1988:74:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1982:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1982:81:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1959:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1959:105:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1956:131:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2096:20:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2111:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2114:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "2107:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2107:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "2096:7:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1925:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1928:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "1934:7:25",
                            "type": ""
                          }
                        ],
                        "src": "1894:228:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2256:198:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2266:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2278:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2289:2:25",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2274:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2274:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2266:4:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2301:52:25",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2311:42:25",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2305:2:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2369:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2384:6:25"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2392:2:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2380:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2380:15:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2362:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2362:34:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2362:34:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2416:9:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2427:2:25",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2412:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2412:18:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2436:6:25"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2444:2:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2432:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2432:15:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2405:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2405:43:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2405:43:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2217:9:25",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2228:6:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2236:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2247:4:25",
                            "type": ""
                          }
                        ],
                        "src": "2127:327:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2570:232:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2616:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2625:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2628:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2618:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2618:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2618:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2591:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2600:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2587:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2587:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2612:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2583:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2583:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2580:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2641:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2660:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2654:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2654:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2645:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2756:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2765:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2768:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2758:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2758:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2758:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2692:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2703:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2710:42:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2699:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2699:54:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2689:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2689:65:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2682:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2682:73:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2679:93:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2781:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2791:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2781:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_AggregatorV2V3Interface_$56_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2536:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2547:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2559:6:25",
                            "type": ""
                          }
                        ],
                        "src": "2459:343:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2886:194:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2932:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2941:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2944:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2934:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2934:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2934:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2907:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2916:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2903:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2903:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2928:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2899:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2899:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2896:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2957:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2976:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2970:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2970:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2961:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3034:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3043:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3046:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3036:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3036:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3036:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3008:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3019:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3026:4:25",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3015:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3015:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3005:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3005:27:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2998:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2998:35:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2995:55:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3059:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3069:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3059:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2852:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2863:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2875:6:25",
                            "type": ""
                          }
                        ],
                        "src": "2807:273:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3149:418:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3159:16:25",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3174:1:25",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3163:7:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3184:16:25",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "3193:7:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "3184:5:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3209:13:25",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "3217:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "3209:4:25"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3273:288:25",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "3378:22:25",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3380:16:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3380:18:25"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3380:18:25"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "3293:4:25"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3303:66:25",
                                              "type": "",
                                              "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "3371:4:25"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "3299:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3299:77:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "3290:2:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3290:87:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "3287:113:25"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "3439:29:25",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "3441:25:25",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "3454:5:25"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "3461:4:25"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "3450:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3450:16:25"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "3441:5:25"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "3420:8:25"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3430:7:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "3416:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3416:22:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "3413:55:25"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3481:23:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "3493:4:25"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "3499:4:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "3489:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3489:15:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "3481:4:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3517:34:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3533:7:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "3542:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3529:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3529:22:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "3517:8:25"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "3242:8:25"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3252:7:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3239:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3239:21:25"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3261:3:25",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3235:3:25",
                                "statements": []
                              },
                              "src": "3231:330:25"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "3113:5:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "3120:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "3133:5:25",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "3140:4:25",
                            "type": ""
                          }
                        ],
                        "src": "3085:482:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3631:807:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3669:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3683:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3692:1:25",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "3683:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "3706:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "3651:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3644:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3644:16:25"
                              },
                              "nodeType": "YulIf",
                              "src": "3641:80:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3754:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3768:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3777:1:25",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "3768:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "3791:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "3740:4:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3733:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3733:12:25"
                              },
                              "nodeType": "YulIf",
                              "src": "3730:76:25"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3842:52:25",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "3856:10:25",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3865:1:25",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "3856:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "3879:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3835:59:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3840:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3910:123:25",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "3945:22:25",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3947:16:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3947:18:25"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3947:18:25"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "3930:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3940:3:25",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "3927:2:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3927:17:25"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "3924:43:25"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "3980:25:25",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "3993:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4003:1:25",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "3989:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3989:16:25"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "3980:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "4018:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3903:130:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3908:1:25",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "3822:4:25"
                              },
                              "nodeType": "YulSwitch",
                              "src": "3815:218:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4131:70:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4145:28:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "4158:4:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "4164:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "4154:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4154:19:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "4145:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "4186:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "4055:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4061:2:25",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "4052:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4052:12:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "4069:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4079:2:25",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "4066:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4066:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4048:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4048:35:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "4092:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4098:3:25",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "4089:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4089:13:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "4107:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4117:2:25",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "4104:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4104:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4085:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4085:36:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "4045:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4045:77:25"
                              },
                              "nodeType": "YulIf",
                              "src": "4042:159:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4210:57:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "4252:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "4258:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "4233:18:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4233:34:25"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4214:7:25",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4223:6:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4372:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4374:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4374:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4374:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4282:7:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4295:66:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4363:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "4291:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4291:79:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4279:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4279:92:25"
                              },
                              "nodeType": "YulIf",
                              "src": "4276:118:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4403:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4416:7:25"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4425:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "4412:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4412:20:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "4403:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "3602:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "3608:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "3621:5:25",
                            "type": ""
                          }
                        ],
                        "src": "3572:866:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4513:61:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4523:45:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "4553:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "4559:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4532:20:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4532:36:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "4523:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "4484:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "4490:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "4503:5:25",
                            "type": ""
                          }
                        ],
                        "src": "4443:131:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4628:76:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4650:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4652:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4652:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4652:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4644:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4647:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4641:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4641:8:25"
                              },
                              "nodeType": "YulIf",
                              "src": "4638:34:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4681:17:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4693:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4696:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4689:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4689:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "4681:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4610:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4613:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "4619:4:25",
                            "type": ""
                          }
                        ],
                        "src": "4579:125:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_FeedRegistryInterface_$413__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid price rate response\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_contract$_AggregatorV2V3Interface_$56_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1231": [
                  {
                    "length": 32,
                    "start": 216
                  },
                  {
                    "length": 32,
                    "start": 726
                  }
                ],
                "1233": [
                  {
                    "length": 32,
                    "start": 113
                  },
                  {
                    "length": 32,
                    "start": 643
                  }
                ],
                "1235": [
                  {
                    "length": 32,
                    "start": 265
                  },
                  {
                    "length": 32,
                    "start": 683
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100675760003560e01c80637b103999116100505780637b103999146100d35780637d035248146100fa578063999b93af1461010457600080fd5b80635001f3b51461006c578063679aefce146100bd575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c561012b565b6040519081526020016100b4565b6100937f000000000000000000000000000000000000000000000000000000000000000081565b610102610246565b005b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60008054604080517ffeaf968c0000000000000000000000000000000000000000000000000000000081529051839273ffffffffffffffffffffffffffffffffffffffff169163feaf968c9160048083019260a09291908290030181865afa15801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf919061044a565b50505091505060008113610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964207072696365207261746520726573706f6e73650000000000604482015260640160405180910390fd5b60015461024090826104c9565b91505090565b6040517fd2edb6dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d2edb6dd90604401602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610506565b90506103c160128273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610543565b60ff16610416565b6103cc90600a610686565b600155600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006104228284610692565b90505b92915050565b805169ffffffffffffffffffff8116811461044557600080fd5b919050565b600080600080600060a0868803121561046257600080fd5b61046b8661042b565b945060208601519350604086015192506060860151915061048e6080870161042b565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105015761050161049a565b500290565b60006020828403121561051857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461053c57600080fd5b9392505050565b60006020828403121561055557600080fd5b815160ff8116811461053c57600080fd5b600181815b808511156105bf57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156105a5576105a561049a565b808516156105b257918102915b93841c939080029061056b565b509250929050565b6000826105d657506001610425565b816105e357506000610425565b81600181146105f957600281146106035761061f565b6001915050610425565b60ff8411156106145761061461049a565b50506001821b610425565b5060208310610133831016604e8410600b8410161715610642575081810a610425565b61064c8383610566565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561067e5761067e61049a565b029392505050565b600061042283836105c7565b6000828210156106a4576106a461049a565b50039056fea2646970667358221220f8b18be5a557cb68680784d102efa043b6b262ba01186fb7bf86b9798c2a994364736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7D035248 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x999B93AF EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x93 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x246 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207072696365207261746520726573706F6E73650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x240 SWAP1 DUP3 PUSH2 0x4C9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD2EDB6DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD2EDB6DD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C1 PUSH1 0x12 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x416 JUMP JUMPDEST PUSH2 0x3CC SWAP1 PUSH1 0xA PUSH2 0x686 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x422 DUP3 DUP5 PUSH2 0x692 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46B DUP7 PUSH2 0x42B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x48E PUSH1 0x80 DUP8 ADD PUSH2 0x42B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x49A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5BF JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0x49A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x5B2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x56B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5D6 JUMPI POP PUSH1 0x1 PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH2 0x5E3 JUMPI POP PUSH1 0x0 PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5F9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x603 JUMPI PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x425 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x614 JUMPI PUSH2 0x614 PUSH2 0x49A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x425 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x642 JUMPI POP DUP2 DUP2 EXP PUSH2 0x425 JUMP JUMPDEST PUSH2 0x64C DUP4 DUP4 PUSH2 0x566 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x67E JUMPI PUSH2 0x67E PUSH2 0x49A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x422 DUP4 DUP4 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6A4 JUMPI PUSH2 0x6A4 PUSH2 0x49A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xB1 DUP12 0xE5 0xA5 JUMPI 0xCB PUSH9 0x680784D102EFA043B6 0xB2 PUSH3 0xBA0118 PUSH16 0xB7BF86B9798C2A994364736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "1261:2103:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:29;;;;;;;;190:42:25;178:55;;;160:74;;148:2;133:18;1376:29:13;;;;;;;;2542:232;;;:::i;:::-;;;391:25:25;;;379:2;364:18;2542:232:13;245:177:25;1323:47:13;;;;;3079:283;;;:::i;:::-;;1411:30;;;;;2542:232;2593:7;2637:5;;:23;;;;;;;;2593:7;;2637:5;;;:21;;:23;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2612:48;;;;;;2686:1;2678:5;:9;2670:49;;;;;;;1551:2:25;2670:49:13;;;1533:21:25;1590:2;1570:18;;;1563:30;1629:29;1609:18;;;1602:57;1676:18;;2670:49:13;;;;;;;;2753:14;;2736:31;;2744:5;2736:31;:::i;:::-;2729:38;;;2542:232;:::o;3079:283::-;3160:29;;;;;:16;3177:4;2380:15:25;;3160:29:13;;;2362:34:25;3183:5:13;2432:15:25;;2412:18;;;2405:43;-1:-1:-1;;3160:8:13;:16;;;;;;2274:18:25;;3160:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3126:63;;3290:38;3303:2;3307:9;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3290:38;;:12;:38::i;:::-;3286:42;;:2;:42;:::i;:::-;3269:14;:59;3338:5;:17;;;;;;;;;;;;;;;3079:283::o;3122:96:7:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;;3122:96;;;;;:::o;687:179:25:-;765:13;;818:22;807:34;;797:45;;787:73;;856:1;853;846:12;787:73;687:179;;;:::o;871:473::-;974:6;982;990;998;1006;1059:3;1047:9;1038:7;1034:23;1030:33;1027:53;;;1076:1;1073;1066:12;1027:53;1099:39;1128:9;1099:39;:::i;:::-;1089:49;;1178:2;1167:9;1163:18;1157:25;1147:35;;1222:2;1211:9;1207:18;1201:25;1191:35;;1266:2;1255:9;1251:18;1245:25;1235:35;;1289:49;1333:3;1322:9;1318:19;1289:49;:::i;:::-;1279:59;;871:473;;;;;;;;:::o;1705:184::-;1757:77;1754:1;1747:88;1854:4;1851:1;1844:15;1878:4;1875:1;1868:15;1894:228;1934:7;2060:1;1992:66;1988:74;1985:1;1982:81;1977:1;1970:9;1963:17;1959:105;1956:131;;;2067:18;;:::i;:::-;-1:-1:-1;2107:9:25;;1894:228::o;2459:343::-;2559:6;2612:2;2600:9;2591:7;2587:23;2583:32;2580:52;;;2628:1;2625;2618:12;2580:52;2660:9;2654:16;2710:42;2703:5;2699:54;2692:5;2689:65;2679:93;;2768:1;2765;2758:12;2679:93;2791:5;2459:343;-1:-1:-1;;;2459:343:25:o;2807:273::-;2875:6;2928:2;2916:9;2907:7;2903:23;2899:32;2896:52;;;2944:1;2941;2934:12;2896:52;2976:9;2970:16;3026:4;3019:5;3015:16;3008:5;3005:27;2995:55;;3046:1;3043;3036:12;3085:482;3174:1;3217:5;3174:1;3231:330;3252:7;3242:8;3239:21;3231:330;;;3371:4;3303:66;3299:77;3293:4;3290:87;3287:113;;;3380:18;;:::i;:::-;3430:7;3420:8;3416:22;3413:55;;;3450:16;;;;3413:55;3529:22;;;;3489:15;;;;3231:330;;;3235:3;3085:482;;;;;:::o;3572:866::-;3621:5;3651:8;3641:80;;-1:-1:-1;3692:1:25;3706:5;;3641:80;3740:4;3730:76;;-1:-1:-1;3777:1:25;3791:5;;3730:76;3822:4;3840:1;3835:59;;;;3908:1;3903:130;;;;3815:218;;3835:59;3865:1;3856:10;;3879:5;;;3903:130;3940:3;3930:8;3927:17;3924:43;;;3947:18;;:::i;:::-;-1:-1:-1;;4003:1:25;3989:16;;4018:5;;3815:218;;4117:2;4107:8;4104:16;4098:3;4092:4;4089:13;4085:36;4079:2;4069:8;4066:16;4061:2;4055:4;4052:12;4048:35;4045:77;4042:159;;;-1:-1:-1;4154:19:25;;;4186:5;;4042:159;4233:34;4258:8;4252:4;4233:34;:::i;:::-;4363:6;4295:66;4291:79;4282:7;4279:92;4276:118;;;4374:18;;:::i;:::-;4412:20;;3572:866;-1:-1:-1;;;3572:866:25:o;4443:131::-;4503:5;4532:36;4559:8;4553:4;4532:36;:::i;4579:125::-;4619:4;4647:1;4644;4641:8;4638:34;;;4652:18;;:::i;:::-;-1:-1:-1;4689:9:25;;4579:125::o"
            },
            "methodIdentifiers": {
              "base()": "5001f3b5",
              "getRate()": "679aefce",
              "quote()": "999b93af",
              "registry()": "7b103999",
              "updateCachedFeed()": "7d035248"
            }
          }
        }
      },
      "contracts/ERC4626RateProvider.sol": {
        "ERC4626RateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC4626",
                  "name": "_erc4626",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "erc4626",
              "outputs": [
                {
                  "internalType": "contract IERC4626",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fixedPointOne",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1389": {
                  "entryPoint": null,
                  "id": 1389,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IERC4626_$581_fromMemory": {
                  "entryPoint": 444,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint8_fromMemory": {
                  "entryPoint": 480,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint8": {
                  "entryPoint": 537,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 597,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 827,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 664,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 574,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 515,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_contract_IERC4626": {
                  "entryPoint": 420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2828:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "69:86:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "133:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "145:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "135:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "135:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "135:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "92:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "103:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "118:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "123:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "114:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "114:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "127:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "110:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "110:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "99:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "99:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "89:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "89:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "79:70:25"
                            }
                          ]
                        },
                        "name": "validator_revert_contract_IERC4626",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "58:5:25",
                            "type": ""
                          }
                        ],
                        "src": "14:141:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "257:180:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "303:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "312:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "315:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "305:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "305:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "305:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "278:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "287:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "274:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "274:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "270:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "270:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "267:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "328:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "347:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "341:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "341:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "332:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "401:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IERC4626",
                                  "nodeType": "YulIdentifier",
                                  "src": "366:34:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "366:41:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "366:41:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "416:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "426:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC4626_$581_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "223:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "234:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "246:6:25",
                            "type": ""
                          }
                        ],
                        "src": "160:277:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "523:180:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "569:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "578:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "581:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "571:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "571:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "571:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "544:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "553:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "540:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "540:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "565:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "536:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "536:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "533:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "594:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "613:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "607:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "607:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "598:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "667:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IERC4626",
                                  "nodeType": "YulIdentifier",
                                  "src": "632:34:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "632:41:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "632:41:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "682:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "692:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "682:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "489:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "500:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "512:6:25",
                            "type": ""
                          }
                        ],
                        "src": "442:261:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "787:194:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "833:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "842:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "845:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "835:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "835:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "835:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "808:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "817:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "804:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "804:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "829:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "800:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "797:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "858:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "871:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "871:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "862:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "935:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "944:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "947:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "937:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "937:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "937:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "909:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "920:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "927:4:25",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "916:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "916:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "906:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "906:27:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "899:35:25"
                              },
                              "nodeType": "YulIf",
                              "src": "896:55:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "960:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "970:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "960:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "753:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "764:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "776:6:25",
                            "type": ""
                          }
                        ],
                        "src": "708:273:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1018:95:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1035:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1042:3:25",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1047:10:25",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1038:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1038:20:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1028:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1028:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1028:31:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1075:1:25",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1078:4:25",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1068:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1068:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1068:15:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1099:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1102:4:25",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1092:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1092:15:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1092:15:25"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "986:127:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1164:158:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1174:23:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1189:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1192:4:25",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1185:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1185:12:25"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1178:3:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1206:23:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1221:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1224:4:25",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1217:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1217:12:25"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1210:3:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1265:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1267:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1267:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1267:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1244:3:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1253:4:25",
                                        "type": "",
                                        "value": "0xff"
                                      },
                                      {
                                        "name": "y_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1259:3:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1249:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1249:14:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1241:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1241:23:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1238:49:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1296:20:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1307:3:25"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1312:3:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1303:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1303:13:25"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "1296:3:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1147:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1150:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "1156:3:25",
                            "type": ""
                          }
                        ],
                        "src": "1118:204:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1376:76:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1398:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1400:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1400:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1392:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1395:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1389:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1389:8:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1386:34:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1429:17:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1441:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1444:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1437:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1437:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "1429:4:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1358:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1361:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "1367:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1327:125:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1521:358:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1531:16:25",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1546:1:25",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1535:7:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1556:16:25",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "1565:7:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1556:5:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1581:13:25",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "1589:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "1581:4:25"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1645:228:25",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "1690:22:25",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1692:16:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1692:18:25"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1692:18:25"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1665:4:25"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1679:1:25",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "1675:3:25"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1675:6:25"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "1683:4:25"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "1671:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1671:17:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "1662:2:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1662:27:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "1659:53:25"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "1751:29:25",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "1753:25:25",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "1766:5:25"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "1773:4:25"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "1762:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1762:16:25"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "1753:5:25"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1732:8:25"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1742:7:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1728:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1728:22:25"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "1725:55:25"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1793:23:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1805:4:25"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1811:4:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "1801:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1801:15:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "1793:4:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1829:34:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1845:7:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1854:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1841:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1841:22:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "1829:8:25"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1614:8:25"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1624:7:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1611:21:25"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1633:3:25",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1607:3:25",
                                "statements": []
                              },
                              "src": "1603:270:25"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "1485:5:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "1492:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "1505:5:25",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "1512:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1457:422:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1943:747:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1981:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1995:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2004:1:25",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1995:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2018:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1963:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1956:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1956:16:25"
                              },
                              "nodeType": "YulIf",
                              "src": "1953:80:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2066:52:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2080:10:25",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2089:1:25",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "2080:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2103:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2052:4:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2045:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2045:12:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2042:76:25"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2154:52:25",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "2168:10:25",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2177:1:25",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "2168:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "2191:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2147:59:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2152:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2222:123:25",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "2257:22:25",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2259:16:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2259:18:25"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2259:18:25"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "2242:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2252:3:25",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "2239:2:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2239:17:25"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "2236:43:25"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "2292:25:25",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "2305:8:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2315:1:25",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2301:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2301:16:25"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "2292:5:25"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "2330:5:25"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2215:130:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2220:1:25",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "2134:4:25"
                              },
                              "nodeType": "YulSwitch",
                              "src": "2127:218:25"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2443:70:25",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2457:28:25",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "2470:4:25"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "2476:8:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "2466:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2466:19:25"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "2457:5:25"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2498:5:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "2367:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2373:2:25",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2364:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2364:12:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "2381:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2391:2:25",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2378:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2378:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2360:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2360:35:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "2404:4:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2410:3:25",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2401:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2401:13:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "2419:8:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2429:2:25",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2416:2:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2416:16:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2397:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2397:36:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "2357:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2357:77:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2354:159:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2522:57:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2564:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2570:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "2545:18:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2545:34:25"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2526:7:25",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2535:6:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2624:22:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2626:16:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2626:18:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2626:18:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2594:7:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2611:1:25",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "2607:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2607:6:25"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2615:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "2603:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2603:19:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2591:2:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2591:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "2588:58:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2655:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2668:7:25"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2677:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "2664:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2664:20:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2655:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "1914:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "1920:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "1933:5:25",
                            "type": ""
                          }
                        ],
                        "src": "1884:806:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2765:61:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2775:45:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2805:4:25"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2811:8:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2784:20:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2784:36:25"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2775:5:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "2736:4:25",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "2742:8:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "2755:5:25",
                            "type": ""
                          }
                        ],
                        "src": "2695:131:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_contract_IERC4626(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC4626_$581_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC4626(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC4626(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60c060405234801561001057600080fd5b5060405161057038038061057083398101604081905261002f916101bc565b806001600160a01b03166080816001600160a01b0316815250506000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ad91906101bc565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010e91906101e0565b60ff16905080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017691906101e0565b610181906012610219565b60ff1661018e919061023e565b61019990600a61033b565b60a052506103479050565b6001600160a01b03811681146101b957600080fd5b50565b6000602082840312156101ce57600080fd5b81516101d9816101a4565b9392505050565b6000602082840312156101f257600080fd5b815160ff811681146101d957600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561023657610236610203565b019392505050565b60008282101561025057610250610203565b500390565b600181815b8085111561029057816000190482111561027657610276610203565b8085161561028357918102915b93841c939080029061025a565b509250929050565b6000826102a757506001610335565b816102b457506000610335565b81600181146102ca57600281146102d4576102f0565b6001915050610335565b60ff8411156102e5576102e5610203565b50506001821b610335565b5060208310610133831016604e8410600b8410161715610313575081810a610335565b61031d8383610255565b806000190482111561033157610331610203565b0290505b92915050565b60006101d98383610298565b60805160a0516101f96103776000396000818160b2015260fc015260008181604b015261012501526101f96000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806313511b5c14610046578063679aefce1461009757806371f29123146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61009f7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f07a2d13a0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307a2d13a90602401602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a591906101aa565b905090565b6000602082840312156101bc57600080fd5b505191905056fea264697066735822122091ac933a96d72ea39afd843b1d1ab3a8ea66aac1ae2c25228541b16ae410605b64736f6c634300080b0033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x570 CODESIZE SUB DUP1 PUSH2 0x570 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38D52E0F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH1 0x12 PUSH2 0x219 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH2 0x199 SWAP1 PUSH1 0xA PUSH2 0x33B JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH2 0x347 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D9 DUP2 PUSH2 0x1A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH2 0x236 PUSH2 0x203 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x250 PUSH2 0x203 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x290 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x276 JUMPI PUSH2 0x276 PUSH2 0x203 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x283 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x25A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A7 JUMPI POP PUSH1 0x1 PUSH2 0x335 JUMP JUMPDEST DUP2 PUSH2 0x2B4 JUMPI POP PUSH1 0x0 PUSH2 0x335 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2CA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2D4 JUMPI PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x335 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x203 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x335 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x313 JUMPI POP DUP2 DUP2 EXP PUSH2 0x335 JUMP JUMPDEST PUSH2 0x31D DUP4 DUP4 PUSH2 0x255 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0x203 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP4 DUP4 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1F9 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xB2 ADD MSTORE PUSH1 0xFC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE PUSH2 0x125 ADD MSTORE PUSH2 0x1F9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13511B5C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x71F29123 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x9F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7A2D13A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x7A2D13A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xAC SWAP4 GASPRICE SWAP7 0xD7 0x2E LOG3 SWAP11 REVERT DUP5 EXTCODESIZE SAR BYTE 0xB3 0xA8 0xEA PUSH7 0xAAC1AE2C252285 COINBASE 0xB1 PUSH11 0xE410605B64736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "987:734:14:-:0;;;1123:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1174:8;-1:-1:-1;;;;;1164:18:14;;;-1:-1:-1;;;;;1164:18:14;;;;;1192:26;1230:8;-1:-1:-1;;;;;1230:14:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1221:35:14;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1192:66;;;;1416:18;1394:8;-1:-1:-1;;;;;1394:17:14;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1389:24;;:2;:24;:::i;:::-;:45;;;;;;:::i;:::-;1384:51;;:2;:51;:::i;:::-;1368:67;;-1:-1:-1;987:734:14;;-1:-1:-1;987:734:14;14:141:25;-1:-1:-1;;;;;99:31:25;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:277::-;246:6;299:2;287:9;278:7;274:23;270:32;267:52;;;315:1;312;305:12;267:52;347:9;341:16;366:41;401:5;366:41;:::i;:::-;426:5;160:277;-1:-1:-1;;;160:277:25:o;708:273::-;776:6;829:2;817:9;808:7;804:23;800:32;797:52;;;845:1;842;835:12;797:52;877:9;871:16;927:4;920:5;916:16;909:5;906:27;896:55;;947:1;944;937:12;986:127;1047:10;1042:3;1038:20;1035:1;1028:31;1078:4;1075:1;1068:15;1102:4;1099:1;1092:15;1118:204;1156:3;1192:4;1189:1;1185:12;1224:4;1221:1;1217:12;1259:3;1253:4;1249:14;1244:3;1241:23;1238:49;;;1267:18;;:::i;:::-;1303:13;;1118:204;-1:-1:-1;;;1118:204:25:o;1327:125::-;1367:4;1395:1;1392;1389:8;1386:34;;;1400:18;;:::i;:::-;-1:-1:-1;1437:9:25;;1327:125::o;1457:422::-;1546:1;1589:5;1546:1;1603:270;1624:7;1614:8;1611:21;1603:270;;;1683:4;1679:1;1675:6;1671:17;1665:4;1662:27;1659:53;;;1692:18;;:::i;:::-;1742:7;1732:8;1728:22;1725:55;;;1762:16;;;;1725:55;1841:22;;;;1801:15;;;;1603:270;;;1607:3;1457:422;;;;;:::o;1884:806::-;1933:5;1963:8;1953:80;;-1:-1:-1;2004:1:25;2018:5;;1953:80;2052:4;2042:76;;-1:-1:-1;2089:1:25;2103:5;;2042:76;2134:4;2152:1;2147:59;;;;2220:1;2215:130;;;;2127:218;;2147:59;2177:1;2168:10;;2191:5;;;2215:130;2252:3;2242:8;2239:17;2236:43;;;2259:18;;:::i;:::-;-1:-1:-1;;2315:1:25;2301:16;;2330:5;;2127:218;;2429:2;2419:8;2416:16;2410:3;2404:4;2401:13;2397:36;2391:2;2381:8;2378:16;2373:2;2367:4;2364:12;2360:35;2357:77;2354:159;;;-1:-1:-1;2466:19:25;;;2498:5;;2354:159;2545:34;2570:8;2564:4;2545:34;:::i;:::-;2615:6;2611:1;2607:6;2603:19;2594:7;2591:32;2588:58;;;2626:18;;:::i;:::-;2664:20;;-1:-1:-1;1884:806:25;;;;;:::o;2695:131::-;2755:5;2784:36;2811:8;2805:4;2784:36;:::i;2695:131::-;987:734:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@erc4626_1353": {
                  "entryPoint": null,
                  "id": 1353,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@fixedPointOne_1355": {
                  "entryPoint": null,
                  "id": 1355,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getRate_1402": {
                  "entryPoint": 212,
                  "id": 1402,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 426,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC4626_$581__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:629:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "131:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "141:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "153:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "164:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "149:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "149:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "141:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "183:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "198:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "206:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "194:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "194:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "176:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "176:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC4626_$581__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "100:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "111:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "122:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:242:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "362:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "372:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "384:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "395:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "380:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "380:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "372:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "414:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "425:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "407:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "407:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "407:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "331:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "342:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "353:4:25",
                            "type": ""
                          }
                        ],
                        "src": "261:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "524:103:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "570:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "579:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "582:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "572:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "572:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "572:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "554:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "541:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "541:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "566:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "534:52:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "595:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "611:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "605:16:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "490:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "501:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "513:6:25",
                            "type": ""
                          }
                        ],
                        "src": "443:184:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC4626_$581__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1353": [
                  {
                    "length": 32,
                    "start": 75
                  },
                  {
                    "length": 32,
                    "start": 293
                  }
                ],
                "1355": [
                  {
                    "length": 32,
                    "start": 178
                  },
                  {
                    "length": 32,
                    "start": 252
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806313511b5c14610046578063679aefce1461009757806371f29123146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61009f7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f07a2d13a0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307a2d13a90602401602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a591906101aa565b905090565b6000602082840312156101bc57600080fd5b505191905056fea264697066735822122091ac933a96d72ea39afd843b1d1ab3a8ea66aac1ae2c25228541b16ae410605b64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13511B5C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x71F29123 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x9F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7A2D13A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x7A2D13A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xAC SWAP4 GASPRICE SWAP7 0xD7 0x2E LOG3 SWAP11 REVERT DUP5 EXTCODESIZE SAR BYTE 0xB3 0xA8 0xEA PUSH7 0xAAC1AE2C252285 COINBASE 0xB1 PUSH11 0xE410605B64736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "987:734:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:33;;;;;;;;206:42:25;194:55;;;176:74;;164:2;149:18;1039:33:14;;;;;;;;1597:122;;;:::i;:::-;;;407:25:25;;;395:2;380:18;1597:122:14;261:177:25;1078:38:14;;;;;1597:122;1674:38;;;;;1698:13;1674:38;;;407:25:25;1648:7:14;;1674;:23;;;;;380:18:25;;1674:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:45;;1597:122;:::o;443:184:25:-;513:6;566:2;554:9;545:7;541:23;537:32;534:52;;;582:1;579;572:12;534:52;-1:-1:-1;605:16:25;;443:184;-1:-1:-1;443:184:25:o"
            },
            "methodIdentifiers": {
              "erc4626()": "13511b5c",
              "fixedPointOne()": "71f29123",
              "getRate()": "679aefce"
            }
          }
        }
      },
      "contracts/ERC4626RateProviderFactory.sol": {
        "ERC4626RateProviderFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "RateProviderCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC4626",
                  "name": "erc4626",
                  "type": "address"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "contract ERC4626RateProvider",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "isRateProviderFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061078f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806319912f711461003b5780639ed9331814610089575b600080fd5b6100746100493660046101c5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61009c6100973660046101c5565b6100c1565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610080565b600080826040516100d190610193565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f08015801561010a573d6000803e3d6000fd5b5090506101168161011c565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f7a8e6b463d413484480a3a8120e5fb841491c52541ac3f649ac41d9b0d088aa69190a250565b610570806101ea83390190565b73ffffffffffffffffffffffffffffffffffffffff811681146101c257600080fd5b50565b6000602082840312156101d757600080fd5b81356101e2816101a0565b939250505056fe60c060405234801561001057600080fd5b5060405161057038038061057083398101604081905261002f916101bc565b806001600160a01b03166080816001600160a01b0316815250506000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ad91906101bc565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010e91906101e0565b60ff16905080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017691906101e0565b610181906012610219565b60ff1661018e919061023e565b61019990600a61033b565b60a052506103479050565b6001600160a01b03811681146101b957600080fd5b50565b6000602082840312156101ce57600080fd5b81516101d9816101a4565b9392505050565b6000602082840312156101f257600080fd5b815160ff811681146101d957600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561023657610236610203565b019392505050565b60008282101561025057610250610203565b500390565b600181815b8085111561029057816000190482111561027657610276610203565b8085161561028357918102915b93841c939080029061025a565b509250929050565b6000826102a757506001610335565b816102b457506000610335565b81600181146102ca57600281146102d4576102f0565b6001915050610335565b60ff8411156102e5576102e5610203565b50506001821b610335565b5060208310610133831016604e8410600b8410161715610313575081810a610335565b61031d8383610255565b806000190482111561033157610331610203565b0290505b92915050565b60006101d98383610298565b60805160a0516101f96103776000396000818160b2015260fc015260008181604b015261012501526101f96000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806313511b5c14610046578063679aefce1461009757806371f29123146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61009f7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f07a2d13a0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307a2d13a90602401602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a591906101aa565b905090565b6000602082840312156101bc57600080fd5b505191905056fea264697066735822122091ac933a96d72ea39afd843b1d1ab3a8ea66aac1ae2c25228541b16ae410605b64736f6c634300080b0033a264697066735822122003baa2ea8fc659e4381850bd0350ed9d6d5da45fc00aa207605c2be83d50c50e64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19912F71 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9ED93318 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x7A8E6B463D413484480A3A8120E5FB841491C52541AC3F649AC41D9B0D088AA6 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x570 DUP1 PUSH2 0x1EA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E2 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x570 CODESIZE SUB DUP1 PUSH2 0x570 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38D52E0F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH1 0x12 PUSH2 0x219 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH2 0x199 SWAP1 PUSH1 0xA PUSH2 0x33B JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH2 0x347 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D9 DUP2 PUSH2 0x1A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH2 0x236 PUSH2 0x203 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x250 PUSH2 0x203 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x290 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x276 JUMPI PUSH2 0x276 PUSH2 0x203 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x283 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x25A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A7 JUMPI POP PUSH1 0x1 PUSH2 0x335 JUMP JUMPDEST DUP2 PUSH2 0x2B4 JUMPI POP PUSH1 0x0 PUSH2 0x335 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2CA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2D4 JUMPI PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x335 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x203 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x335 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x313 JUMPI POP DUP2 DUP2 EXP PUSH2 0x335 JUMP JUMPDEST PUSH2 0x31D DUP4 DUP4 PUSH2 0x255 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0x203 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP4 DUP4 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1F9 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xB2 ADD MSTORE PUSH1 0xFC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE PUSH2 0x125 ADD MSTORE PUSH2 0x1F9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13511B5C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x71F29123 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x9F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7A2D13A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x7A2D13A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xAC SWAP4 GASPRICE SWAP7 0xD7 0x2E LOG3 SWAP11 REVERT DUP5 EXTCODESIZE SAR BYTE 0xB3 0xA8 0xEA PUSH7 0xAAC1AE2C252285 COINBASE 0xB1 PUSH11 0xE410605B64736F6C634300 ADDMOD SIGNEXTEND STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xBA LOG2 0xEA DUP16 0xC6 MSIZE 0xE4 CODESIZE XOR POP 0xBD SUB POP 0xED SWAP14 PUSH14 0x5DA45FC00AA207605C2BE83D50C5 0xE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "962:446:15:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_onCreate_1038": {
                  "entryPoint": 284,
                  "id": 1038,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@create_1439": {
                  "entryPoint": 193,
                  "id": 1439,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isRateProviderFromFactory_1022": {
                  "entryPoint": null,
                  "id": 1022,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IERC4626_$581": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ERC4626RateProvider_$1403__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC4626_$581__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 416,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1388:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:109:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:25"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "100:42:25",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:54:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:65:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "72:73:25"
                              },
                              "nodeType": "YulIf",
                              "src": "69:93:25"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48:5:25",
                            "type": ""
                          }
                        ],
                        "src": "14:154:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "243:177:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "289:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "298:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "301:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "291:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "291:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "291:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "264:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "273:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "260:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "260:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "285:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "253:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "314:36:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "327:12:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "327:23:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "318:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "384:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "359:24:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "359:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "359:31:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "399:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "409:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "209:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "220:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "232:6:25",
                            "type": ""
                          }
                        ],
                        "src": "173:247:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "520:92:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "530:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "553:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "538:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "538:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "530:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "572:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "597:6:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "590:6:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "590:14:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "583:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "583:22:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "565:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "565:41:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "565:41:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "489:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "500:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "511:4:25",
                            "type": ""
                          }
                        ],
                        "src": "425:187:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "703:177:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "749:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "758:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "761:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "751:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "751:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "751:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "724:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "733:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "720:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "720:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "745:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "716:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "716:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "713:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "774:36:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "800:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "787:12:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "787:23:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "778:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "844:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:24:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "819:31:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "819:31:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "859:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "869:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "859:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC4626_$581",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "669:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "680:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "692:6:25",
                            "type": ""
                          }
                        ],
                        "src": "617:263:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1014:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1024:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1036:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1047:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1032:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1032:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1024:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1066:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1089:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1077:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1077:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1059:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1059:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1059:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ERC4626RateProvider_$1403__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "983:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "994:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1005:4:25",
                            "type": ""
                          }
                        ],
                        "src": "885:254:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1261:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1271:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1283:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1294:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1279:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1271:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1313:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1328:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1336:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1324:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1324:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1306:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1306:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1306:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC4626_$581__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1230:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1241:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1252:4:25",
                            "type": ""
                          }
                        ],
                        "src": "1144:242:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_contract$_IERC4626_$581(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ERC4626RateProvider_$1403__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC4626_$581__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806319912f711461003b5780639ed9331814610089575b600080fd5b6100746100493660046101c5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61009c6100973660046101c5565b6100c1565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610080565b600080826040516100d190610193565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f08015801561010a573d6000803e3d6000fd5b5090506101168161011c565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f7a8e6b463d413484480a3a8120e5fb841491c52541ac3f649ac41d9b0d088aa69190a250565b610570806101ea83390190565b73ffffffffffffffffffffffffffffffffffffffff811681146101c257600080fd5b50565b6000602082840312156101d757600080fd5b81356101e2816101a0565b939250505056fe60c060405234801561001057600080fd5b5060405161057038038061057083398101604081905261002f916101bc565b806001600160a01b03166080816001600160a01b0316815250506000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ad91906101bc565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010e91906101e0565b60ff16905080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017691906101e0565b610181906012610219565b60ff1661018e919061023e565b61019990600a61033b565b60a052506103479050565b6001600160a01b03811681146101b957600080fd5b50565b6000602082840312156101ce57600080fd5b81516101d9816101a4565b9392505050565b6000602082840312156101f257600080fd5b815160ff811681146101d957600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561023657610236610203565b019392505050565b60008282101561025057610250610203565b500390565b600181815b8085111561029057816000190482111561027657610276610203565b8085161561028357918102915b93841c939080029061025a565b509250929050565b6000826102a757506001610335565b816102b457506000610335565b81600181146102ca57600281146102d4576102f0565b6001915050610335565b60ff8411156102e5576102e5610203565b50506001821b610335565b5060208310610133831016604e8410600b8410161715610313575081810a610335565b61031d8383610255565b806000190482111561033157610331610203565b0290505b92915050565b60006101d98383610298565b60805160a0516101f96103776000396000818160b2015260fc015260008181604b015261012501526101f96000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806313511b5c14610046578063679aefce1461009757806371f29123146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61009f7f000000000000000000000000000000000000000000000000000000000000000081565b6040517f07a2d13a0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307a2d13a90602401602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a591906101aa565b905090565b6000602082840312156101bc57600080fd5b505191905056fea264697066735822122091ac933a96d72ea39afd843b1d1ab3a8ea66aac1ae2c25228541b16ae410605b64736f6c634300080b0033a264697066735822122003baa2ea8fc659e4381850bd0350ed9d6d5da45fc00aa207605c2be83d50c50e64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19912F71 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9ED93318 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x80 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x7A8E6B463D413484480A3A8120E5FB841491C52541AC3F649AC41D9B0D088AA6 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x570 DUP1 PUSH2 0x1EA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E2 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x570 CODESIZE SUB DUP1 PUSH2 0x570 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1BC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38D52E0F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH1 0x12 PUSH2 0x219 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH2 0x199 SWAP1 PUSH1 0xA PUSH2 0x33B JUMP JUMPDEST PUSH1 0xA0 MSTORE POP PUSH2 0x347 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D9 DUP2 PUSH2 0x1A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH2 0x236 PUSH2 0x203 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x250 PUSH2 0x203 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x290 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x276 JUMPI PUSH2 0x276 PUSH2 0x203 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x283 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x25A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A7 JUMPI POP PUSH1 0x1 PUSH2 0x335 JUMP JUMPDEST DUP2 PUSH2 0x2B4 JUMPI POP PUSH1 0x0 PUSH2 0x335 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2CA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2D4 JUMPI PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x335 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x203 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x335 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x313 JUMPI POP DUP2 DUP2 EXP PUSH2 0x335 JUMP JUMPDEST PUSH2 0x31D DUP4 DUP4 PUSH2 0x255 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0x203 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9 DUP4 DUP4 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1F9 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xB2 ADD MSTORE PUSH1 0xFC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE PUSH2 0x125 ADD MSTORE PUSH2 0x1F9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13511B5C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x71F29123 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x9F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7A2D13A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x7A2D13A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xAC SWAP4 GASPRICE SWAP7 0xD7 0x2E LOG3 SWAP11 REVERT DUP5 EXTCODESIZE SAR BYTE 0xB3 0xA8 0xEA PUSH7 0xAAC1AE2C252285 COINBASE 0xB1 PUSH11 0xE410605B64736F6C634300 ADDMOD SIGNEXTEND STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xBA LOG2 0xEA DUP16 0xC6 MSIZE 0xE4 CODESIZE XOR POP 0xBD SUB POP 0xED SWAP14 PUSH14 0x5DA45FC00AA207605C2BE83D50C5 0xE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "962:446:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:150:8;;;;;;:::i;:::-;1300:40;;1277:4;1300:40;;;;;;;;;;;;;;1197:150;;;;590:14:25;;583:22;565:41;;553:2;538:18;1197:150:8;;;;;;;;1178:228:15;;;;;;:::i;:::-;;:::i;:::-;;;1089:42:25;1077:55;;;1059:74;;1047:2;1032:18;1178:228:15;885:254:25;1178:228:15;1230:19;1261:32;1320:7;1296:32;;;;;:::i;:::-;1089:42:25;1077:55;;;1059:74;;1047:2;1032:18;1296:32:15;;;;;;;;;;;;;;;;;;;;;;;1261:67;;1338:32;1356:12;1338:9;:32::i;:::-;1387:12;1178:228;-1:-1:-1;;1178:228:15:o;1353:162:8:-;1413:40;;;:26;:40;;;;;;;;;;;:47;;;;1456:4;1413:47;;;1475:33;;;1413:26;1475:33;1353:162;:::o;-1:-1:-1:-;;;;;;;;:::o;14:154:25:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:25:o"
            },
            "methodIdentifiers": {
              "create(address)": "9ed93318",
              "isRateProviderFromFactory(address)": "19912f71"
            }
          }
        }
      },
      "contracts/StaticATokenRateProvider.sol": {
        "StaticATokenRateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IStaticAToken",
                  "name": "_waToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "asset",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lendingPool",
              "outputs": [
                {
                  "internalType": "contract ILendingPool",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1471": {
                  "entryPoint": null,
                  "id": 1471,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_ILendingPool_$1564_fromMemory": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IStaticAToken_$1595_fromMemory": {
                  "entryPoint": 310,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_contract_IStaticAToken": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1018:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "74:86:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "138:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "147:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "140:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "140:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "140:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "97:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "108:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "123:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "128:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "119:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "119:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "132:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "115:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "115:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "104:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "104:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "94:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "94:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "87:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "87:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "84:70:25"
                            }
                          ]
                        },
                        "name": "validator_revert_contract_IStaticAToken",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "63:5:25",
                            "type": ""
                          }
                        ],
                        "src": "14:146:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "268:185:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "314:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "323:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "326:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "316:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "316:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "289:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "298:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "285:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "285:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "310:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "281:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "281:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "278:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "339:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "358:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "352:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "352:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "343:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "417:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IStaticAToken",
                                  "nodeType": "YulIdentifier",
                                  "src": "377:39:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "377:46:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "377:46:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "432:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "442:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "432:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IStaticAToken_$1595_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "234:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "245:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "257:6:25",
                            "type": ""
                          }
                        ],
                        "src": "165:288:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "560:185:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "606:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "615:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "618:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "608:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "608:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "608:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "581:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "590:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "577:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "577:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "573:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "573:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "570:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "631:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "650:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "644:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "644:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "635:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "709:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IStaticAToken",
                                  "nodeType": "YulIdentifier",
                                  "src": "669:39:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "669:46:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "669:46:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "724:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "734:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "724:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ILendingPool_$1564_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "526:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "537:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "549:6:25",
                            "type": ""
                          }
                        ],
                        "src": "458:287:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "831:185:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "877:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "886:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "889:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "879:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "879:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "879:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "852:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "861:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "848:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "848:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "873:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "844:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "841:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "902:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "921:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "915:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "906:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "980:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_contract_IStaticAToken",
                                  "nodeType": "YulIdentifier",
                                  "src": "940:39:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "940:46:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "940:46:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "995:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1005:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "995:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "797:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "808:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "820:6:25",
                            "type": ""
                          }
                        ],
                        "src": "750:266:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_contract_IStaticAToken(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IStaticAToken_$1595_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IStaticAToken(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ILendingPool_$1564_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IStaticAToken(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IStaticAToken(value)\n        value0 := value\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60c060405234801561001057600080fd5b506040516103d43803806103d483398101604081905261002f91610136565b806001600160a01b031663b4dcfc776040518163ffffffff1660e01b8152600401602060405180830381865afa15801561006d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100919190610136565b6001600160a01b03166080816001600160a01b031681525050806001600160a01b0316634800d97f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010c9190610136565b6001600160a01b031660a0525061015a565b6001600160a01b038116811461013357600080fd5b50565b60006020828403121561014857600080fd5b81516101538161011e565b9392505050565b60805160a05161024961018b60003960008181604b015261011101526000818160b2015261013e01526102496000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806338d52e0f14610046578063679aefce14610097578063a59a9973146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040517fd15e005300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063d15e005390602401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906101bf565b90506101b9633b9aca00826101d8565b91505090565b6000602082840312156101d157600080fd5b5051919050565b60008261020e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212207988c8166e1d680e506f6458dbba292d5305c81508a60cc3d814e5303fbd3d0c64736f6c634300080b0033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3D4 CODESIZE SUB DUP1 PUSH2 0x3D4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB4DCFC77 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4800D97F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MSTORE POP PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x153 DUP2 PUSH2 0x11E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x249 PUSH2 0x18B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE PUSH2 0x111 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xB2 ADD MSTORE PUSH2 0x13E ADD MSTORE PUSH2 0x249 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD15E005300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xD15E0053 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9 PUSH4 0x3B9ACA00 DUP3 PUSH2 0x1D8 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x88C8166E1D680E506F6458DBBA292D5305C81508A60CC3D814E5 ADDRESS EXTCODEHASH 0xBD RETURNDATASIZE 0xC PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "945:1054:16:-:0;;;1086:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1146:8;-1:-1:-1;;;;;1146:21:16;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1132:37:16;;;-1:-1:-1;;;;;1132:37:16;;;;;1187:8;-1:-1:-1;;;;;1187:14:16;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1179:24:16;;;-1:-1:-1;945:1054:16;;14:146:25;-1:-1:-1;;;;;104:31:25;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:288::-;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;358:9;352:16;377:46;417:5;377:46;:::i;:::-;442:5;165:288;-1:-1:-1;;;165:288:25:o;750:266::-;945:1054:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@asset_1452": {
                  "entryPoint": null,
                  "id": 1452,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getRate_1492": {
                  "entryPoint": 212,
                  "id": 1492,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@lendingPool_1450": {
                  "entryPoint": null,
                  "id": 1450,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 447,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ILendingPool_$1564__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 472,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1144:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "190:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:226:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "346:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "356:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "368:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "379:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "364:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "364:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "356:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "398:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "409:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "315:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "326:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "337:4:25",
                            "type": ""
                          }
                        ],
                        "src": "245:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "549:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "559:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "571:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "582:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "567:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "601:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "616:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "624:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "612:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "612:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "594:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "594:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "594:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ILendingPool_$1564__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "518:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "529:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "540:4:25",
                            "type": ""
                          }
                        ],
                        "src": "427:247:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "760:103:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "806:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "815:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "818:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "808:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "808:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "808:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "781:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "790:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "777:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "777:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "802:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "773:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "773:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "770:52:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "831:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "847:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "841:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "841:16:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "831:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "726:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "737:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "749:6:25",
                            "type": ""
                          }
                        ],
                        "src": "679:184:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "914:228:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "945:168:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "966:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "969:77:25",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "959:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "959:88:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "959:88:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1067:1:25",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1070:4:25",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1060:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1060:15:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1060:15:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1095:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1098:4:25",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1088:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1088:15:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1088:15:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "934:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "927:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "927:9:25"
                              },
                              "nodeType": "YulIf",
                              "src": "924:189:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1122:14:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1131:1:25"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1134:1:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "1127:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1127:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "1122:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "899:1:25",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "902:1:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "908:1:25",
                            "type": ""
                          }
                        ],
                        "src": "868:274:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ILendingPool_$1564__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1450": [
                  {
                    "length": 32,
                    "start": 178
                  },
                  {
                    "length": 32,
                    "start": 318
                  }
                ],
                "1452": [
                  {
                    "length": 32,
                    "start": 75
                  },
                  {
                    "length": 32,
                    "start": 273
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806338d52e0f14610046578063679aefce14610097578063a59a9973146100ad575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f6100d4565b60405190815260200161008e565b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040517fd15e005300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063d15e005390602401602060405180830381865afa158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906101bf565b90506101b9633b9aca00826101d8565b91505090565b6000602082840312156101d157600080fd5b5051919050565b60008261020e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212207988c8166e1d680e506f6458dbba292d5305c81508a60cc3d814e5303fbd3d0c64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD15E005300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xD15E0053 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9 PUSH4 0x3B9ACA00 DUP3 PUSH2 0x1D8 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x88C8166E1D680E506F6458DBBA292D5305C81508A60CC3D814E5 ADDRESS EXTCODEHASH 0xBD RETURNDATASIZE 0xC PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "945:1054:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:30;;;;;;;;190:42:25;178:55;;;160:74;;148:2;133:18;1049:30:16;;;;;;;;1313:684;;;:::i;:::-;;;391:25:25;;;379:2;364:18;1313:684:16;245:177:25;1002:41:16;;;;;1313:684;1770:45;;;;;:38;1809:5;178:55:25;;1770:45:16;;;160:74:25;-1:-1:-1;;;;1770:11:16;:38;;;;133:18:25;;1770:45:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1755:60;-1:-1:-1;1978:12:16;1985:5;1755:60;1978:12;:::i;:::-;1971:19;;;1313:684;:::o;679:184:25:-;749:6;802:2;790:9;781:7;777:23;773:32;770:52;;;818:1;815;808:12;770:52;-1:-1:-1;841:16:25;;679:184;-1:-1:-1;679:184:25:o;868:274::-;908:1;934;924:189;;969:77;966:1;959:88;1070:4;1067:1;1060:15;1098:4;1095:1;1088:15;924:189;-1:-1:-1;1127:9:25;;868:274::o"
            },
            "methodIdentifiers": {
              "asset()": "38d52e0f",
              "getRate()": "679aefce",
              "lendingPool()": "a59a9973"
            }
          }
        }
      },
      "contracts/WstETHRateProvider.sol": {
        "WstETHRateProvider": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IwstETH",
                  "name": "_wstETH",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wstETH",
              "outputs": [
                {
                  "internalType": "contract IwstETH",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1514": {
                  "entryPoint": null,
                  "id": 1514,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_contract$_IwstETH_$1615_fromMemory": {
                  "entryPoint": 64,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:322:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "111:209:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "157:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "166:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "169:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "159:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "159:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "159:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "141:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "128:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "128:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "153:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "124:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "124:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "121:52:25"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "182:29:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "201:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "195:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "195:16:25"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "186:5:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "274:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "283:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "276:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "276:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "276:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "233:5:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "244:5:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "259:3:25",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "264:1:25",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "255:3:25"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "255:11:25"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "268:1:25",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "251:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "251:19:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "240:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "240:31:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "230:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "230:42:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:50:25"
                              },
                              "nodeType": "YulIf",
                              "src": "220:70:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "299:15:25",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IwstETH_$1615_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "77:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "88:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "100:6:25",
                            "type": ""
                          }
                        ],
                        "src": "14:306:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IwstETH_$1615_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b5060405161021738038061021783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610187610090600039600081816040015260a601526101876000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634aa07e641461003b578063679aefce1461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100946100a2565b604051908152602001610083565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610138565b905090565b60006020828403121561014a57600080fd5b505191905056fea26469706673582212201a82a27c7a6f3798af5bba8153f17d73723f17007c83d1f6be68a3cee016e1d064736f6c634300080b0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x217 CODESIZE SUB DUP1 PUSH2 0x217 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x187 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x40 ADD MSTORE PUSH1 0xA6 ADD MSTORE PUSH2 0x187 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA07E64 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35FAF82 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DUP3 LOG2 PUSH29 0x7A6F3798AF5BBA8153F17D73723F17007C83D1F6BE68A3CEE016E1D064 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "893:334:17:-:0;;;982:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1021:16:17;;;893:334;;14:306:25;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:25;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:25:o;:::-;893:334:17;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getRate_1526": {
                  "entryPoint": 162,
                  "id": 1526,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@wstETH_1503": {
                  "entryPoint": null,
                  "id": 1503,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 312,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IwstETH_$1615__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:629:25",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:25",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "131:125:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "141:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "153:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "164:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "149:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "149:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "141:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "183:9:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "198:6:25"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "206:42:25",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "194:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "194:55:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "176:74:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "176:74:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IwstETH_$1615__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "100:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "111:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "122:4:25",
                            "type": ""
                          }
                        ],
                        "src": "14:242:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "362:76:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "372:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "384:9:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "395:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "380:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "380:18:25"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "372:4:25"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "414:9:25"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "425:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "407:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "407:25:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "407:25:25"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "331:9:25",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "342:6:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "353:4:25",
                            "type": ""
                          }
                        ],
                        "src": "261:177:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "524:103:25",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "570:16:25",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "579:1:25",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "582:1:25",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "572:6:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "572:12:25"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "572:12:25"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:7:25"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "554:9:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "541:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "541:23:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "566:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:32:25"
                              },
                              "nodeType": "YulIf",
                              "src": "534:52:25"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "595:26:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "611:9:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "605:16:25"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "490:9:25",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "501:7:25",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "513:6:25",
                            "type": ""
                          }
                        ],
                        "src": "443:184:25"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IwstETH_$1615__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
                  "id": 25,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1503": [
                  {
                    "length": 32,
                    "start": 64
                  },
                  {
                    "length": 32,
                    "start": 166
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80634aa07e641461003b578063679aefce1461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100946100a2565b604051908152602001610083565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610138565b905090565b60006020828403121561014a57600080fd5b505191905056fea26469706673582212201a82a27c7a6f3798af5bba8153f17d73723f17007c83d1f6be68a3cee016e1d064736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AA07E64 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35FAF82 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DUP3 LOG2 PUSH29 0x7A6F3798AF5BBA8153F17D73723F17007C83D1F6BE68A3CEE016E1D064 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
              "sourceMap": "893:334:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:31;;;;;;;;206:42:25;194:55;;;176:74;;164:2;149:18;944:31:17;;;;;;;;1119:106;;;:::i;:::-;;;407:25:25;;;395:2;380:18;1119:106:17;261:177:25;1119:106:17;1170:7;1196:6;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1189:29;;1119:106;:::o;443:184:25:-;513:6;566:2;554:9;545:7;541:23;537:32;534:52;;;582:1;579;572:12;534:52;-1:-1:-1;605:16:25;;443:184;-1:-1:-1;443:184:25:o"
            },
            "methodIdentifiers": {
              "getRate()": "679aefce",
              "wstETH()": "4aa07e64"
            }
          }
        }
      },
      "contracts/interfaces/IBaseRateProviderFactory.sol": {
        "IBaseRateProviderFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ],
              "name": "isRateProviderFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "isRateProviderFromFactory(address)": "19912f71"
            }
          }
        }
      },
      "contracts/interfaces/ICToken.sol": {
        "ICToken": {
          "abi": [
            {
              "inputs": [],
              "name": "exchangeRateStored",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isCToken",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "exchangeRateStored()": "182df0f5",
              "isCToken()": "fe9c44ae"
            }
          }
        }
      },
      "contracts/interfaces/ILendingPool.sol": {
        "ILendingPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                }
              ],
              "name": "getReserveNormalizedIncome",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getReserveNormalizedIncome(address)": "d15e0053"
            }
          }
        }
      },
      "contracts/interfaces/IRateProvider.sol": {
        "IRateProvider": {
          "abi": [
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getRate()": "679aefce"
            }
          }
        }
      },
      "contracts/interfaces/IStaticAToken.sol": {
        "IStaticAToken": {
          "abi": [
            {
              "inputs": [],
              "name": "ASSET",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "LENDING_POOL",
              "outputs": [
                {
                  "internalType": "contract ILendingPool",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "ASSET()": "4800d97f",
              "LENDING_POOL()": "b4dcfc77",
              "rate()": "2c4e722e"
            }
          }
        }
      },
      "contracts/interfaces/IwBETH.sol": {
        "IwBETH": {
          "abi": [
            {
              "inputs": [],
              "name": "exchangeRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "exchangeRate()": "3ba0b9a9"
            }
          }
        }
      },
      "contracts/interfaces/IwstETH.sol": {
        "IwstETH": {
          "abi": [
            {
              "inputs": [],
              "name": "stEthPerToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "stEthPerToken()": "035faf82"
            }
          }
        }
      }
    },
    "sources": {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
          "exportedSymbols": {
            "AggregatorInterface": [
              47
            ]
          },
          "id": 48,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AggregatorInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 47,
              "linearizedBaseContracts": [
                47
              ],
              "name": "AggregatorInterface",
              "nameLocation": "67:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "50d25bcd",
                  "id": 6,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestAnswer",
                  "nameLocation": "100:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "112:2:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 6,
                        "src": "157:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "157:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "149:20:0"
                  },
                  "scope": 47,
                  "src": "91:79:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8205bf6a",
                  "id": 11,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestTimestamp",
                  "nameLocation": "185:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "200:2:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "245:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:21:0"
                  },
                  "scope": 47,
                  "src": "176:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "668a0f02",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRound",
                  "nameLocation": "272:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "283:2:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "328:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "328:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "320:21:0"
                  },
                  "scope": 47,
                  "src": "263:79:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b5ab58dc",
                  "id": 23,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAnswer",
                  "nameLocation": "355:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "378:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "370:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "370:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "364:25:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "432:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "432:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "424:20:0"
                  },
                  "scope": 47,
                  "src": "346:99:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b633620c",
                  "id": 30,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimestamp",
                  "nameLocation": "458:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "484:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "476:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "476:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "470:25:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "538:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "538:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "530:21:0"
                  },
                  "scope": 47,
                  "src": "449:103:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 38,
                  "name": "AnswerUpdated",
                  "nameLocation": "562:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "current",
                        "nameLocation": "596:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "581:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "581:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 34,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "625:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "609:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "609:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "646:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "638:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "575:84:0"
                  },
                  "src": "556:104:0"
                },
                {
                  "anonymous": false,
                  "id": 46,
                  "name": "NewRound",
                  "nameLocation": "670:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "700:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "684:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "startedBy",
                        "nameLocation": "729:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "713:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "713:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 44,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "752:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "744:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "744:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:87:0"
                  },
                  "src": "664:102:0"
                }
              ],
              "scope": 48,
              "src": "57:711:0",
              "usedErrors": []
            }
          ],
          "src": "32:737:0"
        },
        "id": 0
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
          "exportedSymbols": {
            "AggregatorInterface": [
              47
            ],
            "AggregatorV2V3Interface": [
              56
            ],
            "AggregatorV3Interface": [
              102
            ]
          },
          "id": 57,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 49,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol",
              "file": "./AggregatorInterface.sol",
              "id": 50,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 57,
              "sourceUnit": 48,
              "src": "57:35:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "file": "./AggregatorV3Interface.sol",
              "id": 51,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 57,
              "sourceUnit": 103,
              "src": "93:37:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 52,
                    "name": "AggregatorInterface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47,
                    "src": "169:19:1"
                  },
                  "id": 53,
                  "nodeType": "InheritanceSpecifier",
                  "src": "169:19:1"
                },
                {
                  "baseName": {
                    "id": 54,
                    "name": "AggregatorV3Interface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 102,
                    "src": "190:21:1"
                  },
                  "id": 55,
                  "nodeType": "InheritanceSpecifier",
                  "src": "190:21:1"
                }
              ],
              "canonicalName": "AggregatorV2V3Interface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 56,
              "linearizedBaseContracts": [
                56,
                102,
                47
              ],
              "name": "AggregatorV2V3Interface",
              "nameLocation": "142:23:1",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 57,
              "src": "132:83:1",
              "usedErrors": []
            }
          ],
          "src": "32:184:1"
        },
        "id": 1
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              102
            ]
          },
          "id": 103,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 58,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AggregatorV3Interface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 102,
              "linearizedBaseContracts": [
                102
              ],
              "name": "AggregatorV3Interface",
              "nameLocation": "67:21:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 63,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "103:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "111:2:2"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "156:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "156:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "148:19:2"
                  },
                  "scope": 102,
                  "src": "94:74:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7284e416",
                  "id": 68,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "description",
                  "nameLocation": "181:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:2:2"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "237:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "237:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "229:27:2"
                  },
                  "scope": 102,
                  "src": "172:85:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "54fd4d50",
                  "id": 73,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "270:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "277:2:2"
                  },
                  "returnParameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "322:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "322:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:21:2"
                  },
                  "scope": 102,
                  "src": "261:75:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9a6fc8f5",
                  "id": 88,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundData",
                  "nameLocation": "560:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "_roundId",
                        "nameLocation": "585:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "578:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "578:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:25:2"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "647:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "640:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "669:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "662:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "691:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "683:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "716:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "708:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "740:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "733:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "632:129:2"
                  },
                  "scope": 102,
                  "src": "551:211:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 101,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "775:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "790:2:2"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "842:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "835:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "835:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "864:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "857:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "857:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "886:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "878:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "911:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "903:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "935:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "928:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "928:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:129:2"
                  },
                  "scope": 102,
                  "src": "766:191:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 103,
              "src": "57:903:2",
              "usedErrors": []
            }
          ],
          "src": "32:929:2"
        },
        "id": 2
      },
      "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
          "exportedSymbols": {
            "AggregatorInterface": [
              47
            ],
            "AggregatorV2V3Interface": [
              56
            ],
            "AggregatorV3Interface": [
              102
            ],
            "FeedRegistryInterface": [
              413
            ]
          },
          "id": 414,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 104,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:3"
            },
            {
              "id": 105,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "56:19:3"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol",
              "file": "./AggregatorV2V3Interface.sol",
              "id": 106,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 414,
              "sourceUnit": 57,
              "src": "77:39:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "FeedRegistryInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 413,
              "linearizedBaseContracts": [
                413
              ],
              "name": "FeedRegistryInterface",
              "nameLocation": "128:21:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "FeedRegistryInterface.Phase",
                  "id": 113,
                  "members": [
                    {
                      "constant": false,
                      "id": 108,
                      "mutability": "mutable",
                      "name": "phaseId",
                      "nameLocation": "180:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "173:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "173:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "startingAggregatorRoundId",
                      "nameLocation": "200:25:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "193:32:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 109,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "193:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "endingAggregatorRoundId",
                      "nameLocation": "238:23:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "231:30:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "231:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Phase",
                  "nameLocation": "161:5:3",
                  "nodeType": "StructDefinition",
                  "scope": 413,
                  "src": "154:112:3",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 125,
                  "name": "FeedProposed",
                  "nameLocation": "276:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "310:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "294:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "294:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 117,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "denomination",
                        "nameLocation": "337:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "321:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "321:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 119,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposedAggregator",
                        "nameLocation": "371:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "355:34:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "355:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 121,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "currentAggregator",
                        "nameLocation": "403:17:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "395:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "395:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 123,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "434:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "426:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "288:156:3"
                  },
                  "src": "270:175:3"
                },
                {
                  "anonymous": false,
                  "id": 139,
                  "name": "FeedConfirmed",
                  "nameLocation": "454:13:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "489:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "473:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "denomination",
                        "nameLocation": "516:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "500:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "500:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "latestAggregator",
                        "nameLocation": "550:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "534:32:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "534:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousAggregator",
                        "nameLocation": "580:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "572:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "572:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 135,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nextPhaseId",
                        "nameLocation": "611:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "604:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "604:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 137,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "636:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "628:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "628:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "467:179:3"
                  },
                  "src": "448:199:3"
                },
                {
                  "functionSelector": "58e2d3a8",
                  "id": 148,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "713:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "705:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 143,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "731:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "723:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "699:41:3"
                  },
                  "returnParameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "783:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "783:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "775:19:3"
                  },
                  "scope": 413,
                  "src": "682:113:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fa820de9",
                  "id": 157,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "description",
                  "nameLocation": "808:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "833:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "825:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "825:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "851:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "843:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "843:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:41:3"
                  },
                  "returnParameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "903:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "895:27:3"
                  },
                  "scope": 413,
                  "src": "799:124:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "af34b03a",
                  "id": 166,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "936:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "957:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "949:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "975:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "967:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "943:41:3"
                  },
                  "returnParameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1027:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:21:3"
                  },
                  "scope": 413,
                  "src": "927:114:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bcfd032d",
                  "id": 183,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "1054:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1083:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1075:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "1101:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1093:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1093:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1069:41:3"
                  },
                  "returnParameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "1160:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1153:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "1153:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "1182:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1175:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1175:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "1204:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1196:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1196:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "1229:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1221:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "1253:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1246:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "1246:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1145:129:3"
                  },
                  "scope": 413,
                  "src": "1045:230:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fc58749e",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundData",
                  "nameLocation": "1288:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1314:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1306:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1306:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "1332:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1324:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1324:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "_roundId",
                        "nameLocation": "1350:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1343:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "1343:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1300:62:3"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "1412:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1405:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "1405:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "1434:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1427:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1427:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "1456:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1448:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1448:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "1481:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1473:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1473:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "1505:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1498:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "1498:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1397:129:3"
                  },
                  "scope": 413,
                  "src": "1279:248:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d4c282a3",
                  "id": 211,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestAnswer",
                  "nameLocation": "1569:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1595:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "1587:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1587:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "1613:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "1605:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1605:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1581:41:3"
                  },
                  "returnParameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "1672:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "1665:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1665:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1657:27:3"
                  },
                  "scope": 413,
                  "src": "1560:125:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "672ff44f",
                  "id": 220,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestTimestamp",
                  "nameLocation": "1698:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1727:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "1719:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1719:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "1745:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "1737:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1737:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1713:41:3"
                  },
                  "returnParameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1805:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 220,
                        "src": "1797:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1797:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1789:31:3"
                  },
                  "scope": 413,
                  "src": "1689:132:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ec62f44b",
                  "id": 229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRound",
                  "nameLocation": "1834:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1859:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "1851:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "1877:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "1869:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1869:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1845:41:3"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "1937:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "1929:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1929:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1921:29:3"
                  },
                  "scope": 413,
                  "src": "1825:126:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "15cd4ad2",
                  "id": 240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAnswer",
                  "nameLocation": "1964:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "1987:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "1979:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1979:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "2005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "1997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1997:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "2024:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "2016:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2016:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1973:62:3"
                  },
                  "returnParameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "2085:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "2078:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2078:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2070:27:3"
                  },
                  "scope": 413,
                  "src": "1955:143:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "91624c95",
                  "id": 251,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimestamp",
                  "nameLocation": "2111:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "2137:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2129:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2129:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "2155:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2147:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2147:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "2174:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2166:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2166:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2123:62:3"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2236:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2228:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2228:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2220:31:3"
                  },
                  "scope": 413,
                  "src": "2102:150:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d2edb6dd",
                  "id": 261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeed",
                  "nameLocation": "2288:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "2309:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "2301:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2301:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "2327:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "2319:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2295:41:3"
                  },
                  "returnParameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "aggregator",
                        "nameLocation": "2403:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "2379:34:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                          "typeString": "contract AggregatorV2V3Interface"
                        },
                        "typeName": {
                          "id": 258,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 257,
                            "name": "AggregatorV2V3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56,
                            "src": "2379:23:3"
                          },
                          "referencedDeclaration": 56,
                          "src": "2379:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                            "typeString": "contract AggregatorV2V3Interface"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2371:48:3"
                  },
                  "scope": 413,
                  "src": "2279:141:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "52dbeb8b",
                  "id": 273,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPhaseFeed",
                  "nameLocation": "2433:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "2459:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "2451:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "2477:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "2469:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "phaseId",
                        "nameLocation": "2495:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "2488:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2488:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2445:61:3"
                  },
                  "returnParameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "aggregator",
                        "nameLocation": "2573:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "2549:34:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                          "typeString": "contract AggregatorV2V3Interface"
                        },
                        "typeName": {
                          "id": 270,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 269,
                            "name": "AggregatorV2V3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56,
                            "src": "2549:23:3"
                          },
                          "referencedDeclaration": 56,
                          "src": "2549:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                            "typeString": "contract AggregatorV2V3Interface"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2541:48:3"
                  },
                  "scope": 413,
                  "src": "2424:166:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b099d43b",
                  "id": 280,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isFeedEnabled",
                  "nameLocation": "2603:13:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "aggregator",
                        "nameLocation": "2630:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "2622:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2622:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2616:28:3"
                  },
                  "returnParameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "2687:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2687:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2679:18:3"
                  },
                  "scope": 413,
                  "src": "2594:104:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ff0601c0",
                  "id": 292,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPhase",
                  "nameLocation": "2711:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 282,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "2733:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "2725:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 284,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "2751:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "2743:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "phaseId",
                        "nameLocation": "2769:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "2762:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2719:61:3"
                  },
                  "returnParameters": {
                    "id": 291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "phase",
                        "nameLocation": "2836:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "2823:18:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Phase_$113_memory_ptr",
                          "typeString": "struct FeedRegistryInterface.Phase"
                        },
                        "typeName": {
                          "id": 289,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 288,
                            "name": "Phase",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 113,
                            "src": "2823:5:3"
                          },
                          "referencedDeclaration": 113,
                          "src": "2823:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Phase_$113_storage_ptr",
                            "typeString": "struct FeedRegistryInterface.Phase"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2815:32:3"
                  },
                  "scope": 413,
                  "src": "2702:146:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c639cd91",
                  "id": 304,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundFeed",
                  "nameLocation": "2881:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "2907:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "2899:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2899:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "2925:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "2917:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2917:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "2943:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "2936:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "2936:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2893:61:3"
                  },
                  "returnParameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "aggregator",
                        "nameLocation": "3021:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "2997:34:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                          "typeString": "contract AggregatorV2V3Interface"
                        },
                        "typeName": {
                          "id": 301,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 300,
                            "name": "AggregatorV2V3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56,
                            "src": "2997:23:3"
                          },
                          "referencedDeclaration": 56,
                          "src": "2997:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                            "typeString": "contract AggregatorV2V3Interface"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2989:48:3"
                  },
                  "scope": 413,
                  "src": "2872:166:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c1ce86fc",
                  "id": 317,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPhaseRange",
                  "nameLocation": "3051:13:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3078:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3070:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3070:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "3096:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3088:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3088:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "phaseId",
                        "nameLocation": "3114:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3107:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3107:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3064:61:3"
                  },
                  "returnParameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "startingRoundId",
                        "nameLocation": "3175:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3168:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3168:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "endingRoundId",
                        "nameLocation": "3205:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "3198:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3198:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3160:64:3"
                  },
                  "scope": 413,
                  "src": "3042:183:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9e3ff6fd",
                  "id": 328,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPreviousRoundId",
                  "nameLocation": "3238:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3270:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "3262:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "3288:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "3280:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3280:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "3306:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "3299:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3299:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3256:61:3"
                  },
                  "returnParameters": {
                    "id": 327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "previousRoundId",
                        "nameLocation": "3363:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "3356:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3356:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3348:36:3"
                  },
                  "scope": 413,
                  "src": "3229:156:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a051538e",
                  "id": 339,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNextRoundId",
                  "nameLocation": "3398:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3426:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "3418:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3418:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "3444:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "3436:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "3462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "3455:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3455:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3412:61:3"
                  },
                  "returnParameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "nextRoundId",
                        "nameLocation": "3519:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "3512:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "3512:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3504:32:3"
                  },
                  "scope": 413,
                  "src": "3389:148:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9eed82b0",
                  "id": 348,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposeFeed",
                  "nameLocation": "3572:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3597:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "3589:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3589:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "3615:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "3607:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3607:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "aggregator",
                        "nameLocation": "3634:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "3626:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3626:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3583:65:3"
                  },
                  "returnParameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3657:0:3"
                  },
                  "scope": 413,
                  "src": "3563:95:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "045abf4b",
                  "id": 357,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "confirmFeed",
                  "nameLocation": "3671:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3696:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3688:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3688:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "3714:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3706:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3706:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "aggregator",
                        "nameLocation": "3733:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3725:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3682:65:3"
                  },
                  "returnParameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3756:0:3"
                  },
                  "scope": 413,
                  "src": "3662:95:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5ad9d9df",
                  "id": 367,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProposedFeed",
                  "nameLocation": "3796:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3825:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "3817:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3817:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "3843:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "3835:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3835:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3811:41:3"
                  },
                  "returnParameters": {
                    "id": 366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 365,
                        "mutability": "mutable",
                        "name": "proposedAggregator",
                        "nameLocation": "3919:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "3895:42:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                          "typeString": "contract AggregatorV2V3Interface"
                        },
                        "typeName": {
                          "id": 364,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 363,
                            "name": "AggregatorV2V3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56,
                            "src": "3895:23:3"
                          },
                          "referencedDeclaration": 56,
                          "src": "3895:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                            "typeString": "contract AggregatorV2V3Interface"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3887:56:3"
                  },
                  "scope": 413,
                  "src": "3787:157:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8916524a",
                  "id": 386,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposedGetRoundData",
                  "nameLocation": "3957:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "3991:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "3983:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3983:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "4009:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4001:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4001:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "4027:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4020:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4020:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3977:61:3"
                  },
                  "returnParameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "4088:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4081:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4081:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "4105:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4098:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4098:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "4127:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4119:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "4152:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4144:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4144:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "4176:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "4169:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4169:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4073:124:3"
                  },
                  "scope": 413,
                  "src": "3948:250:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d0188fc6",
                  "id": 403,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposedLatestRoundData",
                  "nameLocation": "4211:23:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "4248:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4240:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4240:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "4266:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4258:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4234:41:3"
                  },
                  "returnParameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "4325:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4318:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4318:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "4342:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4335:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4335:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "4364:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4356:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4356:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "4389:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4381:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4381:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "4413:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "4406:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4310:124:3"
                  },
                  "scope": 413,
                  "src": "4202:233:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "30322818",
                  "id": 412,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentPhaseId",
                  "nameLocation": "4460:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "base",
                        "nameLocation": "4491:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "4483:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4483:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "quote",
                        "nameLocation": "4509:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "4501:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4501:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4477:41:3"
                  },
                  "returnParameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "currentPhaseId",
                        "nameLocation": "4568:14:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "4561:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4561:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4553:35:3"
                  },
                  "scope": 413,
                  "src": "4451:138:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 414,
              "src": "118:4473:3",
              "usedErrors": []
            }
          ],
          "src": "32:4560:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC4626.sol",
          "exportedSymbols": {
            "IERC20": [
              659
            ],
            "IERC20Metadata": [
              684
            ],
            "IERC4626": [
              581
            ]
          },
          "id": 582,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 415,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 416,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 582,
              "sourceUnit": 660,
              "src": "132:35:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "../token/ERC20/extensions/IERC20Metadata.sol",
              "id": 417,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 582,
              "sourceUnit": 685,
              "src": "168:54:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 419,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 659,
                    "src": "413:6:4"
                  },
                  "id": 420,
                  "nodeType": "InheritanceSpecifier",
                  "src": "413:6:4"
                },
                {
                  "baseName": {
                    "id": 421,
                    "name": "IERC20Metadata",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 684,
                    "src": "421:14:4"
                  },
                  "id": 422,
                  "nodeType": "InheritanceSpecifier",
                  "src": "421:14:4"
                }
              ],
              "canonicalName": "IERC4626",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 418,
                "nodeType": "StructuredDocumentation",
                "src": "224:166:4",
                "text": " @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n _Available since v4.7._"
              },
              "fullyImplemented": false,
              "id": 581,
              "linearizedBaseContracts": [
                581,
                684,
                659
              ],
              "name": "IERC4626",
              "nameLocation": "401:8:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 432,
                  "name": "Deposit",
                  "nameLocation": "448:7:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "472:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "456:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "456:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 426,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "496:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "480:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 425,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "480:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 428,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "511:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "503:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "503:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "527:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "519:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "519:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "455:79:4"
                  },
                  "src": "442:93:4"
                },
                {
                  "anonymous": false,
                  "id": 444,
                  "name": "Withdraw",
                  "nameLocation": "547:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "581:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "565:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "613:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "597:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "597:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "647:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "631:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "631:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "670:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "662:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 442,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "694:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "686:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "555:151:4"
                  },
                  "src": "541:166:4"
                },
                {
                  "documentation": {
                    "id": 445,
                    "nodeType": "StructuredDocumentation",
                    "src": "713:207:4",
                    "text": " @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."
                  },
                  "functionSelector": "38d52e0f",
                  "id": 450,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "asset",
                  "nameLocation": "934:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "939:2:4"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "assetTokenAddress",
                        "nameLocation": "973:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "965:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "965:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "964:27:4"
                  },
                  "scope": 581,
                  "src": "925:67:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "998:286:4",
                    "text": " @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."
                  },
                  "functionSelector": "01e1d114",
                  "id": 456,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalAssets",
                  "nameLocation": "1298:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1309:2:4"
                  },
                  "returnParameters": {
                    "id": 455,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 454,
                        "mutability": "mutable",
                        "name": "totalManagedAssets",
                        "nameLocation": "1343:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1335:26:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 453,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1335:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1334:28:4"
                  },
                  "scope": 581,
                  "src": "1289:74:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 457,
                    "nodeType": "StructuredDocumentation",
                    "src": "1369:720:4",
                    "text": " @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."
                  },
                  "functionSelector": "c6e6f592",
                  "id": 464,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "convertToShares",
                  "nameLocation": "2103:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "2127:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2119:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2118:16:4"
                  },
                  "returnParameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 462,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "2166:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "2158:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2158:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2157:16:4"
                  },
                  "scope": 581,
                  "src": "2094:80:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 465,
                    "nodeType": "StructuredDocumentation",
                    "src": "2180:720:4",
                    "text": " @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."
                  },
                  "functionSelector": "07a2d13a",
                  "id": 472,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "convertToAssets",
                  "nameLocation": "2914:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 467,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "2938:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "2930:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2930:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2929:16:4"
                  },
                  "returnParameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "2977:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 472,
                        "src": "2969:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2969:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2968:16:4"
                  },
                  "scope": 581,
                  "src": "2905:80:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 473,
                    "nodeType": "StructuredDocumentation",
                    "src": "2991:386:4",
                    "text": " @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."
                  },
                  "functionSelector": "402d267d",
                  "id": 480,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxDeposit",
                  "nameLocation": "3391:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3410:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "3402:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3402:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3401:18:4"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "maxAssets",
                        "nameLocation": "3451:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "3443:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3443:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3442:19:4"
                  },
                  "scope": 581,
                  "src": "3382:80:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "3468:1012:4",
                    "text": " @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."
                  },
                  "functionSelector": "ef8b30f7",
                  "id": 488,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "previewDeposit",
                  "nameLocation": "4494:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "4517:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "4509:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4509:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4508:16:4"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 486,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "4556:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "4548:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4548:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4547:16:4"
                  },
                  "scope": 581,
                  "src": "4485:79:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 489,
                    "nodeType": "StructuredDocumentation",
                    "src": "4570:651:4",
                    "text": " @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
                  },
                  "functionSelector": "6e553f65",
                  "id": 498,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "5235:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "5251:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "5243:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5243:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5267:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "5259:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5259:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5242:34:4"
                  },
                  "returnParameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "5303:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "5295:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5295:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5294:16:4"
                  },
                  "scope": 581,
                  "src": "5226:85:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "5317:341:4",
                    "text": " @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."
                  },
                  "functionSelector": "c63d75b6",
                  "id": 506,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxMint",
                  "nameLocation": "5672:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5688:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "5680:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5680:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5679:18:4"
                  },
                  "returnParameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "maxShares",
                        "nameLocation": "5729:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "5721:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:19:4"
                  },
                  "scope": 581,
                  "src": "5663:77:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 507,
                    "nodeType": "StructuredDocumentation",
                    "src": "5746:984:4",
                    "text": " @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."
                  },
                  "functionSelector": "b3d7f6b9",
                  "id": 514,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "previewMint",
                  "nameLocation": "6744:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "6764:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6756:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6756:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6755:16:4"
                  },
                  "returnParameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "6803:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6795:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6795:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6794:16:4"
                  },
                  "scope": 581,
                  "src": "6735:76:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 515,
                    "nodeType": "StructuredDocumentation",
                    "src": "6817:642:4",
                    "text": " @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
                  },
                  "functionSelector": "94bf804d",
                  "id": 524,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "7473:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "7486:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7478:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7478:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "7502:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7494:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7494:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7477:34:4"
                  },
                  "returnParameters": {
                    "id": 523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "7538:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7530:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7530:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7529:16:4"
                  },
                  "scope": 581,
                  "src": "7464:82:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "7552:293:4",
                    "text": " @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."
                  },
                  "functionSelector": "ce96cb77",
                  "id": 532,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxWithdraw",
                  "nameLocation": "7859:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "7879:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "7871:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7871:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7870:15:4"
                  },
                  "returnParameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "maxAssets",
                        "nameLocation": "7917:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 532,
                        "src": "7909:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7909:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7908:19:4"
                  },
                  "scope": 581,
                  "src": "7850:78:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 533,
                    "nodeType": "StructuredDocumentation",
                    "src": "7934:1034:4",
                    "text": " @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."
                  },
                  "functionSelector": "0a28a477",
                  "id": 540,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "previewWithdraw",
                  "nameLocation": "8982:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "9006:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "8998:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8998:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8997:16:4"
                  },
                  "returnParameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "9045:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "9037:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9037:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9036:16:4"
                  },
                  "scope": 581,
                  "src": "8973:80:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 541,
                    "nodeType": "StructuredDocumentation",
                    "src": "9059:670:4",
                    "text": " @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."
                  },
                  "functionSelector": "b460af94",
                  "id": 552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "9743:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "9760:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "9752:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9752:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "9776:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "9768:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9768:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9794:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "9786:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9786:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9751:49:4"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "9827:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "9819:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9819:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9818:16:4"
                  },
                  "scope": 581,
                  "src": "9734:101:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 553,
                    "nodeType": "StructuredDocumentation",
                    "src": "9841:381:4",
                    "text": " @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."
                  },
                  "functionSelector": "d905777e",
                  "id": 560,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxRedeem",
                  "nameLocation": "10236:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10254:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 560,
                        "src": "10246:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10246:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10245:15:4"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "mutability": "mutable",
                        "name": "maxShares",
                        "nameLocation": "10292:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 560,
                        "src": "10284:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10284:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10283:19:4"
                  },
                  "scope": 581,
                  "src": "10227:76:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 561,
                    "nodeType": "StructuredDocumentation",
                    "src": "10309:1010:4",
                    "text": " @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."
                  },
                  "functionSelector": "4cdad506",
                  "id": 568,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "previewRedeem",
                  "nameLocation": "11333:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 563,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "11355:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "11347:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11347:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11346:16:4"
                  },
                  "returnParameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 566,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "11394:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "11386:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11386:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11385:16:4"
                  },
                  "scope": 581,
                  "src": "11324:78:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 569,
                    "nodeType": "StructuredDocumentation",
                    "src": "11408:661:4",
                    "text": " @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."
                  },
                  "functionSelector": "ba087652",
                  "id": 580,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "redeem",
                  "nameLocation": "12083:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "shares",
                        "nameLocation": "12098:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "12090:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12090:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "12114:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "12106:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12106:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "12132:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "12124:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12124:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12089:49:4"
                  },
                  "returnParameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "assets",
                        "nameLocation": "12165:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "12157:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12157:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12156:16:4"
                  },
                  "scope": 581,
                  "src": "12074:99:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 582,
              "src": "391:11784:4",
              "usedErrors": []
            }
          ],
          "src": "107:12069:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              659
            ]
          },
          "id": 660,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 583,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 584,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:5",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 659,
              "linearizedBaseContracts": [
                659
              ],
              "name": "IERC20",
              "nameLocation": "212:6:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 585,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:5",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 593,
                  "name": "Transfer",
                  "nameLocation": "394:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "403:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 589,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "425:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 591,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "445:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:5"
                  },
                  "src": "388:72:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 594,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:5",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 602,
                  "name": "Approval",
                  "nameLocation": "625:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "634:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 598,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "657:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 600,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "682:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:5"
                  },
                  "src": "619:78:5"
                },
                {
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:5",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 608,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:5"
                  },
                  "returnParameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "820:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:5"
                  },
                  "scope": 659,
                  "src": "774:55:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 609,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:5",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 616,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "931:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:5"
                  },
                  "returnParameters": {
                    "id": 615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 614,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "971:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 613,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:5"
                  },
                  "scope": 659,
                  "src": "912:68:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:5",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 626,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "1211:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "1223:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:5"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "1257:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:5"
                  },
                  "scope": 659,
                  "src": "1193:70:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 627,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:5",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 636,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "1557:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "1572:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:5"
                  },
                  "returnParameters": {
                    "id": 635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "1612:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:5"
                  },
                  "scope": 659,
                  "src": "1538:83:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 637,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:5",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 646,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "2291:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "2308:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:5"
                  },
                  "returnParameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "2342:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:5"
                  },
                  "scope": 659,
                  "src": "2274:74:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 647,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:5",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 658,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2676:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "2668:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 651,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2690:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "2682:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2702:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "2694:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2694:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:42:5"
                  },
                  "returnParameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 656,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "2728:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 655,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2727:6:5"
                  },
                  "scope": 659,
                  "src": "2646:88:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 660,
              "src": "202:2534:5",
              "usedErrors": []
            }
          ],
          "src": "106:2631:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              659
            ],
            "IERC20Metadata": [
              684
            ]
          },
          "id": 685,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 661,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 662,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 685,
              "sourceUnit": 660,
              "src": "135:23:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 664,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 659,
                    "src": "305:6:6"
                  },
                  "id": 665,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 663,
                "nodeType": "StructuredDocumentation",
                "src": "160:116:6",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
              },
              "fullyImplemented": false,
              "id": 684,
              "linearizedBaseContracts": [
                684,
                659
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 666,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 671,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 667,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:6"
                  },
                  "returnParameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "416:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:6"
                  },
                  "scope": 684,
                  "src": "377:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 672,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 677,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 673,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:6"
                  },
                  "returnParameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 677,
                        "src": "539:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:6"
                  },
                  "scope": 684,
                  "src": "498:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 678,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 683,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:6"
                  },
                  "returnParameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "673:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:6"
                  },
                  "scope": 684,
                  "src": "630:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 685,
              "src": "277:405:6",
              "usedErrors": []
            }
          ],
          "src": "110:573:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              996
            ]
          },
          "id": 997,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 686,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 687,
                "nodeType": "StructuredDocumentation",
                "src": "285:196:7",
                "text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
              },
              "fullyImplemented": true,
              "id": 996,
              "linearizedBaseContracts": [
                996
              ],
              "name": "SafeMath",
              "nameLocation": "490:8:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "717:140:7",
                    "statements": [
                      {
                        "id": 717,
                        "nodeType": "UncheckedBlock",
                        "src": "727:124:7",
                        "statements": [
                          {
                            "assignments": [
                              700
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 700,
                                "mutability": "mutable",
                                "name": "c",
                                "nameLocation": "759:1:7",
                                "nodeType": "VariableDeclaration",
                                "scope": 717,
                                "src": "751:9:7",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 699,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "751:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 704,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 701,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "763:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 702,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 692,
                                "src": "767:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "763:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "751:17:7"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 705,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 700,
                                "src": "786:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 706,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "790:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "786:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 712,
                            "nodeType": "IfStatement",
                            "src": "782:28:7",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 708,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "801:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "808:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 710,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "800:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 698,
                              "id": 711,
                              "nodeType": "Return",
                              "src": "793:17:7"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "832:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 714,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 700,
                                  "src": "838:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 715,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "831:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 698,
                            "id": 716,
                            "nodeType": "Return",
                            "src": "824:16:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 688,
                    "nodeType": "StructuredDocumentation",
                    "src": "505:131:7",
                    "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 719,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryAdd",
                  "nameLocation": "650:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "665:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "657:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 692,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "676:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "668:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "656:22:7"
                  },
                  "returnParameters": {
                    "id": 698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "702:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "702:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "708:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "701:15:7"
                  },
                  "scope": 996,
                  "src": "641:216:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 746,
                    "nodeType": "Block",
                    "src": "1078:113:7",
                    "statements": [
                      {
                        "id": 745,
                        "nodeType": "UncheckedBlock",
                        "src": "1088:97:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 731,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "1116:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 732,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 722,
                                "src": "1120:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1116:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 738,
                            "nodeType": "IfStatement",
                            "src": "1112:28:7",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1131:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 735,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1138:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 736,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1130:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 730,
                              "id": 737,
                              "nodeType": "Return",
                              "src": "1123:17:7"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1162:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 740,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "1168:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 741,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 724,
                                    "src": "1172:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1168:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 743,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1161:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 730,
                            "id": 744,
                            "nodeType": "Return",
                            "src": "1154:20:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 720,
                    "nodeType": "StructuredDocumentation",
                    "src": "863:134:7",
                    "text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 747,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySub",
                  "nameLocation": "1011:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 722,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1026:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "1018:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 724,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1037:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "1029:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1017:22:7"
                  },
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 727,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "1063:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1063:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 729,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 747,
                        "src": "1069:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1069:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1062:15:7"
                  },
                  "scope": 996,
                  "src": "1002:189:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 788,
                    "nodeType": "Block",
                    "src": "1415:417:7",
                    "statements": [
                      {
                        "id": 787,
                        "nodeType": "UncheckedBlock",
                        "src": "1425:401:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 759,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 750,
                                "src": "1683:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1688:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1683:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 766,
                            "nodeType": "IfStatement",
                            "src": "1679:28:7",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1699:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1705:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 764,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1698:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 758,
                              "id": 765,
                              "nodeType": "Return",
                              "src": "1691:16:7"
                            }
                          },
                          {
                            "assignments": [
                              768
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 768,
                                "mutability": "mutable",
                                "name": "c",
                                "nameLocation": "1729:1:7",
                                "nodeType": "VariableDeclaration",
                                "scope": 787,
                                "src": "1721:9:7",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 767,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1721:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 772,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 769,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 750,
                                "src": "1733:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 770,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 752,
                                "src": "1737:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1733:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1721:17:7"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 773,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 768,
                                  "src": "1756:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 774,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 750,
                                  "src": "1760:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1756:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 776,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 752,
                                "src": "1765:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1756:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 782,
                            "nodeType": "IfStatement",
                            "src": "1752:33:7",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1776:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1783:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 780,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1775:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 758,
                              "id": 781,
                              "nodeType": "Return",
                              "src": "1768:17:7"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1807:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 784,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 768,
                                  "src": "1813:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 785,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1806:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 758,
                            "id": 786,
                            "nodeType": "Return",
                            "src": "1799:16:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 748,
                    "nodeType": "StructuredDocumentation",
                    "src": "1197:137:7",
                    "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 789,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMul",
                  "nameLocation": "1348:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1363:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 789,
                        "src": "1355:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1355:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1374:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 789,
                        "src": "1366:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1354:22:7"
                  },
                  "returnParameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 789,
                        "src": "1400:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1400:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 789,
                        "src": "1406:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1399:15:7"
                  },
                  "scope": 996,
                  "src": "1339:493:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 816,
                    "nodeType": "Block",
                    "src": "2057:114:7",
                    "statements": [
                      {
                        "id": 815,
                        "nodeType": "UncheckedBlock",
                        "src": "2067:98:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 801,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "2095:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2100:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2095:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 808,
                            "nodeType": "IfStatement",
                            "src": "2091:29:7",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2111:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 805,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2118:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 806,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2110:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 800,
                              "id": 807,
                              "nodeType": "Return",
                              "src": "2103:17:7"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2142:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 810,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 792,
                                    "src": "2148:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 811,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 794,
                                    "src": "2152:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2148:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 813,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2141:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 800,
                            "id": 814,
                            "nodeType": "Return",
                            "src": "2134:20:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 790,
                    "nodeType": "StructuredDocumentation",
                    "src": "1838:138:7",
                    "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 817,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryDiv",
                  "nameLocation": "1990:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2005:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "1997:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1997:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2016:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2008:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2008:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1996:22:7"
                  },
                  "returnParameters": {
                    "id": 800,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 797,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2042:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 796,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2042:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "2048:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2048:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2041:15:7"
                  },
                  "scope": 996,
                  "src": "1981:190:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 844,
                    "nodeType": "Block",
                    "src": "2406:114:7",
                    "statements": [
                      {
                        "id": 843,
                        "nodeType": "UncheckedBlock",
                        "src": "2416:98:7",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 829,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "2444:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2449:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2444:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 836,
                            "nodeType": "IfStatement",
                            "src": "2440:29:7",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2460:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 833,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2467:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 834,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2459:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 828,
                              "id": 835,
                              "nodeType": "Return",
                              "src": "2452:17:7"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2491:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 838,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 820,
                                    "src": "2497:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "id": 839,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "2501:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2497:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 841,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2490:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 828,
                            "id": 842,
                            "nodeType": "Return",
                            "src": "2483:20:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 818,
                    "nodeType": "StructuredDocumentation",
                    "src": "2177:148:7",
                    "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 845,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMod",
                  "nameLocation": "2339:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2354:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2346:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2346:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2365:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2357:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2357:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2345:22:7"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 825,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2391:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2391:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 827,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "2397:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2397:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2390:15:7"
                  },
                  "scope": 996,
                  "src": "2330:190:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 859,
                    "nodeType": "Block",
                    "src": "2822:29:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 855,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 848,
                            "src": "2839:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 856,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "2843:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2839:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 854,
                        "id": 858,
                        "nodeType": "Return",
                        "src": "2832:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 846,
                    "nodeType": "StructuredDocumentation",
                    "src": "2526:224:7",
                    "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
                  },
                  "id": 860,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "2764:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 848,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2776:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2768:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2768:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2787:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2779:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2779:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2767:22:7"
                  },
                  "returnParameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 860,
                        "src": "2813:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2813:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2812:9:7"
                  },
                  "scope": 996,
                  "src": "2755:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "3189:29:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 870,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 863,
                            "src": "3206:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 871,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "3210:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3206:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 869,
                        "id": 873,
                        "nodeType": "Return",
                        "src": "3199:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 861,
                    "nodeType": "StructuredDocumentation",
                    "src": "2857:260:7",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 875,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "3131:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 866,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3143:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "3135:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3135:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 865,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3154:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "3146:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 864,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3134:22:7"
                  },
                  "returnParameters": {
                    "id": 869,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "3180:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3180:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3179:9:7"
                  },
                  "scope": 996,
                  "src": "3122:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 889,
                    "nodeType": "Block",
                    "src": "3532:29:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 885,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "3549:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 886,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 880,
                            "src": "3553:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3549:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 884,
                        "id": 888,
                        "nodeType": "Return",
                        "src": "3542:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 876,
                    "nodeType": "StructuredDocumentation",
                    "src": "3224:236:7",
                    "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
                  },
                  "id": 890,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "3474:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3486:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "3478:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3478:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 880,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3497:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "3489:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3477:22:7"
                  },
                  "returnParameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "3523:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3523:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3522:9:7"
                  },
                  "scope": 996,
                  "src": "3465:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 904,
                    "nodeType": "Block",
                    "src": "3917:29:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 900,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "3934:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 901,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "3938:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3934:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 899,
                        "id": 903,
                        "nodeType": "Return",
                        "src": "3927:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "3567:278:7",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 905,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "3859:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3871:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 905,
                        "src": "3863:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3863:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3882:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 905,
                        "src": "3874:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3874:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3862:22:7"
                  },
                  "returnParameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 905,
                        "src": "3908:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3908:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3907:9:7"
                  },
                  "scope": 996,
                  "src": "3850:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 919,
                    "nodeType": "Block",
                    "src": "4466:29:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 915,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "4483:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 916,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "4487:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4483:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 914,
                        "id": 918,
                        "nodeType": "Return",
                        "src": "4476:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 906,
                    "nodeType": "StructuredDocumentation",
                    "src": "3952:442:7",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 920,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "4408:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4420:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 920,
                        "src": "4412:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4412:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4431:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 920,
                        "src": "4423:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4423:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4411:22:7"
                  },
                  "returnParameters": {
                    "id": 914,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 920,
                        "src": "4457:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4457:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4456:9:7"
                  },
                  "scope": 996,
                  "src": "4399:96:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 944,
                    "nodeType": "Block",
                    "src": "5054:106:7",
                    "statements": [
                      {
                        "id": 943,
                        "nodeType": "UncheckedBlock",
                        "src": "5064:90:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 933,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 925,
                                    "src": "5096:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 934,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 923,
                                    "src": "5101:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5096:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 936,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 927,
                                  "src": "5104:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 932,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5088:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5088:29:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 938,
                            "nodeType": "ExpressionStatement",
                            "src": "5088:29:7"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 939,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "5138:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 940,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "5142:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5138:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 931,
                            "id": 942,
                            "nodeType": "Return",
                            "src": "5131:12:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 921,
                    "nodeType": "StructuredDocumentation",
                    "src": "4501:453:7",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 945,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "4968:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4980:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "4972:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4972:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4991:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "4983:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4983:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5008:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "4994:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4994:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4971:50:7"
                  },
                  "returnParameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "5045:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5045:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5044:9:7"
                  },
                  "scope": 996,
                  "src": "4959:201:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 969,
                    "nodeType": "Block",
                    "src": "5739:105:7",
                    "statements": [
                      {
                        "id": 968,
                        "nodeType": "UncheckedBlock",
                        "src": "5749:89:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 958,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 950,
                                    "src": "5781:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 959,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5785:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5781:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 961,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "5788:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 957,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5773:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5773:28:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 963,
                            "nodeType": "ExpressionStatement",
                            "src": "5773:28:7"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 964,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 948,
                                "src": "5822:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 965,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 950,
                                "src": "5826:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5822:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 956,
                            "id": 967,
                            "nodeType": "Return",
                            "src": "5815:12:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 946,
                    "nodeType": "StructuredDocumentation",
                    "src": "5166:473:7",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 970,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "5653:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "5665:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "5657:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5657:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "5676:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "5668:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5668:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5693:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "5679:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5679:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5656:50:7"
                  },
                  "returnParameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "5730:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5730:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5729:9:7"
                  },
                  "scope": 996,
                  "src": "5644:200:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "6585:105:7",
                    "statements": [
                      {
                        "id": 993,
                        "nodeType": "UncheckedBlock",
                        "src": "6595:89:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 983,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 975,
                                    "src": "6627:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6631:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6627:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 986,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "6634:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 982,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6619:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6619:28:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 988,
                            "nodeType": "ExpressionStatement",
                            "src": "6619:28:7"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 989,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 973,
                                "src": "6668:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 990,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 975,
                                "src": "6672:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6668:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 981,
                            "id": 992,
                            "nodeType": "Return",
                            "src": "6661:12:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 971,
                    "nodeType": "StructuredDocumentation",
                    "src": "5850:635:7",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "6499:3:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "6511:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "6503:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6503:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 975,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "6522:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "6514:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6514:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6539:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "6525:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6525:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6502:50:7"
                  },
                  "returnParameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "6576:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6575:9:7"
                  },
                  "scope": 996,
                  "src": "6490:200:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 997,
              "src": "482:6210:7",
              "usedErrors": []
            }
          ],
          "src": "107:6586:7"
        },
        "id": 7
      },
      "contracts/BaseRateProviderFactory.sol": {
        "ast": {
          "absolutePath": "contracts/BaseRateProviderFactory.sol",
          "exportedSymbols": {
            "BaseRateProviderFactory": [
              1039
            ],
            "IBaseRateProviderFactory": [
              1538
            ]
          },
          "id": 1040,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 998,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:8"
            },
            {
              "absolutePath": "contracts/interfaces/IBaseRateProviderFactory.sol",
              "file": "./interfaces/IBaseRateProviderFactory.sol",
              "id": 999,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1040,
              "sourceUnit": 1539,
              "src": "713:51:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1001,
                    "name": "IBaseRateProviderFactory",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1538,
                    "src": "980:24:8"
                  },
                  "id": 1002,
                  "nodeType": "InheritanceSpecifier",
                  "src": "980:24:8"
                }
              ],
              "canonicalName": "BaseRateProviderFactory",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1000,
                "nodeType": "StructuredDocumentation",
                "src": "766:177:8",
                "text": " @title Base Rate Provider Factory\n @notice Base Factory for creating RateProviders\n @dev This is a base contract for building factories that create RateProviders."
              },
              "fullyImplemented": true,
              "id": 1039,
              "linearizedBaseContracts": [
                1039,
                1538
              ],
              "name": "BaseRateProviderFactory",
              "nameLocation": "953:23:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "_isRateProviderFromFactory",
                  "nameLocation": "1102:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "1069:59:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1005,
                    "keyType": {
                      "id": 1003,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1077:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1069:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1004,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1088:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 1010,
                  "name": "RateProviderCreated",
                  "nameLocation": "1141:19:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1008,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rateProvider",
                        "nameLocation": "1177:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "1161:28:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1161:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1160:30:8"
                  },
                  "src": "1135:56:8"
                },
                {
                  "baseFunctions": [
                    1537
                  ],
                  "body": {
                    "id": 1021,
                    "nodeType": "Block",
                    "src": "1283:64:8",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1017,
                            "name": "_isRateProviderFromFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "1300:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1019,
                          "indexExpression": {
                            "id": 1018,
                            "name": "rateProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "1327:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1300:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1016,
                        "id": 1020,
                        "nodeType": "Return",
                        "src": "1293:47:8"
                      }
                    ]
                  },
                  "functionSelector": "19912f71",
                  "id": 1022,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRateProviderFromFactory",
                  "nameLocation": "1206:25:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "rateProvider",
                        "nameLocation": "1240:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "1232:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1232:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1231:22:8"
                  },
                  "returnParameters": {
                    "id": 1016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "1277:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1277:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1276:6:8"
                  },
                  "scope": 1039,
                  "src": "1197:150:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1037,
                    "nodeType": "Block",
                    "src": "1403:112:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1027,
                              "name": "_isRateProviderFromFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1006,
                              "src": "1413:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1029,
                            "indexExpression": {
                              "id": 1028,
                              "name": "rateProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "1440:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1413:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1456:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1413:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1032,
                        "nodeType": "ExpressionStatement",
                        "src": "1413:47:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1034,
                              "name": "rateProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "1495:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1033,
                            "name": "RateProviderCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "1475:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1475:33:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1036,
                        "nodeType": "EmitStatement",
                        "src": "1470:38:8"
                      }
                    ]
                  },
                  "id": 1038,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_onCreate",
                  "nameLocation": "1362:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "rateProvider",
                        "nameLocation": "1380:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "1372:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1372:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1371:22:8"
                  },
                  "returnParameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1403:0:8"
                  },
                  "scope": 1039,
                  "src": "1353:162:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1040,
              "src": "944:573:8",
              "usedErrors": []
            }
          ],
          "src": "688:830:8"
        },
        "id": 8
      },
      "contracts/BinanceBeaconEthRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/BinanceBeaconEthRateProvider.sol",
          "exportedSymbols": {
            "BinanceBeaconEthRateProvider": [
              1073
            ],
            "IRateProvider": [
              1572
            ],
            "IwBETH": [
              1605
            ]
          },
          "id": 1074,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1041,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:9"
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1042,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1074,
              "sourceUnit": 1573,
              "src": "713:40:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IwBETH.sol",
              "file": "./interfaces/IwBETH.sol",
              "id": 1043,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1074,
              "sourceUnit": 1606,
              "src": "754:33:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1045,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "943:13:9"
                  },
                  "id": 1046,
                  "nodeType": "InheritanceSpecifier",
                  "src": "943:13:9"
                }
              ],
              "canonicalName": "BinanceBeaconEthRateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1044,
                "nodeType": "StructuredDocumentation",
                "src": "789:112:9",
                "text": " @title Wrapped Binance Beacon ETH Rate Provider\n @notice Returns the value of wBETH in terms of ETH"
              },
              "fullyImplemented": true,
              "id": 1073,
              "linearizedBaseContracts": [
                1073,
                1572
              ],
              "name": "BinanceBeaconEthRateProvider",
              "nameLocation": "911:28:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "b89ba51a",
                  "id": 1049,
                  "mutability": "immutable",
                  "name": "wBETH",
                  "nameLocation": "987:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "963:29:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IwBETH_$1605",
                    "typeString": "contract IwBETH"
                  },
                  "typeName": {
                    "id": 1048,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1047,
                      "name": "IwBETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1605,
                      "src": "963:6:9"
                    },
                    "referencedDeclaration": 1605,
                    "src": "963:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IwBETH_$1605",
                      "typeString": "contract IwBETH"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1059,
                    "nodeType": "Block",
                    "src": "1026:31:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1055,
                            "name": "wBETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "1036:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IwBETH_$1605",
                              "typeString": "contract IwBETH"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1056,
                            "name": "_wBETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "1044:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IwBETH_$1605",
                              "typeString": "contract IwBETH"
                            }
                          },
                          "src": "1036:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IwBETH_$1605",
                            "typeString": "contract IwBETH"
                          }
                        },
                        "id": 1058,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:14:9"
                      }
                    ]
                  },
                  "id": 1060,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "_wBETH",
                        "nameLocation": "1018:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "1011:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IwBETH_$1605",
                          "typeString": "contract IwBETH"
                        },
                        "typeName": {
                          "id": 1051,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1050,
                            "name": "IwBETH",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1605,
                            "src": "1011:6:9"
                          },
                          "referencedDeclaration": 1605,
                          "src": "1011:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IwBETH_$1605",
                            "typeString": "contract IwBETH"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1010:15:9"
                  },
                  "returnParameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1026:0:9"
                  },
                  "scope": 1073,
                  "src": "999:58:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "1189:44:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1067,
                              "name": "wBETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1049,
                              "src": "1206:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IwBETH_$1605",
                                "typeString": "contract IwBETH"
                              }
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1604,
                            "src": "1206:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1206:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1066,
                        "id": 1070,
                        "nodeType": "Return",
                        "src": "1199:27:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1061,
                    "nodeType": "StructuredDocumentation",
                    "src": "1063:61:9",
                    "text": " @return the value of wBETH in terms of ETH"
                  },
                  "functionSelector": "679aefce",
                  "id": 1072,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "1138:7:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1063,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1162:8:9"
                  },
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1145:2:9"
                  },
                  "returnParameters": {
                    "id": 1066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1065,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "1180:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1180:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1179:9:9"
                  },
                  "scope": 1073,
                  "src": "1129:104:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1074,
              "src": "902:333:9",
              "usedErrors": []
            }
          ],
          "src": "688:548:9"
        },
        "id": 9
      },
      "contracts/CTokenRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/CTokenRateProvider.sol",
          "exportedSymbols": {
            "CTokenRateProvider": [
              1114
            ],
            "ICToken": [
              1553
            ],
            "IRateProvider": [
              1572
            ]
          },
          "id": 1115,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1075,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:10"
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1076,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1115,
              "sourceUnit": 1573,
              "src": "713:40:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ICToken.sol",
              "file": "./interfaces/ICToken.sol",
              "id": 1077,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1115,
              "sourceUnit": 1554,
              "src": "754:34:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1079,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "928:13:10"
                  },
                  "id": 1080,
                  "nodeType": "InheritanceSpecifier",
                  "src": "928:13:10"
                }
              ],
              "canonicalName": "CTokenRateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1078,
                "nodeType": "StructuredDocumentation",
                "src": "790:106:10",
                "text": " @title cToken Rate Provider\n @notice Returns the value of a cToken in terms of its underlying"
              },
              "fullyImplemented": true,
              "id": 1114,
              "linearizedBaseContracts": [
                1114,
                1572
              ],
              "name": "CTokenRateProvider",
              "nameLocation": "906:18:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "69e527da",
                  "id": 1083,
                  "mutability": "immutable",
                  "name": "cToken",
                  "nameLocation": "973:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "948:31:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICToken_$1553",
                    "typeString": "contract ICToken"
                  },
                  "typeName": {
                    "id": 1082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1081,
                      "name": "ICToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1553,
                      "src": "948:7:10"
                    },
                    "referencedDeclaration": 1553,
                    "src": "948:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICToken_$1553",
                      "typeString": "contract ICToken"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1100,
                    "nodeType": "Block",
                    "src": "1015:104:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1090,
                                  "name": "_cToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1086,
                                  "src": "1033:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICToken_$1553",
                                    "typeString": "contract ICToken"
                                  }
                                },
                                "id": 1091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isCToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1546,
                                "src": "1033:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                  "typeString": "function () view external returns (bool)"
                                }
                              },
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1033:18:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f76696465642061646472657373206973206e6f742063546f6b656e",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1053:32:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_907712cd5520644a684bbdbea382092593712ea80ccab615d4105508ea74a68c",
                                "typeString": "literal_string \"Provided address is not cToken\""
                              },
                              "value": "Provided address is not cToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_907712cd5520644a684bbdbea382092593712ea80ccab615d4105508ea74a68c",
                                "typeString": "literal_string \"Provided address is not cToken\""
                              }
                            ],
                            "id": 1089,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1025:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1025:61:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1095,
                        "nodeType": "ExpressionStatement",
                        "src": "1025:61:10"
                      },
                      {
                        "expression": {
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1096,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "1096:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICToken_$1553",
                              "typeString": "contract ICToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1097,
                            "name": "_cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "1105:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICToken_$1553",
                              "typeString": "contract ICToken"
                            }
                          },
                          "src": "1096:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICToken_$1553",
                            "typeString": "contract ICToken"
                          }
                        },
                        "id": 1099,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:16:10"
                      }
                    ]
                  },
                  "id": 1101,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "_cToken",
                        "nameLocation": "1006:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "998:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICToken_$1553",
                          "typeString": "contract ICToken"
                        },
                        "typeName": {
                          "id": 1085,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1084,
                            "name": "ICToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1553,
                            "src": "998:7:10"
                          },
                          "referencedDeclaration": 1553,
                          "src": "998:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICToken_$1553",
                            "typeString": "contract ICToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "997:17:10"
                  },
                  "returnParameters": {
                    "id": 1088,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1015:0:10"
                  },
                  "scope": 1114,
                  "src": "986:133:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1112,
                    "nodeType": "Block",
                    "src": "1278:51:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1108,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "1295:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICToken_$1553",
                                "typeString": "contract ICToken"
                              }
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchangeRateStored",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1552,
                            "src": "1295:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1295:27:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1107,
                        "id": 1111,
                        "nodeType": "Return",
                        "src": "1288:34:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1102,
                    "nodeType": "StructuredDocumentation",
                    "src": "1125:88:10",
                    "text": " @return the value of RateProvider's cToken in terms of its underlying"
                  },
                  "functionSelector": "679aefce",
                  "id": 1113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "1227:7:10",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1104,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1251:8:10"
                  },
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1234:2:10"
                  },
                  "returnParameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1113,
                        "src": "1269:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1269:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1268:9:10"
                  },
                  "scope": 1114,
                  "src": "1218:111:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1115,
              "src": "897:434:10",
              "usedErrors": []
            }
          ],
          "src": "688:644:10"
        },
        "id": 10
      },
      "contracts/ChainlinkRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/ChainlinkRateProvider.sol",
          "exportedSymbols": {
            "AggregatorInterface": [
              47
            ],
            "AggregatorV2V3Interface": [
              56
            ],
            "AggregatorV3Interface": [
              102
            ],
            "ChainlinkRateProvider": [
              1181
            ],
            "FeedRegistryInterface": [
              413
            ],
            "IRateProvider": [
              1572
            ],
            "SafeMath": [
              996
            ]
          },
          "id": 1182,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1116,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:11"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "id": 1117,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1182,
              "sourceUnit": 103,
              "src": "713:76:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
              "file": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
              "id": 1118,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1182,
              "sourceUnit": 414,
              "src": "790:76:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "id": 1119,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1182,
              "sourceUnit": 997,
              "src": "867:57:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1120,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1182,
              "sourceUnit": 1573,
              "src": "926:40:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1122,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "1345:13:11"
                  },
                  "id": 1123,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1345:13:11"
                }
              ],
              "canonicalName": "ChainlinkRateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1121,
                "nodeType": "StructuredDocumentation",
                "src": "968:342:11",
                "text": " @title Chainlink Rate Provider\n @notice Returns a Chainlink price feed's quote for the provided currency pair\n @dev This rate provider is a simplification of ChainlinkReistryRateProvider which is fixed to a particular pricefeed.\n      This is expected to be used in environments where the Chainlink registry is not available."
              },
              "fullyImplemented": true,
              "id": 1181,
              "linearizedBaseContracts": [
                1181,
                1572
              ],
              "name": "ChainlinkRateProvider",
              "nameLocation": "1320:21:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "590f2113",
                  "id": 1126,
                  "mutability": "immutable",
                  "name": "pricefeed",
                  "nameLocation": "1404:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1365:48:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "id": 1125,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1124,
                      "name": "AggregatorV3Interface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 102,
                      "src": "1365:21:11"
                    },
                    "referencedDeclaration": 102,
                    "src": "1365:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "immutable",
                  "name": "_scalingFactor",
                  "nameLocation": "1603:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1576:41:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1151,
                    "nodeType": "Block",
                    "src": "1735:97:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1135,
                            "name": "pricefeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1126,
                            "src": "1745:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1136,
                            "name": "feed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "1757:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "1745:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 1138,
                        "nodeType": "ExpressionStatement",
                        "src": "1745:16:11"
                      },
                      {
                        "expression": {
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1139,
                            "name": "_scalingFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "1771:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1788:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "3138",
                                  "id": 1143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1805:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1144,
                                      "name": "feed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1132,
                                      "src": "1809:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 1145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "1809:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1809:15:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 1141,
                                  "name": "SafeMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "1792:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SafeMath_$996_$",
                                    "typeString": "type(library SafeMath)"
                                  }
                                },
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 875,
                                "src": "1792:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1792:33:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1788:37:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1771:54:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1150,
                        "nodeType": "ExpressionStatement",
                        "src": "1771:54:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1129,
                    "nodeType": "StructuredDocumentation",
                    "src": "1624:66:11",
                    "text": " @param feed - The Chainlink price feed contract"
                  },
                  "id": 1152,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "feed",
                        "nameLocation": "1729:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1152,
                        "src": "1707:26:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                          "typeString": "contract AggregatorV3Interface"
                        },
                        "typeName": {
                          "id": 1131,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1130,
                            "name": "AggregatorV3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 102,
                            "src": "1707:21:11"
                          },
                          "referencedDeclaration": 102,
                          "src": "1707:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1706:28:11"
                  },
                  "returnParameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1735:0:11"
                  },
                  "scope": 1181,
                  "src": "1695:137:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "1991:176:11",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          1160,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 1160,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "2011:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1179,
                            "src": "2004:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1159,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2004:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null
                        ],
                        "id": 1164,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1161,
                              "name": "pricefeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "2026:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 1162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 101,
                            "src": "2026:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2026:27:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2001:52:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1166,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1160,
                                "src": "2071:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2079:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2071:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207072696365207261746520726573706f6e7365",
                              "id": 1169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2082:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c",
                                "typeString": "literal_string \"Invalid price rate response\""
                              },
                              "value": "Invalid price rate response"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c",
                                "typeString": "literal_string \"Invalid price rate response\""
                              }
                            ],
                            "id": 1165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2063:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2063:49:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "2063:49:11"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1174,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1160,
                                "src": "2137:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 1173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2129:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1172,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2129:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2129:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1176,
                            "name": "_scalingFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "2146:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2129:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1158,
                        "id": 1178,
                        "nodeType": "Return",
                        "src": "2122:38:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1153,
                    "nodeType": "StructuredDocumentation",
                    "src": "1838:88:11",
                    "text": " @return the value of the quote currency in terms of the base currency"
                  },
                  "functionSelector": "679aefce",
                  "id": 1180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "1940:7:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1155,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1964:8:11"
                  },
                  "parameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1947:2:11"
                  },
                  "returnParameters": {
                    "id": 1158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "1982:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1981:9:11"
                  },
                  "scope": 1181,
                  "src": "1931:236:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1182,
              "src": "1311:858:11",
              "usedErrors": []
            }
          ],
          "src": "688:1482:11"
        },
        "id": 11
      },
      "contracts/ChainlinkRateProviderFactory.sol": {
        "ast": {
          "absolutePath": "contracts/ChainlinkRateProviderFactory.sol",
          "exportedSymbols": {
            "AggregatorInterface": [
              47
            ],
            "AggregatorV2V3Interface": [
              56
            ],
            "AggregatorV3Interface": [
              102
            ],
            "BaseRateProviderFactory": [
              1039
            ],
            "ChainlinkRateProvider": [
              1181
            ],
            "ChainlinkRateProviderFactory": [
              1219
            ],
            "FeedRegistryInterface": [
              413
            ],
            "IBaseRateProviderFactory": [
              1538
            ],
            "IRateProvider": [
              1572
            ],
            "SafeMath": [
              996
            ]
          },
          "id": 1220,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1183,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:12"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "id": 1184,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1220,
              "sourceUnit": 103,
              "src": "713:76:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/BaseRateProviderFactory.sol",
              "file": "./BaseRateProviderFactory.sol",
              "id": 1185,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1220,
              "sourceUnit": 1040,
              "src": "791:39:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ChainlinkRateProvider.sol",
              "file": "./ChainlinkRateProvider.sol",
              "id": 1186,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1220,
              "sourceUnit": 1182,
              "src": "831:37:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1188,
                    "name": "BaseRateProviderFactory",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1039,
                    "src": "1221:23:12"
                  },
                  "id": 1189,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1221:23:12"
                }
              ],
              "canonicalName": "ChainlinkRateProviderFactory",
              "contractDependencies": [
                1181
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1187,
                "nodeType": "StructuredDocumentation",
                "src": "870:309:12",
                "text": " @title Chainlink Rate Provider Factory\n @notice Factory for creating ChainlinkRateProviders\n @dev This contract is used to create ChainlinkRateProvider contracts.\n      RateProviders created by this factory are to be used in environments\n      where the Chainlink registry is not available."
              },
              "fullyImplemented": true,
              "id": 1219,
              "linearizedBaseContracts": [
                1219,
                1039,
                1538
              ],
              "name": "ChainlinkRateProviderFactory",
              "nameLocation": "1189:28:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1217,
                    "nodeType": "Block",
                    "src": "1488:156:12",
                    "statements": [
                      {
                        "assignments": [
                          1201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1201,
                            "mutability": "mutable",
                            "name": "rateProvider",
                            "nameLocation": "1520:12:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1217,
                            "src": "1498:34:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                              "typeString": "contract ChainlinkRateProvider"
                            },
                            "typeName": {
                              "id": 1200,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1199,
                                "name": "ChainlinkRateProvider",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1181,
                                "src": "1498:21:12"
                              },
                              "referencedDeclaration": 1181,
                              "src": "1498:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                                "typeString": "contract ChainlinkRateProvider"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1207,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1205,
                              "name": "feed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "1561:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            ],
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1535:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AggregatorV3Interface_$102_$returns$_t_contract$_ChainlinkRateProvider_$1181_$",
                              "typeString": "function (contract AggregatorV3Interface) returns (contract ChainlinkRateProvider)"
                            },
                            "typeName": {
                              "id": 1203,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1202,
                                "name": "ChainlinkRateProvider",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1181,
                                "src": "1539:21:12"
                              },
                              "referencedDeclaration": 1181,
                              "src": "1539:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                                "typeString": "contract ChainlinkRateProvider"
                              }
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1535:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                            "typeString": "contract ChainlinkRateProvider"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1498:68:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1211,
                                  "name": "rateProvider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1201,
                                  "src": "1594:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                                    "typeString": "contract ChainlinkRateProvider"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                                    "typeString": "contract ChainlinkRateProvider"
                                  }
                                ],
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1586:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1209,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1586:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1586:21:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1208,
                            "name": "_onCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "1576:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1214,
                        "nodeType": "ExpressionStatement",
                        "src": "1576:32:12"
                      },
                      {
                        "expression": {
                          "id": 1215,
                          "name": "rateProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "1625:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                            "typeString": "contract ChainlinkRateProvider"
                          }
                        },
                        "functionReturnParameters": 1198,
                        "id": 1216,
                        "nodeType": "Return",
                        "src": "1618:19:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1190,
                    "nodeType": "StructuredDocumentation",
                    "src": "1251:147:12",
                    "text": " @notice Deploys a new ChainlinkRateProvider contract using a price feed.\n @param feed - The Chainlink price feed contract."
                  },
                  "functionSelector": "9ed93318",
                  "id": 1218,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nameLocation": "1412:6:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "feed",
                        "nameLocation": "1441:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "1419:26:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                          "typeString": "contract AggregatorV3Interface"
                        },
                        "typeName": {
                          "id": 1192,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1191,
                            "name": "AggregatorV3Interface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 102,
                            "src": "1419:21:12"
                          },
                          "referencedDeclaration": 102,
                          "src": "1419:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1418:28:12"
                  },
                  "returnParameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "1465:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                          "typeString": "contract ChainlinkRateProvider"
                        },
                        "typeName": {
                          "id": 1196,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1195,
                            "name": "ChainlinkRateProvider",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1181,
                            "src": "1465:21:12"
                          },
                          "referencedDeclaration": 1181,
                          "src": "1465:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainlinkRateProvider_$1181",
                            "typeString": "contract ChainlinkRateProvider"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1464:23:12"
                  },
                  "scope": 1219,
                  "src": "1403:241:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1220,
              "src": "1180:466:12",
              "usedErrors": []
            }
          ],
          "src": "688:959:12"
        },
        "id": 12
      },
      "contracts/ChainlinkRegistryRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/ChainlinkRegistryRateProvider.sol",
          "exportedSymbols": {
            "AggregatorInterface": [
              47
            ],
            "AggregatorV2V3Interface": [
              56
            ],
            "AggregatorV3Interface": [
              102
            ],
            "ChainlinkRegistryRateProvider": [
              1343
            ],
            "FeedRegistryInterface": [
              413
            ],
            "IRateProvider": [
              1572
            ],
            "SafeMath": [
              996
            ]
          },
          "id": 1344,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1221,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:13"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
              "id": 1222,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1344,
              "sourceUnit": 103,
              "src": "713:76:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
              "file": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
              "id": 1223,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1344,
              "sourceUnit": 414,
              "src": "790:76:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "id": 1224,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1344,
              "sourceUnit": 997,
              "src": "867:57:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1225,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1344,
              "sourceUnit": 1573,
              "src": "926:40:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1227,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "1303:13:13"
                  },
                  "id": 1228,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1303:13:13"
                }
              ],
              "canonicalName": "ChainlinkRegistryRateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1226,
                "nodeType": "StructuredDocumentation",
                "src": "968:292:13",
                "text": " @title Chainlink Registry Rate Provider\n @notice Returns a Chainlink price feed's quote for the provided currency pair\n @dev This rate provider uses the Chainlink pricefeed registry as the source of truth\n      while caching the underlying feed to query in order to save gas."
              },
              "fullyImplemented": true,
              "id": 1343,
              "linearizedBaseContracts": [
                1343,
                1572
              ],
              "name": "ChainlinkRegistryRateProvider",
              "nameLocation": "1270:29:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "7b103999",
                  "id": 1231,
                  "mutability": "immutable",
                  "name": "registry",
                  "nameLocation": "1362:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "1323:47:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                    "typeString": "contract FeedRegistryInterface"
                  },
                  "typeName": {
                    "id": 1230,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1229,
                      "name": "FeedRegistryInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 413,
                      "src": "1323:21:13"
                    },
                    "referencedDeclaration": 413,
                    "src": "1323:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                      "typeString": "contract FeedRegistryInterface"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5001f3b5",
                  "id": 1233,
                  "mutability": "immutable",
                  "name": "base",
                  "nameLocation": "1401:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "1376:29:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "999b93af",
                  "id": 1235,
                  "mutability": "immutable",
                  "name": "quote",
                  "nameLocation": "1436:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "1411:30:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_feed",
                  "nameLocation": "1621:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "1590:36:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "id": 1237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1236,
                      "name": "AggregatorV3Interface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 102,
                      "src": "1590:21:13"
                    },
                    "referencedDeclaration": 102,
                    "src": "1590:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_scalingFactor",
                  "nameLocation": "1806:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "1789:31:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1283,
                    "nodeType": "Block",
                    "src": "2205:238:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1251,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "2215:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                              "typeString": "contract FeedRegistryInterface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1252,
                            "name": "_registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "2226:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                              "typeString": "contract FeedRegistryInterface"
                            }
                          },
                          "src": "2215:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                            "typeString": "contract FeedRegistryInterface"
                          }
                        },
                        "id": 1254,
                        "nodeType": "ExpressionStatement",
                        "src": "2215:20:13"
                      },
                      {
                        "expression": {
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1255,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "2245:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1256,
                            "name": "_base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "2252:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2245:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1258,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:12:13"
                      },
                      {
                        "expression": {
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1259,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "2267:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1260,
                            "name": "_quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1248,
                            "src": "2275:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2267:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "2267:14:13"
                      },
                      {
                        "expression": {
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1263,
                            "name": "_feed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1238,
                            "src": "2331:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1266,
                                "name": "_base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1246,
                                "src": "2357:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1267,
                                "name": "_quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1248,
                                "src": "2364:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1264,
                                "name": "_registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1244,
                                "src": "2339:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                                  "typeString": "contract FeedRegistryInterface"
                                }
                              },
                              "id": 1265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getFeed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 261,
                              "src": "2339:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_contract$_AggregatorV2V3Interface_$56_$",
                                "typeString": "function (address,address) view external returns (contract AggregatorV2V3Interface)"
                              }
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2339:32:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                              "typeString": "contract AggregatorV2V3Interface"
                            }
                          },
                          "src": "2331:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "2331:40:13"
                      },
                      {
                        "expression": {
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1271,
                            "name": "_scalingFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "2381:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2398:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "3138",
                                  "id": 1275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2415:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1276,
                                      "name": "_feed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1238,
                                      "src": "2419:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 1277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "2419:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2419:16:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 1273,
                                  "name": "SafeMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "2402:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SafeMath_$996_$",
                                    "typeString": "type(library SafeMath)"
                                  }
                                },
                                "id": 1274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 875,
                                "src": "2402:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2402:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2398:38:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2381:55:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1282,
                        "nodeType": "ExpressionStatement",
                        "src": "2381:55:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1241,
                    "nodeType": "StructuredDocumentation",
                    "src": "1827:267:13",
                    "text": " @param _registry - The Chainlink price feed registry contract\n @param _base - The identifier for the currency which the quoted rate will be denominated in\n @param _quote - The identifier for the currency for which a price will be quoted"
                  },
                  "id": 1284,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1244,
                        "mutability": "mutable",
                        "name": "_registry",
                        "nameLocation": "2142:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "2120:31:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                          "typeString": "contract FeedRegistryInterface"
                        },
                        "typeName": {
                          "id": 1243,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1242,
                            "name": "FeedRegistryInterface",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 413,
                            "src": "2120:21:13"
                          },
                          "referencedDeclaration": 413,
                          "src": "2120:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                            "typeString": "contract FeedRegistryInterface"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1246,
                        "mutability": "mutable",
                        "name": "_base",
                        "nameLocation": "2169:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "2161:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2161:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "_quote",
                        "nameLocation": "2192:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "2184:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2184:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2110:94:13"
                  },
                  "returnParameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2205:0:13"
                  },
                  "scope": 1343,
                  "src": "2099:344:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1311,
                    "nodeType": "Block",
                    "src": "2602:172:13",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          1292,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 1292,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "2622:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1311,
                            "src": "2615:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 1291,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2615:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null
                        ],
                        "id": 1296,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1293,
                              "name": "_feed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1238,
                              "src": "2637:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 101,
                            "src": "2637:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2637:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2612:48:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 1300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1298,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1292,
                                "src": "2678:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2686:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2678:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207072696365207261746520726573706f6e7365",
                              "id": 1301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2689:29:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c",
                                "typeString": "literal_string \"Invalid price rate response\""
                              },
                              "value": "Invalid price rate response"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b57dcb4e8b1ee56088690d4519e3976beb6718616420da4ce8b71d4f606ee71c",
                                "typeString": "literal_string \"Invalid price rate response\""
                              }
                            ],
                            "id": 1297,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2670:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2670:49:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1303,
                        "nodeType": "ExpressionStatement",
                        "src": "2670:49:13"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1306,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1292,
                                "src": "2744:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2736:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1304,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2736:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2736:14:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1308,
                            "name": "_scalingFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "2753:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2736:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1290,
                        "id": 1310,
                        "nodeType": "Return",
                        "src": "2729:38:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1285,
                    "nodeType": "StructuredDocumentation",
                    "src": "2449:88:13",
                    "text": " @return the value of the quote currency in terms of the base currency"
                  },
                  "functionSelector": "679aefce",
                  "id": 1312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "2551:7:13",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1287,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2575:8:13"
                  },
                  "parameters": {
                    "id": 1286,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2558:2:13"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1289,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "2593:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2593:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2592:9:13"
                  },
                  "scope": 1343,
                  "src": "2542:232:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1341,
                    "nodeType": "Block",
                    "src": "3116:246:13",
                    "statements": [
                      {
                        "assignments": [
                          1318
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1318,
                            "mutability": "mutable",
                            "name": "priceFeed",
                            "nameLocation": "3148:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1341,
                            "src": "3126:31:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            "typeName": {
                              "id": 1317,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1316,
                                "name": "AggregatorV3Interface",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 102,
                                "src": "3126:21:13"
                              },
                              "referencedDeclaration": 102,
                              "src": "3126:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1324,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1321,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "3177:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1322,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "3183:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1319,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1231,
                              "src": "3160:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FeedRegistryInterface_$413",
                                "typeString": "contract FeedRegistryInterface"
                              }
                            },
                            "id": 1320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getFeed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 261,
                            "src": "3160:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_contract$_AggregatorV2V3Interface_$56_$",
                              "typeString": "function (address,address) view external returns (contract AggregatorV2V3Interface)"
                            }
                          },
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3160:29:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV2V3Interface_$56",
                            "typeString": "contract AggregatorV2V3Interface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3126:63:13"
                      },
                      {
                        "expression": {
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1325,
                            "name": "_scalingFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "3269:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3286:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "3138",
                                  "id": 1329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3303:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1330,
                                      "name": "priceFeed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1318,
                                      "src": "3307:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 1331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "3307:18:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3307:20:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 1327,
                                  "name": "SafeMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 996,
                                  "src": "3290:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SafeMath_$996_$",
                                    "typeString": "type(library SafeMath)"
                                  }
                                },
                                "id": 1328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 875,
                                "src": "3290:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3290:38:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3286:42:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3269:59:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1336,
                        "nodeType": "ExpressionStatement",
                        "src": "3269:59:13"
                      },
                      {
                        "expression": {
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1337,
                            "name": "_feed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1238,
                            "src": "3338:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1338,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "3346:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "3338:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$102",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 1340,
                        "nodeType": "ExpressionStatement",
                        "src": "3338:17:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1313,
                    "nodeType": "StructuredDocumentation",
                    "src": "2780:294:13",
                    "text": " @notice updates cached address of Chainlink price feed used to source quotes\n @dev The cache may fall out of sync with the canonical price feed as listed on the Chainlink registry\n      Any address may call this function to update the cache to match the registry."
                  },
                  "functionSelector": "7d035248",
                  "id": 1342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateCachedFeed",
                  "nameLocation": "3088:16:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1314,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3104:2:13"
                  },
                  "returnParameters": {
                    "id": 1315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3116:0:13"
                  },
                  "scope": 1343,
                  "src": "3079:283:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1344,
              "src": "1261:2103:13",
              "usedErrors": []
            }
          ],
          "src": "688:2677:13"
        },
        "id": 13
      },
      "contracts/ERC4626RateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/ERC4626RateProvider.sol",
          "exportedSymbols": {
            "ERC4626RateProvider": [
              1403
            ],
            "IERC20": [
              659
            ],
            "IERC20Metadata": [
              684
            ],
            "IERC4626": [
              581
            ],
            "IRateProvider": [
              1572
            ]
          },
          "id": 1404,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1345,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:14"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC4626.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC4626.sol",
              "id": 1346,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1404,
              "sourceUnit": 582,
              "src": "713:57:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1347,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1404,
              "sourceUnit": 1573,
              "src": "772:40:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1349,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "1019:13:14"
                  },
                  "id": 1350,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1019:13:14"
                }
              ],
              "canonicalName": "ERC4626RateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1348,
                "nodeType": "StructuredDocumentation",
                "src": "814:172:14",
                "text": " @title ERC4626 Rate Provider\n @notice Returns an 18 decimal fixed point number that is the exchange rate of the\n shares of an ERC4626 to the underlying asset"
              },
              "fullyImplemented": true,
              "id": 1403,
              "linearizedBaseContracts": [
                1403,
                1572
              ],
              "name": "ERC4626RateProvider",
              "nameLocation": "996:19:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "13511b5c",
                  "id": 1353,
                  "mutability": "immutable",
                  "name": "erc4626",
                  "nameLocation": "1065:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1403,
                  "src": "1039:33:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$581",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 1352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1351,
                      "name": "IERC4626",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 581,
                      "src": "1039:8:14"
                    },
                    "referencedDeclaration": 581,
                    "src": "1039:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$581",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "71f29123",
                  "id": 1355,
                  "mutability": "immutable",
                  "name": "fixedPointOne",
                  "nameLocation": "1103:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1403,
                  "src": "1078:38:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1388,
                    "nodeType": "Block",
                    "src": "1154:288:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1361,
                            "name": "erc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "1164:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$581",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1362,
                            "name": "_erc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "1174:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$581",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "src": "1164:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$581",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "id": 1364,
                        "nodeType": "ExpressionStatement",
                        "src": "1164:18:14"
                      },
                      {
                        "assignments": [
                          1366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1366,
                            "mutability": "mutable",
                            "name": "underlyingDecimals",
                            "nameLocation": "1200:18:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1388,
                            "src": "1192:26:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1192:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1374,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1368,
                                      "name": "_erc4626",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1358,
                                      "src": "1230:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC4626_$581",
                                        "typeString": "contract IERC4626"
                                      }
                                    },
                                    "id": 1369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "asset",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 450,
                                    "src": "1230:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 1370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1230:16:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1367,
                                "name": "IERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 581,
                                "src": "1221:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC4626_$581_$",
                                  "typeString": "type(contract IERC4626)"
                                }
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1221:26:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$581",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 683,
                            "src": "1221:35:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1221:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1192:66:14"
                      },
                      {
                        "expression": {
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1375,
                            "name": "fixedPointOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "1368:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1384:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 1381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3138",
                                      "id": 1377,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1389:2:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 1378,
                                          "name": "_erc4626",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1358,
                                          "src": "1394:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC4626_$581",
                                            "typeString": "contract IERC4626"
                                          }
                                        },
                                        "id": 1379,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "decimals",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 683,
                                        "src": "1394:17:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                          "typeString": "function () view external returns (uint8)"
                                        }
                                      },
                                      "id": 1380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1394:19:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1389:24:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1382,
                                    "name": "underlyingDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1366,
                                    "src": "1416:18:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1389:45:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1384,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1388:47:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1384:51:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1368:67:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1387,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:67:14"
                      }
                    ]
                  },
                  "id": 1389,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "_erc4626",
                        "nameLocation": "1144:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "1135:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$581",
                          "typeString": "contract IERC4626"
                        },
                        "typeName": {
                          "id": 1357,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1356,
                            "name": "IERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 581,
                            "src": "1135:8:14"
                          },
                          "referencedDeclaration": 581,
                          "src": "1135:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$581",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1134:19:14"
                  },
                  "returnParameters": {
                    "id": 1360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1154:0:14"
                  },
                  "scope": 1403,
                  "src": "1123:319:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1401,
                    "nodeType": "Block",
                    "src": "1657:62:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1398,
                              "name": "fixedPointOne",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1355,
                              "src": "1698:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1396,
                              "name": "erc4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1353,
                              "src": "1674:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$581",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 1397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "convertToAssets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 472,
                            "src": "1674:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:38:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1395,
                        "id": 1400,
                        "nodeType": "Return",
                        "src": "1667:45:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1390,
                    "nodeType": "StructuredDocumentation",
                    "src": "1448:144:14",
                    "text": " @return An 18 decimal fixed point number that is the exchange rate of the\n shares of an ERC4626 to the underlying asset"
                  },
                  "functionSelector": "679aefce",
                  "id": 1402,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "1606:7:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1392,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1630:8:14"
                  },
                  "parameters": {
                    "id": 1391,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1613:2:14"
                  },
                  "returnParameters": {
                    "id": 1395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "1648:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1648:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1647:9:14"
                  },
                  "scope": 1403,
                  "src": "1597:122:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1404,
              "src": "987:734:14",
              "usedErrors": []
            }
          ],
          "src": "688:1034:14"
        },
        "id": 14
      },
      "contracts/ERC4626RateProviderFactory.sol": {
        "ast": {
          "absolutePath": "contracts/ERC4626RateProviderFactory.sol",
          "exportedSymbols": {
            "BaseRateProviderFactory": [
              1039
            ],
            "ERC4626RateProvider": [
              1403
            ],
            "ERC4626RateProviderFactory": [
              1440
            ],
            "IBaseRateProviderFactory": [
              1538
            ],
            "IERC20": [
              659
            ],
            "IERC20Metadata": [
              684
            ],
            "IERC4626": [
              581
            ],
            "IRateProvider": [
              1572
            ]
          },
          "id": 1441,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1405,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:15"
            },
            {
              "absolutePath": "contracts/BaseRateProviderFactory.sol",
              "file": "./BaseRateProviderFactory.sol",
              "id": 1406,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1441,
              "sourceUnit": 1040,
              "src": "713:39:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ERC4626RateProvider.sol",
              "file": "./ERC4626RateProvider.sol",
              "id": 1407,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1441,
              "sourceUnit": 1404,
              "src": "753:35:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1409,
                    "name": "BaseRateProviderFactory",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1039,
                    "src": "1001:23:15"
                  },
                  "id": 1410,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1001:23:15"
                }
              ],
              "canonicalName": "ERC4626RateProviderFactory",
              "contractDependencies": [
                1403
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1408,
                "nodeType": "StructuredDocumentation",
                "src": "790:171:15",
                "text": " @title ERC4626 Rate Provider Factory\n @notice Factory for creating ERC4626RateProviders\n @dev This contract is used to create ERC4626RateProvider contracts."
              },
              "fullyImplemented": true,
              "id": 1440,
              "linearizedBaseContracts": [
                1440,
                1039,
                1538
              ],
              "name": "ERC4626RateProviderFactory",
              "nameLocation": "971:26:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1438,
                    "nodeType": "Block",
                    "src": "1251:155:15",
                    "statements": [
                      {
                        "assignments": [
                          1422
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1422,
                            "mutability": "mutable",
                            "name": "rateProvider",
                            "nameLocation": "1281:12:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "1261:32:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                              "typeString": "contract ERC4626RateProvider"
                            },
                            "typeName": {
                              "id": 1421,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1420,
                                "name": "ERC4626RateProvider",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1403,
                                "src": "1261:19:15"
                              },
                              "referencedDeclaration": 1403,
                              "src": "1261:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                                "typeString": "contract ERC4626RateProvider"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1428,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1426,
                              "name": "erc4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1414,
                              "src": "1320:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$581",
                                "typeString": "contract IERC4626"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC4626_$581",
                                "typeString": "contract IERC4626"
                              }
                            ],
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1296:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC4626_$581_$returns$_t_contract$_ERC4626RateProvider_$1403_$",
                              "typeString": "function (contract IERC4626) returns (contract ERC4626RateProvider)"
                            },
                            "typeName": {
                              "id": 1424,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1423,
                                "name": "ERC4626RateProvider",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1403,
                                "src": "1300:19:15"
                              },
                              "referencedDeclaration": 1403,
                              "src": "1300:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                                "typeString": "contract ERC4626RateProvider"
                              }
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1296:32:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                            "typeString": "contract ERC4626RateProvider"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1261:67:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1432,
                                  "name": "rateProvider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1422,
                                  "src": "1356:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                                    "typeString": "contract ERC4626RateProvider"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                                    "typeString": "contract ERC4626RateProvider"
                                  }
                                ],
                                "id": 1431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1348:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1430,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1348:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1348:21:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1429,
                            "name": "_onCreate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "1338:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1338:32:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1435,
                        "nodeType": "ExpressionStatement",
                        "src": "1338:32:15"
                      },
                      {
                        "expression": {
                          "id": 1436,
                          "name": "rateProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1422,
                          "src": "1387:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                            "typeString": "contract ERC4626RateProvider"
                          }
                        },
                        "functionReturnParameters": 1419,
                        "id": 1437,
                        "nodeType": "Return",
                        "src": "1380:19:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1411,
                    "nodeType": "StructuredDocumentation",
                    "src": "1031:142:15",
                    "text": " @notice Deploys a new ERC4626RateProvider contract using an ERC4626 contract.\n @param erc4626 - The ERC4626 contract."
                  },
                  "functionSelector": "9ed93318",
                  "id": 1439,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nameLocation": "1187:6:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1414,
                        "mutability": "mutable",
                        "name": "erc4626",
                        "nameLocation": "1203:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "1194:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$581",
                          "typeString": "contract IERC4626"
                        },
                        "typeName": {
                          "id": 1413,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1412,
                            "name": "IERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 581,
                            "src": "1194:8:15"
                          },
                          "referencedDeclaration": 581,
                          "src": "1194:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$581",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1193:18:15"
                  },
                  "returnParameters": {
                    "id": 1419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1418,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "1230:19:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                          "typeString": "contract ERC4626RateProvider"
                        },
                        "typeName": {
                          "id": 1417,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1416,
                            "name": "ERC4626RateProvider",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "1230:19:15"
                          },
                          "referencedDeclaration": 1403,
                          "src": "1230:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC4626RateProvider_$1403",
                            "typeString": "contract ERC4626RateProvider"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1229:21:15"
                  },
                  "scope": 1440,
                  "src": "1178:228:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1441,
              "src": "962:446:15",
              "usedErrors": []
            }
          ],
          "src": "688:721:15"
        },
        "id": 15
      },
      "contracts/StaticATokenRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/StaticATokenRateProvider.sol",
          "exportedSymbols": {
            "ILendingPool": [
              1564
            ],
            "IRateProvider": [
              1572
            ],
            "IStaticAToken": [
              1595
            ],
            "StaticATokenRateProvider": [
              1493
            ]
          },
          "id": 1494,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1442,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:16"
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1443,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1494,
              "sourceUnit": 1573,
              "src": "713:40:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IStaticAToken.sol",
              "file": "./interfaces/IStaticAToken.sol",
              "id": 1444,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1494,
              "sourceUnit": 1596,
              "src": "754:40:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1446,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "982:13:16"
                  },
                  "id": 1447,
                  "nodeType": "InheritanceSpecifier",
                  "src": "982:13:16"
                }
              ],
              "canonicalName": "StaticATokenRateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1445,
                "nodeType": "StructuredDocumentation",
                "src": "796:148:16",
                "text": " @title Wrapped aToken Rate Provider\n @notice Returns the value of a wrapped (static) aToken in terms of the underlying (dynamic) aToken"
              },
              "fullyImplemented": true,
              "id": 1493,
              "linearizedBaseContracts": [
                1493,
                1572
              ],
              "name": "StaticATokenRateProvider",
              "nameLocation": "954:24:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "a59a9973",
                  "id": 1450,
                  "mutability": "immutable",
                  "name": "lendingPool",
                  "nameLocation": "1032:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "1002:41:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILendingPool_$1564",
                    "typeString": "contract ILendingPool"
                  },
                  "typeName": {
                    "id": 1449,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1448,
                      "name": "ILendingPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1564,
                      "src": "1002:12:16"
                    },
                    "referencedDeclaration": 1564,
                    "src": "1002:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPool_$1564",
                      "typeString": "contract ILendingPool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "38d52e0f",
                  "id": 1452,
                  "mutability": "immutable",
                  "name": "asset",
                  "nameLocation": "1074:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "1049:30:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1470,
                    "nodeType": "Block",
                    "src": "1122:88:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1458,
                            "name": "lendingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1450,
                            "src": "1132:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPool_$1564",
                              "typeString": "contract ILendingPool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1459,
                                "name": "_waToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1455,
                                "src": "1146:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStaticAToken_$1595",
                                  "typeString": "contract IStaticAToken"
                                }
                              },
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "LENDING_POOL",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1588,
                              "src": "1146:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILendingPool_$1564_$",
                                "typeString": "function () view external returns (contract ILendingPool)"
                              }
                            },
                            "id": 1461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1146:23:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPool_$1564",
                              "typeString": "contract ILendingPool"
                            }
                          },
                          "src": "1132:37:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILendingPool_$1564",
                            "typeString": "contract ILendingPool"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "1132:37:16"
                      },
                      {
                        "expression": {
                          "id": 1468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1464,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1452,
                            "src": "1179:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1465,
                                "name": "_waToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1455,
                                "src": "1187:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStaticAToken_$1595",
                                  "typeString": "contract IStaticAToken"
                                }
                              },
                              "id": 1466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ASSET",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1581,
                              "src": "1187:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1187:16:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1179:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1469,
                        "nodeType": "ExpressionStatement",
                        "src": "1179:24:16"
                      }
                    ]
                  },
                  "id": 1471,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1455,
                        "mutability": "mutable",
                        "name": "_waToken",
                        "nameLocation": "1112:8:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1471,
                        "src": "1098:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaticAToken_$1595",
                          "typeString": "contract IStaticAToken"
                        },
                        "typeName": {
                          "id": 1454,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1453,
                            "name": "IStaticAToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1595,
                            "src": "1098:13:16"
                          },
                          "referencedDeclaration": 1595,
                          "src": "1098:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStaticAToken_$1595",
                            "typeString": "contract IStaticAToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1097:24:16"
                  },
                  "returnParameters": {
                    "id": 1457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1122:0:16"
                  },
                  "scope": 1493,
                  "src": "1086:124:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1491,
                    "nodeType": "Block",
                    "src": "1373:624:16",
                    "statements": [
                      {
                        "assignments": [
                          1479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1479,
                            "mutability": "mutable",
                            "name": "rate",
                            "nameLocation": "1763:4:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1491,
                            "src": "1755:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1478,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1755:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1484,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1482,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1452,
                              "src": "1809:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1480,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1450,
                              "src": "1770:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$1564",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 1481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getReserveNormalizedIncome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1563,
                            "src": "1770:38:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:45:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1755:60:16"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1485,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "1978:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1985:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "39",
                              "id": 1487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1989:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "src": "1985:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            }
                          },
                          "src": "1978:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1477,
                        "id": 1490,
                        "nodeType": "Return",
                        "src": "1971:19:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1472,
                    "nodeType": "StructuredDocumentation",
                    "src": "1216:92:16",
                    "text": " @return The value of the wrapped aToken in terms of the underlying aToken"
                  },
                  "functionSelector": "679aefce",
                  "id": 1492,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "1322:7:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1474,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1346:8:16"
                  },
                  "parameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1329:2:16"
                  },
                  "returnParameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "1364:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1364:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1363:9:16"
                  },
                  "scope": 1493,
                  "src": "1313:684:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1494,
              "src": "945:1054:16",
              "usedErrors": []
            }
          ],
          "src": "688:1312:16"
        },
        "id": 16
      },
      "contracts/WstETHRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/WstETHRateProvider.sol",
          "exportedSymbols": {
            "IRateProvider": [
              1572
            ],
            "IwstETH": [
              1615
            ],
            "WstETHRateProvider": [
              1527
            ]
          },
          "id": 1528,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1495,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:17"
            },
            {
              "absolutePath": "contracts/interfaces/IRateProvider.sol",
              "file": "./interfaces/IRateProvider.sol",
              "id": 1496,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1528,
              "sourceUnit": 1573,
              "src": "713:40:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IwstETH.sol",
              "file": "./interfaces/IwstETH.sol",
              "id": 1497,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1528,
              "sourceUnit": 1616,
              "src": "754:34:17",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1499,
                    "name": "IRateProvider",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1572,
                    "src": "924:13:17"
                  },
                  "id": 1500,
                  "nodeType": "InheritanceSpecifier",
                  "src": "924:13:17"
                }
              ],
              "canonicalName": "WstETHRateProvider",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1498,
                "nodeType": "StructuredDocumentation",
                "src": "790:102:17",
                "text": " @title Wrapped stETH Rate Provider\n @notice Returns the value of wstETH in terms of stETH"
              },
              "fullyImplemented": true,
              "id": 1527,
              "linearizedBaseContracts": [
                1527,
                1572
              ],
              "name": "WstETHRateProvider",
              "nameLocation": "902:18:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "4aa07e64",
                  "id": 1503,
                  "mutability": "immutable",
                  "name": "wstETH",
                  "nameLocation": "969:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "944:31:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IwstETH_$1615",
                    "typeString": "contract IwstETH"
                  },
                  "typeName": {
                    "id": 1502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1501,
                      "name": "IwstETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1615,
                      "src": "944:7:17"
                    },
                    "referencedDeclaration": 1615,
                    "src": "944:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IwstETH_$1615",
                      "typeString": "contract IwstETH"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1513,
                    "nodeType": "Block",
                    "src": "1011:33:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1509,
                            "name": "wstETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "1021:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IwstETH_$1615",
                              "typeString": "contract IwstETH"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1510,
                            "name": "_wstETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "1030:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IwstETH_$1615",
                              "typeString": "contract IwstETH"
                            }
                          },
                          "src": "1021:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IwstETH_$1615",
                            "typeString": "contract IwstETH"
                          }
                        },
                        "id": 1512,
                        "nodeType": "ExpressionStatement",
                        "src": "1021:16:17"
                      }
                    ]
                  },
                  "id": 1514,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1506,
                        "mutability": "mutable",
                        "name": "_wstETH",
                        "nameLocation": "1002:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 1514,
                        "src": "994:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IwstETH_$1615",
                          "typeString": "contract IwstETH"
                        },
                        "typeName": {
                          "id": 1505,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1504,
                            "name": "IwstETH",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1615,
                            "src": "994:7:17"
                          },
                          "referencedDeclaration": 1615,
                          "src": "994:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IwstETH_$1615",
                            "typeString": "contract IwstETH"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:17:17"
                  },
                  "returnParameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1011:0:17"
                  },
                  "scope": 1527,
                  "src": "982:62:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1571
                  ],
                  "body": {
                    "id": 1525,
                    "nodeType": "Block",
                    "src": "1179:46:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1521,
                              "name": "wstETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "1196:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IwstETH_$1615",
                                "typeString": "contract IwstETH"
                              }
                            },
                            "id": 1522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stEthPerToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1614,
                            "src": "1196:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1196:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1520,
                        "id": 1524,
                        "nodeType": "Return",
                        "src": "1189:29:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1515,
                    "nodeType": "StructuredDocumentation",
                    "src": "1050:64:17",
                    "text": " @return the value of wstETH in terms of stETH"
                  },
                  "functionSelector": "679aefce",
                  "id": 1526,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "1128:7:17",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1517,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1152:8:17"
                  },
                  "parameters": {
                    "id": 1516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1135:2:17"
                  },
                  "returnParameters": {
                    "id": 1520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1519,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "1170:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1518,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1169:9:17"
                  },
                  "scope": 1527,
                  "src": "1119:106:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1528,
              "src": "893:334:17",
              "usedErrors": []
            }
          ],
          "src": "688:540:17"
        },
        "id": 17
      },
      "contracts/interfaces/IBaseRateProviderFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IBaseRateProviderFactory.sol",
          "exportedSymbols": {
            "IBaseRateProviderFactory": [
              1538
            ]
          },
          "id": 1539,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1529,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:18"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBaseRateProviderFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1538,
              "linearizedBaseContracts": [
                1538
              ],
              "name": "IBaseRateProviderFactory",
              "nameLocation": "723:24:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1530,
                    "nodeType": "StructuredDocumentation",
                    "src": "754:237:18",
                    "text": " @dev Checks if a rate provider was created by the derived factory.\n @param rateProvider - Address of the rate provider to check.\n @return bool - True if the rate provider was created by the derived factory."
                  },
                  "functionSelector": "19912f71",
                  "id": 1537,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRateProviderFromFactory",
                  "nameLocation": "1005:25:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1532,
                        "mutability": "mutable",
                        "name": "rateProvider",
                        "nameLocation": "1039:12:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "1031:20:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1031:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1030:22:18"
                  },
                  "returnParameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "1076:4:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1076:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1075:6:18"
                  },
                  "scope": 1538,
                  "src": "996:86:18",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1539,
              "src": "713:371:18",
              "usedErrors": []
            }
          ],
          "src": "688:397:18"
        },
        "id": 18
      },
      "contracts/interfaces/ICToken.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ICToken.sol",
          "exportedSymbols": {
            "ICToken": [
              1553
            ]
          },
          "id": 1554,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1540,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:19"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ICToken",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1553,
              "linearizedBaseContracts": [
                1553
              ],
              "name": "ICToken",
              "nameLocation": "723:7:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1541,
                    "nodeType": "StructuredDocumentation",
                    "src": "737:84:19",
                    "text": " @notice Indicator that this is a CToken contract (for inspection)"
                  },
                  "functionSelector": "fe9c44ae",
                  "id": 1546,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isCToken",
                  "nameLocation": "835:8:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "843:2:19"
                  },
                  "returnParameters": {
                    "id": 1545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1544,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1546,
                        "src": "869:4:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1543,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "869:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "868:6:19"
                  },
                  "scope": 1553,
                  "src": "826:49:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1547,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:89:19",
                    "text": " @notice Calculates the exchange rate from the underlying to the CToken"
                  },
                  "functionSelector": "182df0f5",
                  "id": 1552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exchangeRateStored",
                  "nameLocation": "984:18:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1548,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1002:2:19"
                  },
                  "returnParameters": {
                    "id": 1551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1550,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1028:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1027:9:19"
                  },
                  "scope": 1553,
                  "src": "975:62:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1554,
              "src": "713:326:19",
              "usedErrors": []
            }
          ],
          "src": "688:352:19"
        },
        "id": 19
      },
      "contracts/interfaces/ILendingPool.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ILendingPool.sol",
          "exportedSymbols": {
            "ILendingPool": [
              1564
            ]
          },
          "id": 1565,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1555,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:20"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ILendingPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1564,
              "linearizedBaseContracts": [
                1564
              ],
              "name": "ILendingPool",
              "nameLocation": "723:12:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1556,
                    "nodeType": "StructuredDocumentation",
                    "src": "742:106:20",
                    "text": " @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27"
                  },
                  "functionSelector": "d15e0053",
                  "id": 1563,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserveNormalizedIncome",
                  "nameLocation": "862:26:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1558,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "897:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 1563,
                        "src": "889:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1557,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:15:20"
                  },
                  "returnParameters": {
                    "id": 1562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1561,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1563,
                        "src": "927:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1560,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "927:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "926:9:20"
                  },
                  "scope": 1564,
                  "src": "853:83:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1565,
              "src": "713:225:20",
              "usedErrors": []
            }
          ],
          "src": "688:251:20"
        },
        "id": 20
      },
      "contracts/interfaces/IRateProvider.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IRateProvider.sol",
          "exportedSymbols": {
            "IRateProvider": [
              1572
            ]
          },
          "id": 1573,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1566,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:21"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IRateProvider",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1572,
              "linearizedBaseContracts": [
                1572
              ],
              "name": "IRateProvider",
              "nameLocation": "760:13:21",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "679aefce",
                  "id": 1571,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "789:7:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1567,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:21"
                  },
                  "returnParameters": {
                    "id": 1570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1569,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1571,
                        "src": "822:7:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:21"
                  },
                  "scope": 1572,
                  "src": "780:51:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1573,
              "src": "750:83:21",
              "usedErrors": []
            }
          ],
          "src": "688:146:21"
        },
        "id": 21
      },
      "contracts/interfaces/IStaticAToken.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IStaticAToken.sol",
          "exportedSymbols": {
            "ILendingPool": [
              1564
            ],
            "IStaticAToken": [
              1595
            ]
          },
          "id": 1596,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1574,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:22"
            },
            {
              "absolutePath": "contracts/interfaces/ILendingPool.sol",
              "file": "./ILendingPool.sol",
              "id": 1575,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1596,
              "sourceUnit": 1565,
              "src": "713:28:22",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IStaticAToken",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1595,
              "linearizedBaseContracts": [
                1595
              ],
              "name": "IStaticAToken",
              "nameLocation": "753:13:22",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1576,
                    "nodeType": "StructuredDocumentation",
                    "src": "773:82:22",
                    "text": " @dev returns the address of the staticAToken's underlying asset"
                  },
                  "functionSelector": "4800d97f",
                  "id": 1581,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ASSET",
                  "nameLocation": "869:5:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1577,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "874:2:22"
                  },
                  "returnParameters": {
                    "id": 1580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1579,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1581,
                        "src": "900:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1578,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "899:9:22"
                  },
                  "scope": 1595,
                  "src": "860:49:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1582,
                    "nodeType": "StructuredDocumentation",
                    "src": "915:78:22",
                    "text": " @dev returns the address of the staticAToken's lending pool"
                  },
                  "functionSelector": "b4dcfc77",
                  "id": 1588,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "LENDING_POOL",
                  "nameLocation": "1007:12:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1019:2:22"
                  },
                  "returnParameters": {
                    "id": 1587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1586,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1588,
                        "src": "1045:12:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$1564",
                          "typeString": "contract ILendingPool"
                        },
                        "typeName": {
                          "id": 1585,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1584,
                            "name": "ILendingPool",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1564,
                            "src": "1045:12:22"
                          },
                          "referencedDeclaration": 1564,
                          "src": "1045:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILendingPool_$1564",
                            "typeString": "contract ILendingPool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1044:14:22"
                  },
                  "scope": 1595,
                  "src": "998:61:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1589,
                    "nodeType": "StructuredDocumentation",
                    "src": "1065:106:22",
                    "text": " @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27"
                  },
                  "functionSelector": "2c4e722e",
                  "id": 1594,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rate",
                  "nameLocation": "1185:4:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1189:2:22"
                  },
                  "returnParameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1594,
                        "src": "1215:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1215:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1214:9:22"
                  },
                  "scope": 1595,
                  "src": "1176:48:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1596,
              "src": "743:483:22",
              "usedErrors": []
            }
          ],
          "src": "688:539:22"
        },
        "id": 22
      },
      "contracts/interfaces/IwBETH.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IwBETH.sol",
          "exportedSymbols": {
            "IwBETH": [
              1605
            ]
          },
          "id": 1606,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1597,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "679:23:23"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IwBETH",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1598,
                "nodeType": "StructuredDocumentation",
                "src": "704:65:23",
                "text": " @title Token wrapper for Binance ETH staking deposits."
              },
              "fullyImplemented": false,
              "id": 1605,
              "linearizedBaseContracts": [
                1605
              ],
              "name": "IwBETH",
              "nameLocation": "780:6:23",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1599,
                    "nodeType": "StructuredDocumentation",
                    "src": "793:97:23",
                    "text": " @notice Get amount of ETH for 1 wBETH\n @return Amount of ETH for 1 wBETH"
                  },
                  "functionSelector": "3ba0b9a9",
                  "id": 1604,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exchangeRate",
                  "nameLocation": "904:12:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1600,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "916:2:23"
                  },
                  "returnParameters": {
                    "id": 1603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1602,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1604,
                        "src": "942:7:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "942:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "941:9:23"
                  },
                  "scope": 1605,
                  "src": "895:56:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1606,
              "src": "770:183:23",
              "usedErrors": []
            }
          ],
          "src": "679:275:23"
        },
        "id": 23
      },
      "contracts/interfaces/IwstETH.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IwstETH.sol",
          "exportedSymbols": {
            "IwstETH": [
              1615
            ]
          },
          "id": 1616,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1607,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "90:23:24"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IwstETH",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1608,
                "nodeType": "StructuredDocumentation",
                "src": "115:811:24",
                "text": " @title StETH token wrapper with static balances.\n @dev It's an ERC20 token that represents the account's share of the total\n supply of stETH tokens. WstETH token's balance only changes on transfers,\n unlike StETH that is also changed when oracles report staking rewards and\n penalties. It's a \"power user\" token for DeFi protocols which don't\n support rebasable tokens.\n The contract is also a trustless wrapper that accepts stETH tokens and mints\n wstETH in return. Then the user unwraps, the contract burns user's wstETH\n and sends user locked stETH in return.\n The contract provides the staking shortcut: user can send ETH with regular\n transfer and get wstETH in return. The contract will send ETH to Lido submit\n method, staking it and wrapping the received stETH."
              },
              "fullyImplemented": false,
              "id": 1615,
              "linearizedBaseContracts": [
                1615
              ],
              "name": "IwstETH",
              "nameLocation": "937:7:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1609,
                    "nodeType": "StructuredDocumentation",
                    "src": "951:107:24",
                    "text": " @notice Get amount of wstETH for a one stETH\n @return Amount of stETH for 1 wstETH"
                  },
                  "functionSelector": "035faf82",
                  "id": 1614,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stEthPerToken",
                  "nameLocation": "1072:13:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1610,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1085:2:24"
                  },
                  "returnParameters": {
                    "id": 1613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1612,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1614,
                        "src": "1111:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1111:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1110:9:24"
                  },
                  "scope": 1615,
                  "src": "1063:57:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1616,
              "src": "927:195:24",
              "usedErrors": []
            }
          ],
          "src": "90:1033:24"
        },
        "id": 24
      }
    }
  }
}