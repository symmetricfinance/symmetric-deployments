{"id":"ab353ef395c78dc012628178392037fa","_format":"hh-sol-build-info-1","solcVersion":"0.8.12","solcLongVersion":"0.8.12+commit.f00d7308","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable2Step.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/BribeFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {Ownable2Step} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {Clones} from \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport {IBribeMarket} from \"./interfaces/IBribeMarket.sol\";\nimport {IBribeVault} from \"./interfaces/IBribeVault.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\n\ncontract BribeFactory is Ownable2Step {\n    address public bribeMarketImplementation;\n    address public bribeVault;\n    uint256 public constant MAX_PERIODS = 10;\n    uint256 public constant MAX_PERIOD_DURATION = 30 days;\n\n    event BribeMarketCreated(address indexed bribeMarket);\n    event BribeMarketImplementationUpdated(\n        address indexed bribeMarketImplementation\n    );\n    event BribeVaultUpdated(address indexed bribeVault);\n\n    /**\n        @notice Check if the specified address is a contract\n        @param  _address  Address to be checked\n     */\n    modifier isContract(address _address) {\n        uint256 codeSize;\n        assembly {\n            codeSize := extcodesize(_address)\n        }\n        if (codeSize == 0) revert Errors.NotAContract();\n        _;\n    }\n\n    /**\n        @param  _implementation  Address of the implementation contract\n        @param  _bribeVault      Address of the bribe vault\n     */\n    constructor(address _implementation, address _bribeVault) {\n        _setBribeMarketImplementation(_implementation);\n        _setBribeVault(_bribeVault);\n    }\n\n    /**\n        @notice Deploy a new bribe market\n        @param  _protocol        address  Market name/identifier\n        @param  _maxPeriods      uint256  Maximum number of periods for bribe deposits\n        @param  _periodDuration  uint256  Period duration in each voting round\n     */\n    function createBribeMarket(\n        string calldata _protocol,\n        uint256 _maxPeriods,\n        uint256 _periodDuration\n    ) external returns (address) {\n        if (_maxPeriods == 0 || _maxPeriods > MAX_PERIODS)\n            revert Errors.InvalidMaxPeriod();\n        if (_periodDuration == 0 || _periodDuration > MAX_PERIOD_DURATION)\n            revert Errors.InvalidPeriodDuration();\n\n        address bribeMarket = Clones.clone(bribeMarketImplementation);\n\n        IBribeMarket(bribeMarket).initialize(\n            bribeVault,\n            msg.sender,\n            _protocol,\n            _maxPeriods,\n            _periodDuration\n        );\n        IBribeVault(bribeVault).grantDepositorRole(bribeMarket);\n\n        emit BribeMarketCreated(bribeMarket);\n\n        return bribeMarket;\n    }\n\n    /**\n        @notice Set the bribe market implementation address\n        @param  _implementation  address  Implementation address\n     */\n    function setBribeMarketImplementation(\n        address _implementation\n    ) external onlyOwner {\n        _setBribeMarketImplementation(_implementation);\n\n        emit BribeMarketImplementationUpdated(_implementation);\n    }\n\n    /**\n        @notice Set the bribe vault address\n        @param  _bribeVault  address  Bribe vault address\n     */\n    function setBribeVault(address _bribeVault) external onlyOwner {\n        _setBribeVault(_bribeVault);\n\n        emit BribeVaultUpdated(_bribeVault);\n    }\n\n    /**\n        @notice Internal method to set the bribe market implementation address\n        @param  _implementation  address  Implementation address\n     */\n    function _setBribeMarketImplementation(\n        address _implementation\n    ) internal isContract(_implementation) {\n        bribeMarketImplementation = _implementation;\n    }\n\n    /**\n        @notice Internal method to set the bribe vault address\n        @param  _bribeVault  address  Bribe vault address\n     */\n    function _setBribeVault(\n        address _bribeVault\n    ) internal isContract(_bribeVault) {\n        uint256 codeSize;\n        assembly {\n            codeSize := extcodesize(_bribeVault)\n        }\n        if (codeSize == 0) revert Errors.NotAContract();\n\n        bribeVault = _bribeVault;\n    }\n}\n"},"contracts/BribeMarket.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IBribeVault} from \"./interfaces/IBribeVault.sol\";\nimport {Common} from \"./libraries/Common.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\n\ncontract BribeMarket is AccessControl, ReentrancyGuard {\n    bytes32 public constant TEAM_ROLE = keccak256(\"TEAM_ROLE\");\n\n    uint256 public constant MAX_PERIODS = 10;\n    uint256 public constant MAX_PERIOD_DURATION = 30 days;\n\n    // Name (identifier) of the market, also used for rewardIdentifiers\n    // Immutable after initialization\n    string public PROTOCOL;\n\n    // Address of the bribeVault\n    // Immutable after initialization\n    address public BRIBE_VAULT;\n\n    // Maximum number of periods\n    uint256 public maxPeriods;\n\n    // Period duration\n    uint256 public periodDuration;\n\n    // Whitelisted bribe tokens\n    address[] private _allWhitelistedTokens;\n\n    // Blacklisted voters\n    address[] private _allBlacklistedVoters;\n\n    // Arbitrary bytes mapped to deadlines\n    mapping(bytes32 => uint256) public proposalDeadlines;\n\n    // Tracks whitelisted tokens\n    mapping(address => uint256) public indexOfWhitelistedToken;\n\n    // Tracks blacklisted voters\n    mapping(address => uint256) public indexOfBlacklistedVoter;\n\n    bool private _initialized;\n\n    event Initialize(\n        address bribeVault,\n        address admin,\n        string protocol,\n        uint256 maxPeriods,\n        uint256 periodDuration\n    );\n    event GrantTeamRole(address teamMember);\n    event RevokeTeamRole(address teamMember);\n    event SetProposals(bytes32[] proposals, uint256 indexed deadline);\n    event SetProposalsById(\n        uint256 indexed proposalIndex,\n        bytes32[] proposals,\n        uint256 indexed deadline\n    );\n    event SetProposalsByAddress(bytes32[] proposals, uint256 indexed deadline);\n    event AddWhitelistedTokens(address[] tokens);\n    event RemoveWhitelistedTokens(address[] tokens);\n    event SetMaxPeriods(uint256 maxPeriods);\n    event SetPeriodDuration(uint256 periodDuration);\n    event AddBlacklistedVoters(address[] voters);\n    event RemoveBlacklistedVoters(address[] voters);\n\n    modifier onlyAuthorized() {\n        if (\n            !hasRole(DEFAULT_ADMIN_ROLE, msg.sender) &&\n            !hasRole(TEAM_ROLE, msg.sender)\n        ) revert Errors.NotAuthorized();\n        _;\n    }\n\n    modifier onlyInitializer() {\n        if (_initialized) revert Errors.AlreadyInitialized();\n        _;\n        _initialized = true;\n    }\n\n    /**\n        @notice Initialize the contract\n        @param  _bribeVault  Bribe vault address\n        @param  _admin       Admin address\n        @param  _protocol    Protocol name\n        @param  _maxPeriods  Maximum number of periods\n        @param  _periodDuration  Period duration\n     */\n    function initialize(\n        address _bribeVault,\n        address _admin,\n        string calldata _protocol,\n        uint256 _maxPeriods,\n        uint256 _periodDuration\n    ) external onlyInitializer {\n        if (_bribeVault == address(0)) revert Errors.InvalidAddress();\n        if (bytes(_protocol).length == 0) revert Errors.InvalidProtocol();\n        if (_maxPeriods == 0 || _maxPeriods > MAX_PERIODS)\n            revert Errors.InvalidMaxPeriod();\n        if (_periodDuration == 0 || _periodDuration > MAX_PERIOD_DURATION)\n            revert Errors.InvalidPeriodDuration();\n\n        BRIBE_VAULT = _bribeVault;\n        PROTOCOL = _protocol;\n        maxPeriods = _maxPeriods;\n        periodDuration = _periodDuration;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\n\n        emit Initialize(\n            _bribeVault,\n            _admin,\n            _protocol,\n            _maxPeriods,\n            _periodDuration\n        );\n    }\n\n    /**\n        @notice Set multiple proposals with arbitrary bytes data as identifiers under the same deadline\n        @param  _identifiers  bytes[]  identifiers\n        @param  _deadline     uint256  Proposal deadline\n     */\n    function setProposals(\n        bytes[] calldata _identifiers,\n        uint256 _deadline\n    ) external onlyAuthorized {\n        uint256 identifiersLen = _identifiers.length;\n        if (identifiersLen == 0) revert Errors.InvalidAddress();\n        if (_deadline < block.timestamp) revert Errors.InvalidDeadline();\n\n        bytes32[] memory proposalIds = new bytes32[](identifiersLen);\n\n        uint256 i;\n        do {\n            if (_identifiers[i].length == 0) revert Errors.InvalidIdentifier();\n\n            proposalIds[i] = keccak256(abi.encodePacked(_identifiers[i]));\n\n            _setProposal(proposalIds[i], _deadline);\n\n            ++i;\n        } while (i < identifiersLen);\n\n        emit SetProposals(proposalIds, _deadline);\n    }\n\n    /**\n        @notice Set proposals based on the index of the proposal and the number of choices\n        @param  _proposalIndex  uint256  Proposal index\n        @param  _choiceCount    uint256  Number of choices to be voted for\n        @param  _deadline       uint256  Proposal deadline\n     */\n    function setProposalsById(\n        uint256 _proposalIndex,\n        uint256 _choiceCount,\n        uint256 _deadline\n    ) external onlyAuthorized {\n        if (_choiceCount == 0) revert Errors.InvalidChoiceCount();\n        if (_deadline < block.timestamp) revert Errors.InvalidDeadline();\n\n        bytes32[] memory proposalIds = new bytes32[](_choiceCount);\n\n        uint256 i;\n        do {\n            proposalIds[i] = keccak256(abi.encodePacked(_proposalIndex, i));\n\n            _setProposal(proposalIds[i], _deadline);\n\n            ++i;\n        } while (i < _choiceCount);\n\n        emit SetProposalsById(_proposalIndex, proposalIds, _deadline);\n    }\n\n    /**\n        @notice Set multiple proposals for many addresses under the same deadline\n        @param  _addresses  address[]  addresses (eg. gauge addresses)\n        @param  _deadline   uint256    Proposal deadline\n     */\n    function setProposalsByAddress(\n        address[] calldata _addresses,\n        uint256 _deadline\n    ) external onlyAuthorized {\n        uint256 addressesLen = _addresses.length;\n        if (addressesLen == 0) revert Errors.InvalidAddress();\n        if (_deadline < block.timestamp) revert Errors.InvalidDeadline();\n\n        bytes32[] memory proposalIds = new bytes32[](addressesLen);\n\n        uint256 i;\n        do {\n            if (_addresses[i] == address(0)) revert Errors.InvalidAddress();\n\n            proposalIds[i] = keccak256(abi.encodePacked(_addresses[i]));\n\n            _setProposal(proposalIds[i], _deadline);\n\n            ++i;\n        } while (i < addressesLen);\n\n        emit SetProposalsByAddress(proposalIds, _deadline);\n    }\n\n    /**\n        @notice Grant the team role to an address\n        @param  _teamMember  address  Address to grant the teamMember role\n     */\n    function grantTeamRole(\n        address _teamMember\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (_teamMember == address(0)) revert Errors.InvalidAddress();\n        _grantRole(TEAM_ROLE, _teamMember);\n\n        emit GrantTeamRole(_teamMember);\n    }\n\n    /**\n        @notice Revoke the team role from an address\n        @param  _teamMember  address  Address to revoke the teamMember role\n     */\n    function revokeTeamRole(\n        address _teamMember\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (!hasRole(TEAM_ROLE, _teamMember)) revert Errors.NotTeamMember();\n        _revokeRole(TEAM_ROLE, _teamMember);\n\n        emit RevokeTeamRole(_teamMember);\n    }\n\n    /**\n        @notice Set maximum periods for submitting bribes ahead of time\n        @param  _periods  uint256  Maximum periods\n     */\n    function setMaxPeriods(\n        uint256 _periods\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (_periods == 0 || _periods > MAX_PERIODS)\n            revert Errors.InvalidMaxPeriod();\n\n        maxPeriods = _periods;\n\n        emit SetMaxPeriods(_periods);\n    }\n\n    /**\n        @notice Set period duration per voting round\n        @param  _periodDuration  uint256  Period duration\n     */\n    function setPeriodDuration(\n        uint256 _periodDuration\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (_periodDuration == 0 || _periodDuration > MAX_PERIOD_DURATION)\n            revert Errors.InvalidPeriodDuration();\n\n        periodDuration = _periodDuration;\n\n        emit SetPeriodDuration(_periodDuration);\n    }\n\n    /**\n        @notice Add whitelisted tokens\n        @param  _tokens  address[]  Tokens to add to whitelist\n     */\n    function addWhitelistedTokens(\n        address[] calldata _tokens\n    ) external onlyAuthorized {\n        uint256 tLen = _tokens.length;\n        for (uint256 i; i < tLen; ) {\n            if (_tokens[i] == address(0)) revert Errors.InvalidAddress();\n            if (_tokens[i] == BRIBE_VAULT)\n                revert Errors.NoWhitelistBribeVault();\n            if (isWhitelistedToken(_tokens[i]))\n                revert Errors.TokenWhitelisted();\n\n            // Perform creation op for the unordered key set\n            _allWhitelistedTokens.push(_tokens[i]);\n            indexOfWhitelistedToken[_tokens[i]] =\n                _allWhitelistedTokens.length -\n                1;\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit AddWhitelistedTokens(_tokens);\n    }\n\n    /**\n        @notice Remove whitelisted tokens\n        @param  _tokens  address[]  Tokens to remove from whitelist\n     */\n    function removeWhitelistedTokens(\n        address[] calldata _tokens\n    ) external onlyAuthorized {\n        uint256 tLen = _tokens.length;\n        for (uint256 i; i < tLen; ) {\n            if (!isWhitelistedToken(_tokens[i]))\n                revert Errors.TokenNotWhitelisted();\n\n            // Perform deletion op for the unordered key set\n            // by swapping the affected row to the end/tail of the list\n            uint256 index = indexOfWhitelistedToken[_tokens[i]];\n            address tail = _allWhitelistedTokens[\n                _allWhitelistedTokens.length - 1\n            ];\n\n            _allWhitelistedTokens[index] = tail;\n            indexOfWhitelistedToken[tail] = index;\n\n            delete indexOfWhitelistedToken[_tokens[i]];\n            _allWhitelistedTokens.pop();\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit RemoveWhitelistedTokens(_tokens);\n    }\n\n    /**\n        @notice Add blacklisted voters\n        @param  _voters  address[]  Voters to add to blacklist\n     */\n    function addBlacklistedVoters(\n        address[] calldata _voters\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 vLen = _voters.length;\n        for (uint256 i; i < vLen; ) {\n            if (_voters[i] == address(0)) revert Errors.InvalidAddress();\n            if (isBlacklistedVoter(_voters[i]))\n                revert Errors.VoterBlacklisted();\n\n            _allBlacklistedVoters.push(_voters[i]);\n            indexOfBlacklistedVoter[_voters[i]] =\n                _allBlacklistedVoters.length -\n                1;\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit AddBlacklistedVoters(_voters);\n    }\n\n    /**\n        @notice Remove blacklisted voters\n        @param  _voters  address[]  Voters to remove from blacklist\n     */\n    function removeBlacklistedVoters(\n        address[] calldata _voters\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 vLen = _voters.length;\n        for (uint256 i; i < vLen; ) {\n            if (!isBlacklistedVoter(_voters[i]))\n                revert Errors.VoterNotBlacklisted();\n\n            // Perform deletion op for the unordered key set\n            // by swapping the affected row to the end/tail of the list\n            uint256 index = indexOfBlacklistedVoter[_voters[i]];\n            address tail = _allBlacklistedVoters[\n                _allBlacklistedVoters.length - 1\n            ];\n\n            _allBlacklistedVoters[index] = tail;\n            indexOfBlacklistedVoter[tail] = index;\n\n            delete indexOfBlacklistedVoter[_voters[i]];\n            _allBlacklistedVoters.pop();\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit RemoveBlacklistedVoters(_voters);\n    }\n\n    /**\n        @notice Deposit bribe for a proposal (ERC20 tokens only)\n        @param  _proposal          bytes32  Proposal\n        @param  _token             address  Token\n        @param  _amount            uint256  Token amount\n        @param  _maxTokensPerVote  uint256  Max amount of token per vote\n        @param  _periods           uint256  Number of periods the bribe will be valid\n     */\n    function depositBribe(\n        bytes32 _proposal,\n        address _token,\n        uint256 _amount,\n        uint256 _maxTokensPerVote,\n        uint256 _periods\n    ) external nonReentrant {\n        _depositBribe(\n            _proposal,\n            _token,\n            _amount,\n            _maxTokensPerVote,\n            _periods,\n            0,\n            \"\"\n        );\n    }\n\n    /**\n        @notice Deposit bribe for a proposal (ERC20 tokens only) using permit\n        @param  _proposal          bytes32  Proposal\n        @param  _token             address  Token\n        @param  _amount            uint256  Token amount\n        @param  _maxTokensPerVote  uint256  Max amount of token per vote\n        @param  _periods           uint256  Number of periods the bribe will be valid\n        @param  _permitDeadline    uint256  Deadline for permit signature\n        @param  _signature         bytes    Permit signature\n     */\n    function depositBribeWithPermit(\n        bytes32 _proposal,\n        address _token,\n        uint256 _amount,\n        uint256 _maxTokensPerVote,\n        uint256 _periods,\n        uint256 _permitDeadline,\n        bytes memory _signature\n    ) external nonReentrant {\n        _depositBribe(\n            _proposal,\n            _token,\n            _amount,\n            _maxTokensPerVote,\n            _periods,\n            _permitDeadline,\n            _signature\n        );\n    }\n\n    /**\n        @notice Return the list of currently whitelisted token addresses\n     */\n    function getWhitelistedTokens() external view returns (address[] memory) {\n        return _allWhitelistedTokens;\n    }\n\n    /**\n        @notice Return the list of currently blacklisted voter addresses\n     */\n    function getBlacklistedVoters() external view returns (address[] memory) {\n        return _allBlacklistedVoters;\n    }\n\n    /**\n        @notice Get bribe from BribeVault\n        @param  _proposal          bytes32  Proposal\n        @param  _proposalDeadline  uint256  Proposal deadline\n        @param  _token             address  Token\n        @return bribeToken         address  Token address\n        @return bribeAmount        address  Token amount\n     */\n    function getBribe(\n        bytes32 _proposal,\n        uint256 _proposalDeadline,\n        address _token\n    ) external view returns (address bribeToken, uint256 bribeAmount) {\n        (bribeToken, bribeAmount) = IBribeVault(BRIBE_VAULT).getBribe(\n            keccak256(\n                abi.encodePacked(\n                    address(this),\n                    _proposal,\n                    _proposalDeadline,\n                    _token\n                )\n            )\n        );\n    }\n\n    /**\n        @notice Return whether the specified token is whitelisted\n        @param  _token  address Token address to be checked\n     */\n    function isWhitelistedToken(address _token) public view returns (bool) {\n        if (_allWhitelistedTokens.length == 0) {\n            return false;\n        }\n\n        return\n            indexOfWhitelistedToken[_token] != 0 ||\n            _allWhitelistedTokens[0] == _token;\n    }\n\n    /**\n        @notice Return whether the specified address is blacklisted\n        @param  _voter  address Voter address to be checked\n     */\n    function isBlacklistedVoter(address _voter) public view returns (bool) {\n        if (_allBlacklistedVoters.length == 0) {\n            return false;\n        }\n\n        return\n            indexOfBlacklistedVoter[_voter] != 0 ||\n            _allBlacklistedVoters[0] == _voter;\n    }\n\n    /**\n        @notice Deposit bribe for a proposal (ERC20 tokens only) with optional permit parameters\n        @param  _proposal          bytes32  Proposal\n        @param  _token             address  Token\n        @param  _amount            uint256  Token amount\n        @param  _maxTokensPerVote  uint256  Max amount of token per vote\n        @param  _periods           uint256  Number of periods the bribe will be valid\n        @param  _permitDeadline    uint256  Deadline for permit signature\n        @param  _signature         bytes    Permit signature\n     */\n    function _depositBribe(\n        bytes32 _proposal,\n        address _token,\n        uint256 _amount,\n        uint256 _maxTokensPerVote,\n        uint256 _periods,\n        uint256 _permitDeadline,\n        bytes memory _signature\n    ) internal {\n        uint256 proposalDeadline = proposalDeadlines[_proposal];\n        if (proposalDeadline < block.timestamp) revert Errors.DeadlinePassed();\n        if (_periods == 0 || _periods > maxPeriods)\n            revert Errors.InvalidPeriod();\n        if (_token == address(0)) revert Errors.InvalidAddress();\n        if (!isWhitelistedToken(_token)) revert Errors.TokenNotWhitelisted();\n        if (_amount == 0) revert Errors.InvalidAmount();\n\n        IBribeVault(BRIBE_VAULT).depositBribe(\n            Common.DepositBribeParams({\n                proposal: _proposal,\n                token: _token,\n                briber: msg.sender,\n                amount: _amount,\n                maxTokensPerVote: _maxTokensPerVote,\n                periods: _periods,\n                periodDuration: periodDuration,\n                proposalDeadline: proposalDeadline,\n                permitDeadline: _permitDeadline,\n                signature: _signature\n            })\n        );\n    }\n\n    /**\n        @notice Set a single proposal\n        @param  _proposal  bytes32  Proposal\n        @param  _deadline  uint256  Proposal deadline\n     */\n    function _setProposal(bytes32 _proposal, uint256 _deadline) internal {\n        proposalDeadlines[_proposal] = _deadline;\n    }\n}\n"},"contracts/BribeVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {SafeCast} from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport {IPermit2} from \"./interfaces/IPermit2.sol\";\nimport {IRewardDistributor} from \"./interfaces/IRewardDistributor.sol\";\nimport {Common} from \"./libraries/Common.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\n\ncontract BribeVault is AccessControl {\n    using SafeERC20 for IERC20;\n    using SafeCast for uint256;\n\n    struct Bribe {\n        address token;\n        uint256 amount;\n    }\n\n    struct Transfer {\n        uint256 feeAmount;\n        uint256 distributorAmountTransferred;\n        uint256 distributorAmountReceived;\n    }\n\n    IPermit2 public constant PERMIT2 =\n        IPermit2(0x000000000022D473030F116dDEE9F6B43aC78BA3);\n    uint256 public constant FEE_DIVISOR = 1_000_000;\n    uint256 public immutable FEE_MAX;\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\"DEPOSITOR_ROLE\");\n\n    uint256 public fee; // 5000 = 0.5%\n    address public feeRecipient; // Protocol treasury\n    address public distributor; // RewardDistributor contract\n\n    // Bribe identifiers mapped to Bribe structs\n    // A bribe identifier is composed of different info (e.g. protocol, voting round, etc.)\n    mapping(bytes32 => Bribe) public bribes;\n\n    // Protocol-specific reward identifiers mapped to bribe identifiers\n    // Allows us to group bribes by reward tokens (one token may be used across many bribes)\n    mapping(bytes32 => bytes32[]) public rewardToBribes;\n\n    // Tracks the reward transfer amounts\n    mapping(bytes32 => Transfer) public rewardTransfers;\n\n    // Voter addresses mapped to addresses which will claim rewards on their behalf\n    mapping(address => address) public rewardForwarding;\n\n    event SetFee(uint256 _fee);\n    event SetFeeRecipient(address _feeRecipient);\n    event SetDistributor(address _distributor);\n    event DepositBribe(\n        address indexed market,\n        bytes32 indexed proposal,\n        uint256 indexed deadline,\n        address token,\n        address briber,\n        uint256 amount,\n        uint256 totalAmount,\n        uint256 maxTokensPerVote,\n        uint256 periodIndex\n    );\n    event SetRewardForwarding(address from, address to);\n    event TransferBribe(\n        bytes32 indexed rewardIdentifier,\n        address indexed token,\n        uint256 feeAmount,\n        uint256 distributorAmount\n    );\n    event EmergencyWithdrawal(\n        address indexed token,\n        uint256 amount,\n        address admin\n    );\n\n    /**\n        @param  _fee           uint256  Fee\n        @param  _feeMax        unt256   Maximum fee\n        @param  _feeRecipient  address  Fee recipient\n        @param  _distributor   address  Reward distributor address\n     */\n    constructor(\n        uint256 _fee,\n        uint256 _feeMax,\n        address _feeRecipient,\n        address _distributor\n    ) {\n        // Max. fee shouldn't be >= 50%\n        if (_feeMax >= FEE_DIVISOR / 2) revert Errors.InvalidMaxFee();\n        if (_fee > _feeMax) revert Errors.InvalidFee();\n        if (_feeRecipient == address(0)) revert Errors.InvalidFeeRecipient();\n        if (_distributor == address(0)) revert Errors.InvalidDistributor();\n\n        FEE_MAX = _feeMax;\n        fee = _fee;\n        feeRecipient = _feeRecipient;\n        distributor = _distributor;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    /**\n        @notice Grant the depositor role to an address\n        @param  depositor  address  Address to grant the depositor role\n     */\n    function grantDepositorRole(\n        address depositor\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (depositor == address(0)) revert Errors.InvalidAddress();\n\n        _grantRole(DEPOSITOR_ROLE, depositor);\n    }\n\n    /**\n        @notice Revoke the depositor role from an address\n        @param  depositor  address  Address to revoke the depositor role\n     */\n    function revokeDepositorRole(\n        address depositor\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        // Keeping this redundant check to avoid emitting an event if no role is revoked\n        if (!hasRole(DEPOSITOR_ROLE, depositor)) revert Errors.NotDepositor();\n\n        _revokeRole(DEPOSITOR_ROLE, depositor);\n    }\n\n    /**\n        @notice Set the fee collected by the protocol\n        @param  _fee  uint256  Fee\n     */\n    function setFee(uint256 _fee) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (_fee > FEE_MAX) revert Errors.InvalidFee();\n\n        fee = _fee;\n\n        emit SetFee(_fee);\n    }\n\n    /**\n        @notice Set the protocol address where fees will be transferred\n        @param  _feeRecipient  address  Fee recipient\n     */\n    function setFeeRecipient(\n        address _feeRecipient\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (_feeRecipient == address(0)) revert Errors.InvalidFeeRecipient();\n\n        feeRecipient = _feeRecipient;\n\n        emit SetFeeRecipient(_feeRecipient);\n    }\n\n    /**\n        @notice Set the RewardDistributor contract address\n        @param  _distributor  address  Distributor\n     */\n    function setDistributor(\n        address _distributor\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (_distributor == address(0)) revert Errors.InvalidDistributor();\n\n        distributor = _distributor;\n\n        emit SetDistributor(_distributor);\n    }\n\n    /**\n        @notice Generate the BribeVault identifier based on a scheme\n        @param  _market           address  Market that originated the bribe\n        @param  _proposal         bytes32  Proposal\n        @param  _proposalDeadline uint256  Proposal deadline\n        @param  _token            address  Token\n        @return id                bytes32  BribeVault identifier\n     */\n    function generateBribeVaultIdentifier(\n        address _market,\n        bytes32 _proposal,\n        uint256 _proposalDeadline,\n        address _token\n    ) public pure returns (bytes32 id) {\n        id = keccak256(\n            abi.encodePacked(_market, _proposal, _proposalDeadline, _token)\n        );\n    }\n\n    /**\n        @notice Generate the reward identifier based on a scheme\n        @param  _market            address  Market that originated the reward\n        @param  _proposalDeadline  uint256  Proposal deadline\n        @param  _token             address  Token\n        @return id                 bytes32  Reward identifier\n     */\n    function generateRewardIdentifier(\n        address _market,\n        address _token,\n        uint256 _proposalDeadline\n    ) public pure returns (bytes32 id) {\n        id = keccak256(abi.encodePacked(_market, _proposalDeadline, _token));\n    }\n\n    /**\n        @notice Get bribe information based on the specified identifier\n        @param  bribeIdentifier  bytes32  The specified bribe identifier\n     */\n    function getBribe(\n        bytes32 bribeIdentifier\n    ) external view returns (address token, uint256 amount) {\n        Bribe memory b = bribes[bribeIdentifier];\n        return (b.token, b.amount);\n    }\n\n    /**\n        @notice Return the list of bribe identifiers tied to the specified reward identifier\n     */\n    function getBribeIdentifiersByRewardIdentifier(\n        bytes32 rewardIdentifier\n    ) external view returns (bytes32[] memory) {\n        return rewardToBribes[rewardIdentifier];\n    }\n\n    /**\n        @notice Use permit to perform token transfer\n        @param  _dp  DepositBribeParams  Deposit data\n     */\n    function _transferWithPermit(\n        Common.DepositBribeParams calldata _dp\n    ) internal {\n        // Get current nonce\n        (, , uint48 nonce) = PERMIT2.allowance(\n            _dp.briber,\n            _dp.token,\n            address(this)\n        );\n\n        // Approve the transfer\n        PERMIT2.permit(\n            _dp.briber,\n            IPermit2.PermitSingle({\n                details: IPermit2.PermitDetails({\n                    token: _dp.token,\n                    amount: _dp.amount.toUint160(),\n                    expiration: 2 ** 48 - 1,\n                    nonce: nonce\n                }),\n                spender: address(this),\n                sigDeadline: _dp.permitDeadline\n            }),\n            _dp.signature\n        );\n\n        // Transfer the tokens\n        PERMIT2.transferFrom(\n            _dp.briber,\n            address(this),\n            _dp.amount.toUint160(),\n            _dp.token\n        );\n    }\n\n    /**\n        @notice Deposit bribe (ERC20 only)\n        @param  _dp  DepositBribeParams  Deposit data\n     */\n    function depositBribe(\n        Common.DepositBribeParams calldata _dp\n    ) external onlyRole(DEPOSITOR_ROLE) {\n        if (_dp.token == address(0)) revert Errors.InvalidToken();\n        if (_dp.amount == 0) revert Errors.InvalidAmount();\n        if (_dp.briber == address(0)) revert Errors.InvalidBriber();\n\n        // Store the balance before transfer to calculate post-fee amount\n        uint256 balanceBeforeTransfer = IERC20(_dp.token).balanceOf(\n            address(this)\n        );\n\n        // Transfer the tokens to this contract\n        // Uses permit2 if signature is provided\n        if (_dp.signature.length > 0) {\n            _transferWithPermit(_dp);\n        } else {\n            IERC20(_dp.token).safeTransferFrom(\n                _dp.briber,\n                address(this),\n                _dp.amount\n            );\n        }\n\n        // The difference between balances before and after the transfer is the actual bribe amount\n        uint256 totalBribeAmount = IERC20(_dp.token).balanceOf(address(this)) -\n            balanceBeforeTransfer;\n\n        // Declare bribe data\n        bytes32 bribeIdentifier;\n        uint256 bribeAmount;\n        uint256 deadline;\n\n        // Loop through the specified periods\n        uint256 i;\n        do {\n            deadline = _dp.proposalDeadline + (i * _dp.periodDuration);\n\n            // Generate the bribe identifier\n            bribeIdentifier = generateBribeVaultIdentifier(\n                msg.sender,\n                _dp.proposal,\n                deadline,\n                _dp.token\n            );\n\n            Bribe storage b = bribes[bribeIdentifier];\n\n            // Increase bribe amount and add round error to first period\n            bribeAmount =\n                (totalBribeAmount / _dp.periods) +\n                (i == 0 ? totalBribeAmount % _dp.periods : 0);\n\n            b.amount += bribeAmount;\n\n            // Only set the token address and update the reward-to-bribe mapping if not yet set\n            if (b.token == address(0)) {\n                b.token = _dp.token;\n                rewardToBribes[\n                    generateRewardIdentifier(msg.sender, _dp.token, deadline)\n                ].push(bribeIdentifier);\n            }\n\n            emit DepositBribe(\n                msg.sender,\n                _dp.proposal,\n                deadline,\n                _dp.token,\n                _dp.briber,\n                bribeAmount,\n                b.amount,\n                _dp.maxTokensPerVote,\n                i\n            );\n\n            unchecked {\n                ++i;\n            }\n        } while (i < _dp.periods);\n    }\n\n    /**\n        @notice Voters can opt in or out of reward-forwarding\n        @notice Opt-in: A voter sets another address to forward rewards to\n        @notice Opt-out: A voter sets their own address or the zero address\n        @param  to  address  Account that rewards will be sent to\n     */\n    function setRewardForwarding(address to) external {\n        rewardForwarding[msg.sender] = to;\n\n        emit SetRewardForwarding(msg.sender, to);\n    }\n\n    /**\n        @notice Calculate transfer amounts\n        @param  rewardIdentifier   bytes32  Unique identifier related to reward\n        @return feeAmount          uint256  Amount sent to the protocol treasury\n        @return distributorAmount  uint256  Amount sent to the RewardDistributor\n     */\n    function calculateTransferAmounts(\n        bytes32 rewardIdentifier\n    ) private view returns (uint256 feeAmount, uint256 distributorAmount) {\n        bytes32[] memory bribeIdentifiers = rewardToBribes[rewardIdentifier];\n        uint256 totalAmount;\n        uint256 bLen = bribeIdentifiers.length;\n\n        for (uint256 i; i < bLen; ) {\n            totalAmount += bribes[bribeIdentifiers[i]].amount;\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        feeAmount = (totalAmount * fee) / FEE_DIVISOR;\n        distributorAmount = totalAmount - feeAmount;\n    }\n\n    /**\n        @notice Transfer fees to fee recipient and bribes to distributor and update rewards metadata\n        @param  rewardIdentifiers  bytes32[]  List of rewardIdentifiers\n     */\n    function transferBribes(\n        bytes32[] calldata rewardIdentifiers\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 rLen = rewardIdentifiers.length;\n\n        if (rLen == 0) revert Errors.InvalidArray();\n\n        // Transfer the bribe funds to fee recipient and reward distributor\n        for (uint256 i; i < rLen; ) {\n            bytes32 rewardIdentifier = rewardIdentifiers[i];\n            if (rewardToBribes[rewardIdentifier].length == 0)\n                revert Errors.InvalidRewardIdentifier();\n\n            Transfer storage r = rewardTransfers[rewardIdentifier];\n\n            address token = bribes[rewardToBribes[rewardIdentifier][0]].token;\n            (\n                uint256 feeAmount,\n                uint256 distributorAmount\n            ) = calculateTransferAmounts(rewardIdentifier);\n\n            if (r.distributorAmountTransferred == distributorAmount)\n                revert Errors.BribeAlreadyTransferred();\n\n            uint256 feeToTransfer = feeAmount - r.feeAmount;\n            uint256 distributorAmountToTransfer = distributorAmount -\n                r.distributorAmountTransferred;\n\n            // Set the beforeFees field to prevent duplicate transfers\n            r.feeAmount = feeAmount;\n            r.distributorAmountTransferred = distributorAmount;\n\n            IERC20 t = IERC20(token);\n\n            // Necessary to calculate the after-fee amount received by the distributor\n            uint256 distributorBalance = t.balanceOf(distributor);\n\n            t.safeTransfer(feeRecipient, feeToTransfer);\n            t.safeTransfer(distributor, distributorAmountToTransfer);\n\n            // Set the \"after fees\" field to record actual amount received by the distributor\n            uint256 finalAmountReceived = t.balanceOf(distributor) -\n                distributorBalance;\n            r.distributorAmountReceived += finalAmountReceived;\n\n            emit TransferBribe(\n                rewardIdentifier,\n                token,\n                feeAmount,\n                finalAmountReceived\n            );\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n        @notice Withdraw ERC20 tokens to the admin address\n        @param  token   address  Token address\n        @param  amount  uint256  Token amount\n     */\n    function emergencyWithdraw(\n        address token,\n        uint256 amount\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (token == address(0)) revert Errors.InvalidToken();\n        if (amount == 0) revert Errors.InvalidAmount();\n\n        IERC20(token).safeTransfer(msg.sender, amount);\n\n        emit EmergencyWithdrawal(token, amount, msg.sender);\n    }\n}\n"},"contracts/interfaces/IBribeMarket.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\ninterface IBribeMarket {\n    /**\n        @notice Initialize the contract\n        @param  _bribeVault  Bribe vault address\n        @param  _admin       Admin address\n        @param  _protocol    Protocol name\n        @param  _maxPeriods  Maximum number of periods\n        @param  _periodDuration  Period duration\n     */\n    function initialize(\n        address _bribeVault,\n        address _admin,\n        string calldata _protocol,\n        uint256 _maxPeriods,\n        uint256 _periodDuration\n    ) external;\n}\n"},"contracts/interfaces/IBribeVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"../libraries/Common.sol\";\n\ninterface IBribeVault {\n    /**\n        @notice Deposit bribe (ERC20 only)\n        @param  _depositParams  DepositBribeParams  Deposit data\n     */\n    function depositBribe(\n        Common.DepositBribeParams calldata _depositParams\n    ) external;\n\n    /**\n        @notice Get bribe information based on the specified identifier\n        @param  _bribeIdentifier  bytes32  The specified bribe identifier\n     */\n    function getBribe(\n        bytes32 _bribeIdentifier\n    ) external view returns (address token, uint256 amount);\n\n    /**\n        @notice Transfer fees to fee recipient and bribes to distributor and update rewards metadata\n        @param  _rewardIdentifiers  bytes32[]  List of rewardIdentifiers\n     */\n    function transferBribes(bytes32[] calldata _rewardIdentifiers) external;\n\n    /**\n        @notice Grant the depositor role to an address\n        @param  _depositor  address  Address to grant the depositor role\n     */\n    function grantDepositorRole(address _depositor) external;\n}\n"},"contracts/interfaces/IPermit2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// Minimal Permit2 interface, derived from\n// https://github.com/Uniswap/permit2/blob/main/src/interfaces/IAllowanceTransfer.sol\ninterface IPermit2 {\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allowance\n    struct PermitSingle {\n        // the permit data for a single token allowance\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address user, address token, address spender)\n        external\n        view\n        returns (uint160 amount, uint48 expiration, uint48 nonce);\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n}\n"},"contracts/interfaces/IRewardDistributor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {Common} from \"../libraries/Common.sol\";\n\ninterface IRewardDistributor {\n    /**\n        @notice Update rewards metadata\n        @param  distributions  Distribution[] List of reward distribution details\n     */\n    function updateRewardsMetadata(\n        Common.Distribution[] calldata distributions\n    ) external;\n\n    /** \n        @notice Set the contract's pause state (ie. before taking snapshot for the harvester)\n        @param  state  bool  Pause state\n    */\n    function setPauseState(bool state) external;\n\n    /**\n        @notice Claim rewards based on the specified metadata\n        @param  _claims  Claim[] List of claim metadata\n     */\n    function claim(Common.Claim[] calldata _claims) external;\n}\n"},"contracts/interfaces/IRewardHarvester.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\ninterface IRewardHarvester {\n    /**\n        @notice Return the default token address\n     */\n    function defaultToken() external view returns (address);\n\n    /**\n        @notice Deposit `defaultToken` to this contract\n        @param  _amount  uint256  Amount of `defaultToken` to deposit\n     */\n    function depositReward(uint256 _amount) external;\n}\n"},"contracts/interfaces/IvlAura.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\ninterface vlAura {\n    event DelegateChanged(\n        address indexed delegator,\n        address indexed fromDelegate,\n        address indexed toDelegate\n    );\n\n    /**\n        @notice Delegate of the specified account\n        @param  account  address  Account\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n        @notice Balance of the specified user\n        @param  user  address  User account\n     */\n    function balanceOf(address user) external view returns (uint256 amount);\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) external view returns (uint256);\n}\n"},"contracts/libraries/Common.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nlibrary Common {\n    /**\n     * @param identifier  bytes32  Identifier of the distribution\n     * @param token       address  Address of the token to distribute\n     * @param merkleRoot  bytes32  Merkle root of the distribution\n     * @param proof       bytes32  Proof of the distribution\n     */\n    struct Distribution {\n        bytes32 identifier;\n        address token;\n        bytes32 merkleRoot;\n        bytes32 proof;\n    }\n\n    /**\n     * @param proposal          bytes32  Proposal to bribe\n     * @param token             address  Token to bribe with\n     * @param briber            address  Address of the briber\n     * @param amount            uint256  Amount of tokens to bribe with\n     * @param maxTokensPerVote  uint256  Maximum amount of tokens to use per vote\n     * @param periods           uint256  Number of periods to bribe for\n     * @param periodDuration    uint256  Duration of each period\n     * @param proposalDeadline  uint256  Deadline for the proposal\n     * @param permitDeadline    uint256  Deadline for the permit2 signature\n     * @param signature         bytes    Permit2 signature\n     */\n    struct DepositBribeParams {\n        bytes32 proposal;\n        address token;\n        address briber;\n        uint256 amount;\n        uint256 maxTokensPerVote;\n        uint256 periods;\n        uint256 periodDuration;\n        uint256 proposalDeadline;\n        uint256 permitDeadline;\n        bytes signature;\n    }\n\n    /**\n     * @param rwIdentifier      bytes32    Identifier for claiming reward\n     * @param fromToken         address    Address of token to swap from\n     * @param toToken           address    Address of token to swap to\n     * @param fromAmount        uint256    Amount of fromToken to swap\n     * @param toAmount          uint256    Amount of toToken to receive\n     * @param deadline          uint256    Timestamp until which swap may be fulfilled\n     * @param callees           address[]  Array of addresses to call (DEX addresses)\n     * @param callLengths       uint256[]  Index of the beginning of each call in exchangeData\n     * @param values            uint256[]  Array of encoded values for each call in exchangeData\n     * @param exchangeData      bytes      Calldata to execute on callees\n     * @param rwMerkleProof     bytes32[]  Merkle proof for the reward claim\n     */\n    struct ClaimAndSwapData {\n        bytes32 rwIdentifier;\n        address fromToken;\n        address toToken;\n        uint256 fromAmount;\n        uint256 toAmount;\n        uint256 deadline;\n        address[] callees;\n        uint256[] callLengths;\n        uint256[] values;\n        bytes exchangeData;\n        bytes32[] rwMerkleProof;\n    }\n\n    /**\n     * @param identifier   bytes32    Identifier for claiming reward\n     * @param account      address    Address of the account to claim for\n     * @param amount       uint256    Amount of tokens to claim\n     * @param merkleProof  bytes32[]  Merkle proof for the reward claim\n     */\n    struct Claim {\n        bytes32 identifier;\n        address account;\n        uint256 amount;\n        bytes32[] merkleProof;\n    }\n}\n"},"contracts/libraries/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nlibrary Errors {\n    /**\n     * @notice max period 0 or greater than MAX_PERIODS\n     */\n    error InvalidMaxPeriod();\n\n    /**\n     * @notice period duration 0 or greater than MAX_PERIOD_DURATION\n     */\n    error InvalidPeriodDuration();\n\n    /**\n     * @notice address provided is not a contract\n     */\n    error NotAContract();\n\n    /**\n     * @notice not authorized\n     */\n    error NotAuthorized();\n\n    /**\n     * @notice contract already initialized\n     */\n    error AlreadyInitialized();\n\n    /**\n     * @notice address(0)\n     */\n    error InvalidAddress();\n\n    /**\n     * @notice empty bytes identifier\n     */\n    error InvalidIdentifier();\n\n    /**\n     * @notice invalid protocol name\n     */\n    error InvalidProtocol();\n\n    /**\n     * @notice invalid number of choices\n     */\n    error InvalidChoiceCount();\n\n    /**\n     * @notice invalid input amount\n     */\n    error InvalidAmount();\n\n    /**\n     * @notice not team member\n     */\n    error NotTeamMember();\n\n    /**\n     * @notice cannot whitelist BRIBE_VAULT\n     */\n    error NoWhitelistBribeVault();\n\n    /**\n     * @notice token already whitelisted\n     */\n    error TokenWhitelisted();\n\n    /**\n     * @notice token not whitelisted\n     */\n    error TokenNotWhitelisted();\n\n    /**\n     * @notice voter already blacklisted\n     */\n    error VoterBlacklisted();\n\n    /**\n     * @notice voter not blacklisted\n     */\n    error VoterNotBlacklisted();\n\n    /**\n     * @notice deadline has passed\n     */\n    error DeadlinePassed();\n\n    /**\n     * @notice invalid period\n     */\n    error InvalidPeriod();\n\n    /**\n     * @notice invalid deadline\n     */\n    error InvalidDeadline();\n\n    /**\n     * @notice invalid max fee\n     */\n    error InvalidMaxFee();\n\n    /**\n     * @notice invalid fee\n     */\n    error InvalidFee();\n\n    /**\n     * @notice invalid fee recipient\n     */\n    error InvalidFeeRecipient();\n\n    /**\n     * @notice invalid distributor\n     */\n    error InvalidDistributor();\n\n    /**\n     * @notice invalid briber\n     */\n    error InvalidBriber();\n\n    /**\n     * @notice address does not have DEPOSITOR_ROLE\n     */\n    error NotDepositor();\n\n    /**\n     * @notice no array given\n     */\n    error InvalidArray();\n\n    /**\n     * @notice invalid reward identifier\n     */\n    error InvalidRewardIdentifier();\n\n    /**\n     * @notice bribe has already been transferred\n     */\n    error BribeAlreadyTransferred();\n\n    /**\n     * @notice distribution does not exist\n     */\n    error InvalidDistribution();\n\n    /**\n     * @notice invalid merkle root\n     */\n    error InvalidMerkleRoot();\n\n    /**\n     * @notice token is address(0)\n     */\n    error InvalidToken();\n\n    /**\n     * @notice claim does not exist\n     */\n    error InvalidClaim();\n\n    /**\n     * @notice reward is not yet active for claiming\n     */\n    error RewardInactive();\n\n    /**\n     * @notice timer duration is invalid\n     */\n    error InvalidTimerDuration();\n\n    /**\n     * @notice merkle proof is invalid\n     */\n    error InvalidProof();\n\n    /**\n     * @notice ETH transfer failed\n     */\n    error ETHTransferFailed();\n\n    /**\n     * @notice Invalid operator address\n     */\n    error InvalidOperator();\n\n    /**\n     * @notice call to TokenTransferProxy contract\n     */\n    error TokenTransferProxyCall();\n\n    /**\n     * @notice calling TransferFrom\n     */\n    error TransferFromCall();\n\n    /**\n     * @notice external call failed\n     */\n    error ExternalCallFailure();\n\n    /**\n     * @notice returned tokens too few\n     */\n    error InsufficientReturn();\n\n    /**\n     * @notice swapDeadline expired\n     */\n    error DeadlineBreach();\n\n    /**\n     * @notice expected tokens returned are 0\n     */\n    error ZeroExpectedReturns();\n\n    /**\n     * @notice arrays in SwapData.exchangeData have wrong lengths\n     */\n    error ExchangeDataArrayMismatch();\n}\n"},"contracts/RewardDistributor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport {Common} from \"./libraries/Common.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\n\ncontract RewardDistributor is AccessControl, ReentrancyGuard, Pausable {\n    using SafeERC20 for IERC20;\n\n    struct Reward {\n        address token;\n        bytes32 merkleRoot;\n        bytes32 proof;\n        uint256 activeAt;\n    }\n\n    struct Claim {\n        bytes32 identifier;\n        address account;\n        uint256 amount;\n        bytes32[] merkleProof;\n    }\n\n    uint256 public constant MINIMUM_ACTIVE_TIMER = 3 hours;\n\n    // Maps each of the identifiers to its reward metadata\n    mapping(bytes32 => Reward) public rewards;\n    // Tracks the amount of claimed reward for the specified identifier+account\n    mapping(bytes32 => mapping(address => uint256)) public claimed;\n    // Used for calculating the timestamp on which rewards can be claimed after an update\n    uint256 public activeTimerDuration;\n\n    event RewardClaimed(\n        bytes32 indexed identifier,\n        address indexed token,\n        address indexed account,\n        uint256 amount\n    );\n    event RewardMetadataUpdated(\n        bytes32 indexed identifier,\n        address indexed token,\n        bytes32 merkleRoot,\n        bytes32 proof,\n        uint256 activeAt\n    );\n    event SetActiveTimerDuration(uint256 duration);\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setActiveTimerDuration(MINIMUM_ACTIVE_TIMER);\n    }\n\n    /**\n        @notice Claim rewards based on the specified metadata\n        @param  _claims  Claim[] List of claim metadata\n     */\n    function claim(\n        Claim[] calldata _claims\n    ) external nonReentrant whenNotPaused {\n        uint256 cLen = _claims.length;\n\n        if (cLen == 0) revert Errors.InvalidArray();\n\n        for (uint256 i; i < cLen; ) {\n            _claim(\n                _claims[i].identifier,\n                _claims[i].account,\n                _claims[i].amount,\n                _claims[i].merkleProof\n            );\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n        @notice Update rewards metadata\n        @param  _distributions  Distribution[] List of reward distribution details\n     */\n    function updateRewardsMetadata(\n        Common.Distribution[] calldata _distributions\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 dLen = _distributions.length;\n\n        if (dLen == 0) revert Errors.InvalidDistribution();\n\n        uint256 activeAt = block.timestamp + activeTimerDuration;\n\n        for (uint256 i; i < dLen; ) {\n            // Update the metadata and start the timer until the rewards will be active/claimable\n            Common.Distribution calldata distribution = _distributions[i];\n            Reward storage reward = rewards[distribution.identifier];\n            reward.merkleRoot = distribution.merkleRoot;\n            reward.proof = distribution.proof;\n            reward.activeAt = activeAt;\n\n            // Should only be set once per identifier\n            if (reward.token == address(0)) {\n                reward.token = distribution.token;\n            }\n\n            emit RewardMetadataUpdated(\n                distribution.identifier,\n                distribution.token,\n                distribution.merkleRoot,\n                distribution.proof,\n                activeAt\n            );\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /** \n        @notice Set the contract's pause state (ie. before taking snapshot for the harvester)\n        @dev    More efficient compared to setting the merkle proofs of all affected rewardIds to 0x\n        @param  state  bool  Pause state\n    */\n    function setPauseState(bool state) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        if (state) {\n            _pause();\n        } else {\n            _unpause();\n        }\n    }\n\n    /**\n        @notice Set the active timer duration\n        @param  _duration  uint256  Timer duration\n    */\n    function changeActiveTimerDuration(\n        uint256 _duration\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _setActiveTimerDuration(_duration);\n    }\n\n    /**\n        @notice Claim a reward\n        @param  _identifier   bytes32    Merkle identifier\n        @param  _account      address    Eligible user account\n        @param  _amount       uint256    Reward amount\n        @param  _merkleProof  bytes32[]  Merkle proof\n     */\n    function _claim(\n        bytes32 _identifier,\n        address _account,\n        uint256 _amount,\n        bytes32[] calldata _merkleProof\n    ) private {\n        Reward memory reward = rewards[_identifier];\n\n        if (reward.merkleRoot == 0) revert Errors.InvalidMerkleRoot();\n        if (reward.activeAt > block.timestamp) revert Errors.RewardInactive();\n\n        uint256 lifeTimeAmount = claimed[_identifier][_account] + _amount;\n\n        // Verify the merkle proof\n        if (\n            !MerkleProof.verifyCalldata(\n                _merkleProof,\n                reward.merkleRoot,\n                keccak256(abi.encodePacked(_account, lifeTimeAmount))\n            )\n        ) revert Errors.InvalidProof();\n\n        // Update the claimed amount to the current total\n        claimed[_identifier][_account] = lifeTimeAmount;\n\n        address token = reward.token;\n\n        IERC20(token).safeTransfer(_account, _amount);\n\n        emit RewardClaimed(_identifier, token, _account, _amount);\n    }\n\n    /**\n        @dev    Internal to set the active timer duration\n        @param  _duration  uint256  Timer duration\n     */\n    function _setActiveTimerDuration(uint256 _duration) internal {\n        if (_duration < MINIMUM_ACTIVE_TIMER)\n            revert Errors.InvalidTimerDuration();\n\n        activeTimerDuration = _duration;\n\n        emit SetActiveTimerDuration(_duration);\n    }\n}\n"},"contracts/RewardHarvester.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {Ownable2Step} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\nimport {Common} from \"./libraries/Common.sol\";\n\ncontract RewardHarvester is Ownable2Step {\n    using SafeERC20 for IERC20;\n\n    struct Reward {\n        bytes32 merkleRoot;\n        bytes32 hashedData;\n        uint256 activeAt;\n    }\n\n    uint256 public constant FEE_BASIS = 1_000_000;\n    uint256 public constant MAX_FEE = 100_000;\n    uint256 public constant MINIMUM_ACTIVE_TIMER = 3 hours;\n\n    // Maps members\n    mapping(address => bool) public isMember;\n    // Maps fees collected for each token\n    mapping(address => uint256) public feesCollected;\n    // Maps each of the identifier to its reward metadata\n    mapping(address => Reward) public rewards;\n    // Tracks the amount of claimed reward for the specified token and account\n    mapping(address => mapping(address => uint256)) public claimed;\n    // Harvest default token\n    address public defaultToken;\n    // Operator address\n    address public operator;\n    // Claimer address\n    address public claimer;\n    // Reward swapper address\n    address public rewardSwapper;\n    // Used for calculating the timestamp on which rewards can be claimed after an update\n    uint256 public activeTimerDuration;\n\n    //-----------------------//\n    //        Events         //\n    //-----------------------//\n    event MemberJoined(address member);\n    event MemberLeft(address member);\n    event FeesCollected(address indexed token, uint256 amount);\n    event BribeTransferred(address indexed token, uint256 totalAmount);\n    event RewardClaimed(\n        address indexed token,\n        address indexed account,\n        uint256 amount,\n        uint256 postFeeAmount,\n        address receiver\n    );\n    event RewardMetadataUpdated(\n        address indexed token,\n        bytes32 merkleRoot,\n        bytes32 proof,\n        uint256 activeAt\n    );\n    event DefaultTokenUpdated(address indexed token);\n    event SetOperator(address indexed operator);\n    event SetClaimer(address indexed claimer);\n    event SetRewardSwapper(address indexed rewardSwapper);\n    event SetActiveTimerDuration(uint256 duration);\n\n    //-----------------------//\n    //       Modifiers       //\n    //-----------------------//\n    /**\n     * @notice Modifier to check caller is operator\n     */\n    modifier onlyOperatorOrOwner() {\n        if (msg.sender != operator && msg.sender != owner())\n            revert Errors.NotAuthorized();\n        _;\n    }\n\n    /**\n     * @notice Modifier to check caller is operator or reward swapper\n     */\n    modifier onlyOperatorOrRewardSwapper() {\n        if (msg.sender != operator && msg.sender != rewardSwapper)\n            revert Errors.NotAuthorized();\n        _;\n    }\n\n    //-----------------------//\n    //       Constructor     //\n    //-----------------------//\n    constructor(\n        address _rewardSwapper,\n        address _operator,\n        address _defaultToken\n    ) {\n        _setDefaultToken(_defaultToken);\n        _setOperator(_operator);\n        _setRewardSwapper(_rewardSwapper);\n        _setActiveTimerDuration(MINIMUM_ACTIVE_TIMER);\n    }\n\n    //-----------------------//\n    //   External Functions  //\n    //-----------------------//\n\n    /**\n        @notice Join the harvester to enable claiming rewards in default token\n     */\n    function join() external {\n        isMember[msg.sender] = true;\n\n        emit MemberJoined(msg.sender);\n    }\n\n    /**\n        @notice Leave harvester\n     */\n    function leave() external {\n        isMember[msg.sender] = false;\n\n        emit MemberLeft(msg.sender);\n    }\n\n    /**\n        @notice Claim rewards based on the specified metadata\n        @dev    Can only be called by the claimer contract\n        @param  _token        address    Token to claim rewards\n        @param  _account      address    Account to claim rewards\n        @param  _amount       uint256    Amount of rewards to claim\n        @param  _merkleProof  bytes32[]  Merkle proof of the claim\n        @param  _fee          uint256    Claim fee\n        @param  _receiver     address    Receiver of the rewards\n     */\n    function claim(\n        address _token,\n        address _account,\n        uint256 _amount,\n        bytes32[] calldata _merkleProof,\n        uint256 _fee,\n        address _receiver\n    ) external {\n        if (msg.sender != claimer) revert Errors.NotAuthorized();\n        if (_account == address(0)) revert Errors.InvalidClaim();\n        if (_amount == 0) revert Errors.InvalidAmount();\n        if (_fee > MAX_FEE) revert Errors.InvalidFee();\n\n        // Calculate amount after any fees\n        uint256 feeAmount = (_amount * _fee) / FEE_BASIS;\n        uint256 postFeeAmount = _amount - feeAmount;\n        feesCollected[_token] += feeAmount;\n\n        Reward memory reward = rewards[_token];\n        uint256 lifeTimeAmount = claimed[_token][_account] + _amount;\n\n        if (reward.merkleRoot == 0) revert Errors.InvalidDistribution();\n        if (reward.activeAt > block.timestamp) revert Errors.RewardInactive();\n\n        // Verify the merkle proof\n        if (\n            !MerkleProof.verifyCalldata(\n                _merkleProof,\n                reward.merkleRoot,\n                keccak256(abi.encodePacked(_account, lifeTimeAmount))\n            )\n        ) revert Errors.InvalidProof();\n\n        // Update the claimed amount to the current total\n        claimed[_token][_account] = lifeTimeAmount;\n\n        IERC20(_token).safeTransfer(_receiver, postFeeAmount);\n\n        emit RewardClaimed(_token, _account, _amount, postFeeAmount, _receiver);\n    }\n\n    /**\n        @notice Deposit `defaultToken` to this contract\n        @param  _amount  uint256  Amount of `defaultToken` to deposit\n     */\n    function depositReward(\n        uint256 _amount\n    ) external onlyOperatorOrRewardSwapper {\n        if (_amount == 0) revert Errors.InvalidAmount();\n\n        IERC20 token = IERC20(defaultToken);\n\n        uint256 initialAmount = token.balanceOf(address(this));\n\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n\n        emit BribeTransferred(\n            defaultToken,\n            token.balanceOf(address(this)) - initialAmount\n        );\n    }\n\n    /**\n        @notice Update rewards metadata\n        @param  _token       address  Token to update rewards metadata\n        @param  _merkleRoot  bytes32  Merkle root of the rewards\n        @param  _hashedData  bytes32  Hashed data of the rewards\n     */\n    function updateRewardsMetadata(\n        address _token,\n        bytes32 _merkleRoot,\n        bytes32 _hashedData\n    ) external onlyOperatorOrOwner {\n        if (_token == address(0)) revert Errors.InvalidToken();\n        if (_merkleRoot == 0) revert Errors.InvalidMerkleRoot();\n\n        // Update the metadata and start the timer until the rewards will be active/claimable\n        uint256 activeAt = block.timestamp + activeTimerDuration;\n        Reward storage reward = rewards[_token];\n        reward.merkleRoot = _merkleRoot;\n        reward.hashedData = _hashedData;\n        reward.activeAt = activeAt;\n\n        emit RewardMetadataUpdated(_token, _merkleRoot, _hashedData, activeAt);\n    }\n\n    /**\n        @notice Collect fees\n        @param  _token  address  Token to collect fees\n     */\n    function collectFees(address _token) external onlyOwner {\n        uint256 amount = feesCollected[_token];\n        if (amount == 0) revert Errors.InvalidAmount();\n\n        feesCollected[_token] = 0;\n        IERC20(_token).safeTransfer(msg.sender, amount);\n\n        emit FeesCollected(_token, amount);\n    }\n\n    /**\n        @notice Change the operator\n        @param  _operator  address  New operator address\n     */\n    function changeOperator(address _operator) external onlyOwner {\n        _setOperator(_operator);\n    }\n\n    /**\n        @notice Change the `defaultToken`\n        @param  _newToken  address  New default token address\n     */\n    function changeDefaultToken(address _newToken) external onlyOwner {\n        _setDefaultToken(_newToken);\n    }\n\n    /**\n        @notice Change the RewardSwapper contract\n        @param  _newSwapper  address  New reward swapper address\n     */\n    function changeRewardSwapper(address _newSwapper) external onlyOwner {\n        _setRewardSwapper(_newSwapper);\n    }\n\n    /**\n        @notice Change claimer address\n        @param  _claimer  address  New claimer address\n     */\n    function changeClaimer(address _claimer) external onlyOwner {\n        if (_claimer == address(0)) revert Errors.InvalidAddress();\n\n        claimer = _claimer;\n\n        emit SetClaimer(_claimer);\n    }\n\n    /**\n        @notice Set the active timer duration\n        @param  _duration  uint256  Timer duration\n    */\n    function changeActiveTimerDuration(uint256 _duration) external onlyOwner {\n        _setActiveTimerDuration(_duration);\n    }\n\n    //-----------------------//\n    //   Internal Functions  //\n    //-----------------------//\n    /**\n        @dev    Internal to set the default token\n        @param  _newToken  address  Token address\n     */\n    function _setDefaultToken(address _newToken) internal {\n        if (_newToken == address(0)) revert Errors.InvalidToken();\n\n        defaultToken = _newToken;\n\n        emit DefaultTokenUpdated(_newToken);\n    }\n\n    /**\n        @dev    Internal to set the RewardSwapper contract\n        @param  _newSwapper  address  RewardSwapper address\n     */\n    function _setRewardSwapper(address _newSwapper) internal {\n        if (_newSwapper == address(0)) revert Errors.InvalidAddress();\n\n        rewardSwapper = _newSwapper;\n\n        emit SetRewardSwapper(_newSwapper);\n    }\n\n    /**\n        @dev    Internal to set the operator\n        @param  _operator  address  Token address\n     */\n    function _setOperator(address _operator) internal {\n        if (_operator == address(0)) revert Errors.InvalidOperator();\n\n        operator = _operator;\n\n        emit SetOperator(_operator);\n    }\n\n    /**\n        @dev    Internal to set the active timer duration\n        @param  _duration  uint256  Timer duration\n     */\n    function _setActiveTimerDuration(uint256 _duration) internal {\n        if (_duration < MINIMUM_ACTIVE_TIMER)\n            revert Errors.InvalidTimerDuration();\n\n        activeTimerDuration = _duration;\n\n        emit SetActiveTimerDuration(_duration);\n    }\n}\n"},"contracts/RewardHarvesterClaim.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {Ownable2Step} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {RewardHarvester} from \"./RewardHarvester.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\n\ncontract RewardHarvesterClaim is Ownable2Step, ReentrancyGuard {\n    uint256 public constant MAX_FEE = 100_000;\n\n    // Harvester fee\n    // Only single fee tracking for this version, but can be expanded for varying fees by token later\n    uint256 public fee;\n    // Harvester contract\n    RewardHarvester public immutable harvester;\n\n    //-----------------------//\n    //        Events         //\n    //-----------------------//\n    event SetFee(uint256 fee);\n\n    //-----------------------//\n    //       Constructor     //\n    //-----------------------//\n    constructor(address _harvester, uint256 _fee) {\n        if (_harvester == address(0)) revert Errors.InvalidAddress();\n\n        harvester = RewardHarvester(_harvester);\n\n        _setFee(_fee);\n    }\n\n    //-----------------------//\n    //   External Functions  //\n    //-----------------------//\n\n    /**\n        @notice Claim rewards based on the specified metadata\n        @dev    Currently only perform direct claiming for this version\n        @param  _token        address    Token to claim rewards\n        @param  _account      address    Account to claim rewards\n        @param  _amount       uint256    Amount of rewards to claim\n        @param  _merkleProof  bytes32[]  Merkle proof of the claim\n     */\n    function claim(\n        address _token,\n        address _account,\n        uint256 _amount,\n        bytes32[] calldata _merkleProof\n    ) external nonReentrant {\n        // Receiver is currently set to the user itself for this version of claimer\n        // but can be directed to the claimer first in the future for additional actions (ie. swaps, locks)\n        harvester.claim(_token, _account, _amount, _merkleProof, fee, _account);\n    }\n\n    /**\n        @notice Change fee\n        @param  _newFee  uint256  New fee to set\n     */\n    function changeFee(uint256 _newFee) external onlyOwner {\n        _setFee(_newFee);\n    }\n\n    //-----------------------//\n    //   Internal Functions  //\n    //-----------------------//\n    /**\n        @dev    Internal to set the fee\n        @param  _newFee  uint256  Token address\n     */\n    function _setFee(uint256 _newFee) internal {\n        if (_newFee > MAX_FEE) revert Errors.InvalidFee();\n\n        fee = _newFee;\n\n        emit SetFee(_newFee);\n    }\n}\n"},"contracts/RewardSwapper.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {IRewardDistributor} from \"./interfaces/IRewardDistributor.sol\";\nimport {IRewardHarvester} from \"./interfaces/IRewardHarvester.sol\";\nimport {Ownable2Step} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\nimport {Common} from \"./libraries/Common.sol\";\n\ncontract RewardSwapper is Ownable2Step {\n    using SafeERC20 for IERC20;\n\n    IRewardDistributor public rewardDistributor;\n    IRewardHarvester public rewardHarvester;\n\n    // Operator address\n    address public operator;\n\n    //-----------------------//\n    //        Events         //\n    //-----------------------//\n    event SetOperator(address indexed operator);\n    event SetRewardHarvester(address indexed rewardHarvester);\n    event SetRewardDistributor(address indexed rewardDistributor);\n    event BribeTransferred(address indexed token, uint256 totalAmount);\n\n    /**\n     * @notice Modifier to check caller is operator\n     */\n    modifier onlyOperator() {\n        if (msg.sender != operator) revert Errors.NotAuthorized();\n        _;\n    }\n\n    //-----------------------//\n    //       Constructor     //\n    //-----------------------//\n    constructor(\n        address _rewardDistributor,\n        address _rewardHarvester,\n        address _operator\n    ) {\n        _setRewardDistributor(_rewardDistributor);\n        _setRewardHarvester(_rewardHarvester);\n        _setOperator(_operator);\n    }\n\n    //-----------------------//\n    //   External Functions  //\n    //-----------------------//\n\n    /**\n     * @notice Executes swaps via DEX\n     * @param  _claimSwapData  Common.ClaimAndSwapData[]  The data for the claims+swaps\n     */\n    function claimSwapAndDepositReward(\n        Common.ClaimAndSwapData[] calldata _claimSwapData\n    ) external onlyOperator {\n        uint256 cLen = _claimSwapData.length;\n\n        if (cLen == 0) revert Errors.InvalidArray();\n\n        IERC20 defaultToken = IERC20(rewardHarvester.defaultToken());\n\n        uint256 initalAmount = defaultToken.balanceOf(address(this));\n\n        Common.Claim[] memory claimData = new Common.Claim[](\n            _claimSwapData.length\n        );\n\n        // Claim rewards\n        for (uint256 i; i < cLen; ) {\n            claimData[i].identifier = _claimSwapData[i].rwIdentifier;\n            claimData[i].account = address(this);\n            claimData[i].amount = _claimSwapData[i].fromAmount;\n            claimData[i].merkleProof = _claimSwapData[i].rwMerkleProof;\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        rewardDistributor.claim(claimData);\n\n        // Swap reward tokens to default token\n        for (uint256 i; i < cLen; ) {\n            _swap(_claimSwapData[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n\n        uint256 amountClaimed = defaultToken.balanceOf(address(this)) -\n            initalAmount;\n\n        // Approve reward harvester if needed\n        if (\n            defaultToken.allowance(address(this), address(rewardHarvester)) <\n            amountClaimed\n        ) {\n            defaultToken.safeApprove(\n                address(rewardHarvester),\n                type(uint256).max\n            );\n        }\n\n        // Deposit reward\n        rewardHarvester.depositReward(amountClaimed);\n\n        emit BribeTransferred(address(defaultToken), amountClaimed);\n    }\n\n    /**\n        @notice Change the operator\n        @param  _operator  address  New operator address\n     */\n    function changeOperator(address _operator) external onlyOwner {\n        _setOperator(_operator);\n    }\n\n    /**\n        @notice Change the reward harvester address\n        @param  _harvester  address  New harvester address\n     */\n    function changeRewardHarvester(address _harvester) external onlyOwner {\n        _setRewardHarvester(_harvester);\n    }\n\n    /**\n        @notice Change the reward distributor address\n        @param  _distributor  address  New distributor address\n     */\n    function changeRewardDistributor(address _distributor) external onlyOwner {\n        _setRewardDistributor(_distributor);\n    }\n\n    //-----------------------//\n    //   Internal Functions  //\n    //-----------------------//\n\n    /**\n        @dev    Internal to set the operator\n        @param  _operator  address  Operator address\n     */\n    function _setOperator(address _operator) internal {\n        if (_operator == address(0)) revert Errors.InvalidAddress();\n\n        operator = _operator;\n\n        emit SetOperator(_operator);\n    }\n\n    /**\n        @dev    Internal to set the reward harvester\n        @param  _harvester  address  Reward Harvester address\n     */\n    function _setRewardHarvester(address _harvester) internal {\n        if (_harvester == address(0)) revert Errors.InvalidAddress();\n\n        rewardHarvester = IRewardHarvester(_harvester);\n\n        emit SetRewardHarvester(_harvester);\n    }\n\n    /**\n        @dev    Internal to set the reward distributor\n        @param  _distributor  address  Distributor address\n     */\n    function _setRewardDistributor(address _distributor) internal {\n        if (_distributor == address(0)) revert Errors.InvalidAddress();\n\n        rewardDistributor = IRewardDistributor(_distributor);\n\n        emit SetRewardDistributor(_distributor);\n    }\n\n    /**\n     * @notice Executes a sequence of swaps via DEX\n     * @param  _swapData       Common.SwapData  The data for the swaps\n     * @return receivedAmount  uint256          The final amount of the toToken received\n     */\n    function _swap(\n        Common.ClaimAndSwapData memory _swapData\n    ) internal returns (uint256 receivedAmount) {\n        if (\n            !(_swapData.callees.length == _swapData.callLengths.length &&\n                _swapData.callees.length == _swapData.values.length)\n        ) {\n            revert Errors.ExchangeDataArrayMismatch();\n        }\n\n        if (_swapData.deadline < block.timestamp) {\n            revert Errors.DeadlineBreach();\n        }\n\n        if (_swapData.toAmount == 0) {\n            revert Errors.ZeroExpectedReturns();\n        }\n\n        bytes memory exchangeData = _swapData.exchangeData;\n        uint256 calleesLength = _swapData.callees.length;\n\n        if (calleesLength == 0) revert Errors.InvalidArray();\n\n        bytes4 transferFromSelector = IERC20.transferFrom.selector;\n        uint256 initialAmount = IERC20(_swapData.toToken).balanceOf(\n            address(this)\n        );\n\n        uint256 currentDataStartIndex = 0;\n        for (uint256 i; i < calleesLength; ) {\n            // Check if the call is a transferFrom call\n            // protect caller from transferring more than `fromAmount`\n            {\n                bytes32 selector;\n                assembly {\n                    selector := mload(add(exchangeData, add(currentDataStartIndex, 32)))\n                }\n                if (bytes4(selector) == transferFromSelector) {\n                    revert Errors.TransferFromCall();\n                }\n            }\n            bool result = _externalCall(\n                _swapData.callees[i], //destination\n                _swapData.values[i], //value to send\n                currentDataStartIndex, // start index of call data\n                _swapData.callLengths[i], // length of calldata\n                exchangeData // total calldata\n            );\n            if (!result) {\n                revert Errors.ExternalCallFailure();\n            }\n            currentDataStartIndex += _swapData.callLengths[i];\n            unchecked {\n                ++i;\n            }\n        }\n\n        receivedAmount = IERC20(_swapData.toToken).balanceOf(address(this));\n\n        if ((receivedAmount - initialAmount) < _swapData.toAmount) {\n            revert Errors.InsufficientReturn();\n        }\n    }\n\n    /**\n     * @dev Source take from GNOSIS MultiSigWallet\n     * @dev https://github.com/gnosis/MultiSigWallet/blob/master/contracts/MultiSigWallet.sol\n     */\n    function _externalCall(\n        address _destination,\n        uint256 _value,\n        uint256 _dataOffset,\n        uint256 _dataLength,\n        bytes memory _data\n    ) internal returns (bool) {\n        bool result;\n        assembly {\n            let x := mload(0x40) // \"Allocate\" memory for output\n            // (0x40 is where \"free memory\" pointer is stored by convention)\n\n            let d := add(_data, 32) // First 32 bytes are the padded length of data, so exclude that\n            result := call(\n                gas(),\n                _destination,\n                _value,\n                add(d, _dataOffset),\n                _dataLength, // Size of the input (in bytes) - this is what fixes the padding problem\n                x,\n                0 // Output is ignored, therefore the output size is zero\n            )\n        }\n        return result;\n    }\n}\n"},"contracts/VaultOperator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport {Ownable2Step} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {Common} from \"./libraries/Common.sol\";\nimport {IBribeVault} from \"./interfaces/IBribeVault.sol\";\nimport {IRewardDistributor} from \"./interfaces/IRewardDistributor.sol\";\nimport {Errors} from \"./libraries/Errors.sol\";\n\ncontract VaultOperator is Ownable2Step {\n    IBribeVault public immutable bribeVault;\n    IRewardDistributor public immutable rewardDistributor;\n    address public operator;\n\n    event SetOperator(address indexed operator);\n\n    /**\n        @param  _bribeVault         Address of the bribe vault\n        @param  _rewardDistributor  Address of the reward distributor\n     */\n    constructor(address _bribeVault, address _rewardDistributor) {\n        if (_bribeVault == address(0)) revert Errors.InvalidAddress();\n        if (_rewardDistributor == address(0)) revert Errors.InvalidAddress();\n\n        bribeVault = IBribeVault(_bribeVault);\n        rewardDistributor = IRewardDistributor(_rewardDistributor);\n\n        // Default to the deployer\n        operator = msg.sender;\n    }\n\n    modifier onlyOperator() {\n        if (msg.sender != operator) revert Errors.NotAuthorized();\n        _;\n    }\n\n    /**\n        @notice Set the operator\n        @param  _operator  address  Operator address\n     */\n    function setOperator(address _operator) external onlyOwner {\n        if (_operator == address(0)) revert Errors.InvalidAddress();\n\n        operator = _operator;\n\n        emit SetOperator(_operator);\n    }\n\n    /**\n        @notice Redirect transferBribes call to the bribeVault for approved operator\n        @param  rewardIdentifiers  bytes32[]  List of rewardIdentifiers\n     */\n    function transferBribes(\n        bytes32[] calldata rewardIdentifiers\n    ) external onlyOperator {\n        bribeVault.transferBribes(rewardIdentifiers);\n    }\n\n    /**\n        @notice Redirect updateRewardsMetadata call to the rewardDistributor for approved operator\n        @param  distributions  Distribution[]  List of reward distribution details\n     */\n    function updateRewardsMetadata(\n        Common.Distribution[] calldata distributions\n    ) external onlyOperator {\n        rewardDistributor.updateRewardsMetadata(distributions);\n    }\n\n    /**\n        @notice Set pause state on the rewardDistributor for approved operator\n        @param  state  bool  Pause state\n     */\n    function setPauseState(bool state) external onlyOperator {\n        rewardDistributor.setPauseState(state);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200,"details":{"yul":true,"yulDetails":{"optimizerSteps":"u"}}},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[1687],"ERC165":[2468],"IAccessControl":[388],"IERC165":[2480],"Math":[3346],"SignedMath":[4992],"Strings":[1916]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1688,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1917,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2469,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,2468,2480,388,1687],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2467],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1916_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1890,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1916_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1687],"Ownable":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":502,"sourceUnit":1688,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"683:7:2"},"id":394,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501,1687],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":396,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":501,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":402,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":402,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":402,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":411,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":412,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":501,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":418,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":420,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":426,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":501,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":501,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"1878:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1888:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1888:30:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1495:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":457,"implemented":true,"kind":"function","modifiers":[{"id":447,"kind":"modifierInvocation","modifierName":{"id":446,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1868:9:2"},"nodeType":"ModifierInvocation","src":"1868:9:2"}],"name":"renounceOwnership","nameLocation":"1833:17:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"1850:2:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1878:0:2"},"scope":501,"src":"1824:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":479,"nodeType":"Block","src":"2144:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2162:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"2154:73:2"},{"expression":{"arguments":[{"id":476,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2256:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2237:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"2237:28:2"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1931:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":480,"implemented":true,"kind":"function","modifiers":[{"id":463,"kind":"modifierInvocation","modifierName":{"id":462,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2134:9:2"},"nodeType":"ModifierInvocation","src":"2134:9:2"}],"name":"transferOwnership","nameLocation":"2083:17:2","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:2","nodeType":"VariableDeclaration","scope":480,"src":"2101:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2144:0:2"},"scope":501,"src":"2074:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"2489:124:2","statements":[{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:2","nodeType":"VariableDeclaration","scope":499,"src":"2499:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"id":488,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2518:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:2"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2534:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2543:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":493,"nodeType":"ExpressionStatement","src":"2534:17:2"},{"eventCall":{"arguments":[{"id":495,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2587:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2597:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2566:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"2561:45:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2278:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:2","nodeType":"VariableDeclaration","scope":500,"src":"2454:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2489:0:2"},"scope":501,"src":"2426:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":502,"src":"654:1961:2","usedErrors":[]}],"src":"102:2514:2"},"id":2},"@openzeppelin/contracts/access/Ownable2Step.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","exportedSymbols":{"Context":[1687],"Ownable":[501],"Ownable2Step":[584]},"id":585,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"./Ownable.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":585,"sourceUnit":502,"src":"132:23:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":506,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":501,"src":"633:7:3"},"id":507,"nodeType":"InheritanceSpecifier","src":"633:7:3"}],"canonicalName":"Ownable2Step","contractDependencies":[],"contractKind":"contract","documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"157:441:3","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":584,"linearizedBaseContracts":[584,501,1687],"name":"Ownable2Step","nameLocation":"617:12:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":509,"mutability":"mutable","name":"_pendingOwner","nameLocation":"663:13:3","nodeType":"VariableDeclaration","scope":584,"src":"647:29:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":515,"name":"OwnershipTransferStarted","nameLocation":"689:24:3","nodeType":"EventDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"730:13:3","nodeType":"VariableDeclaration","scope":515,"src":"714:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"761:8:3","nodeType":"VariableDeclaration","scope":515,"src":"745:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"745:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:57:3"},"src":"683:88:3"},{"body":{"id":523,"nodeType":"Block","src":"909:37:3","statements":[{"expression":{"id":521,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"926:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":520,"id":522,"nodeType":"Return","src":"919:20:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"777:65:3","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"856:12:3","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"868:2:3"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"900:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"899:9:3"},"scope":584,"src":"847:99:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[480],"body":{"id":543,"nodeType":"Block","src":"1218:99:3","statements":[{"expression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":533,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1228:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":534,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1244:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1228:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":536,"nodeType":"ExpressionStatement","src":"1228:24:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1292:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1292:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1301:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":537,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"1267:24:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1267:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"EmitStatement","src":"1262:48:3"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"952:182:3","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":544,"implemented":true,"kind":"function","modifiers":[{"id":531,"kind":"modifierInvocation","modifierName":{"id":530,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1208:9:3"},"nodeType":"ModifierInvocation","src":"1208:9:3"}],"name":"transferOwnership","nameLocation":"1148:17:3","nodeType":"FunctionDefinition","overrides":{"id":529,"nodeType":"OverrideSpecifier","overrides":[],"src":"1199:8:3"},"parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"newOwner","nameLocation":"1174:8:3","nodeType":"VariableDeclaration","scope":544,"src":"1166:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1165:18:3"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"1218:0:3"},"scope":584,"src":"1139:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[500],"body":{"id":560,"nodeType":"Block","src":"1573:81:3","statements":[{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1583:20:3","subExpression":{"id":551,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1590:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"1583:20:3"},{"expression":{"arguments":[{"id":557,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"1638:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":554,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1613:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2Step_$584_$","typeString":"type(contract super Ownable2Step)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":500,"src":"1613:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1613:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"1613:34:3"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"1323:173:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1510:18:3","nodeType":"FunctionDefinition","overrides":{"id":549,"nodeType":"OverrideSpecifier","overrides":[],"src":"1564:8:3"},"parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"newOwner","nameLocation":"1537:8:3","nodeType":"VariableDeclaration","scope":561,"src":"1529:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1528:18:3"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"1573:0:3"},"scope":584,"src":"1501:153:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":582,"nodeType":"Block","src":"1776:170:3","statements":[{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"sender","nameLocation":"1794:6:3","nodeType":"VariableDeclaration","scope":582,"src":"1786:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1803:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1803:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1786:29:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":571,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"1833:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1833:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1851:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1833:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1859:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""},"value":"Ownable2Step: caller is not the new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""}],"id":570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1825:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1825:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"1825:78:3"},{"expression":{"arguments":[{"id":579,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1932:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":578,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[561],"referencedDeclaration":561,"src":"1913:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1913:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"1913:26:3"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"1660:69:3","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1743:15:3","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"1758:2:3"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"1776:0:3"},"scope":584,"src":"1734:212:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":585,"src":"599:1349:3","usedErrors":[]}],"src":"107:1842:3"},"id":3},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":586,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"125:629:4","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":664,"linearizedBaseContracts":[664],"name":"Clones","nameLocation":"763:6:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":606,"nodeType":"Block","src":"1048:684:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1110:549:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1315:4:4","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:4:4","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1338:4:4","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1344:14:4"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1334:3:4"},"nodeType":"YulFunctionCall","src":"1334:25:4"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1324:3:4"},"nodeType":"YulFunctionCall","src":"1324:36:4"},{"kind":"number","nodeType":"YulLiteral","src":"1362:48:4","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1321:2:4"},"nodeType":"YulFunctionCall","src":"1321:90:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:4"},"nodeType":"YulFunctionCall","src":"1308:104:4"},"nodeType":"YulExpressionStatement","src":"1308:104:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1533:4:4","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1546:4:4","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"1552:14:4"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1542:3:4"},"nodeType":"YulFunctionCall","src":"1542:25:4"},{"kind":"number","nodeType":"YulLiteral","src":"1569:32:4","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1539:2:4"},"nodeType":"YulFunctionCall","src":"1539:63:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1526:6:4"},"nodeType":"YulFunctionCall","src":"1526:77:4"},"nodeType":"YulExpressionStatement","src":"1526:77:4"},{"nodeType":"YulAssignment","src":"1616:33:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:4","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"1644:4:4","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1628:6:4"},"nodeType":"YulFunctionCall","src":"1628:21:4"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1616:8:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":590,"isOffset":false,"isSlot":false,"src":"1344:14:4","valueSize":1},{"declaration":590,"isOffset":false,"isSlot":false,"src":"1552:14:4","valueSize":1},{"declaration":593,"isOffset":false,"isSlot":false,"src":"1616:8:4","valueSize":1}],"id":595,"nodeType":"InlineAssembly","src":"1101:558:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"1676:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1696:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1688:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:4","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1688:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1676:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1700:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1668:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1668:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"1668:57:4"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"776:192:4","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":607,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"982:5:4","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"implementation","nameLocation":"996:14:4","nodeType":"VariableDeclaration","scope":607,"src":"988:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"987:24:4"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"instance","nameLocation":"1038:8:4","nodeType":"VariableDeclaration","scope":607,"src":"1030:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1029:18:4"},"scope":664,"src":"973:759:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"2209:692:4","statements":[{"AST":{"nodeType":"YulBlock","src":"2271:556:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2476:4:4","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2489:4:4","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:4:4","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2505:14:4"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2495:3:4"},"nodeType":"YulFunctionCall","src":"2495:25:4"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2485:3:4"},"nodeType":"YulFunctionCall","src":"2485:36:4"},{"kind":"number","nodeType":"YulLiteral","src":"2523:48:4","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2482:2:4"},"nodeType":"YulFunctionCall","src":"2482:90:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2469:6:4"},"nodeType":"YulFunctionCall","src":"2469:104:4"},"nodeType":"YulExpressionStatement","src":"2469:104:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2694:4:4","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2707:4:4","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"2713:14:4"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2703:3:4"},"nodeType":"YulFunctionCall","src":"2703:25:4"},{"kind":"number","nodeType":"YulLiteral","src":"2730:32:4","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2700:2:4"},"nodeType":"YulFunctionCall","src":"2700:63:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:4"},"nodeType":"YulFunctionCall","src":"2687:77:4"},"nodeType":"YulExpressionStatement","src":"2687:77:4"},{"nodeType":"YulAssignment","src":"2777:40:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2797:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2800:4:4","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"2806:4:4","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2812:4:4"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2789:7:4"},"nodeType":"YulFunctionCall","src":"2789:28:4"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2777:8:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":610,"isOffset":false,"isSlot":false,"src":"2505:14:4","valueSize":1},{"declaration":610,"isOffset":false,"isSlot":false,"src":"2713:14:4","valueSize":1},{"declaration":615,"isOffset":false,"isSlot":false,"src":"2777:8:4","valueSize":1},{"declaration":612,"isOffset":false,"isSlot":false,"src":"2812:4:4","valueSize":1}],"id":617,"nodeType":"InlineAssembly","src":"2262:565:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2844:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2856:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"2856:7:4","typeDescriptions":{}}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2856:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2844:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2836:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2836:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"ExpressionStatement","src":"2836:58:4"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"1738:364:4","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"2116:18:4","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"implementation","nameLocation":"2143:14:4","nodeType":"VariableDeclaration","scope":629,"src":"2135:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"salt","nameLocation":"2167:4:4","nodeType":"VariableDeclaration","scope":629,"src":"2159:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2134:38:4"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"instance","nameLocation":"2199:8:4","nodeType":"VariableDeclaration","scope":629,"src":"2191:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"2191:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2190:18:4"},"scope":664,"src":"2107:794:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"3176:515:4","statements":[{"AST":{"nodeType":"YulBlock","src":"3238:447:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3252:22:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3263:5:4"},"nodeType":"YulFunctionCall","src":"3263:11:4"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3256:3:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3298:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3303:4:4","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3294:3:4"},"nodeType":"YulFunctionCall","src":"3294:14:4"},{"name":"deployer","nodeType":"YulIdentifier","src":"3310:8:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3287:6:4"},"nodeType":"YulFunctionCall","src":"3287:32:4"},"nodeType":"YulExpressionStatement","src":"3287:32:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3343:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3348:4:4","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3339:3:4"},"nodeType":"YulFunctionCall","src":"3339:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"3355:34:4","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3332:6:4"},"nodeType":"YulFunctionCall","src":"3332:58:4"},"nodeType":"YulExpressionStatement","src":"3332:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3414:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3419:4:4","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3410:3:4"},"nodeType":"YulFunctionCall","src":"3410:14:4"},{"name":"implementation","nodeType":"YulIdentifier","src":"3426:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3403:6:4"},"nodeType":"YulFunctionCall","src":"3403:38:4"},"nodeType":"YulExpressionStatement","src":"3403:38:4"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3461:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3466:42:4","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:4"},"nodeType":"YulFunctionCall","src":"3454:55:4"},"nodeType":"YulExpressionStatement","src":"3454:55:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3533:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3538:4:4","type":"","value":"0x58"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:4"},"nodeType":"YulFunctionCall","src":"3529:14:4"},{"name":"salt","nodeType":"YulIdentifier","src":"3545:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3522:6:4"},"nodeType":"YulFunctionCall","src":"3522:28:4"},"nodeType":"YulExpressionStatement","src":"3522:28:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3574:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3579:4:4","type":"","value":"0x78"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:4"},"nodeType":"YulFunctionCall","src":"3570:14:4"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3600:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3605:4:4","type":"","value":"0x0c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3596:3:4"},"nodeType":"YulFunctionCall","src":"3596:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"3612:4:4","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3586:9:4"},"nodeType":"YulFunctionCall","src":"3586:31:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3563:6:4"},"nodeType":"YulFunctionCall","src":"3563:55:4"},"nodeType":"YulExpressionStatement","src":"3563:55:4"},{"nodeType":"YulAssignment","src":"3631:44:4","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3658:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3663:4:4","type":"","value":"0x43"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3654:3:4"},"nodeType":"YulFunctionCall","src":"3654:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"3670:4:4","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3644:9:4"},"nodeType":"YulFunctionCall","src":"3644:31:4"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3631:9:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":636,"isOffset":false,"isSlot":false,"src":"3310:8:4","valueSize":1},{"declaration":632,"isOffset":false,"isSlot":false,"src":"3426:14:4","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"3631:9:4","valueSize":1},{"declaration":634,"isOffset":false,"isSlot":false,"src":"3545:4:4","valueSize":1}],"id":641,"nodeType":"InlineAssembly","src":"3229:456:4"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"2907:99:4","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3020:27:4","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"implementation","nameLocation":"3065:14:4","nodeType":"VariableDeclaration","scope":643,"src":"3057:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"3057:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"salt","nameLocation":"3097:4:4","nodeType":"VariableDeclaration","scope":643,"src":"3089:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3089:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"deployer","nameLocation":"3119:8:4","nodeType":"VariableDeclaration","scope":643,"src":"3111:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3047:86:4"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"predicted","nameLocation":"3165:9:4","nodeType":"VariableDeclaration","scope":643,"src":"3157:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3156:19:4"},"scope":664,"src":"3011:680:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"3940:88:4","statements":[{"expression":{"arguments":[{"id":654,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3985:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4001:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":658,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4015:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$664","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$664","typeString":"library Clones"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:4","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4007:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[643,663],"referencedDeclaration":643,"src":"3957:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3957:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":652,"id":661,"nodeType":"Return","src":"3950:71:4"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"3697:99:4","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3810:27:4","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"implementation","nameLocation":"3855:14:4","nodeType":"VariableDeclaration","scope":663,"src":"3847:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"3847:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"salt","nameLocation":"3887:4:4","nodeType":"VariableDeclaration","scope":663,"src":"3879:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3879:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3837:60:4"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"predicted","nameLocation":"3929:9:4","nodeType":"VariableDeclaration","scope":663,"src":"3921:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3920:19:4"},"scope":664,"src":"3801:227:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":665,"src":"755:3275:4","usedErrors":[]}],"src":"100:3931:4"},"id":4},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[1687],"Pausable":[772]},"id":773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":773,"sourceUnit":1688,"src":"130:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":669,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1687,"src":"632:7:5"},"id":670,"nodeType":"InheritanceSpecifier","src":"632:7:5"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"162:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":772,"linearizedBaseContracts":[772,1687],"name":"Pausable","nameLocation":"620:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"646:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"id":675,"name":"Paused","nameLocation":"730:6:5","nodeType":"EventDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:5","nodeType":"VariableDeclaration","scope":675,"src":"737:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:5"},"src":"724:30:5"},{"anonymous":false,"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"760:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"id":680,"name":"Unpaused","nameLocation":"841:8:5","nodeType":"EventDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:5","nodeType":"VariableDeclaration","scope":680,"src":"850:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:5"},"src":"835:32:5"},{"constant":false,"id":682,"mutability":"mutable","name":"_paused","nameLocation":"886:7:5","nodeType":"VariableDeclaration","scope":772,"src":"873:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":690,"nodeType":"Block","src":"986:32:5","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":686,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"996:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":689,"nodeType":"ExpressionStatement","src":"996:15:5"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"900:67:5","text":" @dev Initializes the contract in unpaused state."},"id":691,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"983:2:5"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"986:0:5"},"scope":772,"src":"972:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":698,"nodeType":"Block","src":"1229:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":694,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1239:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"1239:19:5"},{"id":697,"nodeType":"PlaceholderStatement","src":"1268:1:5"}]},"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"1024:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":699,"name":"whenNotPaused","nameLocation":"1213:13:5","nodeType":"ModifierDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"1226:2:5"},"src":"1204:72:5","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"1476:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"1486:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"1486:16:5"},{"id":705,"nodeType":"PlaceholderStatement","src":"1512:1:5"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"1282:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":707,"name":"whenPaused","nameLocation":"1463:10:5","nodeType":"ModifierDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"1473:2:5"},"src":"1454:66:5","virtual":false,"visibility":"internal"},{"body":{"id":715,"nodeType":"Block","src":"1668:31:5","statements":[{"expression":{"id":713,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1685:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":712,"id":714,"nodeType":"Return","src":"1678:14:5"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"1526:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":716,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:5","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"1630:2:5"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"1662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":710,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:5"},"scope":772,"src":"1615:84:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":727,"nodeType":"Block","src":"1818:55:5","statements":[{"expression":{"arguments":[{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1837:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"1828:38:5"}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"1705:57:5","text":" @dev Throws if the contract is paused."},"id":728,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:5","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"1793:2:5"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"1818:0:5"},"scope":772,"src":"1767:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":738,"nodeType":"Block","src":"1993:58:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":733,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2011:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"2003:41:5"}]},"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"1879:61:5","text":" @dev Throws if the contract is not paused."},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:5","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"1968:2:5"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"1993:0:5"},"scope":772,"src":"1945:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":754,"nodeType":"Block","src":"2235:66:5","statements":[{"expression":{"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":745,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2245:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"ExpressionStatement","src":"2245:14:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":750,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2281:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":749,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2274:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"EmitStatement","src":"2269:25:5"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2057:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":755,"implemented":true,"kind":"function","modifiers":[{"id":743,"kind":"modifierInvocation","modifierName":{"id":742,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"2221:13:5"},"nodeType":"ModifierInvocation","src":"2221:13:5"}],"name":"_pause","nameLocation":"2195:6:5","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"2201:2:5"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"2235:0:5"},"scope":772,"src":"2186:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"2481:69:5","statements":[{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":761,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2491:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"ExpressionStatement","src":"2491:15:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":766,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2530:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":765,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2521:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"EmitStatement","src":"2516:27:5"}]},"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"2307:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":771,"implemented":true,"kind":"function","modifiers":[{"id":759,"kind":"modifierInvocation","modifierName":{"id":758,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":707,"src":"2470:10:5"},"nodeType":"ModifierInvocation","src":"2470:10:5"}],"name":"_unpause","nameLocation":"2442:8:5","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"2450:2:5"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"2481:0:5"},"scope":772,"src":"2433:117:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":773,"src":"602:1950:5","usedErrors":[]}],"src":"105:2448:5"},"id":5},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":774,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"137:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837],"name":"ReentrancyGuard","nameLocation":"906:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":778,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:6","nodeType":"VariableDeclaration","scope":837,"src":"1676:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":781,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:6","nodeType":"VariableDeclaration","scope":837,"src":"1723:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":783,"mutability":"mutable","name":"_status","nameLocation":"1783:7:6","nodeType":"VariableDeclaration","scope":837,"src":"1767:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":790,"nodeType":"Block","src":"1811:39:6","statements":[{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":786,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":787,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"1831:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ExpressionStatement","src":"1821:22:6"}]},"id":791,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"1808:2:6"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"1811:0:6"},"scope":837,"src":"1797:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":801,"nodeType":"Block","src":"2251:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"2261:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"2261:21:6"},{"id":797,"nodeType":"PlaceholderStatement","src":"2292:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":798,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2303:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"2303:20:6"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"1856:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":802,"name":"nonReentrant","nameLocation":"2236:12:6","nodeType":"ModifierDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"2248:2:6"},"src":"2227:103:6","virtual":false,"visibility":"internal"},{"body":{"id":816,"nodeType":"Block","src":"2375:248:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":807,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2479:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"2460:63:6"},{"expression":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":812,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":813,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2608:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":815,"nodeType":"ExpressionStatement","src":"2598:18:6"}]},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:6","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"2364:2:6"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"2375:0:6"},"scope":837,"src":"2336:287:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":824,"nodeType":"Block","src":"2667:171:6","statements":[{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":820,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":821,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2819:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ExpressionStatement","src":"2809:22:6"}]},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:6","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"2656:2:6"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"2667:0:6"},"scope":837,"src":"2629:209:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":835,"nodeType":"Block","src":"3081:43:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"3098:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":832,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"3109:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":830,"id":834,"nodeType":"Return","src":"3091:26:6"}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"2844:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:6","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"3049:2:6"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":836,"src":"3075:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":828,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:6"},"scope":837,"src":"3017:107:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":838,"src":"888:2238:6","usedErrors":[]}],"src":"112:3015:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[915]},"id":916,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":915,"linearizedBaseContracts":[915],"name":"IERC20","nameLocation":"212:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"225:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":849,"name":"Transfer","nameLocation":"394:8:7","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:7","nodeType":"VariableDeclaration","scope":849,"src":"403:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:7","nodeType":"VariableDeclaration","scope":849,"src":"425:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:7","nodeType":"VariableDeclaration","scope":849,"src":"445:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:7"},"src":"388:72:7"},{"anonymous":false,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"466:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":858,"name":"Approval","nameLocation":"625:8:7","nodeType":"EventDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:7","nodeType":"VariableDeclaration","scope":858,"src":"634:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:7","nodeType":"VariableDeclaration","scope":858,"src":"657:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:7","nodeType":"VariableDeclaration","scope":858,"src":"682:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:7"},"src":"619:78:7"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"703:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":915,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"835:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":872,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":872,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":915,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"986:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:7","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"to","nameLocation":"1219:2:7","nodeType":"VariableDeclaration","scope":882,"src":"1211:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"amount","nameLocation":"1231:6:7","nodeType":"VariableDeclaration","scope":882,"src":"1223:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:7"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"1257:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":879,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:7"},"scope":915,"src":"1193:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"1269:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":892,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:7","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"owner","nameLocation":"1565:5:7","nodeType":"VariableDeclaration","scope":892,"src":"1557:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"spender","nameLocation":"1580:7:7","nodeType":"VariableDeclaration","scope":892,"src":"1572:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:7"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"1612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:7"},"scope":915,"src":"1538:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"1627:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:7","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"spender","nameLocation":"2299:7:7","nodeType":"VariableDeclaration","scope":902,"src":"2291:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"amount","nameLocation":"2316:6:7","nodeType":"VariableDeclaration","scope":902,"src":"2308:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:7"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"2342:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":899,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:7"},"scope":915,"src":"2274:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"2354:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":914,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:7","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"from","nameLocation":"2676:4:7","nodeType":"VariableDeclaration","scope":914,"src":"2668:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"2690:2:7","nodeType":"VariableDeclaration","scope":914,"src":"2682:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"amount","nameLocation":"2702:6:7","nodeType":"VariableDeclaration","scope":914,"src":"2694:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:7"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2728:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":911,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:7"},"scope":915,"src":"2646:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":916,"src":"202:2534:7","usedErrors":[]}],"src":"106:2631:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[951]},"id":952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":917,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"148:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":951,"linearizedBaseContracts":[951],"name":"IERC20Permit","nameLocation":"2122:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"2141:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:8","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"owner","nameLocation":"3029:5:8","nodeType":"VariableDeclaration","scope":936,"src":"3021:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"spender","nameLocation":"3052:7:8","nodeType":"VariableDeclaration","scope":936,"src":"3044:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"value","nameLocation":"3077:5:8","nodeType":"VariableDeclaration","scope":936,"src":"3069:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:8","nodeType":"VariableDeclaration","scope":936,"src":"3092:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"v","nameLocation":"3124:1:8","nodeType":"VariableDeclaration","scope":936,"src":"3118:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":928,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"r","nameLocation":"3143:1:8","nodeType":"VariableDeclaration","scope":936,"src":"3135:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"s","nameLocation":"3162:1:8","nodeType":"VariableDeclaration","scope":936,"src":"3154:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:8"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"3178:0:8"},"scope":951,"src":"2996:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"3185:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:8","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"owner","nameLocation":"3508:5:8","nodeType":"VariableDeclaration","scope":944,"src":"3500:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:8"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"3538:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:8"},"scope":951,"src":"3484:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"3553:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":950,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:8","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"3764:2:8"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"3790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:8"},"scope":951,"src":"3739:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":952,"src":"2112:1689:8","usedErrors":[]}],"src":"123:3679:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1657],"IERC20":[915],"IERC20Permit":[951],"SafeERC20":[1327]},"id":1328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":953,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1328,"sourceUnit":916,"src":"140:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":955,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1328,"sourceUnit":952,"src":"164:40:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1328,"sourceUnit":1658,"src":"205:36:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"243:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1327,"linearizedBaseContracts":[1327],"name":"SafeERC20","nameLocation":"709:9:9","nodeType":"ContractDefinition","nodes":[{"id":960,"libraryName":{"id":958,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"731:7:9"},"nodeType":"UsingForDirective","src":"725:26:9","typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":983,"nodeType":"Block","src":"1013:103:9","statements":[{"expression":{"arguments":[{"id":972,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"1043:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":975,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"1073:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":882,"src":"1073:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1073:23:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":978,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1098:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1102:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":971,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"1023:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1023:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"ExpressionStatement","src":"1023:86:9"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"757:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:9","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"token","nameLocation":"970:5:9","nodeType":"VariableDeclaration","scope":984,"src":"963:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":963,"nodeType":"UserDefinedTypeName","pathNode":{"id":962,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"963:6:9"},"referencedDeclaration":915,"src":"963:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"to","nameLocation":"985:2:9","nodeType":"VariableDeclaration","scope":984,"src":"977:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"value","nameLocation":"997:5:9","nodeType":"VariableDeclaration","scope":984,"src":"989:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:9"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"1013:0:9"},"scope":1327,"src":"941:175:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1010,"nodeType":"Block","src":"1445:113:9","statements":[{"expression":{"arguments":[{"id":998,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"1475:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1001,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"1505:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":914,"src":"1505:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1505:27:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1004,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1534:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"1540:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1544:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":999,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":997,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"1455:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:96:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"1455:96:9"}]},"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"1122:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:9","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"token","nameLocation":"1388:5:9","nodeType":"VariableDeclaration","scope":1011,"src":"1381:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":987,"nodeType":"UserDefinedTypeName","pathNode":{"id":986,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"1381:6:9"},"referencedDeclaration":915,"src":"1381:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"from","nameLocation":"1403:4:9","nodeType":"VariableDeclaration","scope":1011,"src":"1395:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"to","nameLocation":"1417:2:9","nodeType":"VariableDeclaration","scope":1011,"src":"1409:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"value","nameLocation":"1429:5:9","nodeType":"VariableDeclaration","scope":1011,"src":"1421:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:9"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"1445:0:9"},"scope":1327,"src":"1355:203:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"1894:497:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2143:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1031,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1327","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1327","typeString":"library SafeERC20"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:9","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2175:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2190:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1027,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2159:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":892,"src":"2159:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2159:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2121:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"2121:163:9"},{"expression":{"arguments":[{"id":1043,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2314:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1046,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2344:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":902,"src":"2344:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2344:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1049,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2368:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2377:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1044,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1042,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2294:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"2294:90:9"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"1564:249:9","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:9","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"token","nameLocation":"1846:5:9","nodeType":"VariableDeclaration","scope":1055,"src":"1839:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":1014,"nodeType":"UserDefinedTypeName","pathNode":{"id":1013,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"1839:6:9"},"referencedDeclaration":915,"src":"1839:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"spender","nameLocation":"1861:7:9","nodeType":"VariableDeclaration","scope":1055,"src":"1853:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"value","nameLocation":"1878:5:9","nodeType":"VariableDeclaration","scope":1055,"src":"1870:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:9"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"1894:0:9"},"scope":1327,"src":"1818:573:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"2668:194:9","statements":[{"assignments":[1067],"declarations":[{"constant":false,"id":1067,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:9","nodeType":"VariableDeclaration","scope":1091,"src":"2678:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1076,"initialValue":{"arguments":[{"arguments":[{"id":1072,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1327","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1327","typeString":"library SafeERC20"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:9","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2732:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1068,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2701:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":892,"src":"2701:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:9"},{"expression":{"arguments":[{"id":1078,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2770:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1081,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2800:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":902,"src":"2800:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2800:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1084,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2824:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2833:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2848:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1079,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2777:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1077,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2750:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"2750:105:9"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"2397:180:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:9","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"token","nameLocation":"2620:5:9","nodeType":"VariableDeclaration","scope":1092,"src":"2613:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":1058,"nodeType":"UserDefinedTypeName","pathNode":{"id":1057,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"2613:6:9"},"referencedDeclaration":915,"src":"2613:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"spender","nameLocation":"2635:7:9","nodeType":"VariableDeclaration","scope":1092,"src":"2627:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"value","nameLocation":"2652:5:9","nodeType":"VariableDeclaration","scope":1092,"src":"2644:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:9"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"2668:0:9"},"scope":1327,"src":"2582:280:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"3139:321:9","statements":[{"id":1135,"nodeType":"UncheckedBlock","src":"3149:305:9","statements":[{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:9","nodeType":"VariableDeclaration","scope":1135,"src":"3173:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1113,"initialValue":{"arguments":[{"arguments":[{"id":1109,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1327","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1327","typeString":"library SafeERC20"}],"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:9","typeDescriptions":{}}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3212:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3227:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1105,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3196:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":892,"src":"3196:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3196:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1115,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3257:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"3273:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3249:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"3249:75:9"},{"expression":{"arguments":[{"id":1122,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3358:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1125,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3388:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":902,"src":"3388:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3388:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1128,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"3412:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3421:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"3436:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1121,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3338:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"ExpressionStatement","src":"3338:105:9"}]}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"2868:180:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:9","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"token","nameLocation":"3091:5:9","nodeType":"VariableDeclaration","scope":1137,"src":"3084:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":1095,"nodeType":"UserDefinedTypeName","pathNode":{"id":1094,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"3084:6:9"},"referencedDeclaration":915,"src":"3084:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"spender","nameLocation":"3106:7:9","nodeType":"VariableDeclaration","scope":1137,"src":"3098:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"value","nameLocation":"3123:5:9","nodeType":"VariableDeclaration","scope":1137,"src":"3115:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:9"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"3139:0:9"},"scope":1327,"src":"3053:407:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"3856:333:9","statements":[{"assignments":[1149],"declarations":[{"constant":false,"id":1149,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:9","nodeType":"VariableDeclaration","scope":1183,"src":"3866:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1158,"initialValue":{"arguments":[{"expression":{"expression":{"id":1152,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3917:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":902,"src":"3917:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3917:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1155,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3941:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3950:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1150,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3894:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:9"},{"condition":{"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:9","subExpression":{"arguments":[{"id":1160,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3996:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"id":1161,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4003:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1159,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3972:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3972:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1182,"nodeType":"IfStatement","src":"3967:216:9","trueBody":{"id":1181,"nodeType":"Block","src":"4018:165:9","statements":[{"expression":{"arguments":[{"id":1165,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4052:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1168,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4082:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":902,"src":"4082:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4082:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1171,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4106:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1166,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4059:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1164,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4032:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4032:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"4032:86:9"},{"expression":{"arguments":[{"id":1177,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4152:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},{"id":1178,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4159:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1176,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4132:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4132:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"ExpressionStatement","src":"4132:40:9"}]}}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"3466:308:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:9","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"token","nameLocation":"3808:5:9","nodeType":"VariableDeclaration","scope":1184,"src":"3801:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":1140,"nodeType":"UserDefinedTypeName","pathNode":{"id":1139,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"3801:6:9"},"referencedDeclaration":915,"src":"3801:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"spender","nameLocation":"3823:7:9","nodeType":"VariableDeclaration","scope":1184,"src":"3815:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"value","nameLocation":"3840:5:9","nodeType":"VariableDeclaration","scope":1184,"src":"3832:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:9"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"3856:0:9"},"scope":1327,"src":"3779:410:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"4556:257:9","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:9","nodeType":"VariableDeclaration","scope":1240,"src":"4566:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1211,"initialValue":{"arguments":[{"id":1209,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4601:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1207,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4588:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$951","typeString":"contract IERC20Permit"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4588:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4588:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:9"},{"expression":{"arguments":[{"id":1215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4630:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"4637:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4646:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1218,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"4653:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1219,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4663:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1220,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4666:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1221,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"4669:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1212,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4617:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$951","typeString":"contract IERC20Permit"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":936,"src":"4617:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"4617:54:9"},{"assignments":[1225],"declarations":[{"constant":false,"id":1225,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:9","nodeType":"VariableDeclaration","scope":1240,"src":"4681:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1230,"initialValue":{"arguments":[{"id":1228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4715:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1226,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4702:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$951","typeString":"contract IERC20Permit"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4702:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4702:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4739:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4753:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4731:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"ExpressionStatement","src":"4731:75:9"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"4195:141:9","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:9","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"token","nameLocation":"4383:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"4370:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$951","typeString":"contract IERC20Permit"},"typeName":{"id":1187,"nodeType":"UserDefinedTypeName","pathNode":{"id":1186,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":951,"src":"4370:12:9"},"referencedDeclaration":951,"src":"4370:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$951","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"owner","nameLocation":"4406:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"4398:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"spender","nameLocation":"4429:7:9","nodeType":"VariableDeclaration","scope":1241,"src":"4421:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"value","nameLocation":"4454:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"4446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:9","nodeType":"VariableDeclaration","scope":1241,"src":"4469:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"v","nameLocation":"4501:1:9","nodeType":"VariableDeclaration","scope":1241,"src":"4495:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1197,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"r","nameLocation":"4520:1:9","nodeType":"VariableDeclaration","scope":1241,"src":"4512:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"s","nameLocation":"4539:1:9","nodeType":"VariableDeclaration","scope":1241,"src":"4531:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:9"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"4556:0:9"},"scope":1327,"src":"4341:472:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1277,"nodeType":"Block","src":"5266:572:9","statements":[{"assignments":[1251],"declarations":[{"constant":false,"id":1251,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:9","nodeType":"VariableDeclaration","scope":1277,"src":"5615:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1260,"initialValue":{"arguments":[{"id":1257,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5669:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1254,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5649:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}],"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:9","typeDescriptions":{}}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"5641:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1262,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"5728:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5728:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1268,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"5765:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1269,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:9","typeDescriptions":{}}}],"id":1271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1266,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5754:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5754:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5720:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"5720:111:9"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"4819:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:9","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"token","nameLocation":"5232:5:9","nodeType":"VariableDeclaration","scope":1278,"src":"5225:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"5225:6:9"},"referencedDeclaration":915,"src":"5225:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nameLocation":"5252:4:9","nodeType":"VariableDeclaration","scope":1278,"src":"5239:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:9"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"5266:0:9"},"scope":1327,"src":"5196:642:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1325,"nodeType":"Block","src":"6428:505:9","statements":[{"assignments":[1290,1292],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"success","nameLocation":"6729:7:9","nodeType":"VariableDeclaration","scope":1325,"src":"6724:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1289,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:9","nodeType":"VariableDeclaration","scope":1325,"src":"6738:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1300,"initialValue":{"arguments":[{"id":1298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6785:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1295,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6773:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}],"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:9","typeDescriptions":{}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"6765:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6819:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1302,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6831:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6831:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1308,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6868:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1309,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:9","typeDescriptions":{}}}],"id":1311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6857:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6857:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1320,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6919:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:9","typeDescriptions":{}}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6911:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1316,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"6892:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1657_$","typeString":"type(library Address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1345,"src":"6892:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6892:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1288,"id":1324,"nodeType":"Return","src":"6800:126:9"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"5844:490:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:9","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"token","nameLocation":"6379:5:9","nodeType":"VariableDeclaration","scope":1326,"src":"6372:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"6372:6:9"},"referencedDeclaration":915,"src":"6372:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"data","nameLocation":"6399:4:9","nodeType":"VariableDeclaration","scope":1326,"src":"6386:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1283,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:9"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"6422:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1286,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:9"},"scope":1327,"src":"6339:594:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1328,"src":"701:6234:9","usedErrors":[]}],"src":"115:6821:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1657]},"id":1658,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1329,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1657,"linearizedBaseContracts":[1657],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1344,"nodeType":"Block","src":"1478:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1338,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"1702:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1337,"id":1343,"nodeType":"Return","src":"1695:30:10"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"216:1191:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:10","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"account","nameLocation":"1440:7:10","nodeType":"VariableDeclaration","scope":1345,"src":"1432:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:10"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1345,"src":"1472:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:10"},"scope":1657,"src":"1412:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"2718:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1356,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1657","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1657","typeString":"library Address"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:10","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1359,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"2761:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1363,"nodeType":"ExpressionStatement","src":"2728:73:10"},{"assignments":[1365,null],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"success","nameLocation":"2818:7:10","nodeType":"VariableDeclaration","scope":1378,"src":"2813:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1364,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1372,"initialValue":{"arguments":[{"hexValue":"","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1366,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"2831:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"2853:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:10"},{"expression":{"arguments":[{"id":1374,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"2882:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"2874:78:10"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"1738:904:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:10","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:10","nodeType":"VariableDeclaration","scope":1379,"src":"2666:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"amount","nameLocation":"2701:6:10","nodeType":"VariableDeclaration","scope":1379,"src":"2693:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:10"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"2718:0:10"},"scope":1657,"src":"2647:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1396,"nodeType":"Block","src":"3790:96:10","statements":[{"expression":{"arguments":[{"id":1390,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"3829:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1391,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3837:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1389,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1437,1481],"referencedDeclaration":1481,"src":"3807:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1388,"id":1395,"nodeType":"Return","src":"3800:79:10"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"2965:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1397,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:10","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"target","nameLocation":"3731:6:10","nodeType":"VariableDeclaration","scope":1397,"src":"3723:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"data","nameLocation":"3752:4:10","nodeType":"VariableDeclaration","scope":1397,"src":"3739:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:10"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1397,"src":"3776:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:10"},"scope":1657,"src":"3701:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1416,"nodeType":"Block","src":"4255:76:10","statements":[{"expression":{"arguments":[{"id":1410,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"4294:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"4302:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1413,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"4311:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1409,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1437,1481],"referencedDeclaration":1481,"src":"4272:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1408,"id":1415,"nodeType":"Return","src":"4265:59:10"}]},"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"3892:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1417,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:10","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"target","nameLocation":"4147:6:10","nodeType":"VariableDeclaration","scope":1417,"src":"4139:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"4176:4:10","nodeType":"VariableDeclaration","scope":1417,"src":"4163:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:10","nodeType":"VariableDeclaration","scope":1417,"src":"4190:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1403,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:10"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1417,"src":"4241:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:10"},"scope":1657,"src":"4108:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"4806:111:10","statements":[{"expression":{"arguments":[{"id":1430,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"4845:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"4853:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4859:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1429,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1437,1481],"referencedDeclaration":1481,"src":"4823:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1428,"id":1435,"nodeType":"Return","src":"4816:94:10"}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"4337:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:10","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"target","nameLocation":"4732:6:10","nodeType":"VariableDeclaration","scope":1437,"src":"4724:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"4753:4:10","nodeType":"VariableDeclaration","scope":1437,"src":"4740:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"value","nameLocation":"4767:5:10","nodeType":"VariableDeclaration","scope":1437,"src":"4759:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:10"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"4792:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1426,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:10"},"scope":1657,"src":"4693:224:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"5344:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1454,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1657","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1657","typeString":"library Address"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:10","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"ExpressionStatement","src":"5354:81:10"},{"assignments":[1463,1465],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"success","nameLocation":"5451:7:10","nodeType":"VariableDeclaration","scope":1480,"src":"5446:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1462,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:10","nodeType":"VariableDeclaration","scope":1480,"src":"5460:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1464,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1472,"initialValue":{"arguments":[{"id":1470,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"5513:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1466,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"5487:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5506:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:10"},{"expression":{"arguments":[{"id":1474,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"5562:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"5570:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1476,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5579:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1477,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"5591:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1473,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"5535:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1450,"id":1479,"nodeType":"Return","src":"5528:76:10"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"4923:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:10","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"target","nameLocation":"5213:6:10","nodeType":"VariableDeclaration","scope":1481,"src":"5205:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"data","nameLocation":"5242:4:10","nodeType":"VariableDeclaration","scope":1481,"src":"5229:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1441,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"value","nameLocation":"5264:5:10","nodeType":"VariableDeclaration","scope":1481,"src":"5256:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:10","nodeType":"VariableDeclaration","scope":1481,"src":"5279:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1445,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:10"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1481,"src":"5330:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1448,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:10"},"scope":1657,"src":"5165:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"5888:97:10","statements":[{"expression":{"arguments":[{"id":1492,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"5924:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1493,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"5932:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1491,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1498,1527],"referencedDeclaration":1527,"src":"5905:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1490,"id":1496,"nodeType":"Return","src":"5898:80:10"}]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"5617:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:10","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"target","nameLocation":"5824:6:10","nodeType":"VariableDeclaration","scope":1498,"src":"5816:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"data","nameLocation":"5845:4:10","nodeType":"VariableDeclaration","scope":1498,"src":"5832:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1485,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:10"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"5874:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1488,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:10"},"scope":1657,"src":"5788:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"6327:168:10","statements":[{"assignments":[1511,1513],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"success","nameLocation":"6343:7:10","nodeType":"VariableDeclaration","scope":1526,"src":"6338:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:10","nodeType":"VariableDeclaration","scope":1526,"src":"6352:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1518,"initialValue":{"arguments":[{"id":1516,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6397:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1514,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"6379:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:10"},{"expression":{"arguments":[{"id":1520,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"6446:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1521,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"6454:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1522,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"6463:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1523,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"6475:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1519,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"6419:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1509,"id":1525,"nodeType":"Return","src":"6412:76:10"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"5991:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:10","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"target","nameLocation":"6214:6:10","nodeType":"VariableDeclaration","scope":1527,"src":"6206:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"data","nameLocation":"6243:4:10","nodeType":"VariableDeclaration","scope":1527,"src":"6230:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:10","nodeType":"VariableDeclaration","scope":1527,"src":"6257:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:10"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"6313:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:10"},"scope":1657,"src":"6169:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"6771:101:10","statements":[{"expression":{"arguments":[{"id":1538,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"6809:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1539,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"6817:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1537,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1544,1573],"referencedDeclaration":1573,"src":"6788:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1536,"id":1542,"nodeType":"Return","src":"6781:84:10"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"6501:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:10","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"target","nameLocation":"6712:6:10","nodeType":"VariableDeclaration","scope":1544,"src":"6704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"data","nameLocation":"6733:4:10","nodeType":"VariableDeclaration","scope":1544,"src":"6720:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:10"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"6757:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1534,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:10"},"scope":1657,"src":"6674:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1572,"nodeType":"Block","src":"7213:170:10","statements":[{"assignments":[1557,1559],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"success","nameLocation":"7229:7:10","nodeType":"VariableDeclaration","scope":1572,"src":"7224:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1556,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:10","nodeType":"VariableDeclaration","scope":1572,"src":"7238:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1564,"initialValue":{"arguments":[{"id":1562,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"7285:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1560,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"7265:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:10"},{"expression":{"arguments":[{"id":1566,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"7334:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"7342:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1568,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"7351:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1569,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7363:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1565,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"7307:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1555,"id":1571,"nodeType":"Return","src":"7300:76:10"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"6878:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:10","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"target","nameLocation":"7105:6:10","nodeType":"VariableDeclaration","scope":1573,"src":"7097:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"data","nameLocation":"7134:4:10","nodeType":"VariableDeclaration","scope":1573,"src":"7121:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1548,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:10","nodeType":"VariableDeclaration","scope":1573,"src":"7148:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1550,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:10"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"7199:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1553,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:10"},"scope":1657,"src":"7058:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"7865:434:10","statements":[{"condition":{"id":1587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"7879:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1609,"nodeType":"Block","src":"8235:58:10","statements":[{"expression":{"arguments":[{"id":1605,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8257:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1606,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"8269:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1604,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"8249:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1608,"nodeType":"ExpressionStatement","src":"8249:33:10"}]},"id":1610,"nodeType":"IfStatement","src":"7875:418:10","trueBody":{"id":1603,"nodeType":"Block","src":"7888:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1588,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"7906:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"7902:286:10","trueBody":{"id":1599,"nodeType":"Block","src":"7930:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1594,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"8132:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1593,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"8121:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"8113:60:10"}]}},{"expression":{"id":1601,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8208:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1586,"id":1602,"nodeType":"Return","src":"8201:17:10"}]}}]},"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"7389:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:10","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"target","nameLocation":"7724:6:10","nodeType":"VariableDeclaration","scope":1612,"src":"7716:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"success","nameLocation":"7745:7:10","nodeType":"VariableDeclaration","scope":1612,"src":"7740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1577,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:10","nodeType":"VariableDeclaration","scope":1612,"src":"7762:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:10","nodeType":"VariableDeclaration","scope":1612,"src":"7795:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1581,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:10"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"7851:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1584,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:10"},"scope":1657,"src":"7671:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1635,"nodeType":"Block","src":"8680:135:10","statements":[{"condition":{"id":1624,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"8694:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1633,"nodeType":"Block","src":"8751:58:10","statements":[{"expression":{"arguments":[{"id":1629,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"8773:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1630,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"8785:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1628,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"8765:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"8765:33:10"}]},"id":1634,"nodeType":"IfStatement","src":"8690:119:10","trueBody":{"id":1627,"nodeType":"Block","src":"8703:42:10","statements":[{"expression":{"id":1625,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"8724:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1623,"id":1626,"nodeType":"Return","src":"8717:17:10"}]}}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"8305:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:10","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"success","nameLocation":"8560:7:10","nodeType":"VariableDeclaration","scope":1636,"src":"8555:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1614,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:10","nodeType":"VariableDeclaration","scope":1636,"src":"8577:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1616,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:10","nodeType":"VariableDeclaration","scope":1636,"src":"8610:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1618,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:10"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1636,"src":"8666:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:10"},"scope":1657,"src":"8520:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1655,"nodeType":"Block","src":"8904:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1643,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"8980:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1653,"nodeType":"Block","src":"9310:45:10","statements":[{"expression":{"arguments":[{"id":1650,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9331:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1649,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"9324:20:10"}]},"id":1654,"nodeType":"IfStatement","src":"8976:379:10","trueBody":{"id":1648,"nodeType":"Block","src":"9003:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:10"},"nodeType":"YulFunctionCall","src":"9202:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:10"},"nodeType":"YulFunctionCall","src":"9243:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:10"},"nodeType":"YulFunctionCall","src":"9236:44:10"},"nodeType":"YulExpressionStatement","src":"9236:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1638,"isOffset":false,"isSlot":false,"src":"9208:10:10","valueSize":1},{"declaration":1638,"isOffset":false,"isSlot":false,"src":"9251:10:10","valueSize":1}],"id":1647,"nodeType":"InlineAssembly","src":"9152:142:10"}]}}]},"id":1656,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:10","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:10","nodeType":"VariableDeclaration","scope":1656,"src":"8838:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:10","nodeType":"VariableDeclaration","scope":1656,"src":"8863:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1639,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:10"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"8904:0:10"},"scope":1657,"src":"8821:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1658,"src":"194:9169:10","usedErrors":[]}],"src":"101:9263:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1687]},"id":1688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1659,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"126:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1687,"linearizedBaseContracts":[1687],"name":"Context","nameLocation":"641:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1668,"nodeType":"Block","src":"717:34:11","statements":[{"expression":{"expression":{"id":1665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"734:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1664,"id":1667,"nodeType":"Return","src":"727:17:11"}]},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:11","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"674:2:11"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"708:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:11"},"scope":1687,"src":"655:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1677,"nodeType":"Block","src":"824:32:11","statements":[{"expression":{"expression":{"id":1674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"841:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1673,"id":1676,"nodeType":"Return","src":"834:15:11"}]},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:11","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"774:2:11"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"808:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:11"},"scope":1687,"src":"757:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"934:25:11","statements":[{"expression":{"hexValue":"30","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1682,"id":1684,"nodeType":"Return","src":"944:8:11"}]},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:11","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"891:2:11"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"925:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:11"},"scope":1687,"src":"862:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1688,"src":"623:338:11","usedErrors":[]}],"src":"101:861:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3346],"SignedMath":[4992],"Strings":[1916]},"id":1917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1689,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":3347,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":4993,"src":"152:31:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"185:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":1916,"linearizedBaseContracts":[1916],"name":"Strings","nameLocation":"228:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1695,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:12","nodeType":"VariableDeclaration","scope":1916,"src":"242:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1693,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1698,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:12","nodeType":"VariableDeclaration","scope":1916,"src":"302:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1696,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1745,"nodeType":"Block","src":"518:625:12","statements":[{"id":1744,"nodeType":"UncheckedBlock","src":"528:609:12","statements":[{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"length","nameLocation":"560:6:12","nodeType":"VariableDeclaration","scope":1744,"src":"552:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1714,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"580:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1708,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"569:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3346_$","typeString":"type(library Math)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3183,"src":"569:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:12"},{"assignments":[1716],"declarations":[{"constant":false,"id":1716,"mutability":"mutable","name":"buffer","nameLocation":"618:6:12","nodeType":"VariableDeclaration","scope":1744,"src":"604:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1715,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1721,"initialValue":{"arguments":[{"id":1719,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"638:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1717,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:12"},{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"ptr","nameLocation":"667:3:12","nodeType":"VariableDeclaration","scope":1744,"src":"659:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1724,"nodeType":"VariableDeclarationStatement","src":"659:11:12"},{"AST":{"nodeType":"YulBlock","src":"740:67:12","statements":[{"nodeType":"YulAssignment","src":"758:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:12"},"nodeType":"YulFunctionCall","src":"777:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:12"},"nodeType":"YulFunctionCall","src":"765:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1716,"isOffset":false,"isSlot":false,"src":"769:6:12","valueSize":1},{"declaration":1707,"isOffset":false,"isSlot":false,"src":"785:6:12","valueSize":1},{"declaration":1723,"isOffset":false,"isSlot":false,"src":"758:3:12","valueSize":1}],"id":1725,"nodeType":"InlineAssembly","src":"731:76:12"},{"body":{"id":1740,"nodeType":"Block","src":"833:267:12","statements":[{"expression":{"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:12","subExpression":{"id":1727,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1729,"nodeType":"ExpressionStatement","src":"851:5:12"},{"AST":{"nodeType":"YulBlock","src":"934:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:12"},"nodeType":"YulFunctionCall","src":"974:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:12"},"nodeType":"YulFunctionCall","src":"969:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:12"},"nodeType":"YulFunctionCall","src":"956:44:12"},"nodeType":"YulExpressionStatement","src":"956:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1695,"isOffset":false,"isSlot":false,"src":"990:8:12","valueSize":1},{"declaration":1723,"isOffset":false,"isSlot":false,"src":"964:3:12","valueSize":1},{"declaration":1701,"isOffset":false,"isSlot":false,"src":"978:5:12","valueSize":1}],"id":1730,"nodeType":"InlineAssembly","src":"925:93:12"},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1035:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"1035:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1068:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"IfStatement","src":"1064:21:12","trueBody":{"id":1738,"nodeType":"Break","src":"1080:5:12"}}]},"condition":{"hexValue":"74727565","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1741,"nodeType":"WhileStatement","src":"820:280:12"},{"expression":{"id":1742,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"1120:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1705,"id":1743,"nodeType":"Return","src":"1113:13:12"}]}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"352:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:12","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"value","nameLocation":"473:5:12","nodeType":"VariableDeclaration","scope":1746,"src":"465:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:12"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"503:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1703,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:12"},"scope":1916,"src":"447:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"1313:103:12","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"1354:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:12","trueExpression":{"hexValue":"2d","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"1400:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1765,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"1385:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4992_$","typeString":"type(library SignedMath)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4991,"src":"1385:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1764,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1746,1774],"referencedDeclaration":1746,"src":"1376:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1756,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:12","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1753,"id":1772,"nodeType":"Return","src":"1323:86:12"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"1149:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:12","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"value","nameLocation":"1268:5:12","nodeType":"VariableDeclaration","scope":1774,"src":"1261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1748,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:12"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"1298:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1751,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:12"},"scope":1916,"src":"1243:173:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1793,"nodeType":"Block","src":"1595:100:12","statements":[{"id":1792,"nodeType":"UncheckedBlock","src":"1605:84:12","statements":[{"expression":{"arguments":[{"id":1783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"1648:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"1667:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1784,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1655:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3346_$","typeString":"type(library Math)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3306,"src":"1655:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1782,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1794,1870,1890],"referencedDeclaration":1870,"src":"1636:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1781,"id":1791,"nodeType":"Return","src":"1629:49:12"}]}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"1422:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:12","nodeType":"FunctionDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"1550:5:12","nodeType":"VariableDeclaration","scope":1794,"src":"1542:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:12"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"1580:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1779,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:12"},"scope":1916,"src":"1521:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"1908:347:12","statements":[{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:12","nodeType":"VariableDeclaration","scope":1869,"src":"1918:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1814,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1809,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1954:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1806,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:12"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1815,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"1975:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1817,"indexExpression":{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1820,"nodeType":"ExpressionStatement","src":"1975:15:12"},{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1821,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2000:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1823,"indexExpression":{"hexValue":"31","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1826,"nodeType":"ExpressionStatement","src":"2000:15:12"},{"body":{"id":1855,"nodeType":"Block","src":"2070:83:12","statements":[{"expression":{"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1841,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2084:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1843,"indexExpression":{"id":1842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2091:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1844,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2096:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1848,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"2105:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1850,"nodeType":"ExpressionStatement","src":"2084:33:12"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"2131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"2131:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2058:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"initializationExpression":{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"mutability":"mutable","name":"i","nameLocation":"2038:1:12","nodeType":"VariableDeclaration","scope":1856,"src":"2030:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1834,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1830,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"2046:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:12"},"loopExpression":{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:12","subExpression":{"id":1838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1840,"nodeType":"ExpressionStatement","src":"2065:3:12"},"nodeType":"ForStatement","src":"2025:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"2170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"ExpressionStatement","src":"2162:55:12"},{"expression":{"arguments":[{"id":1866,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2241:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1864,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:12","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1803,"id":1868,"nodeType":"Return","src":"2227:21:12"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"1701:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:12","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"value","nameLocation":"1847:5:12","nodeType":"VariableDeclaration","scope":1870,"src":"1839:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"length","nameLocation":"1862:6:12","nodeType":"VariableDeclaration","scope":1870,"src":"1854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"1893:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1801,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:12"},"scope":1916,"src":"1818:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"2480:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1883,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2525:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1881,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:12","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1886,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2533:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1878,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1794,1870,1890],"referencedDeclaration":1870,"src":"2497:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1877,"id":1888,"nodeType":"Return","src":"2490:59:12"}]},"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"2261:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:12","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"addr","nameLocation":"2436:4:12","nodeType":"VariableDeclaration","scope":1890,"src":"2428:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:12"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"2465:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1875,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:12"},"scope":1916,"src":"2407:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"2711:66:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2744:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:12","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1900,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"2767:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1907,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:12","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1906,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1899,"id":1913,"nodeType":"Return","src":"2721:49:12"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"2562:66:12","text":" @dev Returns true if the two strings are equal."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:12","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"a","nameLocation":"2662:1:12","nodeType":"VariableDeclaration","scope":1915,"src":"2648:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1892,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"b","nameLocation":"2679:1:12","nodeType":"VariableDeclaration","scope":1915,"src":"2665:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:12"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"2705:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:12"},"scope":1916,"src":"2633:144:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1917,"src":"220:2559:12","usedErrors":[]}],"src":"101:2679:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[2444]},"id":2445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1918,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"143:658:13","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":2444,"linearizedBaseContracts":[2444],"name":"MerkleProof","nameLocation":"810:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1939,"nodeType":"Block","src":"1253:57:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1933,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1283:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1934,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1290:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1932,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"1270:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1270:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1936,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1299:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1931,"id":1938,"nodeType":"Return","src":"1263:40:13"}]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"828:323:13","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:13","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"proof","nameLocation":"1189:5:13","nodeType":"VariableDeclaration","scope":1940,"src":"1172:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1922,"nodeType":"ArrayTypeName","src":"1172:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"root","nameLocation":"1204:4:13","nodeType":"VariableDeclaration","scope":1940,"src":"1196:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:13","nodeType":"VariableDeclaration","scope":1940,"src":"1210:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:13"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1940,"src":"1247:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1929,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:13"},"scope":2444,"src":"1156:154:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"1518:65:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1954,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"1556:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1955,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1563:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1953,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1535:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1535:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1957,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1572:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1952,"id":1959,"nodeType":"Return","src":"1528:48:13"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"1316:90:13","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:13","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"proof","nameLocation":"1454:5:13","nodeType":"VariableDeclaration","scope":1961,"src":"1435:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1943,"nodeType":"ArrayTypeName","src":"1435:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"root","nameLocation":"1469:4:13","nodeType":"VariableDeclaration","scope":1961,"src":"1461:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:13","nodeType":"VariableDeclaration","scope":1961,"src":"1475:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:13"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"1512:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1950,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:13"},"scope":2444,"src":"1411:172:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"2026:198:13","statements":[{"assignments":[1973],"declarations":[{"constant":false,"id":1973,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:13","nodeType":"VariableDeclaration","scope":2000,"src":"2036:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1975,"initialValue":{"id":1974,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2059:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:13"},{"body":{"id":1996,"nodeType":"Block","src":"2116:73:13","statements":[{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"2130:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1989,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"2155:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1990,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2169:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1992,"indexExpression":{"id":1991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2175:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1988,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2145:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2145:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1995,"nodeType":"ExpressionStatement","src":"2130:48:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2093:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1981,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2097:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2097:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"initializationExpression":{"assignments":[1977],"declarations":[{"constant":false,"id":1977,"mutability":"mutable","name":"i","nameLocation":"2086:1:13","nodeType":"VariableDeclaration","scope":1997,"src":"2078:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1979,"initialValue":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:13"},"loopExpression":{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:13","subExpression":{"id":1984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2111:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"2111:3:13"},"nodeType":"ForStatement","src":"2073:116:13"},{"expression":{"id":1998,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"2205:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1971,"id":1999,"nodeType":"Return","src":"2198:19:13"}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"1589:340:13","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:13","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"proof","nameLocation":"1973:5:13","nodeType":"VariableDeclaration","scope":2001,"src":"1956:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1964,"nodeType":"ArrayTypeName","src":"1956:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:13","nodeType":"VariableDeclaration","scope":2001,"src":"1980:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:13"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"2017:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:13"},"scope":2444,"src":"1934:290:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"2433:198:13","statements":[{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:13","nodeType":"VariableDeclaration","scope":2040,"src":"2443:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2015,"initialValue":{"id":2014,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2466:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:13"},{"body":{"id":2036,"nodeType":"Block","src":"2523:73:13","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2027,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"2537:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2029,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"2562:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2030,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2576:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2032,"indexExpression":{"id":2031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"2582:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2028,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2552:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2552:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2035,"nodeType":"ExpressionStatement","src":"2537:48:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"2500:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2021,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2504:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2504:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2037,"initializationExpression":{"assignments":[2017],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"i","nameLocation":"2493:1:13","nodeType":"VariableDeclaration","scope":2037,"src":"2485:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2019,"initialValue":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:13"},"loopExpression":{"expression":{"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:13","subExpression":{"id":2024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"2518:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2026,"nodeType":"ExpressionStatement","src":"2518:3:13"},"nodeType":"ForStatement","src":"2480:116:13"},{"expression":{"id":2038,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"2612:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2011,"id":2039,"nodeType":"Return","src":"2605:19:13"}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"2230:96:13","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:13","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"proof","nameLocation":"2380:5:13","nodeType":"VariableDeclaration","scope":2041,"src":"2361:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2004,"nodeType":"ArrayTypeName","src":"2361:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:13","nodeType":"VariableDeclaration","scope":2041,"src":"2387:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:13"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"2424:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:13"},"scope":2444,"src":"2331:300:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2066,"nodeType":"Block","src":"3174:76:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2059,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3209:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":2060,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3216:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":2061,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"3228:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2058,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"3191:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3191:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2063,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3239:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2057,"id":2065,"nodeType":"Return","src":"3184:59:13"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"2637:350:13","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:13","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"proof","nameLocation":"3044:5:13","nodeType":"VariableDeclaration","scope":2067,"src":"3027:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2044,"nodeType":"ArrayTypeName","src":"3027:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:13","nodeType":"VariableDeclaration","scope":2067,"src":"3059:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2046,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"ArrayTypeName","src":"3059:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"root","nameLocation":"3101:4:13","nodeType":"VariableDeclaration","scope":2067,"src":"3093:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:13","nodeType":"VariableDeclaration","scope":2067,"src":"3115:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2052,"nodeType":"ArrayTypeName","src":"3115:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:13"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"3168:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:13"},"scope":2444,"src":"2992:258:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"3655:84:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2085,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"3698:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":2086,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"3705:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":2087,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"3717:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2084,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3672:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3672:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2089,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3728:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2083,"id":2091,"nodeType":"Return","src":"3665:67:13"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"3256:200:13","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:13","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"proof","nameLocation":"3523:5:13","nodeType":"VariableDeclaration","scope":2093,"src":"3504:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2070,"nodeType":"ArrayTypeName","src":"3504:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:13","nodeType":"VariableDeclaration","scope":2093,"src":"3538:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2072,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"ArrayTypeName","src":"3538:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"root","nameLocation":"3582:4:13","nodeType":"VariableDeclaration","scope":2093,"src":"3574:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:13","nodeType":"VariableDeclaration","scope":2093,"src":"3596:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2078,"nodeType":"ArrayTypeName","src":"3596:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:13"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"3649:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2081,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:13"},"scope":2444,"src":"3461:278:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"4693:2053:13","statements":[{"assignments":[2109],"declarations":[{"constant":false,"id":2109,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:13","nodeType":"VariableDeclaration","scope":2250,"src":"5077:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2112,"initialValue":{"expression":{"id":2110,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"5097:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5097:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:13"},{"assignments":[2114],"declarations":[{"constant":false,"id":2114,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:13","nodeType":"VariableDeclaration","scope":2250,"src":"5120:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2117,"initialValue":{"expression":{"id":2115,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5139:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5139:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:13"},{"assignments":[2119],"declarations":[{"constant":false,"id":2119,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:13","nodeType":"VariableDeclaration","scope":2250,"src":"5161:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2122,"initialValue":{"expression":{"id":2120,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"5183:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5183:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5252:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2125,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"5264:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2129,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"5280:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":2123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5244:83:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"ExpressionStatement","src":"5244:83:13"},{"assignments":[2138],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:13","nodeType":"VariableDeclaration","scope":2250,"src":"5572:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2137,"nodeType":"ArrayTypeName","src":"5572:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2144,"initialValue":{"arguments":[{"id":2142,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"5612:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2140,"nodeType":"ArrayTypeName","src":"5602:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5598:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:13"},{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:13","nodeType":"VariableDeclaration","scope":2250,"src":"5634:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2148,"initialValue":{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:13"},{"assignments":[2150],"declarations":[{"constant":false,"id":2150,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:13","nodeType":"VariableDeclaration","scope":2250,"src":"5663:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2152,"initialValue":{"hexValue":"30","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:13"},{"assignments":[2154],"declarations":[{"constant":false,"id":2154,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:13","nodeType":"VariableDeclaration","scope":2250,"src":"5692:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2156,"initialValue":{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:13"},{"body":{"id":2215,"nodeType":"Block","src":"6130:292:13","statements":[{"assignments":[2168],"declarations":[{"constant":false,"id":2168,"mutability":"mutable","name":"a","nameLocation":"6152:1:13","nodeType":"VariableDeclaration","scope":2215,"src":"6144:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2181,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6156:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2170,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6166:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2176,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"6198:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2179,"indexExpression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:13","subExpression":{"id":2177,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"6205:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:13","trueExpression":{"baseExpression":{"id":2172,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6178:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2175,"indexExpression":{"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:13","subExpression":{"id":2173,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6185:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:13"},{"assignments":[2183],"declarations":[{"constant":false,"id":2183,"mutability":"mutable","name":"b","nameLocation":"6237:1:13","nodeType":"VariableDeclaration","scope":2215,"src":"6229:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2205,"initialValue":{"condition":{"baseExpression":{"id":2184,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"6241:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2186,"indexExpression":{"id":2185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"6252:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2200,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6353:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2203,"indexExpression":{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:13","subExpression":{"id":2201,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"6359:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:13","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2188,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6284:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2194,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"6316:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2197,"indexExpression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:13","subExpression":{"id":2195,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"6323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:13","trueExpression":{"baseExpression":{"id":2190,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6296:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2193,"indexExpression":{"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:13","subExpression":{"id":2191,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:13"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2206,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"6384:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2208,"indexExpression":{"id":2207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"6391:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6406:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"6409:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2209,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6396:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6396:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2214,"nodeType":"ExpressionStatement","src":"6384:27:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"6108:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2162,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"6112:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"initializationExpression":{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"i","nameLocation":"6101:1:13","nodeType":"VariableDeclaration","scope":2216,"src":"6093:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2160,"initialValue":{"hexValue":"30","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:13"},"loopExpression":{"expression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:13","subExpression":{"id":2164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"6125:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ExpressionStatement","src":"6125:3:13"},"nodeType":"ForStatement","src":"6088:334:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"6436:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2235,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6638:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2247,"nodeType":"Block","src":"6700:40:13","statements":[{"expression":{"baseExpression":{"id":2243,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6721:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2245,"indexExpression":{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2107,"id":2246,"nodeType":"Return","src":"6714:15:13"}]},"id":2248,"nodeType":"IfStatement","src":"6634:106:13","trueBody":{"id":2242,"nodeType":"Block","src":"6653:41:13","statements":[{"expression":{"baseExpression":{"id":2238,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6674:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2240,"indexExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2107,"id":2241,"nodeType":"Return","src":"6667:16:13"}]}},"id":2249,"nodeType":"IfStatement","src":"6432:308:13","trueBody":{"id":2234,"nodeType":"Block","src":"6453:175:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"6475:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2222,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"6487:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":2220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6467:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"6467:64:13"},{"id":2233,"nodeType":"UncheckedBlock","src":"6545:73:13","statements":[{"expression":{"baseExpression":{"id":2227,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"6580:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2231,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"6587:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2107,"id":2232,"nodeType":"Return","src":"6573:30:13"}]}]}}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"3745:768:13","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:13","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"proof","nameLocation":"4571:5:13","nodeType":"VariableDeclaration","scope":2251,"src":"4554:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2096,"nodeType":"ArrayTypeName","src":"4554:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:13","nodeType":"VariableDeclaration","scope":2251,"src":"4586:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"ArrayTypeName","src":"4586:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:13","nodeType":"VariableDeclaration","scope":2251,"src":"4620:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2102,"nodeType":"ArrayTypeName","src":"4620:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:13"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:13","nodeType":"VariableDeclaration","scope":2251,"src":"4673:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:13"},"scope":2444,"src":"4518:2228:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"7146:2053:13","statements":[{"assignments":[2267],"declarations":[{"constant":false,"id":2267,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:13","nodeType":"VariableDeclaration","scope":2408,"src":"7530:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2270,"initialValue":{"expression":{"id":2268,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"7550:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7550:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:13"},{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:13","nodeType":"VariableDeclaration","scope":2408,"src":"7573:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2275,"initialValue":{"expression":{"id":2273,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"7592:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7592:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:13"},{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:13","nodeType":"VariableDeclaration","scope":2408,"src":"7614:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2280,"initialValue":{"expression":{"id":2278,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"7636:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7636:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"7705:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2283,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"7717:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2287,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"7733:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":2281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:83:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"ExpressionStatement","src":"7697:83:13"},{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:13","nodeType":"VariableDeclaration","scope":2408,"src":"8025:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2295,"nodeType":"ArrayTypeName","src":"8025:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2302,"initialValue":{"arguments":[{"id":2300,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2298,"nodeType":"ArrayTypeName","src":"8055:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8051:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:13"},{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:13","nodeType":"VariableDeclaration","scope":2408,"src":"8087:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"hexValue":"30","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:13"},{"assignments":[2308],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:13","nodeType":"VariableDeclaration","scope":2408,"src":"8116:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2310,"initialValue":{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:13"},{"assignments":[2312],"declarations":[{"constant":false,"id":2312,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:13","nodeType":"VariableDeclaration","scope":2408,"src":"8145:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2314,"initialValue":{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:13"},{"body":{"id":2373,"nodeType":"Block","src":"8583:292:13","statements":[{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"a","nameLocation":"8605:1:13","nodeType":"VariableDeclaration","scope":2373,"src":"8597:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2339,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8609:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2328,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"8619:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2334,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8651:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2337,"indexExpression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:13","subExpression":{"id":2335,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"8658:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:13","trueExpression":{"baseExpression":{"id":2330,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"8631:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2333,"indexExpression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:13","subExpression":{"id":2331,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8638:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:13"},{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"b","nameLocation":"8690:1:13","nodeType":"VariableDeclaration","scope":2373,"src":"8682:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2363,"initialValue":{"condition":{"baseExpression":{"id":2342,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"8694:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":2344,"indexExpression":{"id":2343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"8705:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2358,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"8806:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2361,"indexExpression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:13","subExpression":{"id":2359,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"8812:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:13","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8727:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2346,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"8737:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":2352,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8769:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2355,"indexExpression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:13","subExpression":{"id":2353,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"8776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:13","trueExpression":{"baseExpression":{"id":2348,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"8749:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2351,"indexExpression":{"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:13","subExpression":{"id":2349,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:13"},{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2364,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8837:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2366,"indexExpression":{"id":2365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"8844:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"8859:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"8862:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2367,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"8849:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8849:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2372,"nodeType":"ExpressionStatement","src":"8837:27:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"8561:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2320,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8565:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2374,"initializationExpression":{"assignments":[2316],"declarations":[{"constant":false,"id":2316,"mutability":"mutable","name":"i","nameLocation":"8554:1:13","nodeType":"VariableDeclaration","scope":2374,"src":"8546:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2318,"initialValue":{"hexValue":"30","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:13"},"loopExpression":{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:13","subExpression":{"id":2322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"8578:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"8578:3:13"},"nodeType":"ForStatement","src":"8541:334:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2375,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8889:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"9091:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2405,"nodeType":"Block","src":"9153:40:13","statements":[{"expression":{"baseExpression":{"id":2401,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"9174:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":2403,"indexExpression":{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2265,"id":2404,"nodeType":"Return","src":"9167:15:13"}]},"id":2406,"nodeType":"IfStatement","src":"9087:106:13","trueBody":{"id":2400,"nodeType":"Block","src":"9106:41:13","statements":[{"expression":{"baseExpression":{"id":2396,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"9127:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2398,"indexExpression":{"hexValue":"30","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2265,"id":2399,"nodeType":"Return","src":"9120:16:13"}]}},"id":2407,"nodeType":"IfStatement","src":"8885:308:13","trueBody":{"id":2392,"nodeType":"Block","src":"8906:175:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"8928:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2380,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"8940:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":2378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8920:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2384,"nodeType":"ExpressionStatement","src":"8920:64:13"},{"id":2391,"nodeType":"UncheckedBlock","src":"8998:73:13","statements":[{"expression":{"baseExpression":{"id":2385,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"9033:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2389,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"9040:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2265,"id":2390,"nodeType":"Return","src":"9026:30:13"}]}]}}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"6752:202:13","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:13","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"proof","nameLocation":"7022:5:13","nodeType":"VariableDeclaration","scope":2409,"src":"7003:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2254,"nodeType":"ArrayTypeName","src":"7003:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:13","nodeType":"VariableDeclaration","scope":2409,"src":"7037:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2256,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"ArrayTypeName","src":"7037:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:13","nodeType":"VariableDeclaration","scope":2409,"src":"7073:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2260,"nodeType":"ArrayTypeName","src":"7073:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:13"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:13","nodeType":"VariableDeclaration","scope":2409,"src":"7126:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:13"},"scope":2444,"src":"6959:2240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"9277:75:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"9294:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"9298:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"9340:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2427,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"9343:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2425,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"9325:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9325:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:13","trueExpression":{"arguments":[{"id":2422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"9317:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"9320:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2421,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"9302:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2417,"id":2430,"nodeType":"Return","src":"9287:58:13"}]},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:13","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"a","nameLocation":"9232:1:13","nodeType":"VariableDeclaration","scope":2432,"src":"9224:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"b","nameLocation":"9243:1:13","nodeType":"VariableDeclaration","scope":2432,"src":"9235:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:13"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"9268:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:13"},"scope":2444,"src":"9205:147:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2442,"nodeType":"Block","src":"9441:178:13","statements":[{"AST":{"nodeType":"YulBlock","src":"9503:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9524:4:13","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9530:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9517:6:13"},"nodeType":"YulFunctionCall","src":"9517:15:13"},"nodeType":"YulExpressionStatement","src":"9517:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9552:4:13","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9558:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:13"},"nodeType":"YulFunctionCall","src":"9545:15:13"},"nodeType":"YulExpressionStatement","src":"9545:15:13"},{"nodeType":"YulAssignment","src":"9573:30:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9592:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9598:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9582:9:13"},"nodeType":"YulFunctionCall","src":"9582:21:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2434,"isOffset":false,"isSlot":false,"src":"9530:1:13","valueSize":1},{"declaration":2436,"isOffset":false,"isSlot":false,"src":"9558:1:13","valueSize":1},{"declaration":2439,"isOffset":false,"isSlot":false,"src":"9573:5:13","valueSize":1}],"id":2441,"nodeType":"InlineAssembly","src":"9494:119:13"}]},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:13","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"a","nameLocation":"9390:1:13","nodeType":"VariableDeclaration","scope":2443,"src":"9382:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"b","nameLocation":"9401:1:13","nodeType":"VariableDeclaration","scope":2443,"src":"9393:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:13"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"value","nameLocation":"9434:5:13","nodeType":"VariableDeclaration","scope":2443,"src":"9426:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:13"},"scope":2444,"src":"9358:261:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2445,"src":"802:8819:13","usedErrors":[]}],"src":"118:9504:13"},"id":13},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2468],"IERC165":[2480]},"id":2469,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2446,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2469,"sourceUnit":2481,"src":"124:23:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2449,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"754:7:14"},"id":2450,"nodeType":"InheritanceSpecifier","src":"754:7:14"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"149:576:14","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2468,"linearizedBaseContracts":[2468,2480],"name":"ERC165","nameLocation":"744:6:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2479],"body":{"id":2466,"nodeType":"Block","src":"920:64:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"937:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2461,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2480_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2480_$","typeString":"type(contract IERC165)"}],"id":2460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2480","typeString":"type(contract IERC165)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2458,"id":2465,"nodeType":"Return","src":"930:47:14"}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"768:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:14","nodeType":"FunctionDefinition","overrides":{"id":2455,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:14"},"parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:14","nodeType":"VariableDeclaration","scope":2467,"src":"856:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2452,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:14"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"914:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2456,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:14"},"scope":2468,"src":"829:155:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2469,"src":"726:260:14","usedErrors":[]}],"src":"99:888:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2480]},"id":2481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2470,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"125:279:15","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2480,"linearizedBaseContracts":[2480],"name":"IERC165","nameLocation":"415:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"429:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2479,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:15","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:15","nodeType":"VariableDeclaration","scope":2479,"src":"801:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2473,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:15"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"844:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2476,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:15"},"scope":2480,"src":"774:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2481,"src":"405:447:15","usedErrors":[]}],"src":"100:753:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3346]},"id":3347,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2482,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"128:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3346,"linearizedBaseContracts":[3346],"name":"Math","nameLocation":"210:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2487,"members":[{"id":2484,"name":"Down","nameLocation":"245:4:16","nodeType":"EnumValue","src":"245:4:16"},{"id":2485,"name":"Up","nameLocation":"287:2:16","nodeType":"EnumValue","src":"287:2:16"},{"id":2486,"name":"Zero","nameLocation":"318:4:16","nodeType":"EnumValue","src":"318:4:16"}],"name":"Rounding","nameLocation":"226:8:16","nodeType":"EnumDefinition","src":"221:122:16"},{"body":{"id":2504,"nodeType":"Block","src":"480:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"497:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"501:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"509:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:16","trueExpression":{"id":2500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"505:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2496,"id":2503,"nodeType":"Return","src":"490:20:16"}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"349:59:16","text":" @dev Returns the largest of two numbers."},"id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:16","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"a","nameLocation":"434:1:16","nodeType":"VariableDeclaration","scope":2505,"src":"426:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"b","nameLocation":"445:1:16","nodeType":"VariableDeclaration","scope":2505,"src":"437:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:16"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"471:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:16"},"scope":3346,"src":"413:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2522,"nodeType":"Block","src":"655:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"676:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"684:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:16","trueExpression":{"id":2518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2514,"id":2521,"nodeType":"Return","src":"665:20:16"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"523:60:16","text":" @dev Returns the smallest of two numbers."},"id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:16","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"a","nameLocation":"609:1:16","nodeType":"VariableDeclaration","scope":2523,"src":"601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"b","nameLocation":"620:1:16","nodeType":"VariableDeclaration","scope":2523,"src":"612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:16"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2523,"src":"646:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:16"},"scope":3346,"src":"588:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2545,"nodeType":"Block","src":"876:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"931:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"935:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"941:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"945:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2532,"id":2544,"nodeType":"Return","src":"923:28:16"}]},"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"698:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:16","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"a","nameLocation":"830:1:16","nodeType":"VariableDeclaration","scope":2546,"src":"822:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"b","nameLocation":"841:1:16","nodeType":"VariableDeclaration","scope":2546,"src":"833:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:16"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2546,"src":"867:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:16"},"scope":3346,"src":"805:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2570,"nodeType":"Block","src":"1228:123:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1316:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1330:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1339:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:16","trueExpression":{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2555,"id":2569,"nodeType":"Return","src":"1309:35:16"}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"964:188:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:16","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"a","nameLocation":"1182:1:16","nodeType":"VariableDeclaration","scope":2571,"src":"1174:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"b","nameLocation":"1193:1:16","nodeType":"VariableDeclaration","scope":2571,"src":"1185:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:16"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2571,"src":"1219:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:16"},"scope":3346,"src":"1157:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"1765:4115:16","statements":[{"id":2692,"nodeType":"UncheckedBlock","src":"1775:4099:16","statements":[{"assignments":[2584],"declarations":[{"constant":false,"id":2584,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:16","nodeType":"VariableDeclaration","scope":2692,"src":"2096:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2585,"nodeType":"VariableDeclarationStatement","src":"2096:13:16"},{"assignments":[2587],"declarations":[{"constant":false,"id":2587,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:16","nodeType":"VariableDeclaration","scope":2692,"src":"2168:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2588,"nodeType":"VariableDeclarationStatement","src":"2168:13:16"},{"AST":{"nodeType":"YulBlock","src":"2248:157:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:16"},"nodeType":"YulFunctionCall","src":"2289:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:16"},"nodeType":"YulFunctionCall","src":"2276:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:16","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:16"},"nodeType":"YulFunctionCall","src":"2322:9:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:16"}]},{"nodeType":"YulAssignment","src":"2348:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:16"},"nodeType":"YulFunctionCall","src":"2361:14:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:16"},"nodeType":"YulFunctionCall","src":"2377:13:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:16"},"nodeType":"YulFunctionCall","src":"2357:34:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2584,"isOffset":false,"isSlot":false,"src":"2313:5:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"2369:5:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"2384:5:16","valueSize":1},{"declaration":2587,"isOffset":false,"isSlot":false,"src":"2348:5:16","valueSize":1},{"declaration":2574,"isOffset":false,"isSlot":false,"src":"2283:1:16","valueSize":1},{"declaration":2574,"isOffset":false,"isSlot":false,"src":"2326:1:16","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"2286:1:16","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"2329:1:16","valueSize":1}],"id":2589,"nodeType":"InlineAssembly","src":"2239:166:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"2486:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"IfStatement","src":"2482:368:16","trueBody":{"id":2597,"nodeType":"Block","src":"2498:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2593,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2816:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2594,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"2824:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2582,"id":2596,"nodeType":"Return","src":"2809:26:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"2960:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2601,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"2974:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2605,"nodeType":"ExpressionStatement","src":"2952:53:16"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:16","nodeType":"VariableDeclaration","scope":2692,"src":"3261:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2608,"nodeType":"VariableDeclarationStatement","src":"3261:17:16"},{"AST":{"nodeType":"YulBlock","src":"3301:291:16","statements":[{"nodeType":"YulAssignment","src":"3370:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:16"},"nodeType":"YulFunctionCall","src":"3383:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:16"}]},{"nodeType":"YulAssignment","src":"3490:41:16","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:16"},"nodeType":"YulFunctionCall","src":"3510:20:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:16"},"nodeType":"YulFunctionCall","src":"3499:32:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:16"}]},{"nodeType":"YulAssignment","src":"3548:30:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:16"},"nodeType":"YulFunctionCall","src":"3557:21:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"3396:11:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"3524:5:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"3548:5:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"3561:5:16","valueSize":1},{"declaration":2587,"isOffset":false,"isSlot":false,"src":"3490:5:16","valueSize":1},{"declaration":2587,"isOffset":false,"isSlot":false,"src":"3503:5:16","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"3370:9:16","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"3513:9:16","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"3568:9:16","valueSize":1},{"declaration":2574,"isOffset":false,"isSlot":false,"src":"3390:1:16","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"3393:1:16","valueSize":1}],"id":2609,"nodeType":"InlineAssembly","src":"3292:300:16"},{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"twos","nameLocation":"3907:4:16","nodeType":"VariableDeclaration","scope":2692,"src":"3899:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3914:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:16","subExpression":{"id":2613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3930:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:16"},{"AST":{"nodeType":"YulBlock","src":"3969:362:16","statements":[{"nodeType":"YulAssignment","src":"4034:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:16"},"nodeType":"YulFunctionCall","src":"4049:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:16"}]},{"nodeType":"YulAssignment","src":"4138:25:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:16"},"nodeType":"YulFunctionCall","src":"4147:16:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:16"}]},{"nodeType":"YulAssignment","src":"4278:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:16"},"nodeType":"YulFunctionCall","src":"4294:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:16"},"nodeType":"YulFunctionCall","src":"4290:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:16"},"nodeType":"YulFunctionCall","src":"4286:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"4034:11:16","valueSize":1},{"declaration":2578,"isOffset":false,"isSlot":false,"src":"4053:11:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"4138:5:16","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"4151:5:16","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"4066:4:16","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"4158:4:16","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"4278:4:16","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"4301:4:16","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"4308:4:16","valueSize":1}],"id":2620,"nodeType":"InlineAssembly","src":"3960:371:16"},{"expression":{"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"4397:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"4406:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2623,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"4414:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2626,"nodeType":"ExpressionStatement","src":"4397:21:16"},{"assignments":[2628],"declarations":[{"constant":false,"id":2628,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:16","nodeType":"VariableDeclaration","scope":2692,"src":"4736:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2635,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"4759:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:16"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5007:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2639,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5021:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"4992:36:16"},{"expression":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5076:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5090:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"nodeType":"ExpressionStatement","src":"5061:36:16"},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5131:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5146:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ExpressionStatement","src":"5131:36:16"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2660,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5216:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2663,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ExpressionStatement","src":"5201:36:16"},{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5286:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5300:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2675,"nodeType":"ExpressionStatement","src":"5271:36:16"},{"expression":{"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2676,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5342:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5357:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2679,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ExpressionStatement","src":"5342:36:16"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"5812:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"5821:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2686,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"5812:24:16"},{"expression":{"id":2690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"5857:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2582,"id":2691,"nodeType":"Return","src":"5850:13:16"}]}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"1357:305:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:16","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"x","nameLocation":"1691:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"1683:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"y","nameLocation":"1702:1:16","nodeType":"VariableDeclaration","scope":2694,"src":"1694:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:16","nodeType":"VariableDeclaration","scope":2694,"src":"1705:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:16"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"result","nameLocation":"1757:6:16","nodeType":"VariableDeclaration","scope":2694,"src":"1749:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:16"},"scope":3346,"src":"1667:4213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2737,"nodeType":"Block","src":"6122:189:16","statements":[{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"result","nameLocation":"6140:6:16","nodeType":"VariableDeclaration","scope":2737,"src":"6132:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2716,"initialValue":{"arguments":[{"id":2712,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6156:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2713,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6159:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6162:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2694,2738],"referencedDeclaration":2694,"src":"6149:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"6188:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2718,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"6200:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2487_$","typeString":"type(enum Math.Rounding)"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2485,"src":"6200:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"src":"6188:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2722,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6222:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2723,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6225:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2724,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6228:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2721,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2734,"nodeType":"IfStatement","src":"6184:98:16","trueBody":{"id":2733,"nodeType":"Block","src":"6246:36:16","statements":[{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"6260:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2732,"nodeType":"ExpressionStatement","src":"6260:11:16"}]}},{"expression":{"id":2735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"6298:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2736,"nodeType":"Return","src":"6291:13:16"}]},"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"5886:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2738,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:16","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"x","nameLocation":"6036:1:16","nodeType":"VariableDeclaration","scope":2738,"src":"6028:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"y","nameLocation":"6047:1:16","nodeType":"VariableDeclaration","scope":2738,"src":"6039:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:16","nodeType":"VariableDeclaration","scope":2738,"src":"6050:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:16","nodeType":"VariableDeclaration","scope":2738,"src":"6071:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"typeName":{"id":2703,"nodeType":"UserDefinedTypeName","pathNode":{"id":2702,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"6071:8:16"},"referencedDeclaration":2487,"src":"6071:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:16"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2738,"src":"6113:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:16"},"scope":3346,"src":"6012:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"6587:1585:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6601:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"IfStatement","src":"6597:45:16","trueBody":{"id":2751,"nodeType":"Block","src":"6609:33:16","statements":[{"expression":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2745,"id":2750,"nodeType":"Return","src":"6623:8:16"}]}},{"assignments":[2754],"declarations":[{"constant":false,"id":2754,"mutability":"mutable","name":"result","nameLocation":"7329:6:16","nodeType":"VariableDeclaration","scope":2849,"src":"7321:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2763,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7349:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2756,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3018,3054],"referencedDeclaration":3018,"src":"7344:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:16"},{"id":2848,"nodeType":"UncheckedBlock","src":"7758:408:16","statements":[{"expression":{"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7782:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7792:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7801:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7805:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2774,"nodeType":"ExpressionStatement","src":"7782:35:16"},{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7831:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7841:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7850:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7854:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2785,"nodeType":"ExpressionStatement","src":"7831:35:16"},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7880:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7890:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7899:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2789,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7903:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"7880:35:16"},{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7929:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7939:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7948:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7952:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ExpressionStatement","src":"7929:35:16"},{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7978:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2809,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7988:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7997:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8001:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ExpressionStatement","src":"7978:35:16"},{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8027:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8037:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"8046:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8050:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"8027:35:16"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8076:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8086:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"8095:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8099:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ExpressionStatement","src":"8076:35:16"},{"expression":{"arguments":[{"id":2842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8136:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"8144:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8148:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"8132:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2745,"id":2847,"nodeType":"Return","src":"8125:30:16"}]}]},"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"6317:208:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:16","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"a","nameLocation":"6552:1:16","nodeType":"VariableDeclaration","scope":2850,"src":"6544:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:16"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"6578:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:16"},"scope":3346,"src":"6530:1642:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"8348:161:16","statements":[{"id":2884,"nodeType":"UncheckedBlock","src":"8358:145:16","statements":[{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"result","nameLocation":"8390:6:16","nodeType":"VariableDeclaration","scope":2884,"src":"8382:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2866,"initialValue":{"arguments":[{"id":2864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"8404:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2863,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2850,2886],"referencedDeclaration":2850,"src":"8399:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8427:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"8437:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2869,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"8449:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2487_$","typeString":"type(enum Math.Rounding)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2485,"src":"8449:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"src":"8437:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8464:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8473:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"8482:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:16","trueExpression":{"hexValue":"31","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2860,"id":2883,"nodeType":"Return","src":"8420:72:16"}]}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"8178:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:16","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"a","nameLocation":"8294:1:16","nodeType":"VariableDeclaration","scope":2886,"src":"8286:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:16","nodeType":"VariableDeclaration","scope":2886,"src":"8297:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"typeName":{"id":2855,"nodeType":"UserDefinedTypeName","pathNode":{"id":2854,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"8297:8:16"},"referencedDeclaration":2487,"src":"8297:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:16"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"8339:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:16"},"scope":3346,"src":"8272:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"8694:922:16","statements":[{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"result","nameLocation":"8712:6:16","nodeType":"VariableDeclaration","scope":3017,"src":"8704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2897,"initialValue":{"hexValue":"30","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:16"},{"id":3014,"nodeType":"UncheckedBlock","src":"8732:855:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"8760:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"nodeType":"IfStatement","src":"8756:99:16","trueBody":{"id":2911,"nodeType":"Block","src":"8778:77:16","statements":[{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"8796:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2906,"nodeType":"ExpressionStatement","src":"8796:13:16"},{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8827:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2910,"nodeType":"ExpressionStatement","src":"8827:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"8872:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2927,"nodeType":"IfStatement","src":"8868:96:16","trueBody":{"id":2926,"nodeType":"Block","src":"8889:75:16","statements":[{"expression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"8907:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2921,"nodeType":"ExpressionStatement","src":"8907:12:16"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8937:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"8937:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"8981:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2942,"nodeType":"IfStatement","src":"8977:96:16","trueBody":{"id":2941,"nodeType":"Block","src":"8998:75:16","statements":[{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9016:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"9016:12:16"},{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9046:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"9046:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9090:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"IfStatement","src":"9086:96:16","trueBody":{"id":2956,"nodeType":"Block","src":"9107:75:16","statements":[{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9125:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"9125:12:16"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9155:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"9155:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9199:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"9195:93:16","trueBody":{"id":2971,"nodeType":"Block","src":"9215:73:16","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9233:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2966,"nodeType":"ExpressionStatement","src":"9233:11:16"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9262:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"9262:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9305:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2987,"nodeType":"IfStatement","src":"9301:93:16","trueBody":{"id":2986,"nodeType":"Block","src":"9321:73:16","statements":[{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9339:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2981,"nodeType":"ExpressionStatement","src":"9339:11:16"},{"expression":{"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9368:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2985,"nodeType":"ExpressionStatement","src":"9368:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9411:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"9407:93:16","trueBody":{"id":3001,"nodeType":"Block","src":"9427:73:16","statements":[{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9445:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"9445:11:16"},{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9474:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"9474:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"9517:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"nodeType":"IfStatement","src":"9513:64:16","trueBody":{"id":3012,"nodeType":"Block","src":"9533:44:16","statements":[{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9551:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3011,"nodeType":"ExpressionStatement","src":"9551:11:16"}]}}]},{"expression":{"id":3015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9603:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2893,"id":3016,"nodeType":"Return","src":"9596:13:16"}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"8515:113:16","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:16","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"8655:5:16","nodeType":"VariableDeclaration","scope":3018,"src":"8647:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:16"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"8685:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:16"},"scope":3346,"src":"8633:983:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"9849:165:16","statements":[{"id":3052,"nodeType":"UncheckedBlock","src":"9859:149:16","statements":[{"assignments":[3030],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"result","nameLocation":"9891:6:16","nodeType":"VariableDeclaration","scope":3052,"src":"9883:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3034,"initialValue":{"arguments":[{"id":3032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"9905:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3031,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3018,3054],"referencedDeclaration":3018,"src":"9900:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"9932:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"9942:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3037,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"9954:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2487_$","typeString":"type(enum Math.Rounding)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2485,"src":"9954:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"src":"9942:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"9974:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"9983:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:16","trueExpression":{"hexValue":"31","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3028,"id":3051,"nodeType":"Return","src":"9925:72:16"}]}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"9622:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:16","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"value","nameLocation":"9791:5:16","nodeType":"VariableDeclaration","scope":3054,"src":"9783:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:16","nodeType":"VariableDeclaration","scope":3054,"src":"9798:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"typeName":{"id":3023,"nodeType":"UserDefinedTypeName","pathNode":{"id":3022,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"9798:8:16"},"referencedDeclaration":2487,"src":"9798:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:16"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"9840:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:16"},"scope":3346,"src":"9769:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3182,"nodeType":"Block","src":"10201:854:16","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"result","nameLocation":"10219:6:16","nodeType":"VariableDeclaration","scope":3182,"src":"10211:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3065,"initialValue":{"hexValue":"30","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:16"},{"id":3179,"nodeType":"UncheckedBlock","src":"10239:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10267:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3082,"nodeType":"IfStatement","src":"10263:103:16","trueBody":{"id":3081,"nodeType":"Block","src":"10286:80:16","statements":[{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10304:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"10304:17:16"},{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10339:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3080,"nodeType":"ExpressionStatement","src":"10339:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10383:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3099,"nodeType":"IfStatement","src":"10379:103:16","trueBody":{"id":3098,"nodeType":"Block","src":"10402:80:16","statements":[{"expression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10420:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3093,"nodeType":"ExpressionStatement","src":"10420:17:16"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10455:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"10455:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10499:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3116,"nodeType":"IfStatement","src":"10495:103:16","trueBody":{"id":3115,"nodeType":"Block","src":"10518:80:16","statements":[{"expression":{"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10536:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3110,"nodeType":"ExpressionStatement","src":"10536:17:16"},{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10571:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"10571:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"IfStatement","src":"10611:100:16","trueBody":{"id":3132,"nodeType":"Block","src":"10633:78:16","statements":[{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10651:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ExpressionStatement","src":"10651:16:16"},{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10685:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"10685:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10728:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"10724:100:16","trueBody":{"id":3149,"nodeType":"Block","src":"10746:78:16","statements":[{"expression":{"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10764:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3144,"nodeType":"ExpressionStatement","src":"10764:16:16"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10798:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"10798:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10841:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3167,"nodeType":"IfStatement","src":"10837:100:16","trueBody":{"id":3166,"nodeType":"Block","src":"10859:78:16","statements":[{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10877:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ExpressionStatement","src":"10877:16:16"},{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10911:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ExpressionStatement","src":"10911:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10954:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"nodeType":"IfStatement","src":"10950:66:16","trueBody":{"id":3177,"nodeType":"Block","src":"10972:44:16","statements":[{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10990:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"10990:11:16"}]}}]},{"expression":{"id":3180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"11042:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3061,"id":3181,"nodeType":"Return","src":"11035:13:16"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"10020:114:16","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:16","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"value","nameLocation":"10162:5:16","nodeType":"VariableDeclaration","scope":3183,"src":"10154:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:16"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3183,"src":"10192:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:16"},"scope":3346,"src":"10139:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"11290:167:16","statements":[{"id":3217,"nodeType":"UncheckedBlock","src":"11300:151:16","statements":[{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"result","nameLocation":"11332:6:16","nodeType":"VariableDeclaration","scope":3217,"src":"11324:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"arguments":[{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11347:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3196,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3183,3219],"referencedDeclaration":3183,"src":"11341:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"11374:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"11384:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3202,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"11396:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2487_$","typeString":"type(enum Math.Rounding)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2485,"src":"11396:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"src":"11384:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"11417:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11426:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:16","trueExpression":{"hexValue":"31","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3193,"id":3216,"nodeType":"Return","src":"11367:73:16"}]}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"11061:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:16","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"value","nameLocation":"11232:5:16","nodeType":"VariableDeclaration","scope":3219,"src":"11224:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:16","nodeType":"VariableDeclaration","scope":3219,"src":"11239:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"11239:8:16"},"referencedDeclaration":2487,"src":"11239:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:16"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"11281:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:16"},"scope":3346,"src":"11209:248:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3305,"nodeType":"Block","src":"11771:600:16","statements":[{"assignments":[3228],"declarations":[{"constant":false,"id":3228,"mutability":"mutable","name":"result","nameLocation":"11789:6:16","nodeType":"VariableDeclaration","scope":3305,"src":"11781:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3230,"initialValue":{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:16"},{"id":3302,"nodeType":"UncheckedBlock","src":"11809:533:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11837:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3245,"nodeType":"IfStatement","src":"11833:98:16","trueBody":{"id":3244,"nodeType":"Block","src":"11855:76:16","statements":[{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11873:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"11873:13:16"},{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"11904:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3243,"nodeType":"ExpressionStatement","src":"11904:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11948:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3260,"nodeType":"IfStatement","src":"11944:95:16","trueBody":{"id":3259,"nodeType":"Block","src":"11965:74:16","statements":[{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11983:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ExpressionStatement","src":"11983:12:16"},{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"12013:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3258,"nodeType":"ExpressionStatement","src":"12013:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"12056:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3275,"nodeType":"IfStatement","src":"12052:95:16","trueBody":{"id":3274,"nodeType":"Block","src":"12073:74:16","statements":[{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"12091:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"12091:12:16"},{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"12121:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3273,"nodeType":"ExpressionStatement","src":"12121:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"12164:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"IfStatement","src":"12160:95:16","trueBody":{"id":3289,"nodeType":"Block","src":"12181:74:16","statements":[{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"12199:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"12199:12:16"},{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"12229:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"12229:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"12272:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3301,"nodeType":"IfStatement","src":"12268:64:16","trueBody":{"id":3300,"nodeType":"Block","src":"12288:44:16","statements":[{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"12306:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"12306:11:16"}]}}]},{"expression":{"id":3303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"12358:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3226,"id":3304,"nodeType":"Return","src":"12351:13:16"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"11463:240:16","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:16","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"value","nameLocation":"11732:5:16","nodeType":"VariableDeclaration","scope":3306,"src":"11724:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:16"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3306,"src":"11762:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:16"},"scope":3346,"src":"11708:663:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3344,"nodeType":"Block","src":"12608:174:16","statements":[{"id":3343,"nodeType":"UncheckedBlock","src":"12618:158:16","statements":[{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"result","nameLocation":"12650:6:16","nodeType":"VariableDeclaration","scope":3343,"src":"12642:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3322,"initialValue":{"arguments":[{"id":3320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"12666:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3319,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3306,3345],"referencedDeclaration":3306,"src":"12659:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"12693:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"12703:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3325,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"12715:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2487_$","typeString":"type(enum Math.Rounding)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2485,"src":"12715:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"src":"12703:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"12736:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"12751:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:16","trueExpression":{"hexValue":"31","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3316,"id":3342,"nodeType":"Return","src":"12686:79:16"}]}]},"documentation":{"id":3307,"nodeType":"StructuredDocumentation","src":"12377:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:16","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"value","nameLocation":"12550:5:16","nodeType":"VariableDeclaration","scope":3345,"src":"12542:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:16","nodeType":"VariableDeclaration","scope":3345,"src":"12557:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"},"typeName":{"id":3311,"nodeType":"UserDefinedTypeName","pathNode":{"id":3310,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"12557:8:16"},"referencedDeclaration":2487,"src":"12557:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2487","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:16"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"12599:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:16"},"scope":3346,"src":"12526:256:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3347,"src":"202:12582:16","usedErrors":[]}],"src":"103:12682:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4887]},"id":4888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3348,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"217:709:17","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":4887,"linearizedBaseContracts":[4887],"name":"SafeCast","nameLocation":"935:8:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3373,"nodeType":"Block","src":"1339:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"1357:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3360,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":3357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3367,"nodeType":"ExpressionStatement","src":"1349:78:17"},{"expression":{"arguments":[{"id":3370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"1452:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3368,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:17","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3356,"id":3372,"nodeType":"Return","src":"1437:21:17"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"950:318:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:17","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"value","nameLocation":"1300:5:17","nodeType":"VariableDeclaration","scope":3374,"src":"1292:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:17"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3374,"src":"1330:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3354,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:17"},"scope":4887,"src":"1273:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3398,"nodeType":"Block","src":"1860:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1878:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3385,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":3382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3392,"nodeType":"ExpressionStatement","src":"1870:78:17"},{"expression":{"arguments":[{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1973:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3393,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:17","typeDescriptions":{}}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3381,"id":3397,"nodeType":"Return","src":"1958:21:17"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"1471:318:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:17","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"value","nameLocation":"1821:5:17","nodeType":"VariableDeclaration","scope":3399,"src":"1813:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:17"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3399,"src":"1851:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3379,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:17"},"scope":4887,"src":"1794:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3423,"nodeType":"Block","src":"2381:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2399:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3410,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":3407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3417,"nodeType":"ExpressionStatement","src":"2391:78:17"},{"expression":{"arguments":[{"id":3420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2494:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3418,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:17","typeDescriptions":{}}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3406,"id":3422,"nodeType":"Return","src":"2479:21:17"}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"1992:318:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:17","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"value","nameLocation":"2342:5:17","nodeType":"VariableDeclaration","scope":3424,"src":"2334:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:17"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"2372:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3404,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:17"},"scope":4887,"src":"2315:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"2902:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"2920:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3435,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3434,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":3432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3442,"nodeType":"ExpressionStatement","src":"2912:78:17"},{"expression":{"arguments":[{"id":3445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"3015:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3443,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:17","typeDescriptions":{}}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3431,"id":3447,"nodeType":"Return","src":"3000:21:17"}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"2513:318:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:17","nodeType":"FunctionDefinition","parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"value","nameLocation":"2863:5:17","nodeType":"VariableDeclaration","scope":3449,"src":"2855:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:17"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"2893:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3429,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:17"},"scope":4887,"src":"2836:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"3423:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3441:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3460,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":3457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3467,"nodeType":"ExpressionStatement","src":"3433:78:17"},{"expression":{"arguments":[{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3536:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3468,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:17","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3456,"id":3472,"nodeType":"Return","src":"3521:21:17"}]},"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"3034:318:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:17","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"value","nameLocation":"3384:5:17","nodeType":"VariableDeclaration","scope":3474,"src":"3376:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:17"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"3414:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3454,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:17"},"scope":4887,"src":"3357:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"3944:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"3962:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3485,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":3482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"ExpressionStatement","src":"3954:78:17"},{"expression":{"arguments":[{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"4057:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3493,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:17","typeDescriptions":{}}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3481,"id":3497,"nodeType":"Return","src":"4042:21:17"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"3555:318:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:17","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"value","nameLocation":"3905:5:17","nodeType":"VariableDeclaration","scope":3499,"src":"3897:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:17"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"3935:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3479,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:17"},"scope":4887,"src":"3878:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"4465:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"4483:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3510,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":3507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3517,"nodeType":"ExpressionStatement","src":"4475:78:17"},{"expression":{"arguments":[{"id":3520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"4578:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3518,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:17","typeDescriptions":{}}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3506,"id":3522,"nodeType":"Return","src":"4563:21:17"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"4076:318:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:17","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"value","nameLocation":"4426:5:17","nodeType":"VariableDeclaration","scope":3524,"src":"4418:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:17"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3524,"src":"4456:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3504,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:17"},"scope":4887,"src":"4399:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3548,"nodeType":"Block","src":"4986:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"5004:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3535,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":3532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3542,"nodeType":"ExpressionStatement","src":"4996:78:17"},{"expression":{"arguments":[{"id":3545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"5099:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3543,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:17","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3531,"id":3547,"nodeType":"Return","src":"5084:21:17"}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"4597:318:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":3549,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:17","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"4947:5:17","nodeType":"VariableDeclaration","scope":3549,"src":"4939:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:17"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3549,"src":"4977:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3529,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:17"},"scope":4887,"src":"4920:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3573,"nodeType":"Block","src":"5507:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5525:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3560,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":3557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3567,"nodeType":"ExpressionStatement","src":"5517:78:17"},{"expression":{"arguments":[{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5620:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3568,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:17","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3556,"id":3572,"nodeType":"Return","src":"5605:21:17"}]},"documentation":{"id":3550,"nodeType":"StructuredDocumentation","src":"5118:318:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:17","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"value","nameLocation":"5468:5:17","nodeType":"VariableDeclaration","scope":3574,"src":"5460:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:17"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3574,"src":"5498:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3554,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:17"},"scope":4887,"src":"5441:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3598,"nodeType":"Block","src":"6028:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"6046:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3585,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":3582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"ExpressionStatement","src":"6038:78:17"},{"expression":{"arguments":[{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"6141:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3593,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:17","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3581,"id":3597,"nodeType":"Return","src":"6126:21:17"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"5639:318:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:17","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"value","nameLocation":"5989:5:17","nodeType":"VariableDeclaration","scope":3599,"src":"5981:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:17"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"6019:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3579,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:17"},"scope":4887,"src":"5962:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"6549:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"6567:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3610,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":3607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3617,"nodeType":"ExpressionStatement","src":"6559:78:17"},{"expression":{"arguments":[{"id":3620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"6662:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3618,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:17","typeDescriptions":{}}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3606,"id":3622,"nodeType":"Return","src":"6647:21:17"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"6160:318:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:17","nodeType":"FunctionDefinition","parameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"value","nameLocation":"6510:5:17","nodeType":"VariableDeclaration","scope":3624,"src":"6502:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:17"},"returnParameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3624,"src":"6540:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3604,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:17"},"scope":4887,"src":"6483:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"7070:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"7088:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3635,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":3632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3642,"nodeType":"ExpressionStatement","src":"7080:78:17"},{"expression":{"arguments":[{"id":3645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"7183:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3643,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:17","typeDescriptions":{}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3631,"id":3647,"nodeType":"Return","src":"7168:21:17"}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"6681:318:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:17","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"value","nameLocation":"7031:5:17","nodeType":"VariableDeclaration","scope":3649,"src":"7023:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:17"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"7061:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3629,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:17"},"scope":4887,"src":"7004:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3673,"nodeType":"Block","src":"7591:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7609:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3660,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":3657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"ExpressionStatement","src":"7601:78:17"},{"expression":{"arguments":[{"id":3670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7704:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3668,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:17","typeDescriptions":{}}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3656,"id":3672,"nodeType":"Return","src":"7689:21:17"}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"7202:318:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:17","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"7552:5:17","nodeType":"VariableDeclaration","scope":3674,"src":"7544:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:17"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"7582:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3654,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:17"},"scope":4887,"src":"7525:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3698,"nodeType":"Block","src":"8112:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"8130:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3685,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":3682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3692,"nodeType":"ExpressionStatement","src":"8122:78:17"},{"expression":{"arguments":[{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"8225:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3693,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:17","typeDescriptions":{}}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3681,"id":3697,"nodeType":"Return","src":"8210:21:17"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"7723:318:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":3699,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:17","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"value","nameLocation":"8073:5:17","nodeType":"VariableDeclaration","scope":3699,"src":"8065:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:17"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3699,"src":"8103:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3679,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:17"},"scope":4887,"src":"8046:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3723,"nodeType":"Block","src":"8633:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"8651:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3710,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":3707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3717,"nodeType":"ExpressionStatement","src":"8643:78:17"},{"expression":{"arguments":[{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"8746:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3718,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:17","typeDescriptions":{}}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3706,"id":3722,"nodeType":"Return","src":"8731:21:17"}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"8244:318:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:17","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"value","nameLocation":"8594:5:17","nodeType":"VariableDeclaration","scope":3724,"src":"8586:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:17"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"8624:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3704,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:17"},"scope":4887,"src":"8567:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3748,"nodeType":"Block","src":"9154:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"9172:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3735,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":3732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3742,"nodeType":"ExpressionStatement","src":"9164:78:17"},{"expression":{"arguments":[{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"9267:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3743,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:17","typeDescriptions":{}}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3731,"id":3747,"nodeType":"Return","src":"9252:21:17"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"8765:318:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":3749,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:17","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"value","nameLocation":"9115:5:17","nodeType":"VariableDeclaration","scope":3749,"src":"9107:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:17"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"9145:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3729,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:17"},"scope":4887,"src":"9088:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3773,"nodeType":"Block","src":"9675:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"9693:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3760,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":3757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"ExpressionStatement","src":"9685:78:17"},{"expression":{"arguments":[{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"9788:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3768,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:17","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3756,"id":3772,"nodeType":"Return","src":"9773:21:17"}]},"documentation":{"id":3750,"nodeType":"StructuredDocumentation","src":"9286:318:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":3774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:17","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"value","nameLocation":"9636:5:17","nodeType":"VariableDeclaration","scope":3774,"src":"9628:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:17"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3774,"src":"9666:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3754,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:17"},"scope":4887,"src":"9609:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3798,"nodeType":"Block","src":"10196:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"10214:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3785,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":3782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3792,"nodeType":"ExpressionStatement","src":"10206:78:17"},{"expression":{"arguments":[{"id":3795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"10309:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3793,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{}}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3781,"id":3797,"nodeType":"Return","src":"10294:21:17"}]},"documentation":{"id":3775,"nodeType":"StructuredDocumentation","src":"9807:318:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":3799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:17","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"value","nameLocation":"10157:5:17","nodeType":"VariableDeclaration","scope":3799,"src":"10149:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:17"},"returnParameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3799,"src":"10187:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3779,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:17"},"scope":4887,"src":"10130:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"10717:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10735:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3810,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":3807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3817,"nodeType":"ExpressionStatement","src":"10727:78:17"},{"expression":{"arguments":[{"id":3820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10830:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3818,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:17","typeDescriptions":{}}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3806,"id":3822,"nodeType":"Return","src":"10815:21:17"}]},"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"10328:318:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:17","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"value","nameLocation":"10678:5:17","nodeType":"VariableDeclaration","scope":3824,"src":"10670:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:17"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3824,"src":"10708:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3804,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:17"},"scope":4887,"src":"10651:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3848,"nodeType":"Block","src":"11232:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11250:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3835,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":3832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3842,"nodeType":"ExpressionStatement","src":"11242:76:17"},{"expression":{"arguments":[{"id":3845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11342:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3843,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:17","typeDescriptions":{}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3831,"id":3847,"nodeType":"Return","src":"11328:20:17"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"10849:314:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":3849,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:17","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"value","nameLocation":"11194:5:17","nodeType":"VariableDeclaration","scope":3849,"src":"11186:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:17"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3849,"src":"11224:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3829,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:17"},"scope":4887,"src":"11168:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3873,"nodeType":"Block","src":"11744:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"11762:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3860,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3859,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":3857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"ExpressionStatement","src":"11754:76:17"},{"expression":{"arguments":[{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"11854:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3868,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:17","typeDescriptions":{}}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3856,"id":3872,"nodeType":"Return","src":"11840:20:17"}]},"documentation":{"id":3850,"nodeType":"StructuredDocumentation","src":"11361:314:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:17","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"value","nameLocation":"11706:5:17","nodeType":"VariableDeclaration","scope":3874,"src":"11698:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:17"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3874,"src":"11736:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3854,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:17"},"scope":4887,"src":"11680:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"12256:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"12274:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3885,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":3882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"ExpressionStatement","src":"12266:76:17"},{"expression":{"arguments":[{"id":3895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"12366:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3893,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:17","typeDescriptions":{}}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3881,"id":3897,"nodeType":"Return","src":"12352:20:17"}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"11873:314:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:17","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"value","nameLocation":"12218:5:17","nodeType":"VariableDeclaration","scope":3899,"src":"12210:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:17"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"12248:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3879,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:17"},"scope":4887,"src":"12192:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"12768:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"12786:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3910,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":3907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3917,"nodeType":"ExpressionStatement","src":"12778:76:17"},{"expression":{"arguments":[{"id":3920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"12878:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3918,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:17","typeDescriptions":{}}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3906,"id":3922,"nodeType":"Return","src":"12864:20:17"}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"12385:314:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:17","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"value","nameLocation":"12730:5:17","nodeType":"VariableDeclaration","scope":3924,"src":"12722:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:17"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"12760:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3904,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:17"},"scope":4887,"src":"12704:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3948,"nodeType":"Block","src":"13280:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"13298:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3935,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":3932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3942,"nodeType":"ExpressionStatement","src":"13290:76:17"},{"expression":{"arguments":[{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"13390:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3943,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:17","typeDescriptions":{}}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3931,"id":3947,"nodeType":"Return","src":"13376:20:17"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"12897:314:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":3949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:17","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"value","nameLocation":"13242:5:17","nodeType":"VariableDeclaration","scope":3949,"src":"13234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:17"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3949,"src":"13272:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3929,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:17"},"scope":4887,"src":"13216:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3973,"nodeType":"Block","src":"13792:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"13810:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3960,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":3957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3967,"nodeType":"ExpressionStatement","src":"13802:76:17"},{"expression":{"arguments":[{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"13902:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3968,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:17","typeDescriptions":{}}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3956,"id":3972,"nodeType":"Return","src":"13888:20:17"}]},"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"13409:314:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":3974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:17","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"value","nameLocation":"13754:5:17","nodeType":"VariableDeclaration","scope":3974,"src":"13746:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:17"},"returnParameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3974,"src":"13784:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3954,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:17"},"scope":4887,"src":"13728:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"14304:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"14322:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3985,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":3982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3992,"nodeType":"ExpressionStatement","src":"14314:76:17"},{"expression":{"arguments":[{"id":3995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"14414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3993,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:17","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3981,"id":3997,"nodeType":"Return","src":"14400:20:17"}]},"documentation":{"id":3975,"nodeType":"StructuredDocumentation","src":"13921:314:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:17","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"value","nameLocation":"14266:5:17","nodeType":"VariableDeclaration","scope":3999,"src":"14258:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:17"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"14296:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3979,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:17"},"scope":4887,"src":"14240:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4023,"nodeType":"Block","src":"14816:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4010,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"ExpressionStatement","src":"14826:76:17"},{"expression":{"arguments":[{"id":4020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14926:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4018,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:17","typeDescriptions":{}}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4006,"id":4022,"nodeType":"Return","src":"14912:20:17"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"14433:314:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4024,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:17","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"value","nameLocation":"14778:5:17","nodeType":"VariableDeclaration","scope":4024,"src":"14770:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:17"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4024,"src":"14808:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4004,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:17"},"scope":4887,"src":"14752:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"15328:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"15346:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4035,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4042,"nodeType":"ExpressionStatement","src":"15338:76:17"},{"expression":{"arguments":[{"id":4045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"15438:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4043,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:17","typeDescriptions":{}}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4031,"id":4047,"nodeType":"Return","src":"15424:20:17"}]},"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"14945:314:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:17","nodeType":"FunctionDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"value","nameLocation":"15290:5:17","nodeType":"VariableDeclaration","scope":4049,"src":"15282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:17"},"returnParameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"15320:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4029,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:17"},"scope":4887,"src":"15264:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4073,"nodeType":"Block","src":"15840:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"15858:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4060,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4067,"nodeType":"ExpressionStatement","src":"15850:76:17"},{"expression":{"arguments":[{"id":4070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"15950:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4068,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:17","typeDescriptions":{}}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4056,"id":4072,"nodeType":"Return","src":"15936:20:17"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"15457:314:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:17","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"value","nameLocation":"15802:5:17","nodeType":"VariableDeclaration","scope":4074,"src":"15794:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:17"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4074,"src":"15832:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4054,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:17"},"scope":4887,"src":"15776:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4098,"nodeType":"Block","src":"16352:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"16370:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4085,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4092,"nodeType":"ExpressionStatement","src":"16362:76:17"},{"expression":{"arguments":[{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"16462:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4093,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:17","typeDescriptions":{}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4081,"id":4097,"nodeType":"Return","src":"16448:20:17"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"15969:314:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4099,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:17","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"value","nameLocation":"16314:5:17","nodeType":"VariableDeclaration","scope":4099,"src":"16306:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:17"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4099,"src":"16344:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4079,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:17"},"scope":4887,"src":"16288:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4123,"nodeType":"Block","src":"16858:120:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16876:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4110,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4109,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4117,"nodeType":"ExpressionStatement","src":"16868:74:17"},{"expression":{"arguments":[{"id":4120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16965:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4118,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:17","typeDescriptions":{}}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4106,"id":4122,"nodeType":"Return","src":"16952:19:17"}]},"documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"16481:310:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4124,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:17","nodeType":"FunctionDefinition","parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"value","nameLocation":"16821:5:17","nodeType":"VariableDeclaration","scope":4124,"src":"16813:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:17"},"returnParameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4124,"src":"16851:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4104,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:17"},"scope":4887,"src":"16796:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4144,"nodeType":"Block","src":"17252:103:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"17270:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4138,"nodeType":"ExpressionStatement","src":"17262:55:17"},{"expression":{"arguments":[{"id":4141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"17342:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:17","typeDescriptions":{}}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4131,"id":4143,"nodeType":"Return","src":"17327:21:17"}]},"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"16984:198:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4145,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:17","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"value","nameLocation":"17213:5:17","nodeType":"VariableDeclaration","scope":4145,"src":"17206:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4126,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:17"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4145,"src":"17243:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:17"},"scope":4887,"src":"17187:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"17790:124:17","statements":[{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"17800:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"17820:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4154,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:17","typeDescriptions":{}}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4159,"nodeType":"ExpressionStatement","src":"17800:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"17844:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"17858:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4166,"nodeType":"ExpressionStatement","src":"17836:71:17"}]},"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"17361:350:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:17","nodeType":"FunctionDefinition","parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"value","nameLocation":"17741:5:17","nodeType":"VariableDeclaration","scope":4168,"src":"17734:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4147,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:17"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:17","nodeType":"VariableDeclaration","scope":4168,"src":"17771:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4150,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:17"},"scope":4887,"src":"17716:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4190,"nodeType":"Block","src":"18349:124:17","statements":[{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"18359:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"18379:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4177,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:17","typeDescriptions":{}}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4182,"nodeType":"ExpressionStatement","src":"18359:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"18403:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"18417:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4189,"nodeType":"ExpressionStatement","src":"18395:71:17"}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"17920:350:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4191,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:17","nodeType":"FunctionDefinition","parameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"value","nameLocation":"18300:5:17","nodeType":"VariableDeclaration","scope":4191,"src":"18293:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4170,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:17"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:17","nodeType":"VariableDeclaration","scope":4191,"src":"18330:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4173,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:17"},"scope":4887,"src":"18275:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"18908:124:17","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"18918:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"18938:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4200,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:17","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4205,"nodeType":"ExpressionStatement","src":"18918:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"18962:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"18976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"18954:71:17"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"18479:350:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:17","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"value","nameLocation":"18859:5:17","nodeType":"VariableDeclaration","scope":4214,"src":"18852:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4193,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:17"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:17","nodeType":"VariableDeclaration","scope":4214,"src":"18889:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4196,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:17"},"scope":4887,"src":"18834:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4236,"nodeType":"Block","src":"19467:124:17","statements":[{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"19477:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"19497:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4223,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:17","typeDescriptions":{}}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4228,"nodeType":"ExpressionStatement","src":"19477:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"19521:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"19535:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4235,"nodeType":"ExpressionStatement","src":"19513:71:17"}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"19038:350:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":4237,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:17","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"value","nameLocation":"19418:5:17","nodeType":"VariableDeclaration","scope":4237,"src":"19411:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4216,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:17"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:17","nodeType":"VariableDeclaration","scope":4237,"src":"19448:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4219,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:17"},"scope":4887,"src":"19393:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"20026:124:17","statements":[{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"20036:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20056:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4246,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:17","typeDescriptions":{}}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4251,"nodeType":"ExpressionStatement","src":"20036:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"20080:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20094:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4258,"nodeType":"ExpressionStatement","src":"20072:71:17"}]},"documentation":{"id":4238,"nodeType":"StructuredDocumentation","src":"19597:350:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:17","nodeType":"FunctionDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"value","nameLocation":"19977:5:17","nodeType":"VariableDeclaration","scope":4260,"src":"19970:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4239,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:17"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:17","nodeType":"VariableDeclaration","scope":4260,"src":"20007:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4242,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:17"},"scope":4887,"src":"19952:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4282,"nodeType":"Block","src":"20585:124:17","statements":[{"expression":{"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"20595:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"20615:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4269,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:17","typeDescriptions":{}}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4274,"nodeType":"ExpressionStatement","src":"20595:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"20639:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"20653:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4281,"nodeType":"ExpressionStatement","src":"20631:71:17"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"20156:350:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:17","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"value","nameLocation":"20536:5:17","nodeType":"VariableDeclaration","scope":4283,"src":"20529:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4262,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:17"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:17","nodeType":"VariableDeclaration","scope":4283,"src":"20566:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4265,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:17"},"scope":4887,"src":"20511:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"21144:124:17","statements":[{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"21154:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"21174:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4292,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:17","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4297,"nodeType":"ExpressionStatement","src":"21154:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"21198:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"21212:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4304,"nodeType":"ExpressionStatement","src":"21190:71:17"}]},"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"20715:350:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:17","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"value","nameLocation":"21095:5:17","nodeType":"VariableDeclaration","scope":4306,"src":"21088:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4285,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:17"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:17","nodeType":"VariableDeclaration","scope":4306,"src":"21125:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4288,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:17"},"scope":4887,"src":"21070:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4328,"nodeType":"Block","src":"21703:124:17","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"21713:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"21733:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4315,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:17","typeDescriptions":{}}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4320,"nodeType":"ExpressionStatement","src":"21713:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"21757:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"21771:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4327,"nodeType":"ExpressionStatement","src":"21749:71:17"}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"21274:350:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:17","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"value","nameLocation":"21654:5:17","nodeType":"VariableDeclaration","scope":4329,"src":"21647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4308,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:17"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:17","nodeType":"VariableDeclaration","scope":4329,"src":"21684:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4311,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:17"},"scope":4887,"src":"21629:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4351,"nodeType":"Block","src":"22262:124:17","statements":[{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"22272:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"22292:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4338,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:17","typeDescriptions":{}}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4343,"nodeType":"ExpressionStatement","src":"22272:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"22316:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"22330:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4350,"nodeType":"ExpressionStatement","src":"22308:71:17"}]},"documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"21833:350:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:17","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"value","nameLocation":"22213:5:17","nodeType":"VariableDeclaration","scope":4352,"src":"22206:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4331,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:17"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:17","nodeType":"VariableDeclaration","scope":4352,"src":"22243:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4334,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:17"},"scope":4887,"src":"22188:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4374,"nodeType":"Block","src":"22821:124:17","statements":[{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"22831:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22851:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4361,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:17","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4366,"nodeType":"ExpressionStatement","src":"22831:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"22875:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"22889:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4373,"nodeType":"ExpressionStatement","src":"22867:71:17"}]},"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"22392:350:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4375,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:17","nodeType":"FunctionDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"value","nameLocation":"22772:5:17","nodeType":"VariableDeclaration","scope":4375,"src":"22765:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4354,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:17"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:17","nodeType":"VariableDeclaration","scope":4375,"src":"22802:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4357,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:17"},"scope":4887,"src":"22747:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4397,"nodeType":"Block","src":"23380:124:17","statements":[{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"23390:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"23410:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4384,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:17","typeDescriptions":{}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4389,"nodeType":"ExpressionStatement","src":"23390:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"23434:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"23448:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4396,"nodeType":"ExpressionStatement","src":"23426:71:17"}]},"documentation":{"id":4376,"nodeType":"StructuredDocumentation","src":"22951:350:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:17","nodeType":"FunctionDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"value","nameLocation":"23331:5:17","nodeType":"VariableDeclaration","scope":4398,"src":"23324:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4377,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:17"},"returnParameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:17","nodeType":"VariableDeclaration","scope":4398,"src":"23361:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4380,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:17"},"scope":4887,"src":"23306:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"23939:124:17","statements":[{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23949:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"23969:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4407,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:17","typeDescriptions":{}}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4412,"nodeType":"ExpressionStatement","src":"23949:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23993:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24007:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4419,"nodeType":"ExpressionStatement","src":"23985:71:17"}]},"documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"23510:350:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:17","nodeType":"FunctionDefinition","parameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"value","nameLocation":"23890:5:17","nodeType":"VariableDeclaration","scope":4421,"src":"23883:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4400,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:17"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:17","nodeType":"VariableDeclaration","scope":4421,"src":"23920:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4403,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:17"},"scope":4887,"src":"23865:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4443,"nodeType":"Block","src":"24498:124:17","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"24508:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"24528:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4430,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:17","typeDescriptions":{}}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4435,"nodeType":"ExpressionStatement","src":"24508:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"24552:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"24566:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4442,"nodeType":"ExpressionStatement","src":"24544:71:17"}]},"documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"24069:350:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:17","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"value","nameLocation":"24449:5:17","nodeType":"VariableDeclaration","scope":4444,"src":"24442:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4423,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:17"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:17","nodeType":"VariableDeclaration","scope":4444,"src":"24479:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4426,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:17"},"scope":4887,"src":"24424:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4466,"nodeType":"Block","src":"25057:124:17","statements":[{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"25067:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"25087:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4453,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:17","typeDescriptions":{}}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4458,"nodeType":"ExpressionStatement","src":"25067:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"25111:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"25125:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4465,"nodeType":"ExpressionStatement","src":"25103:71:17"}]},"documentation":{"id":4445,"nodeType":"StructuredDocumentation","src":"24628:350:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:17","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"value","nameLocation":"25008:5:17","nodeType":"VariableDeclaration","scope":4467,"src":"25001:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4446,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:17"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:17","nodeType":"VariableDeclaration","scope":4467,"src":"25038:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4449,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:17"},"scope":4887,"src":"24983:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4489,"nodeType":"Block","src":"25616:124:17","statements":[{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25626:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"25646:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4476,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:17","typeDescriptions":{}}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4481,"nodeType":"ExpressionStatement","src":"25626:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25670:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"25684:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4488,"nodeType":"ExpressionStatement","src":"25662:71:17"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"25187:350:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:17","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"value","nameLocation":"25567:5:17","nodeType":"VariableDeclaration","scope":4490,"src":"25560:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4469,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:17"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:17","nodeType":"VariableDeclaration","scope":4490,"src":"25597:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4472,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:17"},"scope":4887,"src":"25542:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4512,"nodeType":"Block","src":"26175:124:17","statements":[{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"26185:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"26205:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4499,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:17","typeDescriptions":{}}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4504,"nodeType":"ExpressionStatement","src":"26185:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"26229:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"26243:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4511,"nodeType":"ExpressionStatement","src":"26221:71:17"}]},"documentation":{"id":4491,"nodeType":"StructuredDocumentation","src":"25746:350:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":4513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:17","nodeType":"FunctionDefinition","parameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"value","nameLocation":"26126:5:17","nodeType":"VariableDeclaration","scope":4513,"src":"26119:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4492,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:17"},"returnParameters":{"id":4497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:17","nodeType":"VariableDeclaration","scope":4513,"src":"26156:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4495,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:17"},"scope":4887,"src":"26101:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4535,"nodeType":"Block","src":"26734:124:17","statements":[{"expression":{"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"26744:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"26764:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4522,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:17","typeDescriptions":{}}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4527,"nodeType":"ExpressionStatement","src":"26744:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"26788:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"26802:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4534,"nodeType":"ExpressionStatement","src":"26780:71:17"}]},"documentation":{"id":4514,"nodeType":"StructuredDocumentation","src":"26305:350:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:17","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"value","nameLocation":"26685:5:17","nodeType":"VariableDeclaration","scope":4536,"src":"26678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4515,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:17"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:17","nodeType":"VariableDeclaration","scope":4536,"src":"26715:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4518,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:17"},"scope":4887,"src":"26660:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"27293:124:17","statements":[{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"27303:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"27323:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4545,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:17","typeDescriptions":{}}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4550,"nodeType":"ExpressionStatement","src":"27303:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"27347:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"27361:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4557,"nodeType":"ExpressionStatement","src":"27339:71:17"}]},"documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"26864:350:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4559,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:17","nodeType":"FunctionDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4539,"mutability":"mutable","name":"value","nameLocation":"27244:5:17","nodeType":"VariableDeclaration","scope":4559,"src":"27237:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4538,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:17"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:17","nodeType":"VariableDeclaration","scope":4559,"src":"27274:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4541,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:17"},"scope":4887,"src":"27219:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"27852:124:17","statements":[{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"27862:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"27882:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4568,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:17","typeDescriptions":{}}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4573,"nodeType":"ExpressionStatement","src":"27862:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"27906:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"27920:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4580,"nodeType":"ExpressionStatement","src":"27898:71:17"}]},"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"27423:350:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:17","nodeType":"FunctionDefinition","parameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"value","nameLocation":"27803:5:17","nodeType":"VariableDeclaration","scope":4582,"src":"27796:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4561,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:17"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:17","nodeType":"VariableDeclaration","scope":4582,"src":"27833:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4564,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:17"},"scope":4887,"src":"27778:198:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4604,"nodeType":"Block","src":"28404:122:17","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"28414:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"28433:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4591,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:17","typeDescriptions":{}}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4596,"nodeType":"ExpressionStatement","src":"28414:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"28457:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"28471:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4603,"nodeType":"ExpressionStatement","src":"28449:70:17"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"27982:345:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":4605,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:17","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"28356:5:17","nodeType":"VariableDeclaration","scope":4605,"src":"28349:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4584,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:17"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:17","nodeType":"VariableDeclaration","scope":4605,"src":"28386:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4587,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:17"},"scope":4887,"src":"28332:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4627,"nodeType":"Block","src":"28954:122:17","statements":[{"expression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"28964:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"28983:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4614,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:17","typeDescriptions":{}}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4619,"nodeType":"ExpressionStatement","src":"28964:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"29007:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"29021:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4626,"nodeType":"ExpressionStatement","src":"28999:70:17"}]},"documentation":{"id":4606,"nodeType":"StructuredDocumentation","src":"28532:345:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:17","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"value","nameLocation":"28906:5:17","nodeType":"VariableDeclaration","scope":4628,"src":"28899:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4607,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:17"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:17","nodeType":"VariableDeclaration","scope":4628,"src":"28936:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4610,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:17"},"scope":4887,"src":"28882:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4650,"nodeType":"Block","src":"29504:122:17","statements":[{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"29514:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29533:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4637,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:17","typeDescriptions":{}}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4642,"nodeType":"ExpressionStatement","src":"29514:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"29557:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29571:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4649,"nodeType":"ExpressionStatement","src":"29549:70:17"}]},"documentation":{"id":4629,"nodeType":"StructuredDocumentation","src":"29082:345:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:17","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"value","nameLocation":"29456:5:17","nodeType":"VariableDeclaration","scope":4651,"src":"29449:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4630,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:17"},"returnParameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:17","nodeType":"VariableDeclaration","scope":4651,"src":"29486:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4633,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:17"},"scope":4887,"src":"29432:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4673,"nodeType":"Block","src":"30054:122:17","statements":[{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"30064:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"30083:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4660,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:17","typeDescriptions":{}}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4665,"nodeType":"ExpressionStatement","src":"30064:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"30107:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"30121:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4672,"nodeType":"ExpressionStatement","src":"30099:70:17"}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"29632:345:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4674,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:17","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"value","nameLocation":"30006:5:17","nodeType":"VariableDeclaration","scope":4674,"src":"29999:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4653,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:17"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:17","nodeType":"VariableDeclaration","scope":4674,"src":"30036:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4656,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:17"},"scope":4887,"src":"29982:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"30604:122:17","statements":[{"expression":{"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"30614:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"30633:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4683,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:17","typeDescriptions":{}}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4688,"nodeType":"ExpressionStatement","src":"30614:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"30657:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"30671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4695,"nodeType":"ExpressionStatement","src":"30649:70:17"}]},"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"30182:345:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:17","nodeType":"FunctionDefinition","parameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"value","nameLocation":"30556:5:17","nodeType":"VariableDeclaration","scope":4697,"src":"30549:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4676,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:17"},"returnParameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:17","nodeType":"VariableDeclaration","scope":4697,"src":"30586:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4679,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:17"},"scope":4887,"src":"30532:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4719,"nodeType":"Block","src":"31154:122:17","statements":[{"expression":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"31164:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"31183:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4706,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:17","typeDescriptions":{}}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4711,"nodeType":"ExpressionStatement","src":"31164:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"31207:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"31221:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4712,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4718,"nodeType":"ExpressionStatement","src":"31199:70:17"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"30732:345:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:17","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"value","nameLocation":"31106:5:17","nodeType":"VariableDeclaration","scope":4720,"src":"31099:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4699,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:17"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:17","nodeType":"VariableDeclaration","scope":4720,"src":"31136:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4702,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:17"},"scope":4887,"src":"31082:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4742,"nodeType":"Block","src":"31704:122:17","statements":[{"expression":{"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31714:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"31733:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4729,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:17","typeDescriptions":{}}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4734,"nodeType":"ExpressionStatement","src":"31714:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31757:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"31771:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4741,"nodeType":"ExpressionStatement","src":"31749:70:17"}]},"documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"31282:345:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:17","nodeType":"FunctionDefinition","parameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"value","nameLocation":"31656:5:17","nodeType":"VariableDeclaration","scope":4743,"src":"31649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4722,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:17"},"returnParameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:17","nodeType":"VariableDeclaration","scope":4743,"src":"31686:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4725,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:17"},"scope":4887,"src":"31632:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"32254:122:17","statements":[{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"32264:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"32283:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4752,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:17","typeDescriptions":{}}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4757,"nodeType":"ExpressionStatement","src":"32264:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"32307:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"32321:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4764,"nodeType":"ExpressionStatement","src":"32299:70:17"}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"31832:345:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:17","nodeType":"FunctionDefinition","parameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"value","nameLocation":"32206:5:17","nodeType":"VariableDeclaration","scope":4766,"src":"32199:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4745,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:17"},"returnParameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:17","nodeType":"VariableDeclaration","scope":4766,"src":"32236:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4748,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:17"},"scope":4887,"src":"32182:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4788,"nodeType":"Block","src":"32804:122:17","statements":[{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"32814:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"32833:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4775,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:17","typeDescriptions":{}}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4780,"nodeType":"ExpressionStatement","src":"32814:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"32857:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"32871:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"32849:70:17"}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"32382:345:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":4789,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:17","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"32756:5:17","nodeType":"VariableDeclaration","scope":4789,"src":"32749:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4768,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:17"},"returnParameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:17","nodeType":"VariableDeclaration","scope":4789,"src":"32786:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4771,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:17"},"scope":4887,"src":"32732:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4811,"nodeType":"Block","src":"33354:122:17","statements":[{"expression":{"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"33364:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"33383:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4798,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:17","typeDescriptions":{}}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4803,"nodeType":"ExpressionStatement","src":"33364:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"33407:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"33421:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4804,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4810,"nodeType":"ExpressionStatement","src":"33399:70:17"}]},"documentation":{"id":4790,"nodeType":"StructuredDocumentation","src":"32932:345:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:17","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"value","nameLocation":"33306:5:17","nodeType":"VariableDeclaration","scope":4812,"src":"33299:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4791,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:17"},"returnParameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:17","nodeType":"VariableDeclaration","scope":4812,"src":"33336:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4794,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:17"},"scope":4887,"src":"33282:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4834,"nodeType":"Block","src":"33904:122:17","statements":[{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"33914:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"33933:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4821,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:17","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4826,"nodeType":"ExpressionStatement","src":"33914:25:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"33957:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"33971:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4833,"nodeType":"ExpressionStatement","src":"33949:70:17"}]},"documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"33482:345:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":4835,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:17","nodeType":"FunctionDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"value","nameLocation":"33856:5:17","nodeType":"VariableDeclaration","scope":4835,"src":"33849:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4814,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:17"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:17","nodeType":"VariableDeclaration","scope":4835,"src":"33886:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4817,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:17"},"scope":4887,"src":"33832:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"34447:120:17","statements":[{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"34457:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"34475:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4844,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:17","typeDescriptions":{}}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4849,"nodeType":"ExpressionStatement","src":"34457:24:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"34499:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"34513:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"ExpressionStatement","src":"34491:69:17"}]},"documentation":{"id":4836,"nodeType":"StructuredDocumentation","src":"34032:340:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:17","nodeType":"FunctionDefinition","parameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"value","nameLocation":"34400:5:17","nodeType":"VariableDeclaration","scope":4858,"src":"34393:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4837,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:17"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:17","nodeType":"VariableDeclaration","scope":4858,"src":"34430:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4840,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:17"},"scope":4887,"src":"34377:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"34845:233:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"34962:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4871,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:17","typeDescriptions":{}}},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":4866,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4879,"nodeType":"ExpressionStatement","src":"34954:87:17"},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"35065:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4880,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:17","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4865,"id":4884,"nodeType":"Return","src":"35051:20:17"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"34573:203:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:17","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"34807:5:17","nodeType":"VariableDeclaration","scope":4886,"src":"34799:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:17"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"34837:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4863,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:17"},"scope":4887,"src":"34781:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4888,"src":"927:34153:17","usedErrors":[]}],"src":"192:34889:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4992]},"id":4993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4889,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4890,"nodeType":"StructuredDocumentation","src":"134:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4992,"linearizedBaseContracts":[4992],"name":"SignedMath","nameLocation":"223:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":4907,"nodeType":"Block","src":"375:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"392:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"396:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4904,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"404:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:18","trueExpression":{"id":4903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"400:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4899,"id":4906,"nodeType":"Return","src":"385:20:18"}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"240:66:18","text":" @dev Returns the largest of two signed numbers."},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:18","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"a","nameLocation":"331:1:18","nodeType":"VariableDeclaration","scope":4908,"src":"324:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4892,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"b","nameLocation":"341:1:18","nodeType":"VariableDeclaration","scope":4908,"src":"334:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4894,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:18"},"returnParameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4908,"src":"367:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4897,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:18"},"scope":4992,"src":"311:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4925,"nodeType":"Block","src":"554:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"571:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"575:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4922,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"583:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:18","trueExpression":{"id":4921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"579:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4917,"id":4924,"nodeType":"Return","src":"564:20:18"}]},"documentation":{"id":4909,"nodeType":"StructuredDocumentation","src":"418:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:18","nodeType":"FunctionDefinition","parameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"a","nameLocation":"510:1:18","nodeType":"VariableDeclaration","scope":4926,"src":"503:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4910,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4913,"mutability":"mutable","name":"b","nameLocation":"520:1:18","nodeType":"VariableDeclaration","scope":4926,"src":"513:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4912,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:18"},"returnParameters":{"id":4917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"546:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4915,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:18"},"scope":4992,"src":"490:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4969,"nodeType":"Block","src":"796:162:18","statements":[{"assignments":[4937],"declarations":[{"constant":false,"id":4937,"mutability":"mutable","name":"x","nameLocation":"865:1:18","nodeType":"VariableDeclaration","scope":4969,"src":"858:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4936,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4950,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"870:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"874:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"881:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"885:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"910:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4956,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"930:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:18","typeDescriptions":{}}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4952,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:18","typeDescriptions":{}}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"944:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"948:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4935,"id":4968,"nodeType":"Return","src":"903:48:18"}]},"documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"597:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4970,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:18","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"a","nameLocation":"752:1:18","nodeType":"VariableDeclaration","scope":4970,"src":"745:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4928,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"b","nameLocation":"762:1:18","nodeType":"VariableDeclaration","scope":4970,"src":"755:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4930,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:18"},"returnParameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4970,"src":"788:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4933,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:18"},"scope":4992,"src":"728:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4990,"nodeType":"Block","src":"1102:158:18","statements":[{"id":4989,"nodeType":"UncheckedBlock","src":"1112:142:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"1227:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:18","subExpression":{"id":4984,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"1241:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:18","trueExpression":{"id":4983,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"1236:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{}}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4977,"id":4988,"nodeType":"Return","src":"1212:31:18"}]}]},"documentation":{"id":4971,"nodeType":"StructuredDocumentation","src":"964:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4991,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:18","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"n","nameLocation":"1067:1:18","nodeType":"VariableDeclaration","scope":4991,"src":"1060:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4972,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:18"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4991,"src":"1093:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:18"},"scope":4992,"src":"1047:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4993,"src":"215:1047:18","usedErrors":[]}],"src":"109:1154:18"},"id":18},"contracts/BribeFactory.sol":{"ast":{"absolutePath":"contracts/BribeFactory.sol","exportedSymbols":{"BribeFactory":[5212],"Clones":[664],"Errors":[10009],"IBribeMarket":[9632],"IBribeVault":[9666],"Ownable2Step":[584]},"id":5213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4994,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":4996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5213,"sourceUnit":585,"src":"57:77:19","symbolAliases":[{"foreign":{"id":4995,"name":"Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"65:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable2Step_$584_$","typeString":"type(contract Ownable2Step)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":4998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5213,"sourceUnit":665,"src":"135:64:19","symbolAliases":[{"foreign":{"id":4997,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"143:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$664_$","typeString":"type(library Clones)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBribeMarket.sol","file":"./interfaces/IBribeMarket.sol","id":5000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5213,"sourceUnit":9633,"src":"200:59:19","symbolAliases":[{"foreign":{"id":4999,"name":"IBribeMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"208:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeMarket_$9632_$","typeString":"type(contract IBribeMarket)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBribeVault.sol","file":"./interfaces/IBribeVault.sol","id":5002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5213,"sourceUnit":9667,"src":"260:57:19","symbolAliases":[{"foreign":{"id":5001,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"268:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":5004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5213,"sourceUnit":10010,"src":"318:46:19","symbolAliases":[{"foreign":{"id":5003,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"326:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5005,"name":"Ownable2Step","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"391:12:19"},"id":5006,"nodeType":"InheritanceSpecifier","src":"391:12:19"}],"canonicalName":"BribeFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5212,"linearizedBaseContracts":[5212,584,501,1687],"name":"BribeFactory","nameLocation":"375:12:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1a00ab33","id":5008,"mutability":"mutable","name":"bribeMarketImplementation","nameLocation":"425:25:19","nodeType":"VariableDeclaration","scope":5212,"src":"410:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5007,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"833d657e","id":5010,"mutability":"mutable","name":"bribeVault","nameLocation":"471:10:19","nodeType":"VariableDeclaration","scope":5212,"src":"456:25:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5009,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"0a254640","id":5013,"mutability":"constant","name":"MAX_PERIODS","nameLocation":"511:11:19","nodeType":"VariableDeclaration","scope":5212,"src":"487:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"525:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"7fb84bed","id":5016,"mutability":"constant","name":"MAX_PERIOD_DURATION","nameLocation":"557:19:19","nodeType":"VariableDeclaration","scope":5212,"src":"533:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"579:7:19","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"visibility":"public"},{"anonymous":false,"id":5020,"name":"BribeMarketCreated","nameLocation":"599:18:19","nodeType":"EventDefinition","parameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5018,"indexed":true,"mutability":"mutable","name":"bribeMarket","nameLocation":"634:11:19","nodeType":"VariableDeclaration","scope":5020,"src":"618:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5017,"name":"address","nodeType":"ElementaryTypeName","src":"618:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"617:29:19"},"src":"593:54:19"},{"anonymous":false,"id":5024,"name":"BribeMarketImplementationUpdated","nameLocation":"658:32:19","nodeType":"EventDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"indexed":true,"mutability":"mutable","name":"bribeMarketImplementation","nameLocation":"716:25:19","nodeType":"VariableDeclaration","scope":5024,"src":"700:41:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5021,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"690:57:19"},"src":"652:96:19"},{"anonymous":false,"id":5028,"name":"BribeVaultUpdated","nameLocation":"759:17:19","nodeType":"EventDefinition","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"indexed":true,"mutability":"mutable","name":"bribeVault","nameLocation":"793:10:19","nodeType":"VariableDeclaration","scope":5028,"src":"777:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5025,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:28:19"},"src":"753:52:19"},{"body":{"id":5047,"nodeType":"Block","src":"974:176:19","statements":[{"assignments":[5034],"declarations":[{"constant":false,"id":5034,"mutability":"mutable","name":"codeSize","nameLocation":"992:8:19","nodeType":"VariableDeclaration","scope":5047,"src":"984:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5035,"nodeType":"VariableDeclarationStatement","src":"984:16:19"},{"AST":{"nodeType":"YulBlock","src":"1019:57:19","statements":[{"nodeType":"YulAssignment","src":"1033:33:19","value":{"arguments":[{"name":"_address","nodeType":"YulIdentifier","src":"1057:8:19"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1045:11:19"},"nodeType":"YulFunctionCall","src":"1045:21:19"},"variableNames":[{"name":"codeSize","nodeType":"YulIdentifier","src":"1033:8:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5031,"isOffset":false,"isSlot":false,"src":"1057:8:19","valueSize":1},{"declaration":5034,"isOffset":false,"isSlot":false,"src":"1033:8:19","valueSize":1}],"id":5036,"nodeType":"InlineAssembly","src":"1010:66:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"1089:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1101:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1089:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5045,"nodeType":"IfStatement","src":"1085:47:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5040,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"1111:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAContract","nodeType":"MemberAccess","referencedDeclaration":9885,"src":"1111:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1111:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5044,"nodeType":"RevertStatement","src":"1104:28:19"}},{"id":5046,"nodeType":"PlaceholderStatement","src":"1142:1:19"}]},"documentation":{"id":5029,"nodeType":"StructuredDocumentation","src":"811:120:19","text":"@notice Check if the specified address is a contract\n@param  _address  Address to be checked"},"id":5048,"name":"isContract","nameLocation":"945:10:19","nodeType":"ModifierDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"_address","nameLocation":"964:8:19","nodeType":"VariableDeclaration","scope":5048,"src":"956:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5030,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"955:18:19"},"src":"936:214:19","virtual":false,"visibility":"internal"},{"body":{"id":5064,"nodeType":"Block","src":"1362:100:19","statements":[{"expression":{"arguments":[{"id":5057,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"1402:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5056,"name":"_setBribeMarketImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"1372:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1372:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5059,"nodeType":"ExpressionStatement","src":"1372:46:19"},{"expression":{"arguments":[{"id":5061,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"1443:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5060,"name":"_setBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1428:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1428:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5063,"nodeType":"ExpressionStatement","src":"1428:27:19"}]},"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"1156:143:19","text":"@param  _implementation  Address of the implementation contract\n@param  _bribeVault      Address of the bribe vault"},"id":5065,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"_implementation","nameLocation":"1324:15:19","nodeType":"VariableDeclaration","scope":5065,"src":"1316:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5050,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"_bribeVault","nameLocation":"1349:11:19","nodeType":"VariableDeclaration","scope":5065,"src":"1341:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5052,"name":"address","nodeType":"ElementaryTypeName","src":"1341:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:46:19"},"returnParameters":{"id":5055,"nodeType":"ParameterList","parameters":[],"src":"1362:0:19"},"scope":5212,"src":"1304:158:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5135,"nodeType":"Block","src":"1914:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1928:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1943:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1928:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1948:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5081,"name":"MAX_PERIODS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"1962:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1928:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5089,"nodeType":"IfStatement","src":"1924:95:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5084,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"1994:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidMaxPeriod","nodeType":"MemberAccess","referencedDeclaration":9879,"src":"1994:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1994:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5088,"nodeType":"RevertStatement","src":"1987:32:19"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2033:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2052:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2033:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2057:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5094,"name":"MAX_PERIOD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"2075:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2057:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2033:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5102,"nodeType":"IfStatement","src":"2029:116:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5097,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2115:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidPeriodDuration","nodeType":"MemberAccess","referencedDeclaration":9882,"src":"2115:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2115:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5101,"nodeType":"RevertStatement","src":"2108:37:19"}},{"assignments":[5104],"declarations":[{"constant":false,"id":5104,"mutability":"mutable","name":"bribeMarket","nameLocation":"2164:11:19","nodeType":"VariableDeclaration","scope":5135,"src":"2156:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5103,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5109,"initialValue":{"arguments":[{"id":5107,"name":"bribeMarketImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"2191:25:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5105,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2178:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$664_$","typeString":"type(library Clones)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":607,"src":"2178:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2178:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2156:61:19"},{"expression":{"arguments":[{"id":5114,"name":"bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"2278:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2302:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2302:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5117,"name":"_protocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"2326:9:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5118,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"2349:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5119,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2374:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5111,"name":"bribeMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"2241:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5110,"name":"IBribeMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"2228:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeMarket_$9632_$","typeString":"type(contract IBribeMarket)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2228:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBribeMarket_$9632","typeString":"contract IBribeMarket"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":9631,"src":"2228:36:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,string memory,uint256,uint256) external"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2228:171:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5121,"nodeType":"ExpressionStatement","src":"2228:171:19"},{"expression":{"arguments":[{"id":5126,"name":"bribeMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"2452:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5123,"name":"bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"2421:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5122,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"2409:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2409:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"grantDepositorRole","nodeType":"MemberAccess","referencedDeclaration":9665,"src":"2409:42:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2409:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5128,"nodeType":"ExpressionStatement","src":"2409:55:19"},{"eventCall":{"arguments":[{"id":5130,"name":"bribeMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"2499:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5129,"name":"BribeMarketCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"2480:18:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5132,"nodeType":"EmitStatement","src":"2475:36:19"},{"expression":{"id":5133,"name":"bribeMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"2529:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5076,"id":5134,"nodeType":"Return","src":"2522:18:19"}]},"documentation":{"id":5066,"nodeType":"StructuredDocumentation","src":"1468:284:19","text":"@notice Deploy a new bribe market\n@param  _protocol        address  Market name/identifier\n@param  _maxPeriods      uint256  Maximum number of periods for bribe deposits\n@param  _periodDuration  uint256  Period duration in each voting round"},"functionSelector":"742a6c43","id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"createBribeMarket","nameLocation":"1766:17:19","nodeType":"FunctionDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"_protocol","nameLocation":"1809:9:19","nodeType":"VariableDeclaration","scope":5136,"src":"1793:25:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5067,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5070,"mutability":"mutable","name":"_maxPeriods","nameLocation":"1836:11:19","nodeType":"VariableDeclaration","scope":5136,"src":"1828:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"_periodDuration","nameLocation":"1865:15:19","nodeType":"VariableDeclaration","scope":5136,"src":"1857:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1783:103:19"},"returnParameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"1905:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5074,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1904:9:19"},"scope":5212,"src":"1757:790:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5152,"nodeType":"Block","src":"2790:128:19","statements":[{"expression":{"arguments":[{"id":5145,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"2830:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5144,"name":"_setBribeMarketImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"2800:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5147,"nodeType":"ExpressionStatement","src":"2800:46:19"},{"eventCall":{"arguments":[{"id":5149,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"2895:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5148,"name":"BribeMarketImplementationUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"2862:32:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2862:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5151,"nodeType":"EmitStatement","src":"2857:54:19"}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"2553:136:19","text":"@notice Set the bribe market implementation address\n@param  _implementation  address  Implementation address"},"functionSelector":"a8f69023","id":5153,"implemented":true,"kind":"function","modifiers":[{"id":5142,"kind":"modifierInvocation","modifierName":{"id":5141,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2780:9:19"},"nodeType":"ModifierInvocation","src":"2780:9:19"}],"name":"setBribeMarketImplementation","nameLocation":"2703:28:19","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"_implementation","nameLocation":"2749:15:19","nodeType":"VariableDeclaration","scope":5153,"src":"2741:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5138,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:39:19"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[],"src":"2790:0:19"},"scope":5212,"src":"2694:224:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5169,"nodeType":"Block","src":"3105:90:19","statements":[{"expression":{"arguments":[{"id":5162,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3130:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5161,"name":"_setBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"3115:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3115:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5164,"nodeType":"ExpressionStatement","src":"3115:27:19"},{"eventCall":{"arguments":[{"id":5166,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3176:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5165,"name":"BribeVaultUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"3158:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3158:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"EmitStatement","src":"3153:35:19"}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"2924:113:19","text":"@notice Set the bribe vault address\n@param  _bribeVault  address  Bribe vault address"},"functionSelector":"152bb06d","id":5170,"implemented":true,"kind":"function","modifiers":[{"id":5159,"kind":"modifierInvocation","modifierName":{"id":5158,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"3095:9:19"},"nodeType":"ModifierInvocation","src":"3095:9:19"}],"name":"setBribeVault","nameLocation":"3051:13:19","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"_bribeVault","nameLocation":"3073:11:19","nodeType":"VariableDeclaration","scope":5170,"src":"3065:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5155,"name":"address","nodeType":"ElementaryTypeName","src":"3065:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3064:21:19"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[],"src":"3105:0:19"},"scope":5212,"src":"3042:153:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5183,"nodeType":"Block","src":"3476:60:19","statements":[{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5179,"name":"bribeMarketImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"3486:25:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5180,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"3514:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3486:43:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5182,"nodeType":"ExpressionStatement","src":"3486:43:19"}]},"documentation":{"id":5171,"nodeType":"StructuredDocumentation","src":"3201:155:19","text":"@notice Internal method to set the bribe market implementation address\n@param  _implementation  address  Implementation address"},"id":5184,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5176,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"3459:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5177,"kind":"modifierInvocation","modifierName":{"id":5175,"name":"isContract","nodeType":"IdentifierPath","referencedDeclaration":5048,"src":"3448:10:19"},"nodeType":"ModifierInvocation","src":"3448:27:19"}],"name":"_setBribeMarketImplementation","nameLocation":"3370:29:19","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"_implementation","nameLocation":"3417:15:19","nodeType":"VariableDeclaration","scope":5184,"src":"3409:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5172,"name":"address","nodeType":"ElementaryTypeName","src":"3409:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3399:39:19"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[],"src":"3476:0:19"},"scope":5212,"src":"3361:175:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5210,"nodeType":"Block","src":"3771:203:19","statements":[{"assignments":[5194],"declarations":[{"constant":false,"id":5194,"mutability":"mutable","name":"codeSize","nameLocation":"3789:8:19","nodeType":"VariableDeclaration","scope":5210,"src":"3781:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3781:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5195,"nodeType":"VariableDeclarationStatement","src":"3781:16:19"},{"AST":{"nodeType":"YulBlock","src":"3816:60:19","statements":[{"nodeType":"YulAssignment","src":"3830:36:19","value":{"arguments":[{"name":"_bribeVault","nodeType":"YulIdentifier","src":"3854:11:19"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"3842:11:19"},"nodeType":"YulFunctionCall","src":"3842:24:19"},"variableNames":[{"name":"codeSize","nodeType":"YulIdentifier","src":"3830:8:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5187,"isOffset":false,"isSlot":false,"src":"3854:11:19","valueSize":1},{"declaration":5194,"isOffset":false,"isSlot":false,"src":"3830:8:19","valueSize":1}],"id":5196,"nodeType":"InlineAssembly","src":"3807:69:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"3889:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3901:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3889:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5205,"nodeType":"IfStatement","src":"3885:47:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5200,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3911:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAContract","nodeType":"MemberAccess","referencedDeclaration":9885,"src":"3911:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3911:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5204,"nodeType":"RevertStatement","src":"3904:28:19"}},{"expression":{"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5206,"name":"bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3943:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5207,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"3956:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3943:24:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5209,"nodeType":"ExpressionStatement","src":"3943:24:19"}]},"documentation":{"id":5185,"nodeType":"StructuredDocumentation","src":"3542:132:19","text":"@notice Internal method to set the bribe vault address\n@param  _bribeVault  address  Bribe vault address"},"id":5211,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5190,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"3758:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5191,"kind":"modifierInvocation","modifierName":{"id":5189,"name":"isContract","nodeType":"IdentifierPath","referencedDeclaration":5048,"src":"3747:10:19"},"nodeType":"ModifierInvocation","src":"3747:23:19"}],"name":"_setBribeVault","nameLocation":"3688:14:19","nodeType":"FunctionDefinition","parameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"_bribeVault","nameLocation":"3720:11:19","nodeType":"VariableDeclaration","scope":5211,"src":"3712:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5186,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3702:35:19"},"returnParameters":{"id":5192,"nodeType":"ParameterList","parameters":[],"src":"3771:0:19"},"scope":5212,"src":"3679:295:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5213,"src":"366:3610:19","usedErrors":[9879,9882,9885]}],"src":"32:3945:19"},"id":19},"contracts/BribeMarket.sol":{"ast":{"absolutePath":"contracts/BribeMarket.sol","exportedSymbols":{"AccessControl":[315],"BribeMarket":[6486],"Common":[9874],"Errors":[10009],"IBribeVault":[9666],"ReentrancyGuard":[837]},"id":6487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5214,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":5216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6487,"sourceUnit":316,"src":"57:79:20","symbolAliases":[{"foreign":{"id":5215,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"65:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControl_$315_$","typeString":"type(contract AccessControl)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":5218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6487,"sourceUnit":838,"src":"137:85:20","symbolAliases":[{"foreign":{"id":5217,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"145:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReentrancyGuard_$837_$","typeString":"type(contract ReentrancyGuard)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBribeVault.sol","file":"./interfaces/IBribeVault.sol","id":5220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6487,"sourceUnit":9667,"src":"223:57:20","symbolAliases":[{"foreign":{"id":5219,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"231:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Common.sol","file":"./libraries/Common.sol","id":5222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6487,"sourceUnit":9875,"src":"281:46:20","symbolAliases":[{"foreign":{"id":5221,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"289:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":5224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6487,"sourceUnit":10010,"src":"328:46:20","symbolAliases":[{"foreign":{"id":5223,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"336:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5225,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"400:13:20"},"id":5226,"nodeType":"InheritanceSpecifier","src":"400:13:20"},{"baseName":{"id":5227,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":837,"src":"415:15:20"},"id":5228,"nodeType":"InheritanceSpecifier","src":"415:15:20"}],"canonicalName":"BribeMarket","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6486,"linearizedBaseContracts":[6486,837,315,2468,2480,388,1687],"name":"BribeMarket","nameLocation":"385:11:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"49d5e604","id":5233,"mutability":"constant","name":"TEAM_ROLE","nameLocation":"461:9:20","nodeType":"VariableDeclaration","scope":6486,"src":"437:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"437:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5445414d5f524f4c45","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"483:11:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33","typeString":"literal_string \"TEAM_ROLE\""},"value":"TEAM_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33","typeString":"literal_string \"TEAM_ROLE\""}],"id":5230,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"473:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"473:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"0a254640","id":5236,"mutability":"constant","name":"MAX_PERIODS","nameLocation":"526:11:20","nodeType":"VariableDeclaration","scope":6486,"src":"502:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"540:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"7fb84bed","id":5239,"mutability":"constant","name":"MAX_PERIOD_DURATION","nameLocation":"572:19:20","nodeType":"VariableDeclaration","scope":6486,"src":"548:53:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint256","nodeType":"ElementaryTypeName","src":"548:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"594:7:20","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"visibility":"public"},{"constant":false,"functionSelector":"91b9b827","id":5241,"mutability":"mutable","name":"PROTOCOL","nameLocation":"732:8:20","nodeType":"VariableDeclaration","scope":6486,"src":"718:22:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5240,"name":"string","nodeType":"ElementaryTypeName","src":"718:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"be309bca","id":5243,"mutability":"mutable","name":"BRIBE_VAULT","nameLocation":"833:11:20","nodeType":"VariableDeclaration","scope":6486,"src":"818:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5242,"name":"address","nodeType":"ElementaryTypeName","src":"818:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5155bafa","id":5245,"mutability":"mutable","name":"maxPeriods","nameLocation":"899:10:20","nodeType":"VariableDeclaration","scope":6486,"src":"884:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b470aade","id":5247,"mutability":"mutable","name":"periodDuration","nameLocation":"954:14:20","nodeType":"VariableDeclaration","scope":6486,"src":"939:29:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":5250,"mutability":"mutable","name":"_allWhitelistedTokens","nameLocation":"1025:21:20","nodeType":"VariableDeclaration","scope":6486,"src":"1007:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5248,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5249,"nodeType":"ArrayTypeName","src":"1007:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"id":5253,"mutability":"mutable","name":"_allBlacklistedVoters","nameLocation":"1097:21:20","nodeType":"VariableDeclaration","scope":6486,"src":"1079:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5251,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5252,"nodeType":"ArrayTypeName","src":"1079:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"functionSelector":"21298310","id":5257,"mutability":"mutable","name":"proposalDeadlines","nameLocation":"1203:17:20","nodeType":"VariableDeclaration","scope":6486,"src":"1168:52:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":5256,"keyType":{"id":5254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1176:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1168:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8e8efaee","id":5261,"mutability":"mutable","name":"indexOfWhitelistedToken","nameLocation":"1295:23:20","nodeType":"VariableDeclaration","scope":6486,"src":"1260:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5260,"keyType":{"id":5258,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1260:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"ea24a768","id":5265,"mutability":"mutable","name":"indexOfBlacklistedVoter","nameLocation":"1393:23:20","nodeType":"VariableDeclaration","scope":6486,"src":"1358:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5264,"keyType":{"id":5262,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1358:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":5267,"mutability":"mutable","name":"_initialized","nameLocation":"1436:12:20","nodeType":"VariableDeclaration","scope":6486,"src":"1423:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5266,"name":"bool","nodeType":"ElementaryTypeName","src":"1423:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"id":5279,"name":"Initialize","nameLocation":"1461:10:20","nodeType":"EventDefinition","parameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"indexed":false,"mutability":"mutable","name":"bribeVault","nameLocation":"1489:10:20","nodeType":"VariableDeclaration","scope":5279,"src":"1481:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5268,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5271,"indexed":false,"mutability":"mutable","name":"admin","nameLocation":"1517:5:20","nodeType":"VariableDeclaration","scope":5279,"src":"1509:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5270,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5273,"indexed":false,"mutability":"mutable","name":"protocol","nameLocation":"1539:8:20","nodeType":"VariableDeclaration","scope":5279,"src":"1532:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5272,"name":"string","nodeType":"ElementaryTypeName","src":"1532:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5275,"indexed":false,"mutability":"mutable","name":"maxPeriods","nameLocation":"1565:10:20","nodeType":"VariableDeclaration","scope":5279,"src":"1557:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5277,"indexed":false,"mutability":"mutable","name":"periodDuration","nameLocation":"1593:14:20","nodeType":"VariableDeclaration","scope":5279,"src":"1585:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1471:142:20"},"src":"1455:159:20"},{"anonymous":false,"id":5283,"name":"GrantTeamRole","nameLocation":"1625:13:20","nodeType":"EventDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"indexed":false,"mutability":"mutable","name":"teamMember","nameLocation":"1647:10:20","nodeType":"VariableDeclaration","scope":5283,"src":"1639:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5280,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:20:20"},"src":"1619:40:20"},{"anonymous":false,"id":5287,"name":"RevokeTeamRole","nameLocation":"1670:14:20","nodeType":"EventDefinition","parameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"indexed":false,"mutability":"mutable","name":"teamMember","nameLocation":"1693:10:20","nodeType":"VariableDeclaration","scope":5287,"src":"1685:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5284,"name":"address","nodeType":"ElementaryTypeName","src":"1685:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1684:20:20"},"src":"1664:41:20"},{"anonymous":false,"id":5294,"name":"SetProposals","nameLocation":"1716:12:20","nodeType":"EventDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"indexed":false,"mutability":"mutable","name":"proposals","nameLocation":"1739:9:20","nodeType":"VariableDeclaration","scope":5294,"src":"1729:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5289,"nodeType":"ArrayTypeName","src":"1729:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5292,"indexed":true,"mutability":"mutable","name":"deadline","nameLocation":"1766:8:20","nodeType":"VariableDeclaration","scope":5294,"src":"1750:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:47:20"},"src":"1710:66:20"},{"anonymous":false,"id":5303,"name":"SetProposalsById","nameLocation":"1787:16:20","nodeType":"EventDefinition","parameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"indexed":true,"mutability":"mutable","name":"proposalIndex","nameLocation":"1829:13:20","nodeType":"VariableDeclaration","scope":5303,"src":"1813:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5299,"indexed":false,"mutability":"mutable","name":"proposals","nameLocation":"1862:9:20","nodeType":"VariableDeclaration","scope":5303,"src":"1852:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5298,"nodeType":"ArrayTypeName","src":"1852:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5301,"indexed":true,"mutability":"mutable","name":"deadline","nameLocation":"1897:8:20","nodeType":"VariableDeclaration","scope":5303,"src":"1881:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1803:108:20"},"src":"1781:131:20"},{"anonymous":false,"id":5310,"name":"SetProposalsByAddress","nameLocation":"1923:21:20","nodeType":"EventDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"indexed":false,"mutability":"mutable","name":"proposals","nameLocation":"1955:9:20","nodeType":"VariableDeclaration","scope":5310,"src":"1945:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1945:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5305,"nodeType":"ArrayTypeName","src":"1945:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5308,"indexed":true,"mutability":"mutable","name":"deadline","nameLocation":"1982:8:20","nodeType":"VariableDeclaration","scope":5310,"src":"1966:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1944:47:20"},"src":"1917:75:20"},{"anonymous":false,"id":5315,"name":"AddWhitelistedTokens","nameLocation":"2003:20:20","nodeType":"EventDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"2034:6:20","nodeType":"VariableDeclaration","scope":5315,"src":"2024:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5311,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5312,"nodeType":"ArrayTypeName","src":"2024:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2023:18:20"},"src":"1997:45:20"},{"anonymous":false,"id":5320,"name":"RemoveWhitelistedTokens","nameLocation":"2053:23:20","nodeType":"EventDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"2087:6:20","nodeType":"VariableDeclaration","scope":5320,"src":"2077:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5316,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5317,"nodeType":"ArrayTypeName","src":"2077:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2076:18:20"},"src":"2047:48:20"},{"anonymous":false,"id":5324,"name":"SetMaxPeriods","nameLocation":"2106:13:20","nodeType":"EventDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"indexed":false,"mutability":"mutable","name":"maxPeriods","nameLocation":"2128:10:20","nodeType":"VariableDeclaration","scope":5324,"src":"2120:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:20:20"},"src":"2100:40:20"},{"anonymous":false,"id":5328,"name":"SetPeriodDuration","nameLocation":"2151:17:20","nodeType":"EventDefinition","parameters":{"id":5327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5326,"indexed":false,"mutability":"mutable","name":"periodDuration","nameLocation":"2177:14:20","nodeType":"VariableDeclaration","scope":5328,"src":"2169:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2168:24:20"},"src":"2145:48:20"},{"anonymous":false,"id":5333,"name":"AddBlacklistedVoters","nameLocation":"2204:20:20","nodeType":"EventDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"indexed":false,"mutability":"mutable","name":"voters","nameLocation":"2235:6:20","nodeType":"VariableDeclaration","scope":5333,"src":"2225:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5329,"name":"address","nodeType":"ElementaryTypeName","src":"2225:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5330,"nodeType":"ArrayTypeName","src":"2225:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2224:18:20"},"src":"2198:45:20"},{"anonymous":false,"id":5338,"name":"RemoveBlacklistedVoters","nameLocation":"2254:23:20","nodeType":"EventDefinition","parameters":{"id":5337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"indexed":false,"mutability":"mutable","name":"voters","nameLocation":"2288:6:20","nodeType":"VariableDeclaration","scope":5338,"src":"2278:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5334,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5335,"nodeType":"ArrayTypeName","src":"2278:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2277:18:20"},"src":"2248:48:20"},{"body":{"id":5360,"nodeType":"Block","src":"2328:172:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2355:40:20","subExpression":{"arguments":[{"id":5341,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2364:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2384:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2384:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5340,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2356:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2356:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2411:31:20","subExpression":{"arguments":[{"id":5347,"name":"TEAM_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"2420:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5348,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2431:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2431:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5346,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2412:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2412:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2355:87:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5358,"nodeType":"IfStatement","src":"2338:144:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5353,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2460:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAuthorized","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"2460:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5357,"nodeType":"RevertStatement","src":"2453:29:20"}},{"id":5359,"nodeType":"PlaceholderStatement","src":"2492:1:20"}]},"id":5361,"name":"onlyAuthorized","nameLocation":"2311:14:20","nodeType":"ModifierDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[],"src":"2325:2:20"},"src":"2302:198:20","virtual":false,"visibility":"internal"},{"body":{"id":5375,"nodeType":"Block","src":"2533:109:20","statements":[{"condition":{"id":5363,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"2547:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5369,"nodeType":"IfStatement","src":"2543:52:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5364,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2568:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"AlreadyInitialized","nodeType":"MemberAccess","referencedDeclaration":9891,"src":"2568:25:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2568:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5368,"nodeType":"RevertStatement","src":"2561:34:20"}},{"id":5370,"nodeType":"PlaceholderStatement","src":"2605:1:20"},{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5371,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"2616:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2631:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2616:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5374,"nodeType":"ExpressionStatement","src":"2616:19:20"}]},"id":5376,"name":"onlyInitializer","nameLocation":"2515:15:20","nodeType":"ModifierDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[],"src":"2530:2:20"},"src":"2506:136:20","virtual":false,"visibility":"internal"},{"body":{"id":5472,"nodeType":"Block","src":"3144:733:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"3158:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3181:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3173:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5393,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:20","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3173:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3158:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5403,"nodeType":"IfStatement","src":"3154:61:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5398,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3192:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"3192:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3192:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5402,"nodeType":"RevertStatement","src":"3185:30:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5406,"name":"_protocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"3235:9:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3229:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5404,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:20","typeDescriptions":{}}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3229:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3229:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3256:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3229:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"3225:65:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5411,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3266:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidProtocol","nodeType":"MemberAccess","referencedDeclaration":9900,"src":"3266:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3266:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5415,"nodeType":"RevertStatement","src":"3259:31:20"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"3304:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3304:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"3324:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5421,"name":"MAX_PERIODS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"3338:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3324:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3304:45:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5429,"nodeType":"IfStatement","src":"3300:95:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5424,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3370:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidMaxPeriod","nodeType":"MemberAccess","referencedDeclaration":9879,"src":"3370:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3370:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5428,"nodeType":"RevertStatement","src":"3363:32:20"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3409:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3428:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3409:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3433:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5434,"name":"MAX_PERIOD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3451:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3433:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3409:61:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"3405:116:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5437,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3491:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidPeriodDuration","nodeType":"MemberAccess","referencedDeclaration":9882,"src":"3491:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3491:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5441,"nodeType":"RevertStatement","src":"3484:37:20"}},{"expression":{"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"BRIBE_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"3532:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5444,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"3546:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3532:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5446,"nodeType":"ExpressionStatement","src":"3532:25:20"},{"expression":{"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5447,"name":"PROTOCOL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"3567:8:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5448,"name":"_protocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"3578:9:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3567:20:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5450,"nodeType":"ExpressionStatement","src":"3567:20:20"},{"expression":{"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5451,"name":"maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"3597:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5452,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"3610:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3597:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5454,"nodeType":"ExpressionStatement","src":"3597:24:20"},{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5455,"name":"periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"3631:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5456,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3648:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3631:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5458,"nodeType":"ExpressionStatement","src":"3631:32:20"},{"expression":{"arguments":[{"id":5460,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3685:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5461,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"3705:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5459,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3674:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3674:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5463,"nodeType":"ExpressionStatement","src":"3674:38:20"},{"eventCall":{"arguments":[{"id":5465,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"3752:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5466,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"3777:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5467,"name":"_protocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"3797:9:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5468,"name":"_maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"3820:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5469,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3845:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"name":"Initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"3728:10:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,string memory,uint256,uint256)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3728:142:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"EmitStatement","src":"3723:147:20"}]},"documentation":{"id":5377,"nodeType":"StructuredDocumentation","src":"2648:290:20","text":"@notice Initialize the contract\n@param  _bribeVault  Bribe vault address\n@param  _admin       Admin address\n@param  _protocol    Protocol name\n@param  _maxPeriods  Maximum number of periods\n@param  _periodDuration  Period duration"},"functionSelector":"8d23507f","id":5473,"implemented":true,"kind":"function","modifiers":[{"id":5390,"kind":"modifierInvocation","modifierName":{"id":5389,"name":"onlyInitializer","nodeType":"IdentifierPath","referencedDeclaration":5376,"src":"3128:15:20"},"nodeType":"ModifierInvocation","src":"3128:15:20"}],"name":"initialize","nameLocation":"2952:10:20","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"_bribeVault","nameLocation":"2980:11:20","nodeType":"VariableDeclaration","scope":5473,"src":"2972:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5381,"mutability":"mutable","name":"_admin","nameLocation":"3009:6:20","nodeType":"VariableDeclaration","scope":5473,"src":"3001:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5380,"name":"address","nodeType":"ElementaryTypeName","src":"3001:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5383,"mutability":"mutable","name":"_protocol","nameLocation":"3041:9:20","nodeType":"VariableDeclaration","scope":5473,"src":"3025:25:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5382,"name":"string","nodeType":"ElementaryTypeName","src":"3025:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5385,"mutability":"mutable","name":"_maxPeriods","nameLocation":"3068:11:20","nodeType":"VariableDeclaration","scope":5473,"src":"3060:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5384,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"_periodDuration","nameLocation":"3097:15:20","nodeType":"VariableDeclaration","scope":5473,"src":"3089:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"3089:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2962:156:20"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[],"src":"3144:0:20"},"scope":6486,"src":"2943:934:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5567,"nodeType":"Block","src":"4229:622:20","statements":[{"assignments":[5485],"declarations":[{"constant":false,"id":5485,"mutability":"mutable","name":"identifiersLen","nameLocation":"4247:14:20","nodeType":"VariableDeclaration","scope":5567,"src":"4239:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5488,"initialValue":{"expression":{"id":5486,"name":"_identifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"4264:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4264:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4239:44:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"identifiersLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"4297:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4315:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4297:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5497,"nodeType":"IfStatement","src":"4293:55:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5492,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4325:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"4325:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4325:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"RevertStatement","src":"4318:30:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"4362:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4374:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4374:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4362:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5507,"nodeType":"IfStatement","src":"4358:64:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5502,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4398:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDeadline","nodeType":"MemberAccess","referencedDeclaration":9933,"src":"4398:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4398:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5506,"nodeType":"RevertStatement","src":"4391:31:20"}},{"assignments":[5512],"declarations":[{"constant":false,"id":5512,"mutability":"mutable","name":"proposalIds","nameLocation":"4450:11:20","nodeType":"VariableDeclaration","scope":5567,"src":"4433:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4433:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5511,"nodeType":"ArrayTypeName","src":"4433:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5518,"initialValue":{"arguments":[{"id":5516,"name":"identifiersLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"4478:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4464:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5514,"nodeType":"ArrayTypeName","src":"4468:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4464:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4433:60:20"},{"assignments":[5520],"declarations":[{"constant":false,"id":5520,"mutability":"mutable","name":"i","nameLocation":"4512:1:20","nodeType":"VariableDeclaration","scope":5567,"src":"4504:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"4504:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5521,"nodeType":"VariableDeclarationStatement","src":"4504:9:20"},{"body":{"id":5557,"nodeType":"Block","src":"4526:239:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5522,"name":"_identifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"4544:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5524,"indexExpression":{"id":5523,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4557:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4544:15:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4544:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4570:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4544:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"4540:66:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5528,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4580:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidIdentifier","nodeType":"MemberAccess","referencedDeclaration":9897,"src":"4580:24:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4580:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5532,"nodeType":"RevertStatement","src":"4573:33:20"}},{"expression":{"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5534,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"4621:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5536,"indexExpression":{"id":5535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4633:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4621:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":5540,"name":"_identifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"4665:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5542,"indexExpression":{"id":5541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4678:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4665:15:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":5538,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4648:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4648:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4648:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5537,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4638:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4638:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4621:61:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5546,"nodeType":"ExpressionStatement","src":"4621:61:20"},{"expression":{"arguments":[{"baseExpression":{"id":5548,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"4710:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5550,"indexExpression":{"id":5549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4722:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4710:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5551,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"4726:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5547,"name":"_setProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"4697:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4697:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"4697:39:20"},{"expression":{"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4751:3:20","subExpression":{"id":5554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4753:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5556,"nodeType":"ExpressionStatement","src":"4751:3:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4773:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5559,"name":"identifiersLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"4777:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"DoWhileStatement","src":"4523:270:20"},{"eventCall":{"arguments":[{"id":5563,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"4821:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5564,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"4834:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"name":"SetProposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"4808:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] memory,uint256)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4808:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5566,"nodeType":"EmitStatement","src":"4803:41:20"}]},"documentation":{"id":5474,"nodeType":"StructuredDocumentation","src":"3883:223:20","text":"@notice Set multiple proposals with arbitrary bytes data as identifiers under the same deadline\n@param  _identifiers  bytes[]  identifiers\n@param  _deadline     uint256  Proposal deadline"},"functionSelector":"84f389a8","id":5568,"implemented":true,"kind":"function","modifiers":[{"id":5482,"kind":"modifierInvocation","modifierName":{"id":5481,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"4214:14:20"},"nodeType":"ModifierInvocation","src":"4214:14:20"}],"name":"setProposals","nameLocation":"4120:12:20","nodeType":"FunctionDefinition","parameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"_identifiers","nameLocation":"4159:12:20","nodeType":"VariableDeclaration","scope":5568,"src":"4142:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5475,"name":"bytes","nodeType":"ElementaryTypeName","src":"4142:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5476,"nodeType":"ArrayTypeName","src":"4142:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":5479,"mutability":"mutable","name":"_deadline","nameLocation":"4189:9:20","nodeType":"VariableDeclaration","scope":5568,"src":"4181:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"4181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4132:72:20"},"returnParameters":{"id":5483,"nodeType":"ParameterList","parameters":[],"src":"4229:0:20"},"scope":6486,"src":"4111:740:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5646,"nodeType":"Block","src":"5299:507:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"_choiceCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"5313:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5329:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5313:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"5309:57:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5583,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5339:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidChoiceCount","nodeType":"MemberAccess","referencedDeclaration":9903,"src":"5339:25:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5339:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"5332:34:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"5380:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5590,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5392:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5392:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5380:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5598,"nodeType":"IfStatement","src":"5376:64:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5593,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5416:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDeadline","nodeType":"MemberAccess","referencedDeclaration":9933,"src":"5416:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5416:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5597,"nodeType":"RevertStatement","src":"5409:31:20"}},{"assignments":[5603],"declarations":[{"constant":false,"id":5603,"mutability":"mutable","name":"proposalIds","nameLocation":"5468:11:20","nodeType":"VariableDeclaration","scope":5646,"src":"5451:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5451:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5602,"nodeType":"ArrayTypeName","src":"5451:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5609,"initialValue":{"arguments":[{"id":5607,"name":"_choiceCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"5496:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5482:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5486:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5605,"nodeType":"ArrayTypeName","src":"5486:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5482:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5451:58:20"},{"assignments":[5611],"declarations":[{"constant":false,"id":5611,"mutability":"mutable","name":"i","nameLocation":"5528:1:20","nodeType":"VariableDeclaration","scope":5646,"src":"5520:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5612,"nodeType":"VariableDeclarationStatement","src":"5520:9:20"},{"body":{"id":5635,"nodeType":"Block","src":"5542:160:20","statements":[{"expression":{"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5613,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"5556:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5615,"indexExpression":{"id":5614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"5568:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5556:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5619,"name":"_proposalIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"5600:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"5616:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5617,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5583:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5583:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5583:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5616,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5573:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5573:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5556:63:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5624,"nodeType":"ExpressionStatement","src":"5556:63:20"},{"expression":{"arguments":[{"baseExpression":{"id":5626,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"5647:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5628,"indexExpression":{"id":5627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"5659:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5647:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5629,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"5663:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5625,"name":"_setProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"5634:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5631,"nodeType":"ExpressionStatement","src":"5634:39:20"},{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5688:3:20","subExpression":{"id":5632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"5690:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ExpressionStatement","src":"5688:3:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"5710:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5637,"name":"_choiceCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"5714:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5710:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5639,"nodeType":"DoWhileStatement","src":"5539:189:20"},{"eventCall":{"arguments":[{"id":5641,"name":"_proposalIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"5760:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5642,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"5776:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5643,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"5789:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5640,"name":"SetProposalsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"5743:16:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,bytes32[] memory,uint256)"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5743:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5645,"nodeType":"EmitStatement","src":"5738:61:20"}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"4857:292:20","text":"@notice Set proposals based on the index of the proposal and the number of choices\n@param  _proposalIndex  uint256  Proposal index\n@param  _choiceCount    uint256  Number of choices to be voted for\n@param  _deadline       uint256  Proposal deadline"},"functionSelector":"d59551d2","id":5647,"implemented":true,"kind":"function","modifiers":[{"id":5578,"kind":"modifierInvocation","modifierName":{"id":5577,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"5284:14:20"},"nodeType":"ModifierInvocation","src":"5284:14:20"}],"name":"setProposalsById","nameLocation":"5163:16:20","nodeType":"FunctionDefinition","parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"_proposalIndex","nameLocation":"5197:14:20","nodeType":"VariableDeclaration","scope":5647,"src":"5189:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5573,"mutability":"mutable","name":"_choiceCount","nameLocation":"5229:12:20","nodeType":"VariableDeclaration","scope":5647,"src":"5221:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5221:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5575,"mutability":"mutable","name":"_deadline","nameLocation":"5259:9:20","nodeType":"VariableDeclaration","scope":5647,"src":"5251:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5179:95:20"},"returnParameters":{"id":5579,"nodeType":"ParameterList","parameters":[],"src":"5299:0:20"},"scope":6486,"src":"5154:652:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5743,"nodeType":"Block","src":"6165:616:20","statements":[{"assignments":[5659],"declarations":[{"constant":false,"id":5659,"mutability":"mutable","name":"addressesLen","nameLocation":"6183:12:20","nodeType":"VariableDeclaration","scope":5743,"src":"6175:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5658,"name":"uint256","nodeType":"ElementaryTypeName","src":"6175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5662,"initialValue":{"expression":{"id":5660,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"6198:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6198:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6175:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"addressesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6229:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6245:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6229:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"6225:53:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5666,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6255:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"6255:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6255:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5670,"nodeType":"RevertStatement","src":"6248:30:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"6292:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5673,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6304:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6304:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6292:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5681,"nodeType":"IfStatement","src":"6288:64:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5676,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6328:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDeadline","nodeType":"MemberAccess","referencedDeclaration":9933,"src":"6328:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6328:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5680,"nodeType":"RevertStatement","src":"6321:31:20"}},{"assignments":[5686],"declarations":[{"constant":false,"id":5686,"mutability":"mutable","name":"proposalIds","nameLocation":"6380:11:20","nodeType":"VariableDeclaration","scope":5743,"src":"6363:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6363:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5685,"nodeType":"ArrayTypeName","src":"6363:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5692,"initialValue":{"arguments":[{"id":5690,"name":"addressesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6408:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6394:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6398:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5688,"nodeType":"ArrayTypeName","src":"6398:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6394:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6363:58:20"},{"assignments":[5694],"declarations":[{"constant":false,"id":5694,"mutability":"mutable","name":"i","nameLocation":"6440:1:20","nodeType":"VariableDeclaration","scope":5743,"src":"6432:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5693,"name":"uint256","nodeType":"ElementaryTypeName","src":"6432:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5695,"nodeType":"VariableDeclarationStatement","src":"6432:9:20"},{"body":{"id":5733,"nodeType":"Block","src":"6454:234:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5696,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"6472:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5698,"indexExpression":{"id":5697,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"6483:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6472:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6497:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6489:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5699,"name":"address","nodeType":"ElementaryTypeName","src":"6489:7:20","typeDescriptions":{}}},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6489:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6472:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5709,"nodeType":"IfStatement","src":"6468:63:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5704,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6508:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"6508:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6508:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5708,"nodeType":"RevertStatement","src":"6501:30:20"}},{"expression":{"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5710,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"6546:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5712,"indexExpression":{"id":5711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"6558:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6546:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":5716,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"6590:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5718,"indexExpression":{"id":5717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"6601:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6590:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5714,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6573:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6573:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6573:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5713,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6563:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6563:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6546:59:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5722,"nodeType":"ExpressionStatement","src":"6546:59:20"},{"expression":{"arguments":[{"baseExpression":{"id":5724,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"6633:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5726,"indexExpression":{"id":5725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"6645:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6633:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5727,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"6649:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5723,"name":"_setProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"6620:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5729,"nodeType":"ExpressionStatement","src":"6620:39:20"},{"expression":{"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6674:3:20","subExpression":{"id":5730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"6676:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5732,"nodeType":"ExpressionStatement","src":"6674:3:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"6696:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5735,"name":"addressesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6700:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6696:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5737,"nodeType":"DoWhileStatement","src":"6451:263:20"},{"eventCall":{"arguments":[{"id":5739,"name":"proposalIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"6751:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5740,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"6764:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"name":"SetProposalsByAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"6729:21:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] memory,uint256)"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6729:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"EmitStatement","src":"6724:50:20"}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"5812:221:20","text":"@notice Set multiple proposals for many addresses under the same deadline\n@param  _addresses  address[]  addresses (eg. gauge addresses)\n@param  _deadline   uint256    Proposal deadline"},"functionSelector":"ed99c0d1","id":5744,"implemented":true,"kind":"function","modifiers":[{"id":5656,"kind":"modifierInvocation","modifierName":{"id":5655,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"6150:14:20"},"nodeType":"ModifierInvocation","src":"6150:14:20"}],"name":"setProposalsByAddress","nameLocation":"6047:21:20","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"_addresses","nameLocation":"6097:10:20","nodeType":"VariableDeclaration","scope":5744,"src":"6078:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5649,"name":"address","nodeType":"ElementaryTypeName","src":"6078:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5650,"nodeType":"ArrayTypeName","src":"6078:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5653,"mutability":"mutable","name":"_deadline","nameLocation":"6125:9:20","nodeType":"VariableDeclaration","scope":5744,"src":"6117:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6117:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6068:72:20"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[],"src":"6165:0:20"},"scope":6486,"src":"6038:743:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5774,"nodeType":"Block","src":"7024:164:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"_teamMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"7038:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7061:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7053:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5754,"name":"address","nodeType":"ElementaryTypeName","src":"7053:7:20","typeDescriptions":{}}},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7053:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7038:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5764,"nodeType":"IfStatement","src":"7034:61:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5759,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7072:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"7072:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7072:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5763,"nodeType":"RevertStatement","src":"7065:30:20"}},{"expression":{"arguments":[{"id":5766,"name":"TEAM_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"7116:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5767,"name":"_teamMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"7127:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5765,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7105:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7105:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5769,"nodeType":"ExpressionStatement","src":"7105:34:20"},{"eventCall":{"arguments":[{"id":5771,"name":"_teamMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"7169:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5770,"name":"GrantTeamRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"7155:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7155:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5773,"nodeType":"EmitStatement","src":"7150:31:20"}]},"documentation":{"id":5745,"nodeType":"StructuredDocumentation","src":"6787:136:20","text":"@notice Grant the team role to an address\n@param  _teamMember  address  Address to grant the teamMember role"},"functionSelector":"f52c395a","id":5775,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5750,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"7004:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5751,"kind":"modifierInvocation","modifierName":{"id":5749,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"6995:8:20"},"nodeType":"ModifierInvocation","src":"6995:28:20"}],"name":"grantTeamRole","nameLocation":"6937:13:20","nodeType":"FunctionDefinition","parameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"_teamMember","nameLocation":"6968:11:20","nodeType":"VariableDeclaration","scope":5775,"src":"6960:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5746,"name":"address","nodeType":"ElementaryTypeName","src":"6960:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6950:35:20"},"returnParameters":{"id":5752,"nodeType":"ParameterList","parameters":[],"src":"7024:0:20"},"scope":6486,"src":"6928:260:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5804,"nodeType":"Block","src":"7436:172:20","statements":[{"condition":{"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7450:32:20","subExpression":{"arguments":[{"id":5785,"name":"TEAM_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"7459:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5786,"name":"_teamMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"7470:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5784,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7451:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7451:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"7446:67:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5789,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7491:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotTeamMember","nodeType":"MemberAccess","referencedDeclaration":9909,"src":"7491:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7491:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5793,"nodeType":"RevertStatement","src":"7484:29:20"}},{"expression":{"arguments":[{"id":5796,"name":"TEAM_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"7535:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5797,"name":"_teamMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"7546:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5795,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7523:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7523:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5799,"nodeType":"ExpressionStatement","src":"7523:35:20"},{"eventCall":{"arguments":[{"id":5801,"name":"_teamMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"7589:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5800,"name":"RevokeTeamRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"7574:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7574:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5803,"nodeType":"EmitStatement","src":"7569:32:20"}]},"documentation":{"id":5776,"nodeType":"StructuredDocumentation","src":"7194:140:20","text":"@notice Revoke the team role from an address\n@param  _teamMember  address  Address to revoke the teamMember role"},"functionSelector":"5699fbad","id":5805,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5781,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"7416:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5782,"kind":"modifierInvocation","modifierName":{"id":5780,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"7407:8:20"},"nodeType":"ModifierInvocation","src":"7407:28:20"}],"name":"revokeTeamRole","nameLocation":"7348:14:20","nodeType":"FunctionDefinition","parameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"_teamMember","nameLocation":"7380:11:20","nodeType":"VariableDeclaration","scope":5805,"src":"7372:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5777,"name":"address","nodeType":"ElementaryTypeName","src":"7372:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7362:35:20"},"returnParameters":{"id":5783,"nodeType":"ParameterList","parameters":[],"src":"7436:0:20"},"scope":6486,"src":"7339:269:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5835,"nodeType":"Block","src":"7846:177:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7860:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7860:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5817,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7877:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5818,"name":"MAX_PERIODS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"7888:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7877:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7860:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5826,"nodeType":"IfStatement","src":"7856:89:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5821,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7920:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidMaxPeriod","nodeType":"MemberAccess","referencedDeclaration":9879,"src":"7920:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7920:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5825,"nodeType":"RevertStatement","src":"7913:32:20"}},{"expression":{"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"7956:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5828,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7969:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7956:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5830,"nodeType":"ExpressionStatement","src":"7956:21:20"},{"eventCall":{"arguments":[{"id":5832,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"8007:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5831,"name":"SetMaxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"7993:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7993:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5834,"nodeType":"EmitStatement","src":"7988:28:20"}]},"documentation":{"id":5806,"nodeType":"StructuredDocumentation","src":"7614:134:20","text":"@notice Set maximum periods for submitting bribes ahead of time\n@param  _periods  uint256  Maximum periods"},"functionSelector":"da606ce2","id":5836,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5811,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"7826:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5812,"kind":"modifierInvocation","modifierName":{"id":5810,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"7817:8:20"},"nodeType":"ModifierInvocation","src":"7817:28:20"}],"name":"setMaxPeriods","nameLocation":"7762:13:20","nodeType":"FunctionDefinition","parameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"_periods","nameLocation":"7793:8:20","nodeType":"VariableDeclaration","scope":5836,"src":"7785:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7785:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7775:32:20"},"returnParameters":{"id":5813,"nodeType":"ParameterList","parameters":[],"src":"7846:0:20"},"scope":6486,"src":"7753:270:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5866,"nodeType":"Block","src":"8260:226:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5845,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"8274:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8293:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8274:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5848,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"8298:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5849,"name":"MAX_PERIOD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"8316:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8298:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8274:61:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5857,"nodeType":"IfStatement","src":"8270:116:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5852,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8356:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidPeriodDuration","nodeType":"MemberAccess","referencedDeclaration":9882,"src":"8356:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8356:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5856,"nodeType":"RevertStatement","src":"8349:37:20"}},{"expression":{"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5858,"name":"periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"8397:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5859,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"8414:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5861,"nodeType":"ExpressionStatement","src":"8397:32:20"},{"eventCall":{"arguments":[{"id":5863,"name":"_periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"8463:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"name":"SetPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"8445:17:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8445:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5865,"nodeType":"EmitStatement","src":"8440:39:20"}]},"documentation":{"id":5837,"nodeType":"StructuredDocumentation","src":"8029:122:20","text":"@notice Set period duration per voting round\n@param  _periodDuration  uint256  Period duration"},"functionSelector":"7c2d6e01","id":5867,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5842,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"8240:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5843,"kind":"modifierInvocation","modifierName":{"id":5841,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"8231:8:20"},"nodeType":"ModifierInvocation","src":"8231:28:20"}],"name":"setPeriodDuration","nameLocation":"8165:17:20","nodeType":"FunctionDefinition","parameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"_periodDuration","nameLocation":"8200:15:20","nodeType":"VariableDeclaration","scope":5867,"src":"8192:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8192:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8182:39:20"},"returnParameters":{"id":5844,"nodeType":"ParameterList","parameters":[],"src":"8260:0:20"},"scope":6486,"src":"8156:330:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5952,"nodeType":"Block","src":"8706:699:20","statements":[{"assignments":[5877],"declarations":[{"constant":false,"id":5877,"mutability":"mutable","name":"tLen","nameLocation":"8724:4:20","nodeType":"VariableDeclaration","scope":5952,"src":"8716:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8716:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5880,"initialValue":{"expression":{"id":5878,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"8731:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8731:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8716:29:20"},{"body":{"id":5946,"nodeType":"Block","src":"8783:571:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5887,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"8801:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5889,"indexExpression":{"id":5888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"8809:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8815:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5890,"name":"address","nodeType":"ElementaryTypeName","src":"8815:7:20","typeDescriptions":{}}},"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8815:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8801:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5900,"nodeType":"IfStatement","src":"8797:60:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5895,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8834:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"8834:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8834:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5899,"nodeType":"RevertStatement","src":"8827:30:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5901,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"8875:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5903,"indexExpression":{"id":5902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"8883:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8875:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5904,"name":"BRIBE_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"8889:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8875:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5911,"nodeType":"IfStatement","src":"8871:84:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5906,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8925:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NoWhitelistBribeVault","nodeType":"MemberAccess","referencedDeclaration":9912,"src":"8925:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8925:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5910,"nodeType":"RevertStatement","src":"8918:37:20"}},{"condition":{"arguments":[{"baseExpression":{"id":5913,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"8992:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5915,"indexExpression":{"id":5914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"9000:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8992:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5912,"name":"isWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"8973:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8973:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5922,"nodeType":"IfStatement","src":"8969:84:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5917,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"9028:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TokenWhitelisted","nodeType":"MemberAccess","referencedDeclaration":9915,"src":"9028:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9028:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5921,"nodeType":"RevertStatement","src":"9021:32:20"}},{"expression":{"arguments":[{"baseExpression":{"id":5926,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"9156:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5928,"indexExpression":{"id":5927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"9164:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9156:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5923,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"9129:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9129:26:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9129:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5930,"nodeType":"ExpressionStatement","src":"9129:38:20"},{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5931,"name":"indexOfWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"9181:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5935,"indexExpression":{"baseExpression":{"id":5932,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"9205:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5934,"indexExpression":{"id":5933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"9213:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9205:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9181:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5936,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"9235:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9235:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9282:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9235:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9181:102:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5941,"nodeType":"ExpressionStatement","src":"9181:102:20"},{"id":5945,"nodeType":"UncheckedBlock","src":"9298:46:20","statements":[{"expression":{"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9326:3:20","subExpression":{"id":5942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"9328:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5944,"nodeType":"ExpressionStatement","src":"9326:3:20"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"8771:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5885,"name":"tLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"8775:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8771:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5947,"initializationExpression":{"assignments":[5882],"declarations":[{"constant":false,"id":5882,"mutability":"mutable","name":"i","nameLocation":"8768:1:20","nodeType":"VariableDeclaration","scope":5947,"src":"8760:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"8760:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5883,"nodeType":"VariableDeclarationStatement","src":"8760:9:20"},"nodeType":"ForStatement","src":"8755:599:20"},{"eventCall":{"arguments":[{"id":5949,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"9390:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":5948,"name":"AddWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"9369:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9369:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5951,"nodeType":"EmitStatement","src":"9364:34:20"}]},"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"8492:113:20","text":"@notice Add whitelisted tokens\n@param  _tokens  address[]  Tokens to add to whitelist"},"functionSelector":"cd698e69","id":5953,"implemented":true,"kind":"function","modifiers":[{"id":5874,"kind":"modifierInvocation","modifierName":{"id":5873,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"8691:14:20"},"nodeType":"ModifierInvocation","src":"8691:14:20"}],"name":"addWhitelistedTokens","nameLocation":"8619:20:20","nodeType":"FunctionDefinition","parameters":{"id":5872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"_tokens","nameLocation":"8668:7:20","nodeType":"VariableDeclaration","scope":5953,"src":"8649:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5869,"name":"address","nodeType":"ElementaryTypeName","src":"8649:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5870,"nodeType":"ArrayTypeName","src":"8649:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8639:42:20"},"returnParameters":{"id":5875,"nodeType":"ParameterList","parameters":[],"src":"8706:0:20"},"scope":6486,"src":"8610:795:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6036,"nodeType":"Block","src":"9636:816:20","statements":[{"assignments":[5963],"declarations":[{"constant":false,"id":5963,"mutability":"mutable","name":"tLen","nameLocation":"9654:4:20","nodeType":"VariableDeclaration","scope":6036,"src":"9646:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"9646:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5966,"initialValue":{"expression":{"id":5964,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"9661:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9661:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9646:29:20"},{"body":{"id":6030,"nodeType":"Block","src":"9713:685:20","statements":[{"condition":{"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9731:31:20","subExpression":{"arguments":[{"baseExpression":{"id":5974,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"9751:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5976,"indexExpression":{"id":5975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"9759:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9751:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5973,"name":"isWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"9732:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9732:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5984,"nodeType":"IfStatement","src":"9727:88:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5979,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"9787:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TokenNotWhitelisted","nodeType":"MemberAccess","referencedDeclaration":9918,"src":"9787:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9787:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5983,"nodeType":"RevertStatement","src":"9780:35:20"}},{"assignments":[5986],"declarations":[{"constant":false,"id":5986,"mutability":"mutable","name":"index","nameLocation":"9971:5:20","nodeType":"VariableDeclaration","scope":6030,"src":"9963:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"9963:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5992,"initialValue":{"baseExpression":{"id":5987,"name":"indexOfWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"9979:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5991,"indexExpression":{"baseExpression":{"id":5988,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"10003:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5990,"indexExpression":{"id":5989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"10011:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10003:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9979:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9963:51:20"},{"assignments":[5994],"declarations":[{"constant":false,"id":5994,"mutability":"mutable","name":"tail","nameLocation":"10036:4:20","nodeType":"VariableDeclaration","scope":6030,"src":"10028:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5993,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6001,"initialValue":{"baseExpression":{"id":5995,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"10043:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6000,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5996,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"10082:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10082:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10113:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10082:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10043:85:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10028:100:20"},{"expression":{"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6002,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"10143:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6004,"indexExpression":{"id":6003,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"10165:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10143:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6005,"name":"tail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"10174:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10143:35:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6007,"nodeType":"ExpressionStatement","src":"10143:35:20"},{"expression":{"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6008,"name":"indexOfWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"10192:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6010,"indexExpression":{"id":6009,"name":"tail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"10216:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10192:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6011,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"10224:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10192:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6013,"nodeType":"ExpressionStatement","src":"10192:37:20"},{"expression":{"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10244:42:20","subExpression":{"baseExpression":{"id":6014,"name":"indexOfWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"10251:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6018,"indexExpression":{"baseExpression":{"id":6015,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"10275:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6017,"indexExpression":{"id":6016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"10283:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10275:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10251:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6020,"nodeType":"ExpressionStatement","src":"10244:42:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6021,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"10300:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"10300:25:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10300:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6025,"nodeType":"ExpressionStatement","src":"10300:27:20"},{"id":6029,"nodeType":"UncheckedBlock","src":"10342:46:20","statements":[{"expression":{"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10370:3:20","subExpression":{"id":6026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"10372:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6028,"nodeType":"ExpressionStatement","src":"10370:3:20"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"9701:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5971,"name":"tLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"9705:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9701:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6031,"initializationExpression":{"assignments":[5968],"declarations":[{"constant":false,"id":5968,"mutability":"mutable","name":"i","nameLocation":"9698:1:20","nodeType":"VariableDeclaration","scope":6031,"src":"9690:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5969,"nodeType":"VariableDeclarationStatement","src":"9690:9:20"},"nodeType":"ForStatement","src":"9685:713:20"},{"eventCall":{"arguments":[{"id":6033,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"10437:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":6032,"name":"RemoveWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10413:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10413:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6035,"nodeType":"EmitStatement","src":"10408:37:20"}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"9411:121:20","text":"@notice Remove whitelisted tokens\n@param  _tokens  address[]  Tokens to remove from whitelist"},"functionSelector":"bcec454f","id":6037,"implemented":true,"kind":"function","modifiers":[{"id":5960,"kind":"modifierInvocation","modifierName":{"id":5959,"name":"onlyAuthorized","nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"9621:14:20"},"nodeType":"ModifierInvocation","src":"9621:14:20"}],"name":"removeWhitelistedTokens","nameLocation":"9546:23:20","nodeType":"FunctionDefinition","parameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"_tokens","nameLocation":"9598:7:20","nodeType":"VariableDeclaration","scope":6037,"src":"9579:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5955,"name":"address","nodeType":"ElementaryTypeName","src":"9579:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5956,"nodeType":"ArrayTypeName","src":"9579:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9569:42:20"},"returnParameters":{"id":5961,"nodeType":"ParameterList","parameters":[],"src":"9636:0:20"},"scope":6486,"src":"9537:915:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6112,"nodeType":"Block","src":"10686:540:20","statements":[{"assignments":[6048],"declarations":[{"constant":false,"id":6048,"mutability":"mutable","name":"vLen","nameLocation":"10704:4:20","nodeType":"VariableDeclaration","scope":6112,"src":"10696:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6047,"name":"uint256","nodeType":"ElementaryTypeName","src":"10696:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6051,"initialValue":{"expression":{"id":6049,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"10711:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10711:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10696:29:20"},{"body":{"id":6106,"nodeType":"Block","src":"10763:412:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6058,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"10781:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6060,"indexExpression":{"id":6059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"10789:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10781:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10803:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10795:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6061,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:20","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10795:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10781:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6071,"nodeType":"IfStatement","src":"10777:60:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6066,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"10814:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"10814:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10814:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6070,"nodeType":"RevertStatement","src":"10807:30:20"}},{"condition":{"arguments":[{"baseExpression":{"id":6073,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"10874:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6075,"indexExpression":{"id":6074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"10882:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10874:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6072,"name":"isBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"10855:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10855:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6082,"nodeType":"IfStatement","src":"10851:84:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6077,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"10910:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"VoterBlacklisted","nodeType":"MemberAccess","referencedDeclaration":9921,"src":"10910:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10910:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6081,"nodeType":"RevertStatement","src":"10903:32:20"}},{"expression":{"arguments":[{"baseExpression":{"id":6086,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"10977:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6088,"indexExpression":{"id":6087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"10985:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10977:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6083,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"10950:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10950:26:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10950:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6090,"nodeType":"ExpressionStatement","src":"10950:38:20"},{"expression":{"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6091,"name":"indexOfBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"11002:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6095,"indexExpression":{"baseExpression":{"id":6092,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"11026:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6094,"indexExpression":{"id":6093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"11034:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11026:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11002:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6096,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"11056:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11056:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11103:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11056:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11002:102:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6101,"nodeType":"ExpressionStatement","src":"11002:102:20"},{"id":6105,"nodeType":"UncheckedBlock","src":"11119:46:20","statements":[{"expression":{"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11147:3:20","subExpression":{"id":6102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"11149:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6104,"nodeType":"ExpressionStatement","src":"11147:3:20"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"10751:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6056,"name":"vLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"10755:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10751:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6107,"initializationExpression":{"assignments":[6053],"declarations":[{"constant":false,"id":6053,"mutability":"mutable","name":"i","nameLocation":"10748:1:20","nodeType":"VariableDeclaration","scope":6107,"src":"10740:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"10740:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6054,"nodeType":"VariableDeclarationStatement","src":"10740:9:20"},"nodeType":"ForStatement","src":"10735:440:20"},{"eventCall":{"arguments":[{"id":6109,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"11211:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":6108,"name":"AddBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"11190:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11190:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6111,"nodeType":"EmitStatement","src":"11185:34:20"}]},"documentation":{"id":6038,"nodeType":"StructuredDocumentation","src":"10458:113:20","text":"@notice Add blacklisted voters\n@param  _voters  address[]  Voters to add to blacklist"},"functionSelector":"114e6e73","id":6113,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6044,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"10666:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6045,"kind":"modifierInvocation","modifierName":{"id":6043,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"10657:8:20"},"nodeType":"ModifierInvocation","src":"10657:28:20"}],"name":"addBlacklistedVoters","nameLocation":"10585:20:20","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"_voters","nameLocation":"10634:7:20","nodeType":"VariableDeclaration","scope":6113,"src":"10615:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6039,"name":"address","nodeType":"ElementaryTypeName","src":"10615:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6040,"nodeType":"ArrayTypeName","src":"10615:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10605:42:20"},"returnParameters":{"id":6046,"nodeType":"ParameterList","parameters":[],"src":"10686:0:20"},"scope":6486,"src":"10576:650:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6197,"nodeType":"Block","src":"11471:816:20","statements":[{"assignments":[6124],"declarations":[{"constant":false,"id":6124,"mutability":"mutable","name":"vLen","nameLocation":"11489:4:20","nodeType":"VariableDeclaration","scope":6197,"src":"11481:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11481:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6127,"initialValue":{"expression":{"id":6125,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"11496:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11496:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11481:29:20"},{"body":{"id":6191,"nodeType":"Block","src":"11548:685:20","statements":[{"condition":{"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11566:31:20","subExpression":{"arguments":[{"baseExpression":{"id":6135,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"11586:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6137,"indexExpression":{"id":6136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"11594:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11586:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6134,"name":"isBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"11567:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11567:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6145,"nodeType":"IfStatement","src":"11562:88:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6140,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"11622:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"VoterNotBlacklisted","nodeType":"MemberAccess","referencedDeclaration":9924,"src":"11622:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11622:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6144,"nodeType":"RevertStatement","src":"11615:35:20"}},{"assignments":[6147],"declarations":[{"constant":false,"id":6147,"mutability":"mutable","name":"index","nameLocation":"11806:5:20","nodeType":"VariableDeclaration","scope":6191,"src":"11798:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"11798:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6153,"initialValue":{"baseExpression":{"id":6148,"name":"indexOfBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"11814:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6152,"indexExpression":{"baseExpression":{"id":6149,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"11838:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6151,"indexExpression":{"id":6150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"11846:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11838:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11814:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11798:51:20"},{"assignments":[6155],"declarations":[{"constant":false,"id":6155,"mutability":"mutable","name":"tail","nameLocation":"11871:4:20","nodeType":"VariableDeclaration","scope":6191,"src":"11863:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6154,"name":"address","nodeType":"ElementaryTypeName","src":"11863:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6162,"initialValue":{"baseExpression":{"id":6156,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"11878:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6161,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6157,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"11917:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11917:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11948:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11917:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11878:85:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11863:100:20"},{"expression":{"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6163,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"11978:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6165,"indexExpression":{"id":6164,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"12000:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11978:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6166,"name":"tail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"12009:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11978:35:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6168,"nodeType":"ExpressionStatement","src":"11978:35:20"},{"expression":{"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6169,"name":"indexOfBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"12027:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6171,"indexExpression":{"id":6170,"name":"tail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"12051:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12027:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6172,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"12059:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12027:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6174,"nodeType":"ExpressionStatement","src":"12027:37:20"},{"expression":{"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12079:42:20","subExpression":{"baseExpression":{"id":6175,"name":"indexOfBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"12086:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6179,"indexExpression":{"baseExpression":{"id":6176,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"12110:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6178,"indexExpression":{"id":6177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"12118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12110:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12086:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6181,"nodeType":"ExpressionStatement","src":"12079:42:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6182,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"12135:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"12135:25:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12135:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6186,"nodeType":"ExpressionStatement","src":"12135:27:20"},{"id":6190,"nodeType":"UncheckedBlock","src":"12177:46:20","statements":[{"expression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12205:3:20","subExpression":{"id":6187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"12207:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6189,"nodeType":"ExpressionStatement","src":"12205:3:20"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"11536:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6132,"name":"vLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"11540:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11536:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"initializationExpression":{"assignments":[6129],"declarations":[{"constant":false,"id":6129,"mutability":"mutable","name":"i","nameLocation":"11533:1:20","nodeType":"VariableDeclaration","scope":6192,"src":"11525:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6128,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6130,"nodeType":"VariableDeclarationStatement","src":"11525:9:20"},"nodeType":"ForStatement","src":"11520:713:20"},{"eventCall":{"arguments":[{"id":6194,"name":"_voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"12272:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":6193,"name":"RemoveBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"12248:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12248:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6196,"nodeType":"EmitStatement","src":"12243:37:20"}]},"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"11232:121:20","text":"@notice Remove blacklisted voters\n@param  _voters  address[]  Voters to remove from blacklist"},"functionSelector":"42a83551","id":6198,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6120,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"11451:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6121,"kind":"modifierInvocation","modifierName":{"id":6119,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"11442:8:20"},"nodeType":"ModifierInvocation","src":"11442:28:20"}],"name":"removeBlacklistedVoters","nameLocation":"11367:23:20","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"_voters","nameLocation":"11419:7:20","nodeType":"VariableDeclaration","scope":6198,"src":"11400:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6115,"name":"address","nodeType":"ElementaryTypeName","src":"11400:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6116,"nodeType":"ArrayTypeName","src":"11400:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11390:42:20"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[],"src":"11471:0:20"},"scope":6486,"src":"11358:929:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6224,"nodeType":"Block","src":"12880:188:20","statements":[{"expression":{"arguments":[{"id":6215,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"12917:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6216,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"12940:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6217,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"12960:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6218,"name":"_maxTokensPerVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"12981:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6219,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"13012:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13034:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13049:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":6214,"name":"_depositBribe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"12890:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,address,uint256,uint256,uint256,uint256,bytes memory)"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12890:171:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6223,"nodeType":"ExpressionStatement","src":"12890:171:20"}]},"documentation":{"id":6199,"nodeType":"StructuredDocumentation","src":"12293:395:20","text":"@notice Deposit bribe for a proposal (ERC20 tokens only)\n@param  _proposal          bytes32  Proposal\n@param  _token             address  Token\n@param  _amount            uint256  Token amount\n@param  _maxTokensPerVote  uint256  Max amount of token per vote\n@param  _periods           uint256  Number of periods the bribe will be valid"},"functionSelector":"99702270","id":6225,"implemented":true,"kind":"function","modifiers":[{"id":6212,"kind":"modifierInvocation","modifierName":{"id":6211,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"12867:12:20"},"nodeType":"ModifierInvocation","src":"12867:12:20"}],"name":"depositBribe","nameLocation":"12702:12:20","nodeType":"FunctionDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"_proposal","nameLocation":"12732:9:20","nodeType":"VariableDeclaration","scope":6225,"src":"12724:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12724:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6203,"mutability":"mutable","name":"_token","nameLocation":"12759:6:20","nodeType":"VariableDeclaration","scope":6225,"src":"12751:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6202,"name":"address","nodeType":"ElementaryTypeName","src":"12751:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6205,"mutability":"mutable","name":"_amount","nameLocation":"12783:7:20","nodeType":"VariableDeclaration","scope":6225,"src":"12775:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12775:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6207,"mutability":"mutable","name":"_maxTokensPerVote","nameLocation":"12808:17:20","nodeType":"VariableDeclaration","scope":6225,"src":"12800:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6206,"name":"uint256","nodeType":"ElementaryTypeName","src":"12800:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6209,"mutability":"mutable","name":"_periods","nameLocation":"12843:8:20","nodeType":"VariableDeclaration","scope":6225,"src":"12835:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12835:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12714:143:20"},"returnParameters":{"id":6213,"nodeType":"ParameterList","parameters":[],"src":"12880:0:20"},"scope":6486,"src":"12693:375:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6255,"nodeType":"Block","src":"13885:210:20","statements":[{"expression":{"arguments":[{"id":6246,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"13922:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6247,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"13945:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6248,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"13965:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6249,"name":"_maxTokensPerVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"13986:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6250,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"14017:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6251,"name":"_permitDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"14039:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6252,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"14068:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6245,"name":"_depositBribe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"13895:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,address,uint256,uint256,uint256,uint256,bytes memory)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:193:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6254,"nodeType":"ExpressionStatement","src":"13895:193:20"}]},"documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"13074:543:20","text":"@notice Deposit bribe for a proposal (ERC20 tokens only) using permit\n@param  _proposal          bytes32  Proposal\n@param  _token             address  Token\n@param  _amount            uint256  Token amount\n@param  _maxTokensPerVote  uint256  Max amount of token per vote\n@param  _periods           uint256  Number of periods the bribe will be valid\n@param  _permitDeadline    uint256  Deadline for permit signature\n@param  _signature         bytes    Permit signature"},"functionSelector":"8fef5891","id":6256,"implemented":true,"kind":"function","modifiers":[{"id":6243,"kind":"modifierInvocation","modifierName":{"id":6242,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"13872:12:20"},"nodeType":"ModifierInvocation","src":"13872:12:20"}],"name":"depositBribeWithPermit","nameLocation":"13631:22:20","nodeType":"FunctionDefinition","parameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"_proposal","nameLocation":"13671:9:20","nodeType":"VariableDeclaration","scope":6256,"src":"13663:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13663:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6230,"mutability":"mutable","name":"_token","nameLocation":"13698:6:20","nodeType":"VariableDeclaration","scope":6256,"src":"13690:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6229,"name":"address","nodeType":"ElementaryTypeName","src":"13690:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6232,"mutability":"mutable","name":"_amount","nameLocation":"13722:7:20","nodeType":"VariableDeclaration","scope":6256,"src":"13714:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"13714:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6234,"mutability":"mutable","name":"_maxTokensPerVote","nameLocation":"13747:17:20","nodeType":"VariableDeclaration","scope":6256,"src":"13739:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"13739:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6236,"mutability":"mutable","name":"_periods","nameLocation":"13782:8:20","nodeType":"VariableDeclaration","scope":6256,"src":"13774:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"13774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6238,"mutability":"mutable","name":"_permitDeadline","nameLocation":"13808:15:20","nodeType":"VariableDeclaration","scope":6256,"src":"13800:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6237,"name":"uint256","nodeType":"ElementaryTypeName","src":"13800:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6240,"mutability":"mutable","name":"_signature","nameLocation":"13846:10:20","nodeType":"VariableDeclaration","scope":6256,"src":"13833:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6239,"name":"bytes","nodeType":"ElementaryTypeName","src":"13833:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13653:209:20"},"returnParameters":{"id":6244,"nodeType":"ParameterList","parameters":[],"src":"13885:0:20"},"scope":6486,"src":"13622:473:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6265,"nodeType":"Block","src":"14263:45:20","statements":[{"expression":{"id":6263,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"14280:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":6262,"id":6264,"nodeType":"Return","src":"14273:28:20"}]},"documentation":{"id":6257,"nodeType":"StructuredDocumentation","src":"14101:84:20","text":"@notice Return the list of currently whitelisted token addresses"},"functionSelector":"e26f7900","id":6266,"implemented":true,"kind":"function","modifiers":[],"name":"getWhitelistedTokens","nameLocation":"14199:20:20","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[],"src":"14219:2:20"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6266,"src":"14245:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6259,"name":"address","nodeType":"ElementaryTypeName","src":"14245:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6260,"nodeType":"ArrayTypeName","src":"14245:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14244:18:20"},"scope":6486,"src":"14190:118:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6275,"nodeType":"Block","src":"14476:45:20","statements":[{"expression":{"id":6273,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"14493:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":6272,"id":6274,"nodeType":"Return","src":"14486:28:20"}]},"documentation":{"id":6267,"nodeType":"StructuredDocumentation","src":"14314:84:20","text":"@notice Return the list of currently blacklisted voter addresses"},"functionSelector":"b0b38baa","id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"getBlacklistedVoters","nameLocation":"14412:20:20","nodeType":"FunctionDefinition","parameters":{"id":6268,"nodeType":"ParameterList","parameters":[],"src":"14432:2:20"},"returnParameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6276,"src":"14458:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6269,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6270,"nodeType":"ArrayTypeName","src":"14458:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14457:18:20"},"scope":6486,"src":"14403:118:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6312,"nodeType":"Block","src":"15039:310:20","statements":[{"expression":{"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6290,"name":"bribeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"15050:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6291,"name":"bribeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"15062:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6292,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"15049:25:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":6302,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15197:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BribeMarket_$6486","typeString":"contract BribeMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeMarket_$6486","typeString":"contract BribeMarket"}],"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15189:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6300,"name":"address","nodeType":"ElementaryTypeName","src":"15189:7:20","typeDescriptions":{}}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15189:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6304,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"15224:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6305,"name":"_proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"15255:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6306,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"15294:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6298,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15151:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"15151:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15151:167:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6297,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15124:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15124:208:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":6294,"name":"BRIBE_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"15089:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6293,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"15077:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15077:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBribe","nodeType":"MemberAccess","referencedDeclaration":9652,"src":"15077:33:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$_t_uint256_$","typeString":"function (bytes32) view external returns (address,uint256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15077:265:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"src":"15049:293:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6311,"nodeType":"ExpressionStatement","src":"15049:293:20"}]},"documentation":{"id":6277,"nodeType":"StructuredDocumentation","src":"14527:333:20","text":"@notice Get bribe from BribeVault\n@param  _proposal          bytes32  Proposal\n@param  _proposalDeadline  uint256  Proposal deadline\n@param  _token             address  Token\n@return bribeToken         address  Token address\n@return bribeAmount        address  Token amount"},"functionSelector":"f7e6b46b","id":6313,"implemented":true,"kind":"function","modifiers":[],"name":"getBribe","nameLocation":"14874:8:20","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"_proposal","nameLocation":"14900:9:20","nodeType":"VariableDeclaration","scope":6313,"src":"14892:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14892:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6281,"mutability":"mutable","name":"_proposalDeadline","nameLocation":"14927:17:20","nodeType":"VariableDeclaration","scope":6313,"src":"14919:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6280,"name":"uint256","nodeType":"ElementaryTypeName","src":"14919:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6283,"mutability":"mutable","name":"_token","nameLocation":"14962:6:20","nodeType":"VariableDeclaration","scope":6313,"src":"14954:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6282,"name":"address","nodeType":"ElementaryTypeName","src":"14954:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14882:92:20"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"bribeToken","nameLocation":"15006:10:20","nodeType":"VariableDeclaration","scope":6313,"src":"14998:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6285,"name":"address","nodeType":"ElementaryTypeName","src":"14998:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6288,"mutability":"mutable","name":"bribeAmount","nameLocation":"15026:11:20","nodeType":"VariableDeclaration","scope":6313,"src":"15018:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15018:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14997:41:20"},"scope":6486,"src":"14865:484:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6341,"nodeType":"Block","src":"15568:208:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6321,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"15582:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15582:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15614:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15582:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6328,"nodeType":"IfStatement","src":"15578:76:20","trueBody":{"id":6327,"nodeType":"Block","src":"15617:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15638:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6320,"id":6326,"nodeType":"Return","src":"15631:12:20"}]}},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6329,"name":"indexOfWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"15683:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6331,"indexExpression":{"id":6330,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"15707:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15683:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15683:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6334,"name":"_allWhitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"15735:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6336,"indexExpression":{"hexValue":"30","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15757:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15735:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6337,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"15763:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15735:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15683:86:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6320,"id":6340,"nodeType":"Return","src":"15664:105:20"}]},"documentation":{"id":6314,"nodeType":"StructuredDocumentation","src":"15355:137:20","text":"@notice Return whether the specified token is whitelisted\n@param  _token  address Token address to be checked"},"functionSelector":"ab37f486","id":6342,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelistedToken","nameLocation":"15506:18:20","nodeType":"FunctionDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"_token","nameLocation":"15533:6:20","nodeType":"VariableDeclaration","scope":6342,"src":"15525:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6315,"name":"address","nodeType":"ElementaryTypeName","src":"15525:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15524:16:20"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6342,"src":"15562:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6318,"name":"bool","nodeType":"ElementaryTypeName","src":"15562:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15561:6:20"},"scope":6486,"src":"15497:279:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6370,"nodeType":"Block","src":"15997:208:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6350,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"16011:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16011:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16043:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16011:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6357,"nodeType":"IfStatement","src":"16007:76:20","trueBody":{"id":6356,"nodeType":"Block","src":"16046:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16067:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6349,"id":6355,"nodeType":"Return","src":"16060:12:20"}]}},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6358,"name":"indexOfBlacklistedVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"16112:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6360,"indexExpression":{"id":6359,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"16136:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16112:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16147:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16112:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6363,"name":"_allBlacklistedVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"16164:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6365,"indexExpression":{"hexValue":"30","id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16186:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16164:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6366,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"16192:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16164:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16112:86:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6349,"id":6369,"nodeType":"Return","src":"16093:105:20"}]},"documentation":{"id":6343,"nodeType":"StructuredDocumentation","src":"15782:139:20","text":"@notice Return whether the specified address is blacklisted\n@param  _voter  address Voter address to be checked"},"functionSelector":"2fa4d218","id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"isBlacklistedVoter","nameLocation":"15935:18:20","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"_voter","nameLocation":"15962:6:20","nodeType":"VariableDeclaration","scope":6371,"src":"15954:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6344,"name":"address","nodeType":"ElementaryTypeName","src":"15954:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15953:16:20"},"returnParameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6371,"src":"15991:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6347,"name":"bool","nodeType":"ElementaryTypeName","src":"15991:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15990:6:20"},"scope":6486,"src":"15926:279:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6469,"nodeType":"Block","src":"17019:974:20","statements":[{"assignments":[6390],"declarations":[{"constant":false,"id":6390,"mutability":"mutable","name":"proposalDeadline","nameLocation":"17037:16:20","nodeType":"VariableDeclaration","scope":6469,"src":"17029:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6389,"name":"uint256","nodeType":"ElementaryTypeName","src":"17029:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6394,"initialValue":{"baseExpression":{"id":6391,"name":"proposalDeadlines","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"17056:17:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6393,"indexExpression":{"id":6392,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"17074:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17056:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17029:55:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"17098:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6396,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17117:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"17117:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17098:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"17094:70:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6399,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"17141:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DeadlinePassed","nodeType":"MemberAccess","referencedDeclaration":9927,"src":"17141:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17141:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6403,"nodeType":"RevertStatement","src":"17134:30:20"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"17178:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17190:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17178:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6408,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"17195:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6409,"name":"maxPeriods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"17206:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17195:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17178:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6417,"nodeType":"IfStatement","src":"17174:85:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6412,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"17237:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidPeriod","nodeType":"MemberAccess","referencedDeclaration":9930,"src":"17237:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17237:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6416,"nodeType":"RevertStatement","src":"17230:29:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"17273:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17291:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17283:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6419,"name":"address","nodeType":"ElementaryTypeName","src":"17283:7:20","typeDescriptions":{}}},"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17283:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17273:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6429,"nodeType":"IfStatement","src":"17269:56:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6424,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"17302:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"17302:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17302:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6428,"nodeType":"RevertStatement","src":"17295:30:20"}},{"condition":{"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17339:27:20","subExpression":{"arguments":[{"id":6431,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"17359:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6430,"name":"isWhitelistedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"17340:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17340:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6439,"nodeType":"IfStatement","src":"17335:68:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6434,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"17375:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TokenNotWhitelisted","nodeType":"MemberAccess","referencedDeclaration":9918,"src":"17375:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17375:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6438,"nodeType":"RevertStatement","src":"17368:35:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6440,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"17417:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17428:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17417:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"nodeType":"IfStatement","src":"17413:47:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6443,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"17438:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAmount","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"17438:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17438:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6447,"nodeType":"RevertStatement","src":"17431:29:20"}},{"expression":{"arguments":[{"arguments":[{"id":6455,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"17576:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6456,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"17610:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17642:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"17642:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6459,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"17678:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6460,"name":"_maxTokensPerVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"17721:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6461,"name":"_periods","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"17765:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6462,"name":"periodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"17807:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6463,"name":"proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"17857:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6464,"name":"_permitDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"17907:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6465,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"17951:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6453,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"17522:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DepositBribeParams","nodeType":"MemberAccess","referencedDeclaration":9836,"src":"17522:25:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DepositBribeParams_$9836_storage_ptr_$","typeString":"type(struct Common.DepositBribeParams storage pointer)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["proposal","token","briber","amount","maxTokensPerVote","periods","periodDuration","proposalDeadline","permitDeadline","signature"],"nodeType":"FunctionCall","src":"17522:454:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_memory_ptr","typeString":"struct Common.DepositBribeParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_memory_ptr","typeString":"struct Common.DepositBribeParams memory"}],"expression":{"arguments":[{"id":6450,"name":"BRIBE_VAULT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"17483:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6449,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"17471:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17471:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositBribe","nodeType":"MemberAccess","referencedDeclaration":9642,"src":"17471:37:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_DepositBribeParams_$9836_memory_ptr_$returns$__$","typeString":"function (struct Common.DepositBribeParams memory) external"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17471:515:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6468,"nodeType":"ExpressionStatement","src":"17471:515:20"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"16211:562:20","text":"@notice Deposit bribe for a proposal (ERC20 tokens only) with optional permit parameters\n@param  _proposal          bytes32  Proposal\n@param  _token             address  Token\n@param  _amount            uint256  Token amount\n@param  _maxTokensPerVote  uint256  Max amount of token per vote\n@param  _periods           uint256  Number of periods the bribe will be valid\n@param  _permitDeadline    uint256  Deadline for permit signature\n@param  _signature         bytes    Permit signature"},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"_depositBribe","nameLocation":"16787:13:20","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"_proposal","nameLocation":"16818:9:20","nodeType":"VariableDeclaration","scope":6470,"src":"16810:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16810:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6376,"mutability":"mutable","name":"_token","nameLocation":"16845:6:20","nodeType":"VariableDeclaration","scope":6470,"src":"16837:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6375,"name":"address","nodeType":"ElementaryTypeName","src":"16837:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6378,"mutability":"mutable","name":"_amount","nameLocation":"16869:7:20","nodeType":"VariableDeclaration","scope":6470,"src":"16861:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"16861:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6380,"mutability":"mutable","name":"_maxTokensPerVote","nameLocation":"16894:17:20","nodeType":"VariableDeclaration","scope":6470,"src":"16886:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6379,"name":"uint256","nodeType":"ElementaryTypeName","src":"16886:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6382,"mutability":"mutable","name":"_periods","nameLocation":"16929:8:20","nodeType":"VariableDeclaration","scope":6470,"src":"16921:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"16921:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6384,"mutability":"mutable","name":"_permitDeadline","nameLocation":"16955:15:20","nodeType":"VariableDeclaration","scope":6470,"src":"16947:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6383,"name":"uint256","nodeType":"ElementaryTypeName","src":"16947:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6386,"mutability":"mutable","name":"_signature","nameLocation":"16993:10:20","nodeType":"VariableDeclaration","scope":6470,"src":"16980:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6385,"name":"bytes","nodeType":"ElementaryTypeName","src":"16980:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16800:209:20"},"returnParameters":{"id":6388,"nodeType":"ParameterList","parameters":[],"src":"17019:0:20"},"scope":6486,"src":"16778:1215:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6484,"nodeType":"Block","src":"18221:57:20","statements":[{"expression":{"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6478,"name":"proposalDeadlines","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"18231:17:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6480,"indexExpression":{"id":6479,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"18249:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18231:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6481,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"18262:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18231:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6483,"nodeType":"ExpressionStatement","src":"18231:40:20"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"17999:148:20","text":"@notice Set a single proposal\n@param  _proposal  bytes32  Proposal\n@param  _deadline  uint256  Proposal deadline"},"id":6485,"implemented":true,"kind":"function","modifiers":[],"name":"_setProposal","nameLocation":"18161:12:20","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"_proposal","nameLocation":"18182:9:20","nodeType":"VariableDeclaration","scope":6485,"src":"18174:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18174:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"_deadline","nameLocation":"18201:9:20","nodeType":"VariableDeclaration","scope":6485,"src":"18193:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6474,"name":"uint256","nodeType":"ElementaryTypeName","src":"18193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18173:38:20"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[],"src":"18221:0:20"},"scope":6486,"src":"18152:126:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6487,"src":"376:17904:20","usedErrors":[9879,9882,9888,9891,9894,9897,9900,9903,9906,9909,9912,9915,9918,9921,9924,9927,9930,9933]}],"src":"32:18249:20"},"id":20},"contracts/BribeVault.sol":{"ast":{"absolutePath":"contracts/BribeVault.sol","exportedSymbols":{"AccessControl":[315],"BribeVault":[7529],"Common":[9874],"Errors":[10009],"IERC20":[915],"IPermit2":[9727],"IRewardDistributor":[9754],"SafeCast":[4887],"SafeERC20":[1327]},"id":7530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6488,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":316,"src":"57:79:21","symbolAliases":[{"foreign":{"id":6489,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"65:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControl_$315_$","typeString":"type(contract AccessControl)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":916,"src":"137:70:21","symbolAliases":[{"foreign":{"id":6491,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"145:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":1328,"src":"208:82:21","symbolAliases":[{"foreign":{"id":6493,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"216:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1327_$","typeString":"type(library SafeERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":6496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":4888,"src":"291:73:21","symbolAliases":[{"foreign":{"id":6495,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"299:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4887_$","typeString":"type(library SafeCast)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPermit2.sol","file":"./interfaces/IPermit2.sol","id":6498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":9728,"src":"365:51:21","symbolAliases":[{"foreign":{"id":6497,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"373:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$9727_$","typeString":"type(contract IPermit2)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardDistributor.sol","file":"./interfaces/IRewardDistributor.sol","id":6500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":9755,"src":"417:71:21","symbolAliases":[{"foreign":{"id":6499,"name":"IRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9754,"src":"425:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardDistributor_$9754_$","typeString":"type(contract IRewardDistributor)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Common.sol","file":"./libraries/Common.sol","id":6502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":9875,"src":"489:46:21","symbolAliases":[{"foreign":{"id":6501,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"497:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":6504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7530,"sourceUnit":10010,"src":"536:46:21","symbolAliases":[{"foreign":{"id":6503,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"544:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6505,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"607:13:21"},"id":6506,"nodeType":"InheritanceSpecifier","src":"607:13:21"}],"canonicalName":"BribeVault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7529,"linearizedBaseContracts":[7529,315,2468,2480,388,1687],"name":"BribeVault","nameLocation":"593:10:21","nodeType":"ContractDefinition","nodes":[{"id":6510,"libraryName":{"id":6507,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"633:9:21"},"nodeType":"UsingForDirective","src":"627:27:21","typeName":{"id":6509,"nodeType":"UserDefinedTypeName","pathNode":{"id":6508,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"647:6:21"},"referencedDeclaration":915,"src":"647:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}},{"id":6513,"libraryName":{"id":6511,"name":"SafeCast","nodeType":"IdentifierPath","referencedDeclaration":4887,"src":"665:8:21"},"nodeType":"UsingForDirective","src":"659:27:21","typeName":{"id":6512,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"BribeVault.Bribe","id":6518,"members":[{"constant":false,"id":6515,"mutability":"mutable","name":"token","nameLocation":"723:5:21","nodeType":"VariableDeclaration","scope":6518,"src":"715:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6514,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6517,"mutability":"mutable","name":"amount","nameLocation":"746:6:21","nodeType":"VariableDeclaration","scope":6518,"src":"738:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6516,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Bribe","nameLocation":"699:5:21","nodeType":"StructDefinition","scope":7529,"src":"692:67:21","visibility":"public"},{"canonicalName":"BribeVault.Transfer","id":6525,"members":[{"constant":false,"id":6520,"mutability":"mutable","name":"feeAmount","nameLocation":"799:9:21","nodeType":"VariableDeclaration","scope":6525,"src":"791:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6522,"mutability":"mutable","name":"distributorAmountTransferred","nameLocation":"826:28:21","nodeType":"VariableDeclaration","scope":6525,"src":"818:36:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6521,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"distributorAmountReceived","nameLocation":"872:25:21","nodeType":"VariableDeclaration","scope":6525,"src":"864:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Transfer","nameLocation":"772:8:21","nodeType":"StructDefinition","scope":7529,"src":"765:139:21","visibility":"public"},{"constant":true,"functionSelector":"6afdd850","id":6531,"mutability":"constant","name":"PERMIT2","nameLocation":"935:7:21","nodeType":"VariableDeclaration","scope":7529,"src":"910:95:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPermit2_$9727","typeString":"contract IPermit2"},"typeName":{"id":6527,"nodeType":"UserDefinedTypeName","pathNode":{"id":6526,"name":"IPermit2","nodeType":"IdentifierPath","referencedDeclaration":9727,"src":"910:8:21"},"referencedDeclaration":9727,"src":"910:8:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPermit2_$9727","typeString":"contract IPermit2"}},"value":{"arguments":[{"hexValue":"307830303030303030303030323244343733303330463131366444454539463642343361433738424133","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"962:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000022D473030F116dDEE9F6B43aC78BA3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6528,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"953:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$9727_$","typeString":"type(contract IPermit2)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"953:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPermit2_$9727","typeString":"contract IPermit2"}},"visibility":"public"},{"constant":true,"functionSelector":"9e93ad8e","id":6534,"mutability":"constant","name":"FEE_DIVISOR","nameLocation":"1035:11:21","nodeType":"VariableDeclaration","scope":7529,"src":"1011:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f3030305f303030","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1049:9:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},"visibility":"public"},{"constant":false,"functionSelector":"c2624e1e","id":6536,"mutability":"immutable","name":"FEE_MAX","nameLocation":"1089:7:21","nodeType":"VariableDeclaration","scope":7529,"src":"1064:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"a3b0b5a3","id":6541,"mutability":"constant","name":"DEPOSITOR_ROLE","nameLocation":"1126:14:21","nodeType":"VariableDeclaration","scope":7529,"src":"1102:68:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1102:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4445504f5349544f525f524f4c45","id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1153:16:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""},"value":"DEPOSITOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""}],"id":6538,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1143:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1143:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"ddca3f43","id":6543,"mutability":"mutable","name":"fee","nameLocation":"1192:3:21","nodeType":"VariableDeclaration","scope":7529,"src":"1177:18:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"46904840","id":6545,"mutability":"mutable","name":"feeRecipient","nameLocation":"1231:12:21","nodeType":"VariableDeclaration","scope":7529,"src":"1216:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6544,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bfe10928","id":6547,"mutability":"mutable","name":"distributor","nameLocation":"1285:11:21","nodeType":"VariableDeclaration","scope":7529,"src":"1270:26:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6546,"name":"address","nodeType":"ElementaryTypeName","src":"1270:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"edcdab77","id":6552,"mutability":"mutable","name":"bribes","nameLocation":"1507:6:21","nodeType":"VariableDeclaration","scope":7529,"src":"1474:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bribe_$6518_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Bribe)"},"typeName":{"id":6551,"keyType":{"id":6548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1482:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1474:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bribe_$6518_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Bribe)"},"valueType":{"id":6550,"nodeType":"UserDefinedTypeName","pathNode":{"id":6549,"name":"Bribe","nodeType":"IdentifierPath","referencedDeclaration":6518,"src":"1493:5:21"},"referencedDeclaration":6518,"src":"1493:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe"}}},"visibility":"public"},{"constant":false,"functionSelector":"28b16a3f","id":6557,"mutability":"mutable","name":"rewardToBribes","nameLocation":"1722:14:21","nodeType":"VariableDeclaration","scope":7529,"src":"1685:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[])"},"typeName":{"id":6556,"keyType":{"id":6553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1685:29:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[])"},"valueType":{"baseType":{"id":6554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1704:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6555,"nodeType":"ArrayTypeName","src":"1704:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"1da08b87","id":6562,"mutability":"mutable","name":"rewardTransfers","nameLocation":"1821:15:21","nodeType":"VariableDeclaration","scope":7529,"src":"1785:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$6525_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Transfer)"},"typeName":{"id":6561,"keyType":{"id":6558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1785:28:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$6525_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Transfer)"},"valueType":{"id":6560,"nodeType":"UserDefinedTypeName","pathNode":{"id":6559,"name":"Transfer","nodeType":"IdentifierPath","referencedDeclaration":6525,"src":"1804:8:21"},"referencedDeclaration":6525,"src":"1804:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer"}}},"visibility":"public"},{"constant":false,"functionSelector":"07cd2ffe","id":6566,"mutability":"mutable","name":"rewardForwarding","nameLocation":"1962:16:21","nodeType":"VariableDeclaration","scope":7529,"src":"1927:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":6565,"keyType":{"id":6563,"name":"address","nodeType":"ElementaryTypeName","src":"1935:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1927:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":6564,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"anonymous":false,"id":6570,"name":"SetFee","nameLocation":"1991:6:21","nodeType":"EventDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"indexed":false,"mutability":"mutable","name":"_fee","nameLocation":"2006:4:21","nodeType":"VariableDeclaration","scope":6570,"src":"1998:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1998:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1997:14:21"},"src":"1985:27:21"},{"anonymous":false,"id":6574,"name":"SetFeeRecipient","nameLocation":"2023:15:21","nodeType":"EventDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"indexed":false,"mutability":"mutable","name":"_feeRecipient","nameLocation":"2047:13:21","nodeType":"VariableDeclaration","scope":6574,"src":"2039:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6571,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2038:23:21"},"src":"2017:45:21"},{"anonymous":false,"id":6578,"name":"SetDistributor","nameLocation":"2073:14:21","nodeType":"EventDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"indexed":false,"mutability":"mutable","name":"_distributor","nameLocation":"2096:12:21","nodeType":"VariableDeclaration","scope":6578,"src":"2088:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6575,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2087:22:21"},"src":"2067:43:21"},{"anonymous":false,"id":6598,"name":"DepositBribe","nameLocation":"2121:12:21","nodeType":"EventDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"indexed":true,"mutability":"mutable","name":"market","nameLocation":"2159:6:21","nodeType":"VariableDeclaration","scope":6598,"src":"2143:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6579,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6582,"indexed":true,"mutability":"mutable","name":"proposal","nameLocation":"2191:8:21","nodeType":"VariableDeclaration","scope":6598,"src":"2175:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2175:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6584,"indexed":true,"mutability":"mutable","name":"deadline","nameLocation":"2225:8:21","nodeType":"VariableDeclaration","scope":6598,"src":"2209:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2209:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6586,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"2251:5:21","nodeType":"VariableDeclaration","scope":6598,"src":"2243:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6585,"name":"address","nodeType":"ElementaryTypeName","src":"2243:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6588,"indexed":false,"mutability":"mutable","name":"briber","nameLocation":"2274:6:21","nodeType":"VariableDeclaration","scope":6598,"src":"2266:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6587,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6590,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2298:6:21","nodeType":"VariableDeclaration","scope":6598,"src":"2290:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6592,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"2322:11:21","nodeType":"VariableDeclaration","scope":6598,"src":"2314:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6594,"indexed":false,"mutability":"mutable","name":"maxTokensPerVote","nameLocation":"2351:16:21","nodeType":"VariableDeclaration","scope":6598,"src":"2343:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6596,"indexed":false,"mutability":"mutable","name":"periodIndex","nameLocation":"2385:11:21","nodeType":"VariableDeclaration","scope":6598,"src":"2377:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2377:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2133:269:21"},"src":"2115:288:21"},{"anonymous":false,"id":6604,"name":"SetRewardForwarding","nameLocation":"2414:19:21","nodeType":"EventDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"2442:4:21","nodeType":"VariableDeclaration","scope":6604,"src":"2434:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6599,"name":"address","nodeType":"ElementaryTypeName","src":"2434:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6602,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"2456:2:21","nodeType":"VariableDeclaration","scope":6604,"src":"2448:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6601,"name":"address","nodeType":"ElementaryTypeName","src":"2448:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2433:26:21"},"src":"2408:52:21"},{"anonymous":false,"id":6614,"name":"TransferBribe","nameLocation":"2471:13:21","nodeType":"EventDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"indexed":true,"mutability":"mutable","name":"rewardIdentifier","nameLocation":"2510:16:21","nodeType":"VariableDeclaration","scope":6614,"src":"2494:32:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2494:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6608,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2552:5:21","nodeType":"VariableDeclaration","scope":6614,"src":"2536:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6607,"name":"address","nodeType":"ElementaryTypeName","src":"2536:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6610,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"2575:9:21","nodeType":"VariableDeclaration","scope":6614,"src":"2567:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6612,"indexed":false,"mutability":"mutable","name":"distributorAmount","nameLocation":"2602:17:21","nodeType":"VariableDeclaration","scope":6614,"src":"2594:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2594:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2484:141:21"},"src":"2465:161:21"},{"anonymous":false,"id":6622,"name":"EmergencyWithdrawal","nameLocation":"2637:19:21","nodeType":"EventDefinition","parameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2682:5:21","nodeType":"VariableDeclaration","scope":6622,"src":"2666:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6615,"name":"address","nodeType":"ElementaryTypeName","src":"2666:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6618,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2705:6:21","nodeType":"VariableDeclaration","scope":6622,"src":"2697:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2697:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6620,"indexed":false,"mutability":"mutable","name":"admin","nameLocation":"2729:5:21","nodeType":"VariableDeclaration","scope":6622,"src":"2721:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6619,"name":"address","nodeType":"ElementaryTypeName","src":"2721:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2656:84:21"},"src":"2631:110:21"},{"body":{"id":6700,"nodeType":"Block","src":"3106:503:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"_feeMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"3160:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6635,"name":"FEE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"3171:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3185:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3171:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3160:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"3156:61:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6639,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3195:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidMaxFee","nodeType":"MemberAccess","referencedDeclaration":9936,"src":"3195:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3195:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6643,"nodeType":"RevertStatement","src":"3188:29:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6645,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"3231:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6646,"name":"_feeMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"3238:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3231:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6653,"nodeType":"IfStatement","src":"3227:46:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6648,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidFee","nodeType":"MemberAccess","referencedDeclaration":9939,"src":"3254:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3254:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6652,"nodeType":"RevertStatement","src":"3247:26:21"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6654,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"3287:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3312:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3304:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6655,"name":"address","nodeType":"ElementaryTypeName","src":"3304:7:21","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3304:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3287:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6665,"nodeType":"IfStatement","src":"3283:68:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6660,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3323:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":9942,"src":"3323:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"RevertStatement","src":"3316:35:21"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6666,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"3365:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3389:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3381:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6667,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:21","typeDescriptions":{}}},"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3381:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3365:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6677,"nodeType":"IfStatement","src":"3361:66:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6672,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3400:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDistributor","nodeType":"MemberAccess","referencedDeclaration":9945,"src":"3400:25:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"RevertStatement","src":"3393:34:21"}},{"expression":{"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6678,"name":"FEE_MAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"3438:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6679,"name":"_feeMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"3448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3438:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6681,"nodeType":"ExpressionStatement","src":"3438:17:21"},{"expression":{"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6682,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"3465:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6683,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"3471:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3465:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6685,"nodeType":"ExpressionStatement","src":"3465:10:21"},{"expression":{"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6686,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"3485:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6687,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"3500:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3485:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6689,"nodeType":"ExpressionStatement","src":"3485:28:21"},{"expression":{"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6690,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"3523:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6691,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"3537:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3523:26:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6693,"nodeType":"ExpressionStatement","src":"3523:26:21"},{"expression":{"arguments":[{"id":6695,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3571:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3591:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3591:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6694,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3560:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3560:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6699,"nodeType":"ExpressionStatement","src":"3560:42:21"}]},"documentation":{"id":6623,"nodeType":"StructuredDocumentation","src":"2747:228:21","text":"@param  _fee           uint256  Fee\n@param  _feeMax        unt256   Maximum fee\n@param  _feeRecipient  address  Fee recipient\n@param  _distributor   address  Reward distributor address"},"id":6701,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"_fee","nameLocation":"3009:4:21","nodeType":"VariableDeclaration","scope":6701,"src":"3001:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6627,"mutability":"mutable","name":"_feeMax","nameLocation":"3031:7:21","nodeType":"VariableDeclaration","scope":6701,"src":"3023:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6629,"mutability":"mutable","name":"_feeRecipient","nameLocation":"3056:13:21","nodeType":"VariableDeclaration","scope":6701,"src":"3048:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6628,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6631,"mutability":"mutable","name":"_distributor","nameLocation":"3087:12:21","nodeType":"VariableDeclaration","scope":6701,"src":"3079:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6630,"name":"address","nodeType":"ElementaryTypeName","src":"3079:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2991:114:21"},"returnParameters":{"id":6633,"nodeType":"ParameterList","parameters":[],"src":"3106:0:21"},"scope":7529,"src":"2980:629:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6727,"nodeType":"Block","src":"3857:124:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"3871:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3892:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6711,"name":"address","nodeType":"ElementaryTypeName","src":"3884:7:21","typeDescriptions":{}}},"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3884:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3871:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6721,"nodeType":"IfStatement","src":"3867:59:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6716,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3903:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"3903:21:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3903:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"RevertStatement","src":"3896:30:21"}},{"expression":{"arguments":[{"id":6723,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"3948:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6724,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"3964:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6722,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3937:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3937:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6726,"nodeType":"ExpressionStatement","src":"3937:37:21"}]},"documentation":{"id":6702,"nodeType":"StructuredDocumentation","src":"3615:138:21","text":"@notice Grant the depositor role to an address\n@param  depositor  address  Address to grant the depositor role"},"functionSelector":"172becff","id":6728,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6707,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3837:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6708,"kind":"modifierInvocation","modifierName":{"id":6706,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"3828:8:21"},"nodeType":"ModifierInvocation","src":"3828:28:21"}],"name":"grantDepositorRole","nameLocation":"3767:18:21","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"depositor","nameLocation":"3803:9:21","nodeType":"VariableDeclaration","scope":6728,"src":"3795:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6703,"name":"address","nodeType":"ElementaryTypeName","src":"3795:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3785:33:21"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[],"src":"3857:0:21"},"scope":7529,"src":"3758:223:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6753,"nodeType":"Block","src":"4234:224:21","statements":[{"condition":{"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4337:35:21","subExpression":{"arguments":[{"id":6738,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"4346:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6739,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"4362:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6737,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"4338:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4338:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6747,"nodeType":"IfStatement","src":"4333:69:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6742,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4381:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotDepositor","nodeType":"MemberAccess","referencedDeclaration":9951,"src":"4381:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4381:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6746,"nodeType":"RevertStatement","src":"4374:28:21"}},{"expression":{"arguments":[{"id":6749,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"4425:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6750,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"4441:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6748,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4413:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4413:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6752,"nodeType":"ExpressionStatement","src":"4413:38:21"}]},"documentation":{"id":6729,"nodeType":"StructuredDocumentation","src":"3987:142:21","text":"@notice Revoke the depositor role from an address\n@param  depositor  address  Address to revoke the depositor role"},"functionSelector":"e8fa2948","id":6754,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6734,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4214:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6735,"kind":"modifierInvocation","modifierName":{"id":6733,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4205:8:21"},"nodeType":"ModifierInvocation","src":"4205:28:21"}],"name":"revokeDepositorRole","nameLocation":"4143:19:21","nodeType":"FunctionDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"depositor","nameLocation":"4180:9:21","nodeType":"VariableDeclaration","scope":6754,"src":"4172:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6730,"name":"address","nodeType":"ElementaryTypeName","src":"4172:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4162:33:21"},"returnParameters":{"id":6736,"nodeType":"ParameterList","parameters":[],"src":"4234:0:21"},"scope":7529,"src":"4134:324:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6780,"nodeType":"Block","src":"4637:112:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"4651:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6764,"name":"FEE_MAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"4658:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4651:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6771,"nodeType":"IfStatement","src":"4647:46:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6766,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidFee","nodeType":"MemberAccess","referencedDeclaration":9939,"src":"4674:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4674:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6770,"nodeType":"RevertStatement","src":"4667:26:21"}},{"expression":{"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6772,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"4704:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6773,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"4710:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6775,"nodeType":"ExpressionStatement","src":"4704:10:21"},{"eventCall":{"arguments":[{"id":6777,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"4737:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6776,"name":"SetFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"4730:6:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4730:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6779,"nodeType":"EmitStatement","src":"4725:17:21"}]},"documentation":{"id":6755,"nodeType":"StructuredDocumentation","src":"4464:100:21","text":"@notice Set the fee collected by the protocol\n@param  _fee  uint256  Fee"},"functionSelector":"69fe0e2d","id":6781,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6760,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4617:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6761,"kind":"modifierInvocation","modifierName":{"id":6759,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4608:8:21"},"nodeType":"ModifierInvocation","src":"4608:28:21"}],"name":"setFee","nameLocation":"4578:6:21","nodeType":"FunctionDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"_fee","nameLocation":"4593:4:21","nodeType":"VariableDeclaration","scope":6781,"src":"4585:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4584:14:21"},"returnParameters":{"id":6762,"nodeType":"ParameterList","parameters":[],"src":"4637:0:21"},"scope":7529,"src":"4569:180:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6810,"nodeType":"Block","src":"4997:170:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6790,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"5011:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5028:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6791,"name":"address","nodeType":"ElementaryTypeName","src":"5028:7:21","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5028:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5011:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6801,"nodeType":"IfStatement","src":"5007:68:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6796,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5047:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":9942,"src":"5047:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5047:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6800,"nodeType":"RevertStatement","src":"5040:35:21"}},{"expression":{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6802,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5086:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6803,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"5101:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5086:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6805,"nodeType":"ExpressionStatement","src":"5086:28:21"},{"eventCall":{"arguments":[{"id":6807,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"5146:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6806,"name":"SetFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"5130:15:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5130:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6809,"nodeType":"EmitStatement","src":"5125:35:21"}]},"documentation":{"id":6782,"nodeType":"StructuredDocumentation","src":"4755:137:21","text":"@notice Set the protocol address where fees will be transferred\n@param  _feeRecipient  address  Fee recipient"},"functionSelector":"e74b981b","id":6811,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6787,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4977:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6788,"kind":"modifierInvocation","modifierName":{"id":6786,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4968:8:21"},"nodeType":"ModifierInvocation","src":"4968:28:21"}],"name":"setFeeRecipient","nameLocation":"4906:15:21","nodeType":"FunctionDefinition","parameters":{"id":6785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"_feeRecipient","nameLocation":"4939:13:21","nodeType":"VariableDeclaration","scope":6811,"src":"4931:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6783,"name":"address","nodeType":"ElementaryTypeName","src":"4931:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4921:37:21"},"returnParameters":{"id":6789,"nodeType":"ParameterList","parameters":[],"src":"4997:0:21"},"scope":7529,"src":"4897:270:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6840,"nodeType":"Block","src":"5397:164:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6820,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"5411:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5435:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5427:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6821,"name":"address","nodeType":"ElementaryTypeName","src":"5427:7:21","typeDescriptions":{}}},"id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5427:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5411:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6831,"nodeType":"IfStatement","src":"5407:66:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6826,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5446:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDistributor","nodeType":"MemberAccess","referencedDeclaration":9945,"src":"5446:25:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5446:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"RevertStatement","src":"5439:34:21"}},{"expression":{"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6832,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"5484:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6833,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"5498:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5484:26:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6835,"nodeType":"ExpressionStatement","src":"5484:26:21"},{"eventCall":{"arguments":[{"id":6837,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"5541:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6836,"name":"SetDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"5526:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5526:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6839,"nodeType":"EmitStatement","src":"5521:33:21"}]},"documentation":{"id":6812,"nodeType":"StructuredDocumentation","src":"5173:121:21","text":"@notice Set the RewardDistributor contract address\n@param  _distributor  address  Distributor"},"functionSelector":"75619ab5","id":6841,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6817,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5377:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6818,"kind":"modifierInvocation","modifierName":{"id":6816,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5368:8:21"},"nodeType":"ModifierInvocation","src":"5368:28:21"}],"name":"setDistributor","nameLocation":"5308:14:21","nodeType":"FunctionDefinition","parameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6814,"mutability":"mutable","name":"_distributor","nameLocation":"5340:12:21","nodeType":"VariableDeclaration","scope":6841,"src":"5332:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6813,"name":"address","nodeType":"ElementaryTypeName","src":"5332:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5322:36:21"},"returnParameters":{"id":6819,"nodeType":"ParameterList","parameters":[],"src":"5397:0:21"},"scope":7529,"src":"5299:262:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6867,"nodeType":"Block","src":"6143:118:21","statements":[{"expression":{"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6855,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"6153:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6859,"name":"_market","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"6198:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6860,"name":"_proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"6207:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6861,"name":"_proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"6218:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6862,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"6237:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6857,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6181:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6181:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6856,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6158:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6158:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6153:101:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6866,"nodeType":"ExpressionStatement","src":"6153:101:21"}]},"documentation":{"id":6842,"nodeType":"StructuredDocumentation","src":"5567:383:21","text":"@notice Generate the BribeVault identifier based on a scheme\n@param  _market           address  Market that originated the bribe\n@param  _proposal         bytes32  Proposal\n@param  _proposalDeadline uint256  Proposal deadline\n@param  _token            address  Token\n@return id                bytes32  BribeVault identifier"},"functionSelector":"429c8910","id":6868,"implemented":true,"kind":"function","modifiers":[],"name":"generateBribeVaultIdentifier","nameLocation":"5964:28:21","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"_market","nameLocation":"6010:7:21","nodeType":"VariableDeclaration","scope":6868,"src":"6002:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6843,"name":"address","nodeType":"ElementaryTypeName","src":"6002:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6846,"mutability":"mutable","name":"_proposal","nameLocation":"6035:9:21","nodeType":"VariableDeclaration","scope":6868,"src":"6027:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6027:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6848,"mutability":"mutable","name":"_proposalDeadline","nameLocation":"6062:17:21","nodeType":"VariableDeclaration","scope":6868,"src":"6054:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"6054:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"_token","nameLocation":"6097:6:21","nodeType":"VariableDeclaration","scope":6868,"src":"6089:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6849,"name":"address","nodeType":"ElementaryTypeName","src":"6089:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5992:117:21"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"id","nameLocation":"6139:2:21","nodeType":"VariableDeclaration","scope":6868,"src":"6131:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6131:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6130:12:21"},"scope":7529,"src":"5955:306:21","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6891,"nodeType":"Block","src":"6757:85:21","statements":[{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6880,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"6767:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6884,"name":"_market","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"6799:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6885,"name":"_proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"6808:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6886,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"6827:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6882,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6782:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"6782:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6782:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6881,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6772:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6772:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6767:68:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6890,"nodeType":"ExpressionStatement","src":"6767:68:21"}]},"documentation":{"id":6869,"nodeType":"StructuredDocumentation","src":"6267:328:21","text":"@notice Generate the reward identifier based on a scheme\n@param  _market            address  Market that originated the reward\n@param  _proposalDeadline  uint256  Proposal deadline\n@param  _token             address  Token\n@return id                 bytes32  Reward identifier"},"functionSelector":"1aea69ca","id":6892,"implemented":true,"kind":"function","modifiers":[],"name":"generateRewardIdentifier","nameLocation":"6609:24:21","nodeType":"FunctionDefinition","parameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6871,"mutability":"mutable","name":"_market","nameLocation":"6651:7:21","nodeType":"VariableDeclaration","scope":6892,"src":"6643:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6870,"name":"address","nodeType":"ElementaryTypeName","src":"6643:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6873,"mutability":"mutable","name":"_token","nameLocation":"6676:6:21","nodeType":"VariableDeclaration","scope":6892,"src":"6668:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6872,"name":"address","nodeType":"ElementaryTypeName","src":"6668:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6875,"mutability":"mutable","name":"_proposalDeadline","nameLocation":"6700:17:21","nodeType":"VariableDeclaration","scope":6892,"src":"6692:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6874,"name":"uint256","nodeType":"ElementaryTypeName","src":"6692:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6633:90:21"},"returnParameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"id","nameLocation":"6753:2:21","nodeType":"VariableDeclaration","scope":6892,"src":"6745:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6745:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6744:12:21"},"scope":7529,"src":"6600:242:21","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6915,"nodeType":"Block","src":"7120:93:21","statements":[{"assignments":[6904],"declarations":[{"constant":false,"id":6904,"mutability":"mutable","name":"b","nameLocation":"7143:1:21","nodeType":"VariableDeclaration","scope":6915,"src":"7130:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_memory_ptr","typeString":"struct BribeVault.Bribe"},"typeName":{"id":6903,"nodeType":"UserDefinedTypeName","pathNode":{"id":6902,"name":"Bribe","nodeType":"IdentifierPath","referencedDeclaration":6518,"src":"7130:5:21"},"referencedDeclaration":6518,"src":"7130:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe"}},"visibility":"internal"}],"id":6908,"initialValue":{"baseExpression":{"id":6905,"name":"bribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"7147:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bribe_$6518_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Bribe storage ref)"}},"id":6907,"indexExpression":{"id":6906,"name":"bribeIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"7154:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7147:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage","typeString":"struct BribeVault.Bribe storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7130:40:21"},{"expression":{"components":[{"expression":{"id":6909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"7188:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_memory_ptr","typeString":"struct BribeVault.Bribe memory"}},"id":6910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"7188:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"7197:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_memory_ptr","typeString":"struct BribeVault.Bribe memory"}},"id":6912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6517,"src":"7197:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7187:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":6901,"id":6914,"nodeType":"Return","src":"7180:26:21"}]},"documentation":{"id":6893,"nodeType":"StructuredDocumentation","src":"6848:156:21","text":"@notice Get bribe information based on the specified identifier\n@param  bribeIdentifier  bytes32  The specified bribe identifier"},"functionSelector":"2c4ef0d5","id":6916,"implemented":true,"kind":"function","modifiers":[],"name":"getBribe","nameLocation":"7018:8:21","nodeType":"FunctionDefinition","parameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6895,"mutability":"mutable","name":"bribeIdentifier","nameLocation":"7044:15:21","nodeType":"VariableDeclaration","scope":6916,"src":"7036:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7036:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7026:39:21"},"returnParameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"token","nameLocation":"7097:5:21","nodeType":"VariableDeclaration","scope":6916,"src":"7089:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6897,"name":"address","nodeType":"ElementaryTypeName","src":"7089:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6900,"mutability":"mutable","name":"amount","nameLocation":"7112:6:21","nodeType":"VariableDeclaration","scope":6916,"src":"7104:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"7104:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7088:31:21"},"scope":7529,"src":"7009:204:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6929,"nodeType":"Block","src":"7456:56:21","statements":[{"expression":{"baseExpression":{"id":6925,"name":"rewardToBribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"7473:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[] storage ref)"}},"id":6927,"indexExpression":{"id":6926,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"7488:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7473:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":6924,"id":6928,"nodeType":"Return","src":"7466:39:21"}]},"documentation":{"id":6917,"nodeType":"StructuredDocumentation","src":"7219:104:21","text":"@notice Return the list of bribe identifiers tied to the specified reward identifier"},"functionSelector":"cc6c9388","id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"getBribeIdentifiersByRewardIdentifier","nameLocation":"7337:37:21","nodeType":"FunctionDefinition","parameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6919,"mutability":"mutable","name":"rewardIdentifier","nameLocation":"7392:16:21","nodeType":"VariableDeclaration","scope":6930,"src":"7384:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7384:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7374:40:21"},"returnParameters":{"id":6924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6930,"src":"7438:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7438:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6922,"nodeType":"ArrayTypeName","src":"7438:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7437:18:21"},"scope":7529,"src":"7328:184:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7001,"nodeType":"Block","src":"7733:846:21","statements":[{"assignments":[null,null,6938],"declarations":[null,null,{"constant":false,"id":6938,"mutability":"mutable","name":"nonce","nameLocation":"7784:5:21","nodeType":"VariableDeclaration","scope":7001,"src":"7777:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6937,"name":"uint48","nodeType":"ElementaryTypeName","src":"7777:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":6950,"initialValue":{"arguments":[{"expression":{"id":6941,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"7824:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"briber","nodeType":"MemberAccess","referencedDeclaration":9821,"src":"7824:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6943,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"7848:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"7848:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6947,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7879:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}],"id":6946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7871:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6945,"name":"address","nodeType":"ElementaryTypeName","src":"7871:7:21","typeDescriptions":{}}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7871:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6939,"name":"PERMIT2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"7793:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPermit2_$9727","typeString":"contract IPermit2"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":9703,"src":"7793:17:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_address_$returns$_t_uint160_$_t_uint48_$_t_uint48_$","typeString":"function (address,address,address) view external returns (uint160,uint48,uint48)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:101:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint48_$_t_uint48_$","typeString":"tuple(uint160,uint48,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"7772:122:21"},{"expression":{"arguments":[{"expression":{"id":6954,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"7965:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"briber","nodeType":"MemberAccess","referencedDeclaration":9821,"src":"7965:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"expression":{"id":6960,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8090:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"8090:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6962,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8129:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9823,"src":"8129:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":3649,"src":"8129:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8129:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"commonType":{"typeIdentifier":"t_rational_281474976710655_by_1","typeString":"int_const 281474976710655"},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_281474976710656_by_1","typeString":"int_const 281474976710656"},"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8185:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3438","id":6967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8190:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"8185:7:21","typeDescriptions":{"typeIdentifier":"t_rational_281474976710656_by_1","typeString":"int_const 281474976710656"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8185:11:21","typeDescriptions":{"typeIdentifier":"t_rational_281474976710655_by_1","typeString":"int_const 281474976710655"}},{"id":6971,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"8225:5:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_rational_281474976710655_by_1","typeString":"int_const 281474976710655"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":6958,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"8038:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$9727_$","typeString":"type(contract IPermit2)"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PermitDetails","nodeType":"MemberAccess","referencedDeclaration":9679,"src":"8038:22:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PermitDetails_$9679_storage_ptr_$","typeString":"type(struct IPermit2.PermitDetails storage pointer)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["token","amount","expiration","nonce"],"nodeType":"FunctionCall","src":"8038:211:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$9679_memory_ptr","typeString":"struct IPermit2.PermitDetails memory"}},{"arguments":[{"id":6975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8284:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}],"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8276:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6973,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:21","typeDescriptions":{}}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8276:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6977,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8320:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permitDeadline","nodeType":"MemberAccess","referencedDeclaration":9833,"src":"8320:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitDetails_$9679_memory_ptr","typeString":"struct IPermit2.PermitDetails memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6956,"name":"IPermit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"7989:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPermit2_$9727_$","typeString":"type(contract IPermit2)"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PermitSingle","nodeType":"MemberAccess","referencedDeclaration":9687,"src":"7989:21:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PermitSingle_$9687_storage_ptr_$","typeString":"type(struct IPermit2.PermitSingle storage pointer)"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["details","spender","sigDeadline"],"nodeType":"FunctionCall","src":"7989:364:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$9687_memory_ptr","typeString":"struct IPermit2.PermitSingle memory"}},{"expression":{"id":6980,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8367:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":9835,"src":"8367:13:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_PermitSingle_$9687_memory_ptr","typeString":"struct IPermit2.PermitSingle memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6951,"name":"PERMIT2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"7937:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPermit2_$9727","typeString":"contract IPermit2"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":9714,"src":"7937:14:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_struct$_PermitSingle_$9687_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,struct IPermit2.PermitSingle memory,bytes memory) external"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7937:453:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6983,"nodeType":"ExpressionStatement","src":"7937:453:21"},{"expression":{"arguments":[{"expression":{"id":6987,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8466:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"briber","nodeType":"MemberAccess","referencedDeclaration":9821,"src":"8466:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6991,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8498:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}],"id":6990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6989,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:21","typeDescriptions":{}}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8490:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6993,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8517:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9823,"src":"8517:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":3649,"src":"8517:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8517:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":6997,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"8553:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"8553:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6984,"name":"PERMIT2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"8432:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_IPermit2_$9727","typeString":"contract IPermit2"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":9726,"src":"8432:20:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$","typeString":"function (address,address,uint160,address) external"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8432:140:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"ExpressionStatement","src":"8432:140:21"}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"7518:118:21","text":"@notice Use permit to perform token transfer\n@param  _dp  DepositBribeParams  Deposit data"},"id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"_transferWithPermit","nameLocation":"7650:19:21","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"_dp","nameLocation":"7714:3:21","nodeType":"VariableDeclaration","scope":7002,"src":"7679:38:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams"},"typeName":{"id":6933,"nodeType":"UserDefinedTypeName","pathNode":{"id":6932,"name":"Common.DepositBribeParams","nodeType":"IdentifierPath","referencedDeclaration":9836,"src":"7679:25:21"},"referencedDeclaration":9836,"src":"7679:25:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_storage_ptr","typeString":"struct Common.DepositBribeParams"}},"visibility":"internal"}],"src":"7669:54:21"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[],"src":"7733:0:21"},"scope":7529,"src":"7641:938:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7227,"nodeType":"Block","src":"8808:2493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7012,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"8822:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"8822:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8843:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8835:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7014,"name":"address","nodeType":"ElementaryTypeName","src":"8835:7:21","typeDescriptions":{}}},"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8835:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8822:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7024,"nodeType":"IfStatement","src":"8818:57:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7019,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8854:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidToken","nodeType":"MemberAccess","referencedDeclaration":9969,"src":"8854:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8854:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7023,"nodeType":"RevertStatement","src":"8847:28:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7025,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"8889:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9823,"src":"8889:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7034,"nodeType":"IfStatement","src":"8885:50:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7029,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8913:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAmount","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"8913:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8913:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7033,"nodeType":"RevertStatement","src":"8906:29:21"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7035,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"8949:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"briber","nodeType":"MemberAccess","referencedDeclaration":9821,"src":"8949:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8971:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8963:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7037,"name":"address","nodeType":"ElementaryTypeName","src":"8963:7:21","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8963:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8949:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7047,"nodeType":"IfStatement","src":"8945:59:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7042,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8982:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidBriber","nodeType":"MemberAccess","referencedDeclaration":9948,"src":"8982:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8982:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7046,"nodeType":"RevertStatement","src":"8975:29:21"}},{"assignments":[7049],"declarations":[{"constant":false,"id":7049,"mutability":"mutable","name":"balanceBeforeTransfer","nameLocation":"9097:21:21","nodeType":"VariableDeclaration","scope":7227,"src":"9089:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7048,"name":"uint256","nodeType":"ElementaryTypeName","src":"9089:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7060,"initialValue":{"arguments":[{"arguments":[{"id":7057,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9170:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}],"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9162:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7055,"name":"address","nodeType":"ElementaryTypeName","src":"9162:7:21","typeDescriptions":{}}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":7051,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9128:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"9128:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7050,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"9121:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9121:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"9121:27:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9121:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9089:96:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7061,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9297:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":9835,"src":"9297:13:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9297:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9320:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9297:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7086,"nodeType":"Block","src":"9378:160:21","statements":[{"expression":{"arguments":[{"expression":{"id":7076,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9444:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"briber","nodeType":"MemberAccess","referencedDeclaration":9821,"src":"9444:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7080,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9480:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}],"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9472:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7078,"name":"address","nodeType":"ElementaryTypeName","src":"9472:7:21","typeDescriptions":{}}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9472:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7082,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9503:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9823,"src":"9503:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7072,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9399:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"9399:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7071,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"9392:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9392:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"9392:34:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9392:135:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7085,"nodeType":"ExpressionStatement","src":"9392:135:21"}]},"id":7087,"nodeType":"IfStatement","src":"9293:245:21","trueBody":{"id":7070,"nodeType":"Block","src":"9323:49:21","statements":[{"expression":{"arguments":[{"id":7067,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9357:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}],"id":7066,"name":"_transferWithPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"9337:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DepositBribeParams_$9836_calldata_ptr_$returns$__$","typeString":"function (struct Common.DepositBribeParams calldata)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9337:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7069,"nodeType":"ExpressionStatement","src":"9337:24:21"}]}},{"assignments":[7089],"declarations":[{"constant":false,"id":7089,"mutability":"mutable","name":"totalBribeAmount","nameLocation":"9656:16:21","nodeType":"VariableDeclaration","scope":7227,"src":"9648:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7088,"name":"uint256","nodeType":"ElementaryTypeName","src":"9648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7102,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7097,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9711:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BribeVault_$7529","typeString":"contract BribeVault"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7095,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:21","typeDescriptions":{}}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9703:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":7091,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9682:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"9682:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7090,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"9675:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9675:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"9675:27:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9675:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7100,"name":"balanceBeforeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"9732:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:78:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9648:105:21"},{"assignments":[7104],"declarations":[{"constant":false,"id":7104,"mutability":"mutable","name":"bribeIdentifier","nameLocation":"9802:15:21","nodeType":"VariableDeclaration","scope":7227,"src":"9794:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9794:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7105,"nodeType":"VariableDeclarationStatement","src":"9794:23:21"},{"assignments":[7107],"declarations":[{"constant":false,"id":7107,"mutability":"mutable","name":"bribeAmount","nameLocation":"9835:11:21","nodeType":"VariableDeclaration","scope":7227,"src":"9827:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"9827:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7108,"nodeType":"VariableDeclarationStatement","src":"9827:19:21"},{"assignments":[7110],"declarations":[{"constant":false,"id":7110,"mutability":"mutable","name":"deadline","nameLocation":"9864:8:21","nodeType":"VariableDeclaration","scope":7227,"src":"9856:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7109,"name":"uint256","nodeType":"ElementaryTypeName","src":"9856:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7111,"nodeType":"VariableDeclarationStatement","src":"9856:16:21"},{"assignments":[7113],"declarations":[{"constant":false,"id":7113,"mutability":"mutable","name":"i","nameLocation":"9937:1:21","nodeType":"VariableDeclaration","scope":7227,"src":"9929:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"9929:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7114,"nodeType":"VariableDeclarationStatement","src":"9929:9:21"},{"body":{"id":7221,"nodeType":"Block","src":"9951:1319:21","statements":[{"expression":{"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7115,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"9965:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7116,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"9976:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proposalDeadline","nodeType":"MemberAccess","referencedDeclaration":9831,"src":"9976:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"10000:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7119,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10004:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"periodDuration","nodeType":"MemberAccess","referencedDeclaration":9829,"src":"10004:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10000:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9999:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9976:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9965:58:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7125,"nodeType":"ExpressionStatement","src":"9965:58:21"},{"expression":{"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7126,"name":"bribeIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"10083:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10147:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10147:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7130,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10175:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proposal","nodeType":"MemberAccess","referencedDeclaration":9817,"src":"10175:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7132,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"10205:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7133,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10231:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"10231:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7127,"name":"generateBribeVaultIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"10101:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$returns$_t_bytes32_$","typeString":"function (address,bytes32,uint256,address) pure returns (bytes32)"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10101:153:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10083:171:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7137,"nodeType":"ExpressionStatement","src":"10083:171:21"},{"assignments":[7140],"declarations":[{"constant":false,"id":7140,"mutability":"mutable","name":"b","nameLocation":"10283:1:21","nodeType":"VariableDeclaration","scope":7221,"src":"10269:15:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe"},"typeName":{"id":7139,"nodeType":"UserDefinedTypeName","pathNode":{"id":7138,"name":"Bribe","nodeType":"IdentifierPath","referencedDeclaration":6518,"src":"10269:5:21"},"referencedDeclaration":6518,"src":"10269:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe"}},"visibility":"internal"}],"id":7144,"initialValue":{"baseExpression":{"id":7141,"name":"bribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"10287:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bribe_$6518_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Bribe storage ref)"}},"id":7143,"indexExpression":{"id":7142,"name":"bribeIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"10294:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10287:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage","typeString":"struct BribeVault.Bribe storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10269:41:21"},{"expression":{"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7145,"name":"bribeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"10398:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7146,"name":"totalBribeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"10429:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":7147,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10448:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"periods","nodeType":"MemberAccess","referencedDeclaration":9827,"src":"10448:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10429:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10428:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"10480:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10485:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10480:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10522:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10480:43:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"totalBribeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"10489:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":7155,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10508:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"periods","nodeType":"MemberAccess","referencedDeclaration":9827,"src":"10508:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10489:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10479:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10428:96:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10398:126:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7163,"nodeType":"ExpressionStatement","src":"10398:126:21"},{"expression":{"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"10539:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe storage pointer"}},"id":7166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6517,"src":"10539:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7167,"name":"bribeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"10551:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10539:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7169,"nodeType":"ExpressionStatement","src":"10539:23:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7170,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"10677:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe storage pointer"}},"id":7171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"10677:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10696:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10688:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7172,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:21","typeDescriptions":{}}},"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10688:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10677:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7198,"nodeType":"IfStatement","src":"10673:230:21","trueBody":{"id":7197,"nodeType":"Block","src":"10700:203:21","statements":[{"expression":{"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"10718:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe storage pointer"}},"id":7179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"10718:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7180,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10728:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"10728:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10718:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7183,"nodeType":"ExpressionStatement","src":"10718:19:21"},{"expression":{"arguments":[{"id":7194,"name":"bribeIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"10872:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":7184,"name":"rewardToBribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"10755:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[] storage ref)"}},"id":7192,"indexExpression":{"arguments":[{"expression":{"id":7186,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10816:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10816:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7188,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10828:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"10828:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7190,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"10839:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7185,"name":"generateRewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"10791:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,uint256) pure returns (bytes32)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10791:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10755:111:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"10755:116:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10755:133:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7196,"nodeType":"ExpressionStatement","src":"10755:133:21"}]}},{"eventCall":{"arguments":[{"expression":{"id":7200,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10952:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10952:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7202,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"10980:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proposal","nodeType":"MemberAccess","referencedDeclaration":9817,"src":"10980:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7204,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"11010:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7205,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"11036:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"11036:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7207,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"11063:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"briber","nodeType":"MemberAccess","referencedDeclaration":9821,"src":"11063:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7209,"name":"bribeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"11091:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7210,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"11120:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage_ptr","typeString":"struct BribeVault.Bribe storage pointer"}},"id":7211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6517,"src":"11120:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7212,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"11146:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"maxTokensPerVote","nodeType":"MemberAccess","referencedDeclaration":9825,"src":"11146:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"11184:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7199,"name":"DepositBribe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"10922:12:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,address,address,uint256,uint256,uint256,uint256)"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10922:277:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7216,"nodeType":"EmitStatement","src":"10917:282:21"},{"id":7220,"nodeType":"UncheckedBlock","src":"11214:46:21","statements":[{"expression":{"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11242:3:21","subExpression":{"id":7217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"11244:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7219,"nodeType":"ExpressionStatement","src":"11242:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"11278:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7223,"name":"_dp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"11282:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams calldata"}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"periods","nodeType":"MemberAccess","referencedDeclaration":9827,"src":"11282:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11278:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"nodeType":"DoWhileStatement","src":"9948:1347:21"}]},"documentation":{"id":7003,"nodeType":"StructuredDocumentation","src":"8585:108:21","text":"@notice Deposit bribe (ERC20 only)\n@param  _dp  DepositBribeParams  Deposit data"},"functionSelector":"5c2a802b","id":7228,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7009,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"8792:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7010,"kind":"modifierInvocation","modifierName":{"id":7008,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"8783:8:21"},"nodeType":"ModifierInvocation","src":"8783:24:21"}],"name":"depositBribe","nameLocation":"8707:12:21","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"mutability":"mutable","name":"_dp","nameLocation":"8764:3:21","nodeType":"VariableDeclaration","scope":7228,"src":"8729:38:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams"},"typeName":{"id":7005,"nodeType":"UserDefinedTypeName","pathNode":{"id":7004,"name":"Common.DepositBribeParams","nodeType":"IdentifierPath","referencedDeclaration":9836,"src":"8729:25:21"},"referencedDeclaration":9836,"src":"8729:25:21","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_storage_ptr","typeString":"struct Common.DepositBribeParams"}},"visibility":"internal"}],"src":"8719:54:21"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[],"src":"8808:0:21"},"scope":7529,"src":"8698:2603:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7247,"nodeType":"Block","src":"11652:101:21","statements":[{"expression":{"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7234,"name":"rewardForwarding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"11662:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":7237,"indexExpression":{"expression":{"id":7235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11679:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11679:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11662:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"11693:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11662:33:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7240,"nodeType":"ExpressionStatement","src":"11662:33:21"},{"eventCall":{"arguments":[{"expression":{"id":7242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11731:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11731:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"11743:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7241,"name":"SetRewardForwarding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"11711:19:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11711:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7246,"nodeType":"EmitStatement","src":"11706:40:21"}]},"documentation":{"id":7229,"nodeType":"StructuredDocumentation","src":"11307:290:21","text":"@notice Voters can opt in or out of reward-forwarding\n@notice Opt-in: A voter sets another address to forward rewards to\n@notice Opt-out: A voter sets their own address or the zero address\n@param  to  address  Account that rewards will be sent to"},"functionSelector":"f96258c4","id":7248,"implemented":true,"kind":"function","modifiers":[],"name":"setRewardForwarding","nameLocation":"11611:19:21","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"to","nameLocation":"11639:2:21","nodeType":"VariableDeclaration","scope":7248,"src":"11631:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7230,"name":"address","nodeType":"ElementaryTypeName","src":"11631:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11630:12:21"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[],"src":"11652:0:21"},"scope":7529,"src":"11602:151:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7311,"nodeType":"Block","src":"12202:443:21","statements":[{"assignments":[7262],"declarations":[{"constant":false,"id":7262,"mutability":"mutable","name":"bribeIdentifiers","nameLocation":"12229:16:21","nodeType":"VariableDeclaration","scope":7311,"src":"12212:33:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12212:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7261,"nodeType":"ArrayTypeName","src":"12212:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7266,"initialValue":{"baseExpression":{"id":7263,"name":"rewardToBribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"12248:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[] storage ref)"}},"id":7265,"indexExpression":{"id":7264,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"12263:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12248:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12212:68:21"},{"assignments":[7268],"declarations":[{"constant":false,"id":7268,"mutability":"mutable","name":"totalAmount","nameLocation":"12298:11:21","nodeType":"VariableDeclaration","scope":7311,"src":"12290:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7267,"name":"uint256","nodeType":"ElementaryTypeName","src":"12290:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7269,"nodeType":"VariableDeclarationStatement","src":"12290:19:21"},{"assignments":[7271],"declarations":[{"constant":false,"id":7271,"mutability":"mutable","name":"bLen","nameLocation":"12327:4:21","nodeType":"VariableDeclaration","scope":7311,"src":"12319:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7270,"name":"uint256","nodeType":"ElementaryTypeName","src":"12319:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7274,"initialValue":{"expression":{"id":7272,"name":"bribeIdentifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"12334:16:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12334:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12319:38:21"},{"body":{"id":7294,"nodeType":"Block","src":"12396:134:21","statements":[{"expression":{"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7281,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"12410:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":7282,"name":"bribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"12425:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bribe_$6518_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Bribe storage ref)"}},"id":7286,"indexExpression":{"baseExpression":{"id":7283,"name":"bribeIdentifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"12432:16:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7285,"indexExpression":{"id":7284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"12449:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12432:19:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12425:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage","typeString":"struct BribeVault.Bribe storage ref"}},"id":7287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6517,"src":"12425:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12410:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7289,"nodeType":"ExpressionStatement","src":"12410:49:21"},{"id":7293,"nodeType":"UncheckedBlock","src":"12474:46:21","statements":[{"expression":{"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12502:3:21","subExpression":{"id":7290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"12504:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7292,"nodeType":"ExpressionStatement","src":"12502:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"12384:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7279,"name":"bLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"12388:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12384:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7295,"initializationExpression":{"assignments":[7276],"declarations":[{"constant":false,"id":7276,"mutability":"mutable","name":"i","nameLocation":"12381:1:21","nodeType":"VariableDeclaration","scope":7295,"src":"12373:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"12373:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7277,"nodeType":"VariableDeclarationStatement","src":"12373:9:21"},"nodeType":"ForStatement","src":"12368:162:21"},{"expression":{"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7296,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"12540:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7297,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"12553:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7298,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"12567:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12553:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12552:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7301,"name":"FEE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"12574:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12552:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12540:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7304,"nodeType":"ExpressionStatement","src":"12540:45:21"},{"expression":{"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7305,"name":"distributorAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"12595:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7306,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"12615:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7307,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"12629:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12615:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12595:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7310,"nodeType":"ExpressionStatement","src":"12595:43:21"}]},"documentation":{"id":7249,"nodeType":"StructuredDocumentation","src":"11759:296:21","text":"@notice Calculate transfer amounts\n@param  rewardIdentifier   bytes32  Unique identifier related to reward\n@return feeAmount          uint256  Amount sent to the protocol treasury\n@return distributorAmount  uint256  Amount sent to the RewardDistributor"},"id":7312,"implemented":true,"kind":"function","modifiers":[],"name":"calculateTransferAmounts","nameLocation":"12069:24:21","nodeType":"FunctionDefinition","parameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"rewardIdentifier","nameLocation":"12111:16:21","nodeType":"VariableDeclaration","scope":7312,"src":"12103:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12103:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12093:40:21"},"returnParameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"mutability":"mutable","name":"feeAmount","nameLocation":"12164:9:21","nodeType":"VariableDeclaration","scope":7312,"src":"12156:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7253,"name":"uint256","nodeType":"ElementaryTypeName","src":"12156:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7256,"mutability":"mutable","name":"distributorAmount","nameLocation":"12183:17:21","nodeType":"VariableDeclaration","scope":7312,"src":"12175:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7255,"name":"uint256","nodeType":"ElementaryTypeName","src":"12175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12155:46:21"},"scope":7529,"src":"12060:585:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7478,"nodeType":"Block","src":"12954:2009:21","statements":[{"assignments":[7323],"declarations":[{"constant":false,"id":7323,"mutability":"mutable","name":"rLen","nameLocation":"12972:4:21","nodeType":"VariableDeclaration","scope":7478,"src":"12964:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7322,"name":"uint256","nodeType":"ElementaryTypeName","src":"12964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7326,"initialValue":{"expression":{"id":7324,"name":"rewardIdentifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"12979:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12979:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12964:39:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7327,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"13018:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13026:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13018:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7335,"nodeType":"IfStatement","src":"13014:43:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7330,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"13036:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidArray","nodeType":"MemberAccess","referencedDeclaration":9954,"src":"13036:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13036:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7334,"nodeType":"RevertStatement","src":"13029:28:21"}},{"body":{"id":7476,"nodeType":"Block","src":"13172:1785:21","statements":[{"assignments":[7343],"declarations":[{"constant":false,"id":7343,"mutability":"mutable","name":"rewardIdentifier","nameLocation":"13194:16:21","nodeType":"VariableDeclaration","scope":7476,"src":"13186:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13186:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7347,"initialValue":{"baseExpression":{"id":7344,"name":"rewardIdentifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"13213:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":7346,"indexExpression":{"id":7345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"13231:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13213:20:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13186:47:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7348,"name":"rewardToBribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"13251:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[] storage ref)"}},"id":7350,"indexExpression":{"id":7349,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"13266:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13251:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13251:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13294:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13251:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7359,"nodeType":"IfStatement","src":"13247:105:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7354,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"13320:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidRewardIdentifier","nodeType":"MemberAccess","referencedDeclaration":9957,"src":"13320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13320:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"RevertStatement","src":"13313:39:21"}},{"assignments":[7362],"declarations":[{"constant":false,"id":7362,"mutability":"mutable","name":"r","nameLocation":"13384:1:21","nodeType":"VariableDeclaration","scope":7476,"src":"13367:18:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer"},"typeName":{"id":7361,"nodeType":"UserDefinedTypeName","pathNode":{"id":7360,"name":"Transfer","nodeType":"IdentifierPath","referencedDeclaration":6525,"src":"13367:8:21"},"referencedDeclaration":6525,"src":"13367:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer"}},"visibility":"internal"}],"id":7366,"initialValue":{"baseExpression":{"id":7363,"name":"rewardTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"13388:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$6525_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Transfer storage ref)"}},"id":7365,"indexExpression":{"id":7364,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"13404:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13388:33:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage","typeString":"struct BribeVault.Transfer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13367:54:21"},{"assignments":[7368],"declarations":[{"constant":false,"id":7368,"mutability":"mutable","name":"token","nameLocation":"13444:5:21","nodeType":"VariableDeclaration","scope":7476,"src":"13436:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7367,"name":"address","nodeType":"ElementaryTypeName","src":"13436:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7377,"initialValue":{"expression":{"baseExpression":{"id":7369,"name":"bribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"13452:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bribe_$6518_storage_$","typeString":"mapping(bytes32 => struct BribeVault.Bribe storage ref)"}},"id":7375,"indexExpression":{"baseExpression":{"baseExpression":{"id":7370,"name":"rewardToBribes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"13459:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(bytes32 => bytes32[] storage ref)"}},"id":7372,"indexExpression":{"id":7371,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"13474:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13459:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7374,"indexExpression":{"hexValue":"30","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13492:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13459:35:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13452:43:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bribe_$6518_storage","typeString":"struct BribeVault.Bribe storage ref"}},"id":7376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"13452:49:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13436:65:21"},{"assignments":[7379,7381],"declarations":[{"constant":false,"id":7379,"mutability":"mutable","name":"feeAmount","nameLocation":"13541:9:21","nodeType":"VariableDeclaration","scope":7476,"src":"13533:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7378,"name":"uint256","nodeType":"ElementaryTypeName","src":"13533:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7381,"mutability":"mutable","name":"distributorAmount","nameLocation":"13576:17:21","nodeType":"VariableDeclaration","scope":7476,"src":"13568:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"13568:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7385,"initialValue":{"arguments":[{"id":7383,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"13635:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7382,"name":"calculateTransferAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"13610:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) view returns (uint256,uint256)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13610:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13515:137:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7386,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"13671:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer storage pointer"}},"id":7387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"distributorAmountTransferred","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"13671:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7388,"name":"distributorAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"13705:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13671:51:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7395,"nodeType":"IfStatement","src":"13667:112:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7390,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"13747:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BribeAlreadyTransferred","nodeType":"MemberAccess","referencedDeclaration":9960,"src":"13747:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13747:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"RevertStatement","src":"13740:39:21"}},{"assignments":[7397],"declarations":[{"constant":false,"id":7397,"mutability":"mutable","name":"feeToTransfer","nameLocation":"13802:13:21","nodeType":"VariableDeclaration","scope":7476,"src":"13794:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7396,"name":"uint256","nodeType":"ElementaryTypeName","src":"13794:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7402,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"13818:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7399,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"13830:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer storage pointer"}},"id":7400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":6520,"src":"13830:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13818:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13794:47:21"},{"assignments":[7404],"declarations":[{"constant":false,"id":7404,"mutability":"mutable","name":"distributorAmountToTransfer","nameLocation":"13863:27:21","nodeType":"VariableDeclaration","scope":7476,"src":"13855:35:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7403,"name":"uint256","nodeType":"ElementaryTypeName","src":"13855:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7409,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"distributorAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"13893:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7406,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"13929:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer storage pointer"}},"id":7407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"distributorAmountTransferred","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"13929:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13893:66:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13855:104:21"},{"expression":{"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7410,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"14045:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer storage pointer"}},"id":7412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":6520,"src":"14045:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7413,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"14059:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14045:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7415,"nodeType":"ExpressionStatement","src":"14045:23:21"},{"expression":{"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7416,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"14082:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer storage pointer"}},"id":7418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"distributorAmountTransferred","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"14082:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7419,"name":"distributorAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"14115:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14082:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7421,"nodeType":"ExpressionStatement","src":"14082:50:21"},{"assignments":[7424],"declarations":[{"constant":false,"id":7424,"mutability":"mutable","name":"t","nameLocation":"14154:1:21","nodeType":"VariableDeclaration","scope":7476,"src":"14147:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":7423,"nodeType":"UserDefinedTypeName","pathNode":{"id":7422,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"14147:6:21"},"referencedDeclaration":915,"src":"14147:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"}],"id":7428,"initialValue":{"arguments":[{"id":7426,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"14165:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7425,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"14158:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14158:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"14147:24:21"},{"assignments":[7430],"declarations":[{"constant":false,"id":7430,"mutability":"mutable","name":"distributorBalance","nameLocation":"14281:18:21","nodeType":"VariableDeclaration","scope":7476,"src":"14273:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7429,"name":"uint256","nodeType":"ElementaryTypeName","src":"14273:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7435,"initialValue":{"arguments":[{"id":7433,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"14314:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7431,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"14302:1:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"14302:11:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14302:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14273:53:21"},{"expression":{"arguments":[{"id":7439,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"14356:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7440,"name":"feeToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"14370:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7436,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"14341:1:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":984,"src":"14341:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14341:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7442,"nodeType":"ExpressionStatement","src":"14341:43:21"},{"expression":{"arguments":[{"id":7446,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"14413:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7447,"name":"distributorAmountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"14426:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7443,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"14398:1:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":984,"src":"14398:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14398:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7449,"nodeType":"ExpressionStatement","src":"14398:56:21"},{"assignments":[7451],"declarations":[{"constant":false,"id":7451,"mutability":"mutable","name":"finalAmountReceived","nameLocation":"14571:19:21","nodeType":"VariableDeclaration","scope":7476,"src":"14563:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7450,"name":"uint256","nodeType":"ElementaryTypeName","src":"14563:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7458,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7454,"name":"distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"14605:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7452,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"14593:1:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"14593:11:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14593:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7456,"name":"distributorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"14636:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14593:61:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14563:91:21"},{"expression":{"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7459,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"14668:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$6525_storage_ptr","typeString":"struct BribeVault.Transfer storage pointer"}},"id":7461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"distributorAmountReceived","nodeType":"MemberAccess","referencedDeclaration":6524,"src":"14668:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7462,"name":"finalAmountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"14699:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14668:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7464,"nodeType":"ExpressionStatement","src":"14668:50:21"},{"eventCall":{"arguments":[{"id":7466,"name":"rewardIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"14769:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"14803:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7468,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"14826:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7469,"name":"finalAmountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"14853:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7465,"name":"TransferBribe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"14738:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14738:148:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7471,"nodeType":"EmitStatement","src":"14733:153:21"},{"id":7475,"nodeType":"UncheckedBlock","src":"14901:46:21","statements":[{"expression":{"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14929:3:21","subExpression":{"id":7472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"14931:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7474,"nodeType":"ExpressionStatement","src":"14929:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"13160:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7340,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"13164:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13160:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7477,"initializationExpression":{"assignments":[7337],"declarations":[{"constant":false,"id":7337,"mutability":"mutable","name":"i","nameLocation":"13157:1:21","nodeType":"VariableDeclaration","scope":7477,"src":"13149:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7336,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7338,"nodeType":"VariableDeclarationStatement","src":"13149:9:21"},"nodeType":"ForStatement","src":"13144:1813:21"}]},"documentation":{"id":7313,"nodeType":"StructuredDocumentation","src":"12651:184:21","text":"@notice Transfer fees to fee recipient and bribes to distributor and update rewards metadata\n@param  rewardIdentifiers  bytes32[]  List of rewardIdentifiers"},"functionSelector":"b2d7edb2","id":7479,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7319,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"12934:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7320,"kind":"modifierInvocation","modifierName":{"id":7318,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"12925:8:21"},"nodeType":"ModifierInvocation","src":"12925:28:21"}],"name":"transferBribes","nameLocation":"12849:14:21","nodeType":"FunctionDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"rewardIdentifiers","nameLocation":"12892:17:21","nodeType":"VariableDeclaration","scope":7479,"src":"12873:36:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12873:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7315,"nodeType":"ArrayTypeName","src":"12873:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12863:52:21"},"returnParameters":{"id":7321,"nodeType":"ParameterList","parameters":[],"src":"12954:0:21"},"scope":7529,"src":"12840:2123:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7527,"nodeType":"Block","src":"15255:245:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7490,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"15269:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15286:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15278:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7491,"name":"address","nodeType":"ElementaryTypeName","src":"15278:7:21","typeDescriptions":{}}},"id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15278:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15269:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7501,"nodeType":"IfStatement","src":"15265:53:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7496,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"15297:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidToken","nodeType":"MemberAccess","referencedDeclaration":9969,"src":"15297:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15297:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7500,"nodeType":"RevertStatement","src":"15290:28:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"15332:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15342:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15332:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7510,"nodeType":"IfStatement","src":"15328:46:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7505,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAmount","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"15352:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15352:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7509,"nodeType":"RevertStatement","src":"15345:29:21"}},{"expression":{"arguments":[{"expression":{"id":7515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15412:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15412:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"15424:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"15392:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7511,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15385:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15385:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":984,"src":"15385:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15385:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7519,"nodeType":"ExpressionStatement","src":"15385:46:21"},{"eventCall":{"arguments":[{"id":7521,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"15467:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"15474:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15482:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15482:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7520,"name":"EmergencyWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"15447:19:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15447:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7526,"nodeType":"EmitStatement","src":"15442:51:21"}]},"documentation":{"id":7480,"nodeType":"StructuredDocumentation","src":"14969:163:21","text":"@notice Withdraw ERC20 tokens to the admin address\n@param  token   address  Token address\n@param  amount  uint256  Token amount"},"functionSelector":"95ccea67","id":7528,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7487,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"15235:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7488,"kind":"modifierInvocation","modifierName":{"id":7486,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"15226:8:21"},"nodeType":"ModifierInvocation","src":"15226:28:21"}],"name":"emergencyWithdraw","nameLocation":"15146:17:21","nodeType":"FunctionDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"token","nameLocation":"15181:5:21","nodeType":"VariableDeclaration","scope":7528,"src":"15173:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7481,"name":"address","nodeType":"ElementaryTypeName","src":"15173:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7484,"mutability":"mutable","name":"amount","nameLocation":"15204:6:21","nodeType":"VariableDeclaration","scope":7528,"src":"15196:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7483,"name":"uint256","nodeType":"ElementaryTypeName","src":"15196:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15163:53:21"},"returnParameters":{"id":7489,"nodeType":"ParameterList","parameters":[],"src":"15255:0:21"},"scope":7529,"src":"15137:363:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7530,"src":"584:14918:21","usedErrors":[9894,9906,9936,9939,9942,9945,9948,9951,9954,9957,9960,9969]}],"src":"32:15471:21"},"id":21},"contracts/RewardDistributor.sol":{"ast":{"absolutePath":"contracts/RewardDistributor.sol","exportedSymbols":{"AccessControl":[315],"Common":[9874],"Errors":[10009],"IERC20":[915],"MerkleProof":[2444],"Pausable":[772],"ReentrancyGuard":[837],"RewardDistributor":[7959],"SafeERC20":[1327]},"id":7960,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7531,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":316,"src":"57:79:22","symbolAliases":[{"foreign":{"id":7532,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"65:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControl_$315_$","typeString":"type(contract AccessControl)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":7535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":838,"src":"137:85:22","symbolAliases":[{"foreign":{"id":7534,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"145:15:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReentrancyGuard_$837_$","typeString":"type(contract ReentrancyGuard)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":7537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":773,"src":"223:71:22","symbolAliases":[{"foreign":{"id":7536,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"231:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pausable_$772_$","typeString":"type(contract Pausable)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":916,"src":"295:70:22","symbolAliases":[{"foreign":{"id":7538,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"303:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":1328,"src":"366:82:22","symbolAliases":[{"foreign":{"id":7540,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"374:9:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1327_$","typeString":"type(library SafeERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":7543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":2445,"src":"449:87:22","symbolAliases":[{"foreign":{"id":7542,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"457:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$2444_$","typeString":"type(library MerkleProof)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Common.sol","file":"./libraries/Common.sol","id":7545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":9875,"src":"537:46:22","symbolAliases":[{"foreign":{"id":7544,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"545:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":7547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7960,"sourceUnit":10010,"src":"584:46:22","symbolAliases":[{"foreign":{"id":7546,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"592:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7548,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"662:13:22"},"id":7549,"nodeType":"InheritanceSpecifier","src":"662:13:22"},{"baseName":{"id":7550,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":837,"src":"677:15:22"},"id":7551,"nodeType":"InheritanceSpecifier","src":"677:15:22"},{"baseName":{"id":7552,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":772,"src":"694:8:22"},"id":7553,"nodeType":"InheritanceSpecifier","src":"694:8:22"}],"canonicalName":"RewardDistributor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7959,"linearizedBaseContracts":[7959,772,837,315,2468,2480,388,1687],"name":"RewardDistributor","nameLocation":"641:17:22","nodeType":"ContractDefinition","nodes":[{"id":7557,"libraryName":{"id":7554,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"715:9:22"},"nodeType":"UsingForDirective","src":"709:27:22","typeName":{"id":7556,"nodeType":"UserDefinedTypeName","pathNode":{"id":7555,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"729:6:22"},"referencedDeclaration":915,"src":"729:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}},{"canonicalName":"RewardDistributor.Reward","id":7566,"members":[{"constant":false,"id":7559,"mutability":"mutable","name":"token","nameLocation":"774:5:22","nodeType":"VariableDeclaration","scope":7566,"src":"766:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7558,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7561,"mutability":"mutable","name":"merkleRoot","nameLocation":"797:10:22","nodeType":"VariableDeclaration","scope":7566,"src":"789:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"789:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"proof","nameLocation":"825:5:22","nodeType":"VariableDeclaration","scope":7566,"src":"817:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"817:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7565,"mutability":"mutable","name":"activeAt","nameLocation":"848:8:22","nodeType":"VariableDeclaration","scope":7566,"src":"840:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Reward","nameLocation":"749:6:22","nodeType":"StructDefinition","scope":7959,"src":"742:121:22","visibility":"public"},{"canonicalName":"RewardDistributor.Claim","id":7576,"members":[{"constant":false,"id":7568,"mutability":"mutable","name":"identifier","nameLocation":"900:10:22","nodeType":"VariableDeclaration","scope":7576,"src":"892:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"892:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7570,"mutability":"mutable","name":"account","nameLocation":"928:7:22","nodeType":"VariableDeclaration","scope":7576,"src":"920:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7569,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7572,"mutability":"mutable","name":"amount","nameLocation":"953:6:22","nodeType":"VariableDeclaration","scope":7576,"src":"945:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7575,"mutability":"mutable","name":"merkleProof","nameLocation":"979:11:22","nodeType":"VariableDeclaration","scope":7576,"src":"969:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"969:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7574,"nodeType":"ArrayTypeName","src":"969:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"Claim","nameLocation":"876:5:22","nodeType":"StructDefinition","scope":7959,"src":"869:128:22","visibility":"public"},{"constant":true,"functionSelector":"7fdba5f6","id":7579,"mutability":"constant","name":"MINIMUM_ACTIVE_TIMER","nameLocation":"1027:20:22","nodeType":"VariableDeclaration","scope":7959,"src":"1003:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":7578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:7:22","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_10800_by_1","typeString":"int_const 10800"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"938d967a","id":7584,"mutability":"mutable","name":"rewards","nameLocation":"1157:7:22","nodeType":"VariableDeclaration","scope":7959,"src":"1123:41:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Reward_$7566_storage_$","typeString":"mapping(bytes32 => struct RewardDistributor.Reward)"},"typeName":{"id":7583,"keyType":{"id":7580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1131:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1123:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Reward_$7566_storage_$","typeString":"mapping(bytes32 => struct RewardDistributor.Reward)"},"valueType":{"id":7582,"nodeType":"UserDefinedTypeName","pathNode":{"id":7581,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":7566,"src":"1142:6:22"},"referencedDeclaration":7566,"src":"1142:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward"}}},"visibility":"public"},{"constant":false,"functionSelector":"dfcae622","id":7590,"mutability":"mutable","name":"claimed","nameLocation":"1305:7:22","nodeType":"VariableDeclaration","scope":7959,"src":"1250:62:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"},"typeName":{"id":7589,"keyType":{"id":7585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1258:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1250:47:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"},"valueType":{"id":7588,"keyType":{"id":7586,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1269:27:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1288:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"33f642f6","id":7592,"mutability":"mutable","name":"activeTimerDuration","nameLocation":"1423:19:22","nodeType":"VariableDeclaration","scope":7959,"src":"1408:34:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":7602,"name":"RewardClaimed","nameLocation":"1455:13:22","nodeType":"EventDefinition","parameters":{"id":7601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"indexed":true,"mutability":"mutable","name":"identifier","nameLocation":"1494:10:22","nodeType":"VariableDeclaration","scope":7602,"src":"1478:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1478:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7596,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1530:5:22","nodeType":"VariableDeclaration","scope":7602,"src":"1514:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7595,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7598,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1561:7:22","nodeType":"VariableDeclaration","scope":7602,"src":"1545:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7597,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7600,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1586:6:22","nodeType":"VariableDeclaration","scope":7602,"src":"1578:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1468:130:22"},"src":"1449:150:22"},{"anonymous":false,"id":7614,"name":"RewardMetadataUpdated","nameLocation":"1610:21:22","nodeType":"EventDefinition","parameters":{"id":7613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7604,"indexed":true,"mutability":"mutable","name":"identifier","nameLocation":"1657:10:22","nodeType":"VariableDeclaration","scope":7614,"src":"1641:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1641:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7606,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1693:5:22","nodeType":"VariableDeclaration","scope":7614,"src":"1677:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7605,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7608,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"1716:10:22","nodeType":"VariableDeclaration","scope":7614,"src":"1708:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7610,"indexed":false,"mutability":"mutable","name":"proof","nameLocation":"1744:5:22","nodeType":"VariableDeclaration","scope":7614,"src":"1736:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1736:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7612,"indexed":false,"mutability":"mutable","name":"activeAt","nameLocation":"1767:8:22","nodeType":"VariableDeclaration","scope":7614,"src":"1759:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1631:150:22"},"src":"1604:178:22"},{"anonymous":false,"id":7618,"name":"SetActiveTimerDuration","nameLocation":"1793:22:22","nodeType":"EventDefinition","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"indexed":false,"mutability":"mutable","name":"duration","nameLocation":"1824:8:22","nodeType":"VariableDeclaration","scope":7618,"src":"1816:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1815:18:22"},"src":"1787:47:22"},{"body":{"id":7631,"nodeType":"Block","src":"1854:114:22","statements":[{"expression":{"arguments":[{"id":7622,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1875:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1895:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1895:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7621,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1864:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1864:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7626,"nodeType":"ExpressionStatement","src":"1864:42:22"},{"expression":{"arguments":[{"id":7628,"name":"MINIMUM_ACTIVE_TIMER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"1940:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7627,"name":"_setActiveTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"1916:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1916:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7630,"nodeType":"ExpressionStatement","src":"1916:45:22"}]},"id":7632,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7619,"nodeType":"ParameterList","parameters":[],"src":"1851:2:22"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[],"src":"1854:0:22"},"scope":7959,"src":"1840:128:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7689,"nodeType":"Block","src":"2199:393:22","statements":[{"assignments":[7645],"declarations":[{"constant":false,"id":7645,"mutability":"mutable","name":"cLen","nameLocation":"2217:4:22","nodeType":"VariableDeclaration","scope":7689,"src":"2209:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2209:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7648,"initialValue":{"expression":{"id":7646,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"2224:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata[] calldata"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2224:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2209:29:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7649,"name":"cLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"2253:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2261:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2253:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7657,"nodeType":"IfStatement","src":"2249:43:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7652,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2271:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidArray","nodeType":"MemberAccess","referencedDeclaration":9954,"src":"2271:19:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2271:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7656,"nodeType":"RevertStatement","src":"2264:28:22"}},{"body":{"id":7687,"nodeType":"Block","src":"2331:255:22","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7665,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"2369:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata[] calldata"}},"id":7667,"indexExpression":{"id":7666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2377:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2369:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$7576_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":7568,"src":"2369:21:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"baseExpression":{"id":7669,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"2408:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata[] calldata"}},"id":7671,"indexExpression":{"id":7670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2416:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2408:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$7576_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"account","nodeType":"MemberAccess","referencedDeclaration":7570,"src":"2408:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":7673,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"2444:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata[] calldata"}},"id":7675,"indexExpression":{"id":7674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2452:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2444:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$7576_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7572,"src":"2444:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7677,"name":"_claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"2479:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata[] calldata"}},"id":7679,"indexExpression":{"id":7678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2487:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2479:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$7576_calldata_ptr","typeString":"struct RewardDistributor.Claim calldata"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"merkleProof","nodeType":"MemberAccess","referencedDeclaration":7575,"src":"2479:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":7664,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2345:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$","typeString":"function (bytes32,address,uint256,bytes32[] calldata)"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2345:170:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7682,"nodeType":"ExpressionStatement","src":"2345:170:22"},{"id":7686,"nodeType":"UncheckedBlock","src":"2530:46:22","statements":[{"expression":{"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2558:3:22","subExpression":{"id":7683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2560:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7685,"nodeType":"ExpressionStatement","src":"2558:3:22"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7661,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"2319:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7662,"name":"cLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"2323:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2319:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7688,"initializationExpression":{"assignments":[7659],"declarations":[{"constant":false,"id":7659,"mutability":"mutable","name":"i","nameLocation":"2316:1:22","nodeType":"VariableDeclaration","scope":7688,"src":"2308:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7660,"nodeType":"VariableDeclarationStatement","src":"2308:9:22"},"nodeType":"ForStatement","src":"2303:283:22"}]},"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"1974:129:22","text":"@notice Claim rewards based on the specified metadata\n@param  _claims  Claim[] List of claim metadata"},"functionSelector":"56853398","id":7690,"implemented":true,"kind":"function","modifiers":[{"id":7640,"kind":"modifierInvocation","modifierName":{"id":7639,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"2172:12:22"},"nodeType":"ModifierInvocation","src":"2172:12:22"},{"id":7642,"kind":"modifierInvocation","modifierName":{"id":7641,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":699,"src":"2185:13:22"},"nodeType":"ModifierInvocation","src":"2185:13:22"}],"name":"claim","nameLocation":"2117:5:22","nodeType":"FunctionDefinition","parameters":{"id":7638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"_claims","nameLocation":"2149:7:22","nodeType":"VariableDeclaration","scope":7690,"src":"2132:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_calldata_ptr_$dyn_calldata_ptr","typeString":"struct RewardDistributor.Claim[]"},"typeName":{"baseType":{"id":7635,"nodeType":"UserDefinedTypeName","pathNode":{"id":7634,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":7576,"src":"2132:5:22"},"referencedDeclaration":7576,"src":"2132:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$7576_storage_ptr","typeString":"struct RewardDistributor.Claim"}},"id":7636,"nodeType":"ArrayTypeName","src":"2132:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$7576_storage_$dyn_storage_ptr","typeString":"struct RewardDistributor.Claim[]"}},"visibility":"internal"}],"src":"2122:40:22"},"returnParameters":{"id":7643,"nodeType":"ParameterList","parameters":[],"src":"2199:0:22"},"scope":7959,"src":"2108:484:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7799,"nodeType":"Block","src":"2867:1078:22","statements":[{"assignments":[7702],"declarations":[{"constant":false,"id":7702,"mutability":"mutable","name":"dLen","nameLocation":"2885:4:22","nodeType":"VariableDeclaration","scope":7799,"src":"2877:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2877:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7705,"initialValue":{"expression":{"id":7703,"name":"_distributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"2892:14:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution calldata[] calldata"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2892:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2877:36:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7706,"name":"dLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"2928:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2928:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7714,"nodeType":"IfStatement","src":"2924:50:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7709,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2946:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDistribution","nodeType":"MemberAccess","referencedDeclaration":9963,"src":"2946:26:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2946:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7713,"nodeType":"RevertStatement","src":"2939:35:22"}},{"assignments":[7716],"declarations":[{"constant":false,"id":7716,"mutability":"mutable","name":"activeAt","nameLocation":"2993:8:22","nodeType":"VariableDeclaration","scope":7799,"src":"2985:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7721,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7717,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3004:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3004:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7719,"name":"activeTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"3022:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3004:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2985:56:22"},{"body":{"id":7797,"nodeType":"Block","src":"3080:859:22","statements":[{"assignments":[7732],"declarations":[{"constant":false,"id":7732,"mutability":"mutable","name":"distribution","nameLocation":"3221:12:22","nodeType":"VariableDeclaration","scope":7797,"src":"3192:41:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution"},"typeName":{"id":7731,"nodeType":"UserDefinedTypeName","pathNode":{"id":7730,"name":"Common.Distribution","nodeType":"IdentifierPath","referencedDeclaration":9815,"src":"3192:19:22"},"referencedDeclaration":9815,"src":"3192:19:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_storage_ptr","typeString":"struct Common.Distribution"}},"visibility":"internal"}],"id":7736,"initialValue":{"baseExpression":{"id":7733,"name":"_distributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"3236:14:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution calldata[] calldata"}},"id":7735,"indexExpression":{"id":7734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"3251:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3236:17:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"nodeType":"VariableDeclarationStatement","src":"3192:61:22"},{"assignments":[7739],"declarations":[{"constant":false,"id":7739,"mutability":"mutable","name":"reward","nameLocation":"3282:6:22","nodeType":"VariableDeclaration","scope":7797,"src":"3267:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward"},"typeName":{"id":7738,"nodeType":"UserDefinedTypeName","pathNode":{"id":7737,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":7566,"src":"3267:6:22"},"referencedDeclaration":7566,"src":"3267:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward"}},"visibility":"internal"}],"id":7744,"initialValue":{"baseExpression":{"id":7740,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"3291:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Reward_$7566_storage_$","typeString":"mapping(bytes32 => struct RewardDistributor.Reward storage ref)"}},"id":7743,"indexExpression":{"expression":{"id":7741,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3299:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":9808,"src":"3299:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3291:32:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage","typeString":"struct RewardDistributor.Reward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3267:56:22"},{"expression":{"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7745,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"3337:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward storage pointer"}},"id":7747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":7561,"src":"3337:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7748,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3357:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":9812,"src":"3357:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3337:43:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7751,"nodeType":"ExpressionStatement","src":"3337:43:22"},{"expression":{"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7752,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"3394:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward storage pointer"}},"id":7754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":7563,"src":"3394:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7755,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3409:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":9814,"src":"3409:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3394:33:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7758,"nodeType":"ExpressionStatement","src":"3394:33:22"},{"expression":{"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7759,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"3441:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward storage pointer"}},"id":7761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"activeAt","nodeType":"MemberAccess","referencedDeclaration":7565,"src":"3441:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7762,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"3459:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3441:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7764,"nodeType":"ExpressionStatement","src":"3441:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7765,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"3540:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward storage pointer"}},"id":7766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"3540:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3564:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3556:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7767,"name":"address","nodeType":"ElementaryTypeName","src":"3556:7:22","typeDescriptions":{}}},"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3556:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3540:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7780,"nodeType":"IfStatement","src":"3536:98:22","trueBody":{"id":7779,"nodeType":"Block","src":"3568:66:22","statements":[{"expression":{"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7772,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"3586:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward storage pointer"}},"id":7774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"3586:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7775,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3601:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9810,"src":"3601:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3586:33:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7778,"nodeType":"ExpressionStatement","src":"3586:33:22"}]}},{"eventCall":{"arguments":[{"expression":{"id":7782,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3692:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":9808,"src":"3692:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7784,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3733:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9810,"src":"3733:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7786,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3769:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":9812,"src":"3769:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7788,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"3810:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_calldata_ptr","typeString":"struct Common.Distribution calldata"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":9814,"src":"3810:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7790,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"3846:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7781,"name":"RewardMetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"3653:21:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,bytes32,bytes32,uint256)"}},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3653:215:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7792,"nodeType":"EmitStatement","src":"3648:220:22"},{"id":7796,"nodeType":"UncheckedBlock","src":"3883:46:22","statements":[{"expression":{"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3911:3:22","subExpression":{"id":7793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"3913:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7795,"nodeType":"ExpressionStatement","src":"3911:3:22"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"3068:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7726,"name":"dLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"3072:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7798,"initializationExpression":{"assignments":[7723],"declarations":[{"constant":false,"id":7723,"mutability":"mutable","name":"i","nameLocation":"3065:1:22","nodeType":"VariableDeclaration","scope":7798,"src":"3057:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3057:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7724,"nodeType":"VariableDeclarationStatement","src":"3057:9:22"},"nodeType":"ForStatement","src":"3052:887:22"}]},"documentation":{"id":7691,"nodeType":"StructuredDocumentation","src":"2598:134:22","text":"@notice Update rewards metadata\n@param  _distributions  Distribution[] List of reward distribution details"},"functionSelector":"df45c752","id":7800,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7698,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2847:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7699,"kind":"modifierInvocation","modifierName":{"id":7697,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"2838:8:22"},"nodeType":"ModifierInvocation","src":"2838:28:22"}],"name":"updateRewardsMetadata","nameLocation":"2746:21:22","nodeType":"FunctionDefinition","parameters":{"id":7696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7695,"mutability":"mutable","name":"_distributions","nameLocation":"2808:14:22","nodeType":"VariableDeclaration","scope":7800,"src":"2777:45:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution[]"},"typeName":{"baseType":{"id":7693,"nodeType":"UserDefinedTypeName","pathNode":{"id":7692,"name":"Common.Distribution","nodeType":"IdentifierPath","referencedDeclaration":9815,"src":"2777:19:22"},"referencedDeclaration":9815,"src":"2777:19:22","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_storage_ptr","typeString":"struct Common.Distribution"}},"id":7694,"nodeType":"ArrayTypeName","src":"2777:21:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_storage_$dyn_storage_ptr","typeString":"struct Common.Distribution[]"}},"visibility":"internal"}],"src":"2767:61:22"},"returnParameters":{"id":7700,"nodeType":"ParameterList","parameters":[],"src":"2867:0:22"},"scope":7959,"src":"2737:1208:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7819,"nodeType":"Block","src":"4276:101:22","statements":[{"condition":{"id":7809,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"4290:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7817,"nodeType":"Block","src":"4336:35:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7814,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4350:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4350:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7816,"nodeType":"ExpressionStatement","src":"4350:10:22"}]},"id":7818,"nodeType":"IfStatement","src":"4286:85:22","trueBody":{"id":7813,"nodeType":"Block","src":"4297:33:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7810,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"4311:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4311:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7812,"nodeType":"ExpressionStatement","src":"4311:8:22"}]}}]},"documentation":{"id":7801,"nodeType":"StructuredDocumentation","src":"3951:247:22","text":"@notice Set the contract's pause state (ie. before taking snapshot for the harvester)\n@dev    More efficient compared to setting the merkle proofs of all affected rewardIds to 0x\n@param  state  bool  Pause state"},"functionSelector":"cdb88ad1","id":7820,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7806,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4256:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7807,"kind":"modifierInvocation","modifierName":{"id":7805,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4247:8:22"},"nodeType":"ModifierInvocation","src":"4247:28:22"}],"name":"setPauseState","nameLocation":"4212:13:22","nodeType":"FunctionDefinition","parameters":{"id":7804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"state","nameLocation":"4231:5:22","nodeType":"VariableDeclaration","scope":7820,"src":"4226:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7802,"name":"bool","nodeType":"ElementaryTypeName","src":"4226:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4225:12:22"},"returnParameters":{"id":7808,"nodeType":"ParameterList","parameters":[],"src":"4276:0:22"},"scope":7959,"src":"4203:174:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7833,"nodeType":"Block","src":"4601:51:22","statements":[{"expression":{"arguments":[{"id":7830,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"4635:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7829,"name":"_setActiveTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"4611:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4611:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7832,"nodeType":"ExpressionStatement","src":"4611:34:22"}]},"documentation":{"id":7821,"nodeType":"StructuredDocumentation","src":"4383:107:22","text":"@notice Set the active timer duration\n@param  _duration  uint256  Timer duration"},"functionSelector":"960d264d","id":7834,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7826,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4581:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7827,"kind":"modifierInvocation","modifierName":{"id":7825,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4572:8:22"},"nodeType":"ModifierInvocation","src":"4572:28:22"}],"name":"changeActiveTimerDuration","nameLocation":"4504:25:22","nodeType":"FunctionDefinition","parameters":{"id":7824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"_duration","nameLocation":"4547:9:22","nodeType":"VariableDeclaration","scope":7834,"src":"4539:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7822,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:33:22"},"returnParameters":{"id":7828,"nodeType":"ParameterList","parameters":[],"src":"4601:0:22"},"scope":7959,"src":"4495:157:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7933,"nodeType":"Block","src":"5087:845:22","statements":[{"assignments":[7849],"declarations":[{"constant":false,"id":7849,"mutability":"mutable","name":"reward","nameLocation":"5111:6:22","nodeType":"VariableDeclaration","scope":7933,"src":"5097:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_memory_ptr","typeString":"struct RewardDistributor.Reward"},"typeName":{"id":7848,"nodeType":"UserDefinedTypeName","pathNode":{"id":7847,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":7566,"src":"5097:6:22"},"referencedDeclaration":7566,"src":"5097:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage_ptr","typeString":"struct RewardDistributor.Reward"}},"visibility":"internal"}],"id":7853,"initialValue":{"baseExpression":{"id":7850,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"5120:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Reward_$7566_storage_$","typeString":"mapping(bytes32 => struct RewardDistributor.Reward storage ref)"}},"id":7852,"indexExpression":{"id":7851,"name":"_identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"5128:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5120:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_storage","typeString":"struct RewardDistributor.Reward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5097:43:22"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7854,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5155:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_memory_ptr","typeString":"struct RewardDistributor.Reward memory"}},"id":7855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":7561,"src":"5155:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5176:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5155:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7863,"nodeType":"IfStatement","src":"5151:61:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7858,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5186:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":9966,"src":"5186:24:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5186:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7862,"nodeType":"RevertStatement","src":"5179:33:22"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7864,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5226:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_memory_ptr","typeString":"struct RewardDistributor.Reward memory"}},"id":7865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"activeAt","nodeType":"MemberAccess","referencedDeclaration":7565,"src":"5226:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7866,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5244:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5244:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5226:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7874,"nodeType":"IfStatement","src":"5222:69:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7869,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5268:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RewardInactive","nodeType":"MemberAccess","referencedDeclaration":9975,"src":"5268:21:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5268:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7873,"nodeType":"RevertStatement","src":"5261:30:22"}},{"assignments":[7876],"declarations":[{"constant":false,"id":7876,"mutability":"mutable","name":"lifeTimeAmount","nameLocation":"5310:14:22","nodeType":"VariableDeclaration","scope":7933,"src":"5302:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7884,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":7877,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"5327:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":7879,"indexExpression":{"id":7878,"name":"_identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"5335:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5327:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7881,"indexExpression":{"id":7880,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"5348:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5327:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7882,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"5360:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5327:40:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5302:65:22"},{"condition":{"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5430:177:22","subExpression":{"arguments":[{"id":7887,"name":"_merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"5475:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"id":7888,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5505:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_memory_ptr","typeString":"struct RewardDistributor.Reward memory"}},"id":7889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":7561,"src":"5505:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":7893,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"5567:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7894,"name":"lifeTimeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"5577:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7891,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5550:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5550:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5550:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7890,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5540:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5540:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7885,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"5431:11:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$2444_$","typeString":"type(library MerkleProof)"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCalldata","nodeType":"MemberAccess","referencedDeclaration":1961,"src":"5431:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] calldata,bytes32,bytes32) pure returns (bool)"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5431:176:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7904,"nodeType":"IfStatement","src":"5413:233:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7899,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5625:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidProof","nodeType":"MemberAccess","referencedDeclaration":9981,"src":"5625:19:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5625:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7903,"nodeType":"RevertStatement","src":"5618:28:22"}},{"expression":{"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7905,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"5715:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(address => uint256))"}},"id":7908,"indexExpression":{"id":7906,"name":"_identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"5723:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5715:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7909,"indexExpression":{"id":7907,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"5736:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5715:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7910,"name":"lifeTimeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"5748:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5715:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7912,"nodeType":"ExpressionStatement","src":"5715:47:22"},{"assignments":[7914],"declarations":[{"constant":false,"id":7914,"mutability":"mutable","name":"token","nameLocation":"5781:5:22","nodeType":"VariableDeclaration","scope":7933,"src":"5773:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7913,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7917,"initialValue":{"expression":{"id":7915,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"5789:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7566_memory_ptr","typeString":"struct RewardDistributor.Reward memory"}},"id":7916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":7559,"src":"5789:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5773:28:22"},{"expression":{"arguments":[{"id":7922,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"5839:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7923,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"5849:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7919,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"5819:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7918,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5812:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5812:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":984,"src":"5812:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5812:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7925,"nodeType":"ExpressionStatement","src":"5812:45:22"},{"eventCall":{"arguments":[{"id":7927,"name":"_identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"5887:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7928,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"5900:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7929,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"5907:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7930,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"5917:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7926,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"5873:13:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5873:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7932,"nodeType":"EmitStatement","src":"5868:57:22"}]},"documentation":{"id":7835,"nodeType":"StructuredDocumentation","src":"4658:273:22","text":"@notice Claim a reward\n@param  _identifier   bytes32    Merkle identifier\n@param  _account      address    Eligible user account\n@param  _amount       uint256    Reward amount\n@param  _merkleProof  bytes32[]  Merkle proof"},"id":7934,"implemented":true,"kind":"function","modifiers":[],"name":"_claim","nameLocation":"4945:6:22","nodeType":"FunctionDefinition","parameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7837,"mutability":"mutable","name":"_identifier","nameLocation":"4969:11:22","nodeType":"VariableDeclaration","scope":7934,"src":"4961:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4961:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7839,"mutability":"mutable","name":"_account","nameLocation":"4998:8:22","nodeType":"VariableDeclaration","scope":7934,"src":"4990:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7838,"name":"address","nodeType":"ElementaryTypeName","src":"4990:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7841,"mutability":"mutable","name":"_amount","nameLocation":"5024:7:22","nodeType":"VariableDeclaration","scope":7934,"src":"5016:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7844,"mutability":"mutable","name":"_merkleProof","nameLocation":"5060:12:22","nodeType":"VariableDeclaration","scope":7934,"src":"5041:31:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5041:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7843,"nodeType":"ArrayTypeName","src":"5041:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4951:127:22"},"returnParameters":{"id":7846,"nodeType":"ParameterList","parameters":[],"src":"5087:0:22"},"scope":7959,"src":"4936:996:22","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7957,"nodeType":"Block","src":"6124:194:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7940,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"6138:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7941,"name":"MINIMUM_ACTIVE_TIMER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"6150:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6138:32:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7948,"nodeType":"IfStatement","src":"6134:86:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7943,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6191:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidTimerDuration","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"6191:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6191:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7947,"nodeType":"RevertStatement","src":"6184:36:22"}},{"expression":{"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7949,"name":"activeTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"6231:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7950,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"6253:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6231:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7952,"nodeType":"ExpressionStatement","src":"6231:31:22"},{"eventCall":{"arguments":[{"id":7954,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"6301:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7953,"name":"SetActiveTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"6278:22:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6278:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7956,"nodeType":"EmitStatement","src":"6273:38:22"}]},"documentation":{"id":7935,"nodeType":"StructuredDocumentation","src":"5938:120:22","text":"@dev    Internal to set the active timer duration\n@param  _duration  uint256  Timer duration"},"id":7958,"implemented":true,"kind":"function","modifiers":[],"name":"_setActiveTimerDuration","nameLocation":"6072:23:22","nodeType":"FunctionDefinition","parameters":{"id":7938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7937,"mutability":"mutable","name":"_duration","nameLocation":"6104:9:22","nodeType":"VariableDeclaration","scope":7958,"src":"6096:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7936,"name":"uint256","nodeType":"ElementaryTypeName","src":"6096:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6095:19:22"},"returnParameters":{"id":7939,"nodeType":"ParameterList","parameters":[],"src":"6124:0:22"},"scope":7959,"src":"6063:255:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7960,"src":"632:5688:22","usedErrors":[9954,9963,9966,9975,9978,9981]}],"src":"32:6289:22"},"id":22},"contracts/RewardHarvester.sol":{"ast":{"absolutePath":"contracts/RewardHarvester.sol","exportedSymbols":{"Common":[9874],"Errors":[10009],"IERC20":[915],"MerkleProof":[2444],"Ownable2Step":[584],"RewardHarvester":[8712],"SafeERC20":[1327]},"id":8713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7961,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":7963,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8713,"sourceUnit":585,"src":"57:77:23","symbolAliases":[{"foreign":{"id":7962,"name":"Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"65:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable2Step_$584_$","typeString":"type(contract Ownable2Step)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8713,"sourceUnit":916,"src":"135:70:23","symbolAliases":[{"foreign":{"id":7964,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"143:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8713,"sourceUnit":1328,"src":"206:82:23","symbolAliases":[{"foreign":{"id":7966,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"214:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1327_$","typeString":"type(library SafeERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":7969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8713,"sourceUnit":2445,"src":"289:87:23","symbolAliases":[{"foreign":{"id":7968,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"297:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$2444_$","typeString":"type(library MerkleProof)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":7971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8713,"sourceUnit":10010,"src":"377:46:23","symbolAliases":[{"foreign":{"id":7970,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"385:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Common.sol","file":"./libraries/Common.sol","id":7973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8713,"sourceUnit":9875,"src":"424:46:23","symbolAliases":[{"foreign":{"id":7972,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"432:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7974,"name":"Ownable2Step","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"500:12:23"},"id":7975,"nodeType":"InheritanceSpecifier","src":"500:12:23"}],"canonicalName":"RewardHarvester","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8712,"linearizedBaseContracts":[8712,584,501,1687],"name":"RewardHarvester","nameLocation":"481:15:23","nodeType":"ContractDefinition","nodes":[{"id":7979,"libraryName":{"id":7976,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"525:9:23"},"nodeType":"UsingForDirective","src":"519:27:23","typeName":{"id":7978,"nodeType":"UserDefinedTypeName","pathNode":{"id":7977,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"539:6:23"},"referencedDeclaration":915,"src":"539:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}},{"canonicalName":"RewardHarvester.Reward","id":7986,"members":[{"constant":false,"id":7981,"mutability":"mutable","name":"merkleRoot","nameLocation":"584:10:23","nodeType":"VariableDeclaration","scope":7986,"src":"576:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"576:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7983,"mutability":"mutable","name":"hashedData","nameLocation":"612:10:23","nodeType":"VariableDeclaration","scope":7986,"src":"604:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"604:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7985,"mutability":"mutable","name":"activeAt","nameLocation":"640:8:23","nodeType":"VariableDeclaration","scope":7986,"src":"632:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7984,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Reward","nameLocation":"559:6:23","nodeType":"StructDefinition","scope":8712,"src":"552:103:23","visibility":"public"},{"constant":true,"functionSelector":"8686ebcc","id":7989,"mutability":"constant","name":"FEE_BASIS","nameLocation":"685:9:23","nodeType":"VariableDeclaration","scope":8712,"src":"661:45:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7987,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f3030305f303030","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"697:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},"visibility":"public"},{"constant":true,"functionSelector":"bc063e1a","id":7992,"mutability":"constant","name":"MAX_FEE","nameLocation":"736:7:23","nodeType":"VariableDeclaration","scope":8712,"src":"712:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7990,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130305f303030","id":7991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"746:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"visibility":"public"},{"constant":true,"functionSelector":"7fdba5f6","id":7995,"mutability":"constant","name":"MINIMUM_ACTIVE_TIMER","nameLocation":"783:20:23","nodeType":"VariableDeclaration","scope":8712,"src":"759:54:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7993,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"806:7:23","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_10800_by_1","typeString":"int_const 10800"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"a230c524","id":7999,"mutability":"mutable","name":"isMember","nameLocation":"872:8:23","nodeType":"VariableDeclaration","scope":8712,"src":"840:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7998,"keyType":{"id":7996,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"840:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":7997,"name":"bool","nodeType":"ElementaryTypeName","src":"859:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"5b2478ea","id":8003,"mutability":"mutable","name":"feesCollected","nameLocation":"963:13:23","nodeType":"VariableDeclaration","scope":8712,"src":"928:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8002,"keyType":{"id":8000,"name":"address","nodeType":"ElementaryTypeName","src":"936:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"928:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":8001,"name":"uint256","nodeType":"ElementaryTypeName","src":"947:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"0700037d","id":8008,"mutability":"mutable","name":"rewards","nameLocation":"1074:7:23","nodeType":"VariableDeclaration","scope":8712,"src":"1040:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$7986_storage_$","typeString":"mapping(address => struct RewardHarvester.Reward)"},"typeName":{"id":8007,"keyType":{"id":8004,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1040:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$7986_storage_$","typeString":"mapping(address => struct RewardHarvester.Reward)"},"valueType":{"id":8006,"nodeType":"UserDefinedTypeName","pathNode":{"id":8005,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":7986,"src":"1059:6:23"},"referencedDeclaration":7986,"src":"1059:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward"}}},"visibility":"public"},{"constant":false,"functionSelector":"0c9cbf0e","id":8014,"mutability":"mutable","name":"claimed","nameLocation":"1221:7:23","nodeType":"VariableDeclaration","scope":8712,"src":"1166:62:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":8013,"keyType":{"id":8009,"name":"address","nodeType":"ElementaryTypeName","src":"1174:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1166:47:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":8012,"keyType":{"id":8010,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":8011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"74c13fda","id":8016,"mutability":"mutable","name":"defaultToken","nameLocation":"1278:12:23","nodeType":"VariableDeclaration","scope":8712,"src":"1263:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8015,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"570ca735","id":8018,"mutability":"mutable","name":"operator","nameLocation":"1335:8:23","nodeType":"VariableDeclaration","scope":8712,"src":"1320:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8017,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d379be23","id":8020,"mutability":"mutable","name":"claimer","nameLocation":"1387:7:23","nodeType":"VariableDeclaration","scope":8712,"src":"1372:22:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8019,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5512b811","id":8022,"mutability":"mutable","name":"rewardSwapper","nameLocation":"1445:13:23","nodeType":"VariableDeclaration","scope":8712,"src":"1430:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8021,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"33f642f6","id":8024,"mutability":"mutable","name":"activeTimerDuration","nameLocation":"1569:19:23","nodeType":"VariableDeclaration","scope":8712,"src":"1554:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1554:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":8028,"name":"MemberJoined","nameLocation":"1697:12:23","nodeType":"EventDefinition","parameters":{"id":8027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8026,"indexed":false,"mutability":"mutable","name":"member","nameLocation":"1718:6:23","nodeType":"VariableDeclaration","scope":8028,"src":"1710:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8025,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1709:16:23"},"src":"1691:35:23"},{"anonymous":false,"id":8032,"name":"MemberLeft","nameLocation":"1737:10:23","nodeType":"EventDefinition","parameters":{"id":8031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"indexed":false,"mutability":"mutable","name":"member","nameLocation":"1756:6:23","nodeType":"VariableDeclaration","scope":8032,"src":"1748:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8029,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:16:23"},"src":"1731:33:23"},{"anonymous":false,"id":8038,"name":"FeesCollected","nameLocation":"1775:13:23","nodeType":"EventDefinition","parameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8034,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1805:5:23","nodeType":"VariableDeclaration","scope":8038,"src":"1789:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8033,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8036,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1820:6:23","nodeType":"VariableDeclaration","scope":8038,"src":"1812:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1788:39:23"},"src":"1769:59:23"},{"anonymous":false,"id":8044,"name":"BribeTransferred","nameLocation":"1839:16:23","nodeType":"EventDefinition","parameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8040,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1872:5:23","nodeType":"VariableDeclaration","scope":8044,"src":"1856:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8039,"name":"address","nodeType":"ElementaryTypeName","src":"1856:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8042,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"1887:11:23","nodeType":"VariableDeclaration","scope":8044,"src":"1879:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1855:44:23"},"src":"1833:67:23"},{"anonymous":false,"id":8056,"name":"RewardClaimed","nameLocation":"1911:13:23","nodeType":"EventDefinition","parameters":{"id":8055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8046,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1950:5:23","nodeType":"VariableDeclaration","scope":8056,"src":"1934:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8045,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8048,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1981:7:23","nodeType":"VariableDeclaration","scope":8056,"src":"1965:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8047,"name":"address","nodeType":"ElementaryTypeName","src":"1965:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8050,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2006:6:23","nodeType":"VariableDeclaration","scope":8056,"src":"1998:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1998:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8052,"indexed":false,"mutability":"mutable","name":"postFeeAmount","nameLocation":"2030:13:23","nodeType":"VariableDeclaration","scope":8056,"src":"2022:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2022:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8054,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"2061:8:23","nodeType":"VariableDeclaration","scope":8056,"src":"2053:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8053,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1924:151:23"},"src":"1905:171:23"},{"anonymous":false,"id":8066,"name":"RewardMetadataUpdated","nameLocation":"2087:21:23","nodeType":"EventDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2134:5:23","nodeType":"VariableDeclaration","scope":8066,"src":"2118:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8057,"name":"address","nodeType":"ElementaryTypeName","src":"2118:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8060,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"2157:10:23","nodeType":"VariableDeclaration","scope":8066,"src":"2149:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8062,"indexed":false,"mutability":"mutable","name":"proof","nameLocation":"2185:5:23","nodeType":"VariableDeclaration","scope":8066,"src":"2177:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2177:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8064,"indexed":false,"mutability":"mutable","name":"activeAt","nameLocation":"2208:8:23","nodeType":"VariableDeclaration","scope":8066,"src":"2200:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:114:23"},"src":"2081:142:23"},{"anonymous":false,"id":8070,"name":"DefaultTokenUpdated","nameLocation":"2234:19:23","nodeType":"EventDefinition","parameters":{"id":8069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8068,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2270:5:23","nodeType":"VariableDeclaration","scope":8070,"src":"2254:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8067,"name":"address","nodeType":"ElementaryTypeName","src":"2254:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:23:23"},"src":"2228:49:23"},{"anonymous":false,"id":8074,"name":"SetOperator","nameLocation":"2288:11:23","nodeType":"EventDefinition","parameters":{"id":8073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8072,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2316:8:23","nodeType":"VariableDeclaration","scope":8074,"src":"2300:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8071,"name":"address","nodeType":"ElementaryTypeName","src":"2300:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2299:26:23"},"src":"2282:44:23"},{"anonymous":false,"id":8078,"name":"SetClaimer","nameLocation":"2337:10:23","nodeType":"EventDefinition","parameters":{"id":8077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8076,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"2364:7:23","nodeType":"VariableDeclaration","scope":8078,"src":"2348:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8075,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:25:23"},"src":"2331:42:23"},{"anonymous":false,"id":8082,"name":"SetRewardSwapper","nameLocation":"2384:16:23","nodeType":"EventDefinition","parameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"indexed":true,"mutability":"mutable","name":"rewardSwapper","nameLocation":"2417:13:23","nodeType":"VariableDeclaration","scope":8082,"src":"2401:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8079,"name":"address","nodeType":"ElementaryTypeName","src":"2401:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2400:31:23"},"src":"2378:54:23"},{"anonymous":false,"id":8086,"name":"SetActiveTimerDuration","nameLocation":"2443:22:23","nodeType":"EventDefinition","parameters":{"id":8085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8084,"indexed":false,"mutability":"mutable","name":"duration","nameLocation":"2474:8:23","nodeType":"VariableDeclaration","scope":8086,"src":"2466:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2465:18:23"},"src":"2437:47:23"},{"body":{"id":8106,"nodeType":"Block","src":"2685:122:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2699:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2699:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8091,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"2713:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2699:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2725:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2725:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8095,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2739:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2739:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2725:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2699:47:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8104,"nodeType":"IfStatement","src":"2695:94:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8099,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2767:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAuthorized","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"2767:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2767:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8103,"nodeType":"RevertStatement","src":"2760:29:23"}},{"id":8105,"nodeType":"PlaceholderStatement","src":"2799:1:23"}]},"documentation":{"id":8087,"nodeType":"StructuredDocumentation","src":"2586:63:23","text":" @notice Modifier to check caller is operator"},"id":8107,"name":"onlyOperatorOrOwner","nameLocation":"2663:19:23","nodeType":"ModifierDefinition","parameters":{"id":8088,"nodeType":"ParameterList","parameters":[],"src":"2682:2:23"},"src":"2654:153:23","virtual":false,"visibility":"internal"},{"body":{"id":8126,"nodeType":"Block","src":"2938:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8110,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2952:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2952:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8112,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"2966:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2952:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2978:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2978:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8116,"name":"rewardSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8022,"src":"2992:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2978:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2952:53:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8124,"nodeType":"IfStatement","src":"2948:100:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8119,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"3026:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAuthorized","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"3026:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3026:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8123,"nodeType":"RevertStatement","src":"3019:29:23"}},{"id":8125,"nodeType":"PlaceholderStatement","src":"3058:1:23"}]},"documentation":{"id":8108,"nodeType":"StructuredDocumentation","src":"2813:81:23","text":" @notice Modifier to check caller is operator or reward swapper"},"id":8127,"name":"onlyOperatorOrRewardSwapper","nameLocation":"2908:27:23","nodeType":"ModifierDefinition","parameters":{"id":8109,"nodeType":"ParameterList","parameters":[],"src":"2935:2:23"},"src":"2899:167:23","virtual":false,"visibility":"internal"},{"body":{"id":8152,"nodeType":"Block","src":"3276:179:23","statements":[{"expression":{"arguments":[{"id":8137,"name":"_defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"3303:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8136,"name":"_setDefaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8633,"src":"3286:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3286:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8139,"nodeType":"ExpressionStatement","src":"3286:31:23"},{"expression":{"arguments":[{"id":8141,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"3340:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8140,"name":"_setOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"3327:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3327:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8143,"nodeType":"ExpressionStatement","src":"3327:23:23"},{"expression":{"arguments":[{"id":8145,"name":"_rewardSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"3378:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8144,"name":"_setRewardSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"3360:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3360:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8147,"nodeType":"ExpressionStatement","src":"3360:33:23"},{"expression":{"arguments":[{"id":8149,"name":"MINIMUM_ACTIVE_TIMER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"3427:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8148,"name":"_setActiveTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"3403:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3403:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8151,"nodeType":"ExpressionStatement","src":"3403:45:23"}]},"id":8153,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"_rewardSwapper","nameLocation":"3197:14:23","nodeType":"VariableDeclaration","scope":8153,"src":"3189:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8128,"name":"address","nodeType":"ElementaryTypeName","src":"3189:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8131,"mutability":"mutable","name":"_operator","nameLocation":"3229:9:23","nodeType":"VariableDeclaration","scope":8153,"src":"3221:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8130,"name":"address","nodeType":"ElementaryTypeName","src":"3221:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8133,"mutability":"mutable","name":"_defaultToken","nameLocation":"3256:13:23","nodeType":"VariableDeclaration","scope":8153,"src":"3248:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8132,"name":"address","nodeType":"ElementaryTypeName","src":"3248:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3179:96:23"},"returnParameters":{"id":8135,"nodeType":"ParameterList","parameters":[],"src":"3276:0:23"},"scope":8712,"src":"3168:287:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8169,"nodeType":"Block","src":"3678:84:23","statements":[{"expression":{"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8157,"name":"isMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"3688:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8160,"indexExpression":{"expression":{"id":8158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3697:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3697:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3688:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3711:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3688:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8163,"nodeType":"ExpressionStatement","src":"3688:27:23"},{"eventCall":{"arguments":[{"expression":{"id":8165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3744:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3744:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8164,"name":"MemberJoined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"3731:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3731:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8168,"nodeType":"EmitStatement","src":"3726:29:23"}]},"documentation":{"id":8154,"nodeType":"StructuredDocumentation","src":"3558:90:23","text":"@notice Join the harvester to enable claiming rewards in default token"},"functionSelector":"b688a363","id":8170,"implemented":true,"kind":"function","modifiers":[],"name":"join","nameLocation":"3662:4:23","nodeType":"FunctionDefinition","parameters":{"id":8155,"nodeType":"ParameterList","parameters":[],"src":"3666:2:23"},"returnParameters":{"id":8156,"nodeType":"ParameterList","parameters":[],"src":"3678:0:23"},"scope":8712,"src":"3653:109:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8186,"nodeType":"Block","src":"3842:83:23","statements":[{"expression":{"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8174,"name":"isMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"3852:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8177,"indexExpression":{"expression":{"id":8175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3861:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3861:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3852:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3875:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3852:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8180,"nodeType":"ExpressionStatement","src":"3852:28:23"},{"eventCall":{"arguments":[{"expression":{"id":8182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3907:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3907:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8181,"name":"MemberLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"3896:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8185,"nodeType":"EmitStatement","src":"3891:27:23"}]},"documentation":{"id":8171,"nodeType":"StructuredDocumentation","src":"3768:43:23","text":"@notice Leave harvester"},"functionSelector":"d66d9e19","id":8187,"implemented":true,"kind":"function","modifiers":[],"name":"leave","nameLocation":"3825:5:23","nodeType":"FunctionDefinition","parameters":{"id":8172,"nodeType":"ParameterList","parameters":[],"src":"3830:2:23"},"returnParameters":{"id":8173,"nodeType":"ParameterList","parameters":[],"src":"3842:0:23"},"scope":8712,"src":"3816:109:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8347,"nodeType":"Block","src":"4644:1259:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4658:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4658:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8206,"name":"claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"4672:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4658:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8213,"nodeType":"IfStatement","src":"4654:56:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8208,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4688:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAuthorized","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"4688:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8212,"nodeType":"RevertStatement","src":"4681:29:23"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8214,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"4724:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4736:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8215,"name":"address","nodeType":"ElementaryTypeName","src":"4736:7:23","typeDescriptions":{}}},"id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4736:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4724:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8225,"nodeType":"IfStatement","src":"4720:56:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8220,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4755:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidClaim","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"4755:19:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4755:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8224,"nodeType":"RevertStatement","src":"4748:28:23"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8226,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"4790:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4801:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4790:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8234,"nodeType":"IfStatement","src":"4786:47:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8229,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4811:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAmount","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"4811:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8233,"nodeType":"RevertStatement","src":"4804:29:23"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8235,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"4847:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8236,"name":"MAX_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"4854:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4847:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8243,"nodeType":"IfStatement","src":"4843:46:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8238,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4870:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidFee","nodeType":"MemberAccess","referencedDeclaration":9939,"src":"4870:17:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4870:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8242,"nodeType":"RevertStatement","src":"4863:26:23"}},{"assignments":[8245],"declarations":[{"constant":false,"id":8245,"mutability":"mutable","name":"feeAmount","nameLocation":"4951:9:23","nodeType":"VariableDeclaration","scope":8347,"src":"4943:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4943:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8252,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8246,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"4964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8247,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"4974:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4964:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4963:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8250,"name":"FEE_BASIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"4982:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4963:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4943:48:23"},{"assignments":[8254],"declarations":[{"constant":false,"id":8254,"mutability":"mutable","name":"postFeeAmount","nameLocation":"5009:13:23","nodeType":"VariableDeclaration","scope":8347,"src":"5001:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8258,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8255,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"5025:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8256,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"5035:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5025:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5001:43:23"},{"expression":{"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8259,"name":"feesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"5054:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8261,"indexExpression":{"id":8260,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"5068:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5054:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8262,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"5079:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8264,"nodeType":"ExpressionStatement","src":"5054:34:23"},{"assignments":[8267],"declarations":[{"constant":false,"id":8267,"mutability":"mutable","name":"reward","nameLocation":"5113:6:23","nodeType":"VariableDeclaration","scope":8347,"src":"5099:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_memory_ptr","typeString":"struct RewardHarvester.Reward"},"typeName":{"id":8266,"nodeType":"UserDefinedTypeName","pathNode":{"id":8265,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":7986,"src":"5099:6:23"},"referencedDeclaration":7986,"src":"5099:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward"}},"visibility":"internal"}],"id":8271,"initialValue":{"baseExpression":{"id":8268,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"5122:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$7986_storage_$","typeString":"mapping(address => struct RewardHarvester.Reward storage ref)"}},"id":8270,"indexExpression":{"id":8269,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"5130:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5122:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage","typeString":"struct RewardHarvester.Reward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5099:38:23"},{"assignments":[8273],"declarations":[{"constant":false,"id":8273,"mutability":"mutable","name":"lifeTimeAmount","nameLocation":"5155:14:23","nodeType":"VariableDeclaration","scope":8347,"src":"5147:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5147:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8281,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":8274,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"5172:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":8276,"indexExpression":{"id":8275,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"5180:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5172:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8278,"indexExpression":{"id":8277,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"5188:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5172:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8279,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"5200:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5172:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5147:60:23"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8282,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"5222:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_memory_ptr","typeString":"struct RewardHarvester.Reward memory"}},"id":8283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":7981,"src":"5222:17:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5222:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8291,"nodeType":"IfStatement","src":"5218:63:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8286,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5253:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidDistribution","nodeType":"MemberAccess","referencedDeclaration":9963,"src":"5253:26:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5253:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8290,"nodeType":"RevertStatement","src":"5246:35:23"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8292,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"5295:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_memory_ptr","typeString":"struct RewardHarvester.Reward memory"}},"id":8293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"activeAt","nodeType":"MemberAccess","referencedDeclaration":7985,"src":"5295:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8294,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5313:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5313:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5295:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8302,"nodeType":"IfStatement","src":"5291:69:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8297,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5337:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RewardInactive","nodeType":"MemberAccess","referencedDeclaration":9975,"src":"5337:21:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5337:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8301,"nodeType":"RevertStatement","src":"5330:30:23"}},{"condition":{"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5423:177:23","subExpression":{"arguments":[{"id":8305,"name":"_merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"5468:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"id":8306,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"5498:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_memory_ptr","typeString":"struct RewardHarvester.Reward memory"}},"id":8307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":7981,"src":"5498:17:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":8311,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"5560:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8312,"name":"lifeTimeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"5570:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8309,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5543:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5543:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5543:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8308,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5533:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5533:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8303,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"5424:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$2444_$","typeString":"type(library MerkleProof)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCalldata","nodeType":"MemberAccess","referencedDeclaration":1961,"src":"5424:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] calldata,bytes32,bytes32) pure returns (bool)"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5424:176:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8322,"nodeType":"IfStatement","src":"5406:233:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8317,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5618:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidProof","nodeType":"MemberAccess","referencedDeclaration":9981,"src":"5618:19:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8321,"nodeType":"RevertStatement","src":"5611:28:23"}},{"expression":{"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8323,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"5708:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":8326,"indexExpression":{"id":8324,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"5716:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5708:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8327,"indexExpression":{"id":8325,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"5724:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5708:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8328,"name":"lifeTimeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"5736:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5708:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8330,"nodeType":"ExpressionStatement","src":"5708:42:23"},{"expression":{"arguments":[{"id":8335,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"5789:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8336,"name":"postFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5800:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8332,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"5768:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5761:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5761:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":984,"src":"5761:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5761:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8338,"nodeType":"ExpressionStatement","src":"5761:53:23"},{"eventCall":{"arguments":[{"id":8340,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"5844:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8341,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"5852:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8342,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"5862:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8343,"name":"postFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5871:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8344,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8201,"src":"5886:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8339,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"5830:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,address,uint256,uint256,address)"}},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5830:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8346,"nodeType":"EmitStatement","src":"5825:71:23"}]},"documentation":{"id":8188,"nodeType":"StructuredDocumentation","src":"3931:513:23","text":"@notice Claim rewards based on the specified metadata\n@dev    Can only be called by the claimer contract\n@param  _token        address    Token to claim rewards\n@param  _account      address    Account to claim rewards\n@param  _amount       uint256    Amount of rewards to claim\n@param  _merkleProof  bytes32[]  Merkle proof of the claim\n@param  _fee          uint256    Claim fee\n@param  _receiver     address    Receiver of the rewards"},"functionSelector":"48a61ff5","id":8348,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"4458:5:23","nodeType":"FunctionDefinition","parameters":{"id":8202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8190,"mutability":"mutable","name":"_token","nameLocation":"4481:6:23","nodeType":"VariableDeclaration","scope":8348,"src":"4473:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8189,"name":"address","nodeType":"ElementaryTypeName","src":"4473:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8192,"mutability":"mutable","name":"_account","nameLocation":"4505:8:23","nodeType":"VariableDeclaration","scope":8348,"src":"4497:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8191,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8194,"mutability":"mutable","name":"_amount","nameLocation":"4531:7:23","nodeType":"VariableDeclaration","scope":8348,"src":"4523:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4523:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8197,"mutability":"mutable","name":"_merkleProof","nameLocation":"4567:12:23","nodeType":"VariableDeclaration","scope":8348,"src":"4548:31:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4548:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8196,"nodeType":"ArrayTypeName","src":"4548:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8199,"mutability":"mutable","name":"_fee","nameLocation":"4597:4:23","nodeType":"VariableDeclaration","scope":8348,"src":"4589:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8201,"mutability":"mutable","name":"_receiver","nameLocation":"4619:9:23","nodeType":"VariableDeclaration","scope":8348,"src":"4611:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8200,"name":"address","nodeType":"ElementaryTypeName","src":"4611:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4463:171:23"},"returnParameters":{"id":8203,"nodeType":"ParameterList","parameters":[],"src":"4644:0:23"},"scope":8712,"src":"4449:1454:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8407,"nodeType":"Block","src":"6142:372:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8356,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"6156:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6167:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6156:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8364,"nodeType":"IfStatement","src":"6152:47:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8359,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6177:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAmount","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"6177:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6177:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8363,"nodeType":"RevertStatement","src":"6170:29:23"}},{"assignments":[8367],"declarations":[{"constant":false,"id":8367,"mutability":"mutable","name":"token","nameLocation":"6217:5:23","nodeType":"VariableDeclaration","scope":8407,"src":"6210:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":8366,"nodeType":"UserDefinedTypeName","pathNode":{"id":8365,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"6210:6:23"},"referencedDeclaration":915,"src":"6210:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"}],"id":8371,"initialValue":{"arguments":[{"id":8369,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"6232:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8368,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6225:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6225:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"6210:35:23"},{"assignments":[8373],"declarations":[{"constant":false,"id":8373,"mutability":"mutable","name":"initialAmount","nameLocation":"6264:13:23","nodeType":"VariableDeclaration","scope":8407,"src":"6256:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8372,"name":"uint256","nodeType":"ElementaryTypeName","src":"6256:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8381,"initialValue":{"arguments":[{"arguments":[{"id":8378,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6304:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}],"id":8377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6296:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8376,"name":"address","nodeType":"ElementaryTypeName","src":"6296:7:23","typeDescriptions":{}}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6296:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"6280:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"6280:15:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6280:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6256:54:23"},{"expression":{"arguments":[{"expression":{"id":8385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6344:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8389,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6364:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}],"id":8388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6356:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8387,"name":"address","nodeType":"ElementaryTypeName","src":"6356:7:23","typeDescriptions":{}}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6356:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8391,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"6371:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8382,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"6321:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"6321:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6321:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8393,"nodeType":"ExpressionStatement","src":"6321:58:23"},{"eventCall":{"arguments":[{"id":8395,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"6425:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8400,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6475:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}],"id":8399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6467:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8398,"name":"address","nodeType":"ElementaryTypeName","src":"6467:7:23","typeDescriptions":{}}},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6467:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8396,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"6451:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"6451:15:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6451:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8403,"name":"initialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"6484:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6451:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8394,"name":"BribeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"6395:16:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6395:112:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8406,"nodeType":"EmitStatement","src":"6390:117:23"}]},"documentation":{"id":8349,"nodeType":"StructuredDocumentation","src":"5909:137:23","text":"@notice Deposit `defaultToken` to this contract\n@param  _amount  uint256  Amount of `defaultToken` to deposit"},"functionSelector":"1e2720ff","id":8408,"implemented":true,"kind":"function","modifiers":[{"id":8354,"kind":"modifierInvocation","modifierName":{"id":8353,"name":"onlyOperatorOrRewardSwapper","nodeType":"IdentifierPath","referencedDeclaration":8127,"src":"6114:27:23"},"nodeType":"ModifierInvocation","src":"6114:27:23"}],"name":"depositReward","nameLocation":"6060:13:23","nodeType":"FunctionDefinition","parameters":{"id":8352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8351,"mutability":"mutable","name":"_amount","nameLocation":"6091:7:23","nodeType":"VariableDeclaration","scope":8408,"src":"6083:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8350,"name":"uint256","nodeType":"ElementaryTypeName","src":"6083:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6073:31:23"},"returnParameters":{"id":8355,"nodeType":"ParameterList","parameters":[],"src":"6142:0:23"},"scope":8712,"src":"6051:463:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8480,"nodeType":"Block","src":"6925:545:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8420,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"6939:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6949:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8421,"name":"address","nodeType":"ElementaryTypeName","src":"6949:7:23","typeDescriptions":{}}},"id":8424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6949:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6939:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8431,"nodeType":"IfStatement","src":"6935:54:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8426,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6968:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidToken","nodeType":"MemberAccess","referencedDeclaration":9969,"src":"6968:19:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6968:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8430,"nodeType":"RevertStatement","src":"6961:28:23"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8432,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"7003:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7018:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7003:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8440,"nodeType":"IfStatement","src":"6999:55:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8435,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7028:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":9966,"src":"7028:24:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7028:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8439,"nodeType":"RevertStatement","src":"7021:33:23"}},{"assignments":[8442],"declarations":[{"constant":false,"id":8442,"mutability":"mutable","name":"activeAt","nameLocation":"7167:8:23","nodeType":"VariableDeclaration","scope":8480,"src":"7159:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8441,"name":"uint256","nodeType":"ElementaryTypeName","src":"7159:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8447,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8443,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7178:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7178:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8445,"name":"activeTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"7196:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7178:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7159:56:23"},{"assignments":[8450],"declarations":[{"constant":false,"id":8450,"mutability":"mutable","name":"reward","nameLocation":"7240:6:23","nodeType":"VariableDeclaration","scope":8480,"src":"7225:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward"},"typeName":{"id":8449,"nodeType":"UserDefinedTypeName","pathNode":{"id":8448,"name":"Reward","nodeType":"IdentifierPath","referencedDeclaration":7986,"src":"7225:6:23"},"referencedDeclaration":7986,"src":"7225:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward"}},"visibility":"internal"}],"id":8454,"initialValue":{"baseExpression":{"id":8451,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"7249:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Reward_$7986_storage_$","typeString":"mapping(address => struct RewardHarvester.Reward storage ref)"}},"id":8453,"indexExpression":{"id":8452,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"7257:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7249:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage","typeString":"struct RewardHarvester.Reward storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7225:39:23"},{"expression":{"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8455,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"7274:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward storage pointer"}},"id":8457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":7981,"src":"7274:17:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8458,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"7294:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7274:31:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8460,"nodeType":"ExpressionStatement","src":"7274:31:23"},{"expression":{"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8461,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"7315:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward storage pointer"}},"id":8463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"hashedData","nodeType":"MemberAccess","referencedDeclaration":7983,"src":"7315:17:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8464,"name":"_hashedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"7335:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7315:31:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8466,"nodeType":"ExpressionStatement","src":"7315:31:23"},{"expression":{"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8467,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"7356:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$7986_storage_ptr","typeString":"struct RewardHarvester.Reward storage pointer"}},"id":8469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"activeAt","nodeType":"MemberAccess","referencedDeclaration":7985,"src":"7356:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8470,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"7374:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7356:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8472,"nodeType":"ExpressionStatement","src":"7356:26:23"},{"eventCall":{"arguments":[{"id":8474,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"7420:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8475,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"7428:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8476,"name":"_hashedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"7441:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8477,"name":"activeAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"7454:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8473,"name":"RewardMetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"7398:21:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,uint256)"}},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7398:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8479,"nodeType":"EmitStatement","src":"7393:70:23"}]},"documentation":{"id":8409,"nodeType":"StructuredDocumentation","src":"6520:252:23","text":"@notice Update rewards metadata\n@param  _token       address  Token to update rewards metadata\n@param  _merkleRoot  bytes32  Merkle root of the rewards\n@param  _hashedData  bytes32  Hashed data of the rewards"},"functionSelector":"0cc630c7","id":8481,"implemented":true,"kind":"function","modifiers":[{"id":8418,"kind":"modifierInvocation","modifierName":{"id":8417,"name":"onlyOperatorOrOwner","nodeType":"IdentifierPath","referencedDeclaration":8107,"src":"6905:19:23"},"nodeType":"ModifierInvocation","src":"6905:19:23"}],"name":"updateRewardsMetadata","nameLocation":"6786:21:23","nodeType":"FunctionDefinition","parameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8411,"mutability":"mutable","name":"_token","nameLocation":"6825:6:23","nodeType":"VariableDeclaration","scope":8481,"src":"6817:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8410,"name":"address","nodeType":"ElementaryTypeName","src":"6817:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8413,"mutability":"mutable","name":"_merkleRoot","nameLocation":"6849:11:23","nodeType":"VariableDeclaration","scope":8481,"src":"6841:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6841:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8415,"mutability":"mutable","name":"_hashedData","nameLocation":"6878:11:23","nodeType":"VariableDeclaration","scope":8481,"src":"6870:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6807:88:23"},"returnParameters":{"id":8419,"nodeType":"ParameterList","parameters":[],"src":"6925:0:23"},"scope":8712,"src":"6777:693:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8524,"nodeType":"Block","src":"7632:249:23","statements":[{"assignments":[8490],"declarations":[{"constant":false,"id":8490,"mutability":"mutable","name":"amount","nameLocation":"7650:6:23","nodeType":"VariableDeclaration","scope":8524,"src":"7642:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8489,"name":"uint256","nodeType":"ElementaryTypeName","src":"7642:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8494,"initialValue":{"baseExpression":{"id":8491,"name":"feesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"7659:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8493,"indexExpression":{"id":8492,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"7673:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7659:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7642:38:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8495,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7694:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7704:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7694:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8503,"nodeType":"IfStatement","src":"7690:46:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8498,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7714:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAmount","nodeType":"MemberAccess","referencedDeclaration":9906,"src":"7714:20:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7714:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8502,"nodeType":"RevertStatement","src":"7707:29:23"}},{"expression":{"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8504,"name":"feesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"7747:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8506,"indexExpression":{"id":8505,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"7761:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7747:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7771:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7747:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8509,"nodeType":"ExpressionStatement","src":"7747:25:23"},{"expression":{"arguments":[{"expression":{"id":8514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7810:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7810:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7822:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8511,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"7789:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8510,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"7782:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7782:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":8513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":984,"src":"7782:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7782:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8518,"nodeType":"ExpressionStatement","src":"7782:47:23"},{"eventCall":{"arguments":[{"id":8520,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"7859:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7867:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8519,"name":"FeesCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"7845:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7845:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8523,"nodeType":"EmitStatement","src":"7840:34:23"}]},"documentation":{"id":8482,"nodeType":"StructuredDocumentation","src":"7476:95:23","text":"@notice Collect fees\n@param  _token  address  Token to collect fees"},"functionSelector":"a480ca79","id":8525,"implemented":true,"kind":"function","modifiers":[{"id":8487,"kind":"modifierInvocation","modifierName":{"id":8486,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"7622:9:23"},"nodeType":"ModifierInvocation","src":"7622:9:23"}],"name":"collectFees","nameLocation":"7585:11:23","nodeType":"FunctionDefinition","parameters":{"id":8485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"mutability":"mutable","name":"_token","nameLocation":"7605:6:23","nodeType":"VariableDeclaration","scope":8525,"src":"7597:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8483,"name":"address","nodeType":"ElementaryTypeName","src":"7597:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7596:16:23"},"returnParameters":{"id":8488,"nodeType":"ParameterList","parameters":[],"src":"7632:0:23"},"scope":8712,"src":"7576:305:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8537,"nodeType":"Block","src":"8058:40:23","statements":[{"expression":{"arguments":[{"id":8534,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"8081:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8533,"name":"_setOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"8068:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8068:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8536,"nodeType":"ExpressionStatement","src":"8068:23:23"}]},"documentation":{"id":8526,"nodeType":"StructuredDocumentation","src":"7887:104:23","text":"@notice Change the operator\n@param  _operator  address  New operator address"},"functionSelector":"06394c9b","id":8538,"implemented":true,"kind":"function","modifiers":[{"id":8531,"kind":"modifierInvocation","modifierName":{"id":8530,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"8048:9:23"},"nodeType":"ModifierInvocation","src":"8048:9:23"}],"name":"changeOperator","nameLocation":"8005:14:23","nodeType":"FunctionDefinition","parameters":{"id":8529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8528,"mutability":"mutable","name":"_operator","nameLocation":"8028:9:23","nodeType":"VariableDeclaration","scope":8538,"src":"8020:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8527,"name":"address","nodeType":"ElementaryTypeName","src":"8020:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8019:19:23"},"returnParameters":{"id":8532,"nodeType":"ParameterList","parameters":[],"src":"8058:0:23"},"scope":8712,"src":"7996:102:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8550,"nodeType":"Block","src":"8290:44:23","statements":[{"expression":{"arguments":[{"id":8547,"name":"_newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8541,"src":"8317:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8546,"name":"_setDefaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8633,"src":"8300:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8300:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8549,"nodeType":"ExpressionStatement","src":"8300:27:23"}]},"documentation":{"id":8539,"nodeType":"StructuredDocumentation","src":"8104:115:23","text":"@notice Change the `defaultToken`\n@param  _newToken  address  New default token address"},"functionSelector":"8e3fb0d3","id":8551,"implemented":true,"kind":"function","modifiers":[{"id":8544,"kind":"modifierInvocation","modifierName":{"id":8543,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"8280:9:23"},"nodeType":"ModifierInvocation","src":"8280:9:23"}],"name":"changeDefaultToken","nameLocation":"8233:18:23","nodeType":"FunctionDefinition","parameters":{"id":8542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8541,"mutability":"mutable","name":"_newToken","nameLocation":"8260:9:23","nodeType":"VariableDeclaration","scope":8551,"src":"8252:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8540,"name":"address","nodeType":"ElementaryTypeName","src":"8252:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8251:19:23"},"returnParameters":{"id":8545,"nodeType":"ParameterList","parameters":[],"src":"8290:0:23"},"scope":8712,"src":"8224:110:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8563,"nodeType":"Block","src":"8540:47:23","statements":[{"expression":{"arguments":[{"id":8560,"name":"_newSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"8568:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8559,"name":"_setRewardSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8660,"src":"8550:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8550:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"ExpressionStatement","src":"8550:30:23"}]},"documentation":{"id":8552,"nodeType":"StructuredDocumentation","src":"8340:126:23","text":"@notice Change the RewardSwapper contract\n@param  _newSwapper  address  New reward swapper address"},"functionSelector":"03aaf08b","id":8564,"implemented":true,"kind":"function","modifiers":[{"id":8557,"kind":"modifierInvocation","modifierName":{"id":8556,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"8530:9:23"},"nodeType":"ModifierInvocation","src":"8530:9:23"}],"name":"changeRewardSwapper","nameLocation":"8480:19:23","nodeType":"FunctionDefinition","parameters":{"id":8555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8554,"mutability":"mutable","name":"_newSwapper","nameLocation":"8508:11:23","nodeType":"VariableDeclaration","scope":8564,"src":"8500:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8553,"name":"address","nodeType":"ElementaryTypeName","src":"8500:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8499:21:23"},"returnParameters":{"id":8558,"nodeType":"ParameterList","parameters":[],"src":"8540:0:23"},"scope":8712,"src":"8471:116:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8592,"nodeType":"Block","src":"8763:140:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8572,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"8777:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8797:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8789:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8573,"name":"address","nodeType":"ElementaryTypeName","src":"8789:7:23","typeDescriptions":{}}},"id":8576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8789:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8777:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8583,"nodeType":"IfStatement","src":"8773:58:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8578,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"8808:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"8808:21:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8808:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8582,"nodeType":"RevertStatement","src":"8801:30:23"}},{"expression":{"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8584,"name":"claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"8842:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8585,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"8852:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8842:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8587,"nodeType":"ExpressionStatement","src":"8842:18:23"},{"eventCall":{"arguments":[{"id":8589,"name":"_claimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"8887:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8588,"name":"SetClaimer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"8876:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8876:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8591,"nodeType":"EmitStatement","src":"8871:25:23"}]},"documentation":{"id":8565,"nodeType":"StructuredDocumentation","src":"8593:105:23","text":"@notice Change claimer address\n@param  _claimer  address  New claimer address"},"functionSelector":"101cef48","id":8593,"implemented":true,"kind":"function","modifiers":[{"id":8570,"kind":"modifierInvocation","modifierName":{"id":8569,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"8753:9:23"},"nodeType":"ModifierInvocation","src":"8753:9:23"}],"name":"changeClaimer","nameLocation":"8712:13:23","nodeType":"FunctionDefinition","parameters":{"id":8568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8567,"mutability":"mutable","name":"_claimer","nameLocation":"8734:8:23","nodeType":"VariableDeclaration","scope":8593,"src":"8726:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8566,"name":"address","nodeType":"ElementaryTypeName","src":"8726:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8725:18:23"},"returnParameters":{"id":8571,"nodeType":"ParameterList","parameters":[],"src":"8763:0:23"},"scope":8712,"src":"8703:200:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8605,"nodeType":"Block","src":"9094:51:23","statements":[{"expression":{"arguments":[{"id":8602,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"9128:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8601,"name":"_setActiveTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"9104:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9104:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8604,"nodeType":"ExpressionStatement","src":"9104:34:23"}]},"documentation":{"id":8594,"nodeType":"StructuredDocumentation","src":"8909:107:23","text":"@notice Set the active timer duration\n@param  _duration  uint256  Timer duration"},"functionSelector":"960d264d","id":8606,"implemented":true,"kind":"function","modifiers":[{"id":8599,"kind":"modifierInvocation","modifierName":{"id":8598,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"9084:9:23"},"nodeType":"ModifierInvocation","src":"9084:9:23"}],"name":"changeActiveTimerDuration","nameLocation":"9030:25:23","nodeType":"FunctionDefinition","parameters":{"id":8597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8596,"mutability":"mutable","name":"_duration","nameLocation":"9064:9:23","nodeType":"VariableDeclaration","scope":8606,"src":"9056:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8595,"name":"uint256","nodeType":"ElementaryTypeName","src":"9056:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9055:19:23"},"returnParameters":{"id":8600,"nodeType":"ParameterList","parameters":[],"src":"9094:0:23"},"scope":8712,"src":"9021:124:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8632,"nodeType":"Block","src":"9417:155:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8612,"name":"_newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"9431:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9452:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9444:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8613,"name":"address","nodeType":"ElementaryTypeName","src":"9444:7:23","typeDescriptions":{}}},"id":8616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9444:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9431:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8623,"nodeType":"IfStatement","src":"9427:57:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8618,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"9463:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidToken","nodeType":"MemberAccess","referencedDeclaration":9969,"src":"9463:19:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9463:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8622,"nodeType":"RevertStatement","src":"9456:28:23"}},{"expression":{"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8624,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"9495:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8625,"name":"_newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"9510:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9495:24:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8627,"nodeType":"ExpressionStatement","src":"9495:24:23"},{"eventCall":{"arguments":[{"id":8629,"name":"_newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"9555:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8628,"name":"DefaultTokenUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"9535:19:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9535:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8631,"nodeType":"EmitStatement","src":"9530:35:23"}]},"documentation":{"id":8607,"nodeType":"StructuredDocumentation","src":"9247:111:23","text":"@dev    Internal to set the default token\n@param  _newToken  address  Token address"},"id":8633,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultToken","nameLocation":"9372:16:23","nodeType":"FunctionDefinition","parameters":{"id":8610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8609,"mutability":"mutable","name":"_newToken","nameLocation":"9397:9:23","nodeType":"VariableDeclaration","scope":8633,"src":"9389:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8608,"name":"address","nodeType":"ElementaryTypeName","src":"9389:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9388:19:23"},"returnParameters":{"id":8611,"nodeType":"ParameterList","parameters":[],"src":"9417:0:23"},"scope":8712,"src":"9363:209:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8659,"nodeType":"Block","src":"9770:161:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8639,"name":"_newSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"9784:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9807:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9799:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8640,"name":"address","nodeType":"ElementaryTypeName","src":"9799:7:23","typeDescriptions":{}}},"id":8643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9799:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9784:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8650,"nodeType":"IfStatement","src":"9780:61:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8645,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"9818:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"9818:21:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9818:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8649,"nodeType":"RevertStatement","src":"9811:30:23"}},{"expression":{"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8651,"name":"rewardSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8022,"src":"9852:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8652,"name":"_newSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"9868:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9852:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8654,"nodeType":"ExpressionStatement","src":"9852:27:23"},{"eventCall":{"arguments":[{"id":8656,"name":"_newSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"9912:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8655,"name":"SetRewardSwapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"9895:16:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9895:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8658,"nodeType":"EmitStatement","src":"9890:34:23"}]},"documentation":{"id":8634,"nodeType":"StructuredDocumentation","src":"9578:130:23","text":"@dev    Internal to set the RewardSwapper contract\n@param  _newSwapper  address  RewardSwapper address"},"id":8660,"implemented":true,"kind":"function","modifiers":[],"name":"_setRewardSwapper","nameLocation":"9722:17:23","nodeType":"FunctionDefinition","parameters":{"id":8637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8636,"mutability":"mutable","name":"_newSwapper","nameLocation":"9748:11:23","nodeType":"VariableDeclaration","scope":8660,"src":"9740:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8635,"name":"address","nodeType":"ElementaryTypeName","src":"9740:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9739:21:23"},"returnParameters":{"id":8638,"nodeType":"ParameterList","parameters":[],"src":"9770:0:23"},"scope":8712,"src":"9713:218:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8686,"nodeType":"Block","src":"10098:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8666,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"10112:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10125:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8667,"name":"address","nodeType":"ElementaryTypeName","src":"10125:7:23","typeDescriptions":{}}},"id":8670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10125:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10112:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8677,"nodeType":"IfStatement","src":"10108:60:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8672,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"10144:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidOperator","nodeType":"MemberAccess","referencedDeclaration":9987,"src":"10144:22:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10144:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8676,"nodeType":"RevertStatement","src":"10137:31:23"}},{"expression":{"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8678,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"10179:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8679,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"10190:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10179:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8681,"nodeType":"ExpressionStatement","src":"10179:20:23"},{"eventCall":{"arguments":[{"id":8683,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"10227:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8682,"name":"SetOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8074,"src":"10215:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10215:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8685,"nodeType":"EmitStatement","src":"10210:27:23"}]},"documentation":{"id":8661,"nodeType":"StructuredDocumentation","src":"9937:106:23","text":"@dev    Internal to set the operator\n@param  _operator  address  Token address"},"id":8687,"implemented":true,"kind":"function","modifiers":[],"name":"_setOperator","nameLocation":"10057:12:23","nodeType":"FunctionDefinition","parameters":{"id":8664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8663,"mutability":"mutable","name":"_operator","nameLocation":"10078:9:23","nodeType":"VariableDeclaration","scope":8687,"src":"10070:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8662,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10069:19:23"},"returnParameters":{"id":8665,"nodeType":"ParameterList","parameters":[],"src":"10098:0:23"},"scope":8712,"src":"10048:196:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8710,"nodeType":"Block","src":"10436:194:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8693,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"10450:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8694,"name":"MINIMUM_ACTIVE_TIMER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"10462:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10450:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8701,"nodeType":"IfStatement","src":"10446:86:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8696,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"10503:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidTimerDuration","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"10503:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10503:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8700,"nodeType":"RevertStatement","src":"10496:36:23"}},{"expression":{"id":8704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8702,"name":"activeTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"10543:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8703,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"10565:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10543:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8705,"nodeType":"ExpressionStatement","src":"10543:31:23"},{"eventCall":{"arguments":[{"id":8707,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"10613:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8706,"name":"SetActiveTimerDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"10590:22:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10590:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8709,"nodeType":"EmitStatement","src":"10585:38:23"}]},"documentation":{"id":8688,"nodeType":"StructuredDocumentation","src":"10250:120:23","text":"@dev    Internal to set the active timer duration\n@param  _duration  uint256  Timer duration"},"id":8711,"implemented":true,"kind":"function","modifiers":[],"name":"_setActiveTimerDuration","nameLocation":"10384:23:23","nodeType":"FunctionDefinition","parameters":{"id":8691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8690,"mutability":"mutable","name":"_duration","nameLocation":"10416:9:23","nodeType":"VariableDeclaration","scope":8711,"src":"10408:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8689,"name":"uint256","nodeType":"ElementaryTypeName","src":"10408:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10407:19:23"},"returnParameters":{"id":8692,"nodeType":"ParameterList","parameters":[],"src":"10436:0:23"},"scope":8712,"src":"10375:255:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8713,"src":"472:10160:23","usedErrors":[9888,9894,9906,9939,9963,9966,9969,9972,9975,9978,9981,9987]}],"src":"32:10601:23"},"id":23},"contracts/RewardHarvesterClaim.sol":{"ast":{"absolutePath":"contracts/RewardHarvesterClaim.sol","exportedSymbols":{"Errors":[10009],"Ownable2Step":[584],"ReentrancyGuard":[837],"RewardHarvester":[8712],"RewardHarvesterClaim":[8833]},"id":8834,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8714,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:24"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":8716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8834,"sourceUnit":585,"src":"57:77:24","symbolAliases":[{"foreign":{"id":8715,"name":"Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"65:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable2Step_$584_$","typeString":"type(contract Ownable2Step)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":8718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8834,"sourceUnit":838,"src":"135:85:24","symbolAliases":[{"foreign":{"id":8717,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"143:15:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReentrancyGuard_$837_$","typeString":"type(contract ReentrancyGuard)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/RewardHarvester.sol","file":"./RewardHarvester.sol","id":8720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8834,"sourceUnit":8713,"src":"221:54:24","symbolAliases":[{"foreign":{"id":8719,"name":"RewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"229:15:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RewardHarvester_$8712_$","typeString":"type(contract RewardHarvester)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":8722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8834,"sourceUnit":10010,"src":"276:46:24","symbolAliases":[{"foreign":{"id":8721,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"284:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8723,"name":"Ownable2Step","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"357:12:24"},"id":8724,"nodeType":"InheritanceSpecifier","src":"357:12:24"},{"baseName":{"id":8725,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":837,"src":"371:15:24"},"id":8726,"nodeType":"InheritanceSpecifier","src":"371:15:24"}],"canonicalName":"RewardHarvesterClaim","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8833,"linearizedBaseContracts":[8833,837,584,501,1687],"name":"RewardHarvesterClaim","nameLocation":"333:20:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"bc063e1a","id":8729,"mutability":"constant","name":"MAX_FEE","nameLocation":"417:7:24","nodeType":"VariableDeclaration","scope":8833,"src":"393:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8727,"name":"uint256","nodeType":"ElementaryTypeName","src":"393:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130305f303030","id":8728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"427:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"visibility":"public"},{"constant":false,"functionSelector":"ddca3f43","id":8731,"mutability":"mutable","name":"fee","nameLocation":"579:3:24","nodeType":"VariableDeclaration","scope":8833,"src":"564:18:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8730,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4bdaeac1","id":8734,"mutability":"immutable","name":"harvester","nameLocation":"647:9:24","nodeType":"VariableDeclaration","scope":8833,"src":"614:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"},"typeName":{"id":8733,"nodeType":"UserDefinedTypeName","pathNode":{"id":8732,"name":"RewardHarvester","nodeType":"IdentifierPath","referencedDeclaration":8712,"src":"614:15:24"},"referencedDeclaration":8712,"src":"614:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}},"visibility":"public"},{"anonymous":false,"id":8738,"name":"SetFee","nameLocation":"765:6:24","nodeType":"EventDefinition","parameters":{"id":8737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8736,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"780:3:24","nodeType":"VariableDeclaration","scope":8738,"src":"772:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8735,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"771:13:24"},"src":"759:26:24"},{"body":{"id":8767,"nodeType":"Block","src":"933:151:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8745,"name":"_harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"947:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"961:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8746,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:24","typeDescriptions":{}}},"id":8749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"961:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"947:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8756,"nodeType":"IfStatement","src":"943:60:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8751,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"980:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"980:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"980:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8755,"nodeType":"RevertStatement","src":"973:30:24"}},{"expression":{"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8757,"name":"harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"1014:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8759,"name":"_harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"1042:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8758,"name":"RewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"1026:15:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RewardHarvester_$8712_$","typeString":"type(contract RewardHarvester)"}},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1026:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}},"src":"1014:39:24","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}},"id":8762,"nodeType":"ExpressionStatement","src":"1014:39:24"},{"expression":{"arguments":[{"id":8764,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"1072:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8763,"name":"_setFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"1064:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1064:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8766,"nodeType":"ExpressionStatement","src":"1064:13:24"}]},"id":8768,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8740,"mutability":"mutable","name":"_harvester","nameLocation":"907:10:24","nodeType":"VariableDeclaration","scope":8768,"src":"899:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8739,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8742,"mutability":"mutable","name":"_fee","nameLocation":"927:4:24","nodeType":"VariableDeclaration","scope":8768,"src":"919:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:34:24"},"returnParameters":{"id":8744,"nodeType":"ParameterList","parameters":[],"src":"933:0:24"},"scope":8833,"src":"887:197:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8794,"nodeType":"Block","src":"1761:280:24","statements":[{"expression":{"arguments":[{"id":8786,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"1979:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8787,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"1987:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8788,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8775,"src":"1997:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8789,"name":"_merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8778,"src":"2006:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":8790,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"2020:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8791,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"2025:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8783,"name":"harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"1963:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_RewardHarvester_$8712","typeString":"contract RewardHarvester"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"claim","nodeType":"MemberAccess","referencedDeclaration":8348,"src":"1963:15:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,address,uint256,bytes32[] memory,uint256,address) external"}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1963:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8793,"nodeType":"ExpressionStatement","src":"1963:71:24"}]},"documentation":{"id":8769,"nodeType":"StructuredDocumentation","src":"1187:410:24","text":"@notice Claim rewards based on the specified metadata\n@dev    Currently only perform direct claiming for this version\n@param  _token        address    Token to claim rewards\n@param  _account      address    Account to claim rewards\n@param  _amount       uint256    Amount of rewards to claim\n@param  _merkleProof  bytes32[]  Merkle proof of the claim"},"functionSelector":"fabed412","id":8795,"implemented":true,"kind":"function","modifiers":[{"id":8781,"kind":"modifierInvocation","modifierName":{"id":8780,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1748:12:24"},"nodeType":"ModifierInvocation","src":"1748:12:24"}],"name":"claim","nameLocation":"1611:5:24","nodeType":"FunctionDefinition","parameters":{"id":8779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8771,"mutability":"mutable","name":"_token","nameLocation":"1634:6:24","nodeType":"VariableDeclaration","scope":8795,"src":"1626:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8770,"name":"address","nodeType":"ElementaryTypeName","src":"1626:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8773,"mutability":"mutable","name":"_account","nameLocation":"1658:8:24","nodeType":"VariableDeclaration","scope":8795,"src":"1650:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8772,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8775,"mutability":"mutable","name":"_amount","nameLocation":"1684:7:24","nodeType":"VariableDeclaration","scope":8795,"src":"1676:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8778,"mutability":"mutable","name":"_merkleProof","nameLocation":"1720:12:24","nodeType":"VariableDeclaration","scope":8795,"src":"1701:31:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1701:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8777,"nodeType":"ArrayTypeName","src":"1701:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1616:122:24"},"returnParameters":{"id":8782,"nodeType":"ParameterList","parameters":[],"src":"1761:0:24"},"scope":8833,"src":"1602:439:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8807,"nodeType":"Block","src":"2194:33:24","statements":[{"expression":{"arguments":[{"id":8804,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"2212:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8803,"name":"_setFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"2204:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8806,"nodeType":"ExpressionStatement","src":"2204:16:24"}]},"documentation":{"id":8796,"nodeType":"StructuredDocumentation","src":"2047:87:24","text":"@notice Change fee\n@param  _newFee  uint256  New fee to set"},"functionSelector":"6a1db1bf","id":8808,"implemented":true,"kind":"function","modifiers":[{"id":8801,"kind":"modifierInvocation","modifierName":{"id":8800,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2184:9:24"},"nodeType":"ModifierInvocation","src":"2184:9:24"}],"name":"changeFee","nameLocation":"2148:9:24","nodeType":"FunctionDefinition","parameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"_newFee","nameLocation":"2166:7:24","nodeType":"VariableDeclaration","scope":8808,"src":"2158:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:17:24"},"returnParameters":{"id":8802,"nodeType":"ParameterList","parameters":[],"src":"2194:0:24"},"scope":8833,"src":"2139:88:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8831,"nodeType":"Block","src":"2476:121:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8814,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"2490:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8815,"name":"MAX_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"2500:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2490:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8822,"nodeType":"IfStatement","src":"2486:49:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8817,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2516:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidFee","nodeType":"MemberAccess","referencedDeclaration":9939,"src":"2516:17:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2516:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8821,"nodeType":"RevertStatement","src":"2509:26:24"}},{"expression":{"id":8825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8823,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"2546:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8824,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"2552:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2546:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8826,"nodeType":"ExpressionStatement","src":"2546:13:24"},{"eventCall":{"arguments":[{"id":8828,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"2582:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8827,"name":"SetFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"2575:6:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2575:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8830,"nodeType":"EmitStatement","src":"2570:20:24"}]},"documentation":{"id":8809,"nodeType":"StructuredDocumentation","src":"2329:99:24","text":"@dev    Internal to set the fee\n@param  _newFee  uint256  Token address"},"id":8832,"implemented":true,"kind":"function","modifiers":[],"name":"_setFee","nameLocation":"2442:7:24","nodeType":"FunctionDefinition","parameters":{"id":8812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8811,"mutability":"mutable","name":"_newFee","nameLocation":"2458:7:24","nodeType":"VariableDeclaration","scope":8832,"src":"2450:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2450:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2449:17:24"},"returnParameters":{"id":8813,"nodeType":"ParameterList","parameters":[],"src":"2476:0:24"},"scope":8833,"src":"2433:164:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8834,"src":"324:2275:24","usedErrors":[9894,9939]}],"src":"32:2568:24"},"id":24},"contracts/RewardSwapper.sol":{"ast":{"absolutePath":"contracts/RewardSwapper.sol","exportedSymbols":{"Common":[9874],"Errors":[10009],"IERC20":[915],"IRewardDistributor":[9754],"IRewardHarvester":[9769],"Ownable2Step":[584],"RewardSwapper":[9447],"SafeERC20":[1327]},"id":9448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8835,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"contracts/interfaces/IRewardDistributor.sol","file":"./interfaces/IRewardDistributor.sol","id":8837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":9755,"src":"57:71:25","symbolAliases":[{"foreign":{"id":8836,"name":"IRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9754,"src":"65:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardDistributor_$9754_$","typeString":"type(contract IRewardDistributor)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardHarvester.sol","file":"./interfaces/IRewardHarvester.sol","id":8839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":9770,"src":"129:67:25","symbolAliases":[{"foreign":{"id":8838,"name":"IRewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"137:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardHarvester_$9769_$","typeString":"type(contract IRewardHarvester)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":8841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":585,"src":"197:77:25","symbolAliases":[{"foreign":{"id":8840,"name":"Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"205:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable2Step_$584_$","typeString":"type(contract Ownable2Step)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":916,"src":"275:70:25","symbolAliases":[{"foreign":{"id":8842,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"283:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":1328,"src":"346:82:25","symbolAliases":[{"foreign":{"id":8844,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"354:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1327_$","typeString":"type(library SafeERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":8847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":10010,"src":"429:46:25","symbolAliases":[{"foreign":{"id":8846,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"437:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Common.sol","file":"./libraries/Common.sol","id":8849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9448,"sourceUnit":9875,"src":"476:46:25","symbolAliases":[{"foreign":{"id":8848,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8850,"name":"Ownable2Step","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"550:12:25"},"id":8851,"nodeType":"InheritanceSpecifier","src":"550:12:25"}],"canonicalName":"RewardSwapper","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9447,"linearizedBaseContracts":[9447,584,501,1687],"name":"RewardSwapper","nameLocation":"533:13:25","nodeType":"ContractDefinition","nodes":[{"id":8855,"libraryName":{"id":8852,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"575:9:25"},"nodeType":"UsingForDirective","src":"569:27:25","typeName":{"id":8854,"nodeType":"UserDefinedTypeName","pathNode":{"id":8853,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"589:6:25"},"referencedDeclaration":915,"src":"589:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"acc2166a","id":8858,"mutability":"mutable","name":"rewardDistributor","nameLocation":"628:17:25","nodeType":"VariableDeclaration","scope":9447,"src":"602:43:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"},"typeName":{"id":8857,"nodeType":"UserDefinedTypeName","pathNode":{"id":8856,"name":"IRewardDistributor","nodeType":"IdentifierPath","referencedDeclaration":9754,"src":"602:18:25"},"referencedDeclaration":9754,"src":"602:18:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"visibility":"public"},{"constant":false,"functionSelector":"b966b683","id":8861,"mutability":"mutable","name":"rewardHarvester","nameLocation":"675:15:25","nodeType":"VariableDeclaration","scope":9447,"src":"651:39:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"},"typeName":{"id":8860,"nodeType":"UserDefinedTypeName","pathNode":{"id":8859,"name":"IRewardHarvester","nodeType":"IdentifierPath","referencedDeclaration":9769,"src":"651:16:25"},"referencedDeclaration":9769,"src":"651:16:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}},"visibility":"public"},{"constant":false,"functionSelector":"570ca735","id":8863,"mutability":"mutable","name":"operator","nameLocation":"736:8:25","nodeType":"VariableDeclaration","scope":9447,"src":"721:23:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8862,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"id":8867,"name":"SetOperator","nameLocation":"853:11:25","nodeType":"EventDefinition","parameters":{"id":8866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8865,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"881:8:25","nodeType":"VariableDeclaration","scope":8867,"src":"865:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8864,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:26:25"},"src":"847:44:25"},{"anonymous":false,"id":8871,"name":"SetRewardHarvester","nameLocation":"902:18:25","nodeType":"EventDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"indexed":true,"mutability":"mutable","name":"rewardHarvester","nameLocation":"937:15:25","nodeType":"VariableDeclaration","scope":8871,"src":"921:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8868,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:33:25"},"src":"896:58:25"},{"anonymous":false,"id":8875,"name":"SetRewardDistributor","nameLocation":"965:20:25","nodeType":"EventDefinition","parameters":{"id":8874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8873,"indexed":true,"mutability":"mutable","name":"rewardDistributor","nameLocation":"1002:17:25","nodeType":"VariableDeclaration","scope":8875,"src":"986:33:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8872,"name":"address","nodeType":"ElementaryTypeName","src":"986:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"985:35:25"},"src":"959:62:25"},{"anonymous":false,"id":8881,"name":"BribeTransferred","nameLocation":"1032:16:25","nodeType":"EventDefinition","parameters":{"id":8880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8877,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1065:5:25","nodeType":"VariableDeclaration","scope":8881,"src":"1049:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8876,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8879,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"1080:11:25","nodeType":"VariableDeclaration","scope":8881,"src":"1072:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1048:44:25"},"src":"1026:67:25"},{"body":{"id":8895,"nodeType":"Block","src":"1191:85:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1205:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1205:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8886,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8863,"src":"1219:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1205:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8893,"nodeType":"IfStatement","src":"1201:57:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8888,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"1236:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAuthorized","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"1236:20:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1236:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8892,"nodeType":"RevertStatement","src":"1229:29:25"}},{"id":8894,"nodeType":"PlaceholderStatement","src":"1268:1:25"}]},"documentation":{"id":8882,"nodeType":"StructuredDocumentation","src":"1099:63:25","text":" @notice Modifier to check caller is operator"},"id":8896,"name":"onlyOperator","nameLocation":"1176:12:25","nodeType":"ModifierDefinition","parameters":{"id":8883,"nodeType":"ParameterList","parameters":[],"src":"1188:2:25"},"src":"1167:109:25","virtual":false,"visibility":"internal"},{"body":{"id":8917,"nodeType":"Block","src":"1493:138:25","statements":[{"expression":{"arguments":[{"id":8906,"name":"_rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"1525:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8905,"name":"_setRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9231,"src":"1503:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1503:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8908,"nodeType":"ExpressionStatement","src":"1503:41:25"},{"expression":{"arguments":[{"id":8910,"name":"_rewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"1574:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8909,"name":"_setRewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"1554:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1554:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8912,"nodeType":"ExpressionStatement","src":"1554:37:25"},{"expression":{"arguments":[{"id":8914,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"1614:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8913,"name":"_setOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"1601:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1601:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8916,"nodeType":"ExpressionStatement","src":"1601:23:25"}]},"id":8918,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8898,"mutability":"mutable","name":"_rewardDistributor","nameLocation":"1407:18:25","nodeType":"VariableDeclaration","scope":8918,"src":"1399:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8897,"name":"address","nodeType":"ElementaryTypeName","src":"1399:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8900,"mutability":"mutable","name":"_rewardHarvester","nameLocation":"1443:16:25","nodeType":"VariableDeclaration","scope":8918,"src":"1435:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8899,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8902,"mutability":"mutable","name":"_operator","nameLocation":"1477:9:25","nodeType":"VariableDeclaration","scope":8918,"src":"1469:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8901,"name":"address","nodeType":"ElementaryTypeName","src":"1469:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1389:103:25"},"returnParameters":{"id":8904,"nodeType":"ParameterList","parameters":[],"src":"1493:0:25"},"scope":9447,"src":"1378:253:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9106,"nodeType":"Block","src":"1998:1551:25","statements":[{"assignments":[8929],"declarations":[{"constant":false,"id":8929,"mutability":"mutable","name":"cLen","nameLocation":"2016:4:25","nodeType":"VariableDeclaration","scope":9106,"src":"2008:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8932,"initialValue":{"expression":{"id":8930,"name":"_claimSwapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2023:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata[] calldata"}},"id":8931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2023:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2008:36:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8933,"name":"cLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2059:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2067:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2059:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8941,"nodeType":"IfStatement","src":"2055:43:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8936,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"2077:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidArray","nodeType":"MemberAccess","referencedDeclaration":9954,"src":"2077:19:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2077:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8940,"nodeType":"RevertStatement","src":"2070:28:25"}},{"assignments":[8944],"declarations":[{"constant":false,"id":8944,"mutability":"mutable","name":"defaultToken","nameLocation":"2116:12:25","nodeType":"VariableDeclaration","scope":9106,"src":"2109:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"},"typeName":{"id":8943,"nodeType":"UserDefinedTypeName","pathNode":{"id":8942,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":915,"src":"2109:6:25"},"referencedDeclaration":915,"src":"2109:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"visibility":"internal"}],"id":8950,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8946,"name":"rewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"2138:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"defaultToken","nodeType":"MemberAccess","referencedDeclaration":9762,"src":"2138:28:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8945,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2131:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2131:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"2109:60:25"},{"assignments":[8952],"declarations":[{"constant":false,"id":8952,"mutability":"mutable","name":"initalAmount","nameLocation":"2188:12:25","nodeType":"VariableDeclaration","scope":9106,"src":"2180:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8960,"initialValue":{"arguments":[{"arguments":[{"id":8957,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2234:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}],"id":8956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8955,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:25","typeDescriptions":{}}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8953,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"2203:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"2203:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2203:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2180:60:25"},{"assignments":[8966],"declarations":[{"constant":false,"id":8966,"mutability":"mutable","name":"claimData","nameLocation":"2273:9:25","nodeType":"VariableDeclaration","scope":9106,"src":"2251:31:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim[]"},"typeName":{"baseType":{"id":8964,"nodeType":"UserDefinedTypeName","pathNode":{"id":8963,"name":"Common.Claim","nodeType":"IdentifierPath","referencedDeclaration":9873,"src":"2251:12:25"},"referencedDeclaration":9873,"src":"2251:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_storage_ptr","typeString":"struct Common.Claim"}},"id":8965,"nodeType":"ArrayTypeName","src":"2251:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_storage_$dyn_storage_ptr","typeString":"struct Common.Claim[]"}},"visibility":"internal"}],"id":8974,"initialValue":{"arguments":[{"expression":{"id":8971,"name":"_claimSwapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2317:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata[] calldata"}},"id":8972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2317:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2285:18:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Common.Claim memory[] memory)"},"typeName":{"baseType":{"id":8968,"nodeType":"UserDefinedTypeName","pathNode":{"id":8967,"name":"Common.Claim","nodeType":"IdentifierPath","referencedDeclaration":9873,"src":"2289:12:25"},"referencedDeclaration":9873,"src":"2289:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_storage_ptr","typeString":"struct Common.Claim"}},"id":8969,"nodeType":"ArrayTypeName","src":"2289:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_storage_$dyn_storage_ptr","typeString":"struct Common.Claim[]"}}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2285:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2251:97:25"},{"body":{"id":9025,"nodeType":"Block","src":"2412:327:25","statements":[{"expression":{"id":8989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8981,"name":"claimData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"2426:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}},"id":8983,"indexExpression":{"id":8982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2436:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2426:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_memory_ptr","typeString":"struct Common.Claim memory"}},"id":8984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":9865,"src":"2426:23:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":8985,"name":"_claimSwapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2452:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata[] calldata"}},"id":8987,"indexExpression":{"id":8986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2467:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2452:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata"}},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rwIdentifier","nodeType":"MemberAccess","referencedDeclaration":9838,"src":"2452:30:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2426:56:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8990,"nodeType":"ExpressionStatement","src":"2426:56:25"},{"expression":{"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8991,"name":"claimData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"2496:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}},"id":8993,"indexExpression":{"id":8992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2506:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2496:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_memory_ptr","typeString":"struct Common.Claim memory"}},"id":8994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"account","nodeType":"MemberAccess","referencedDeclaration":9867,"src":"2496:20:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8997,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2527:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}],"id":8996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2519:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8995,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:25","typeDescriptions":{}}},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2496:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9000,"nodeType":"ExpressionStatement","src":"2496:36:25"},{"expression":{"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9001,"name":"claimData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"2546:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}},"id":9003,"indexExpression":{"id":9002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2556:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2546:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_memory_ptr","typeString":"struct Common.Claim memory"}},"id":9004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9869,"src":"2546:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":9005,"name":"_claimSwapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2568:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata[] calldata"}},"id":9007,"indexExpression":{"id":9006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2583:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2568:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata"}},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fromAmount","nodeType":"MemberAccess","referencedDeclaration":9844,"src":"2568:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2546:50:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9010,"nodeType":"ExpressionStatement","src":"2546:50:25"},{"expression":{"id":9019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9011,"name":"claimData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"2610:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}},"id":9013,"indexExpression":{"id":9012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2620:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2610:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_memory_ptr","typeString":"struct Common.Claim memory"}},"id":9014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"merkleProof","nodeType":"MemberAccess","referencedDeclaration":9872,"src":"2610:24:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":9015,"name":"_claimSwapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2637:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata[] calldata"}},"id":9017,"indexExpression":{"id":9016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2652:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2637:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata"}},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rwMerkleProof","nodeType":"MemberAccess","referencedDeclaration":9862,"src":"2637:31:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"src":"2610:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9020,"nodeType":"ExpressionStatement","src":"2610:58:25"},{"id":9024,"nodeType":"UncheckedBlock","src":"2683:46:25","statements":[{"expression":{"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2711:3:25","subExpression":{"id":9021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2713:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9023,"nodeType":"ExpressionStatement","src":"2711:3:25"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"2400:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8979,"name":"cLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2404:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2400:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9026,"initializationExpression":{"assignments":[8976],"declarations":[{"constant":false,"id":8976,"mutability":"mutable","name":"i","nameLocation":"2397:1:25","nodeType":"VariableDeclaration","scope":9026,"src":"2389:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8977,"nodeType":"VariableDeclarationStatement","src":"2389:9:25"},"nodeType":"ForStatement","src":"2384:355:25"},{"expression":{"arguments":[{"id":9030,"name":"claimData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"2773:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr","typeString":"struct Common.Claim memory[] memory"}],"expression":{"id":9027,"name":"rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"2749:17:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"claim","nodeType":"MemberAccess","referencedDeclaration":9753,"src":"2749:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_struct$_Claim_$9873_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (struct Common.Claim memory[] memory) external"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2749:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9032,"nodeType":"ExpressionStatement","src":"2749:34:25"},{"body":{"id":9049,"nodeType":"Block","src":"2869:109:25","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9040,"name":"_claimSwapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2889:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata[] calldata"}},"id":9042,"indexExpression":{"id":9041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9034,"src":"2904:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_calldata_ptr","typeString":"struct Common.ClaimAndSwapData calldata"}],"id":9039,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9423,"src":"2883:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ClaimAndSwapData_$9863_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct Common.ClaimAndSwapData memory) returns (uint256)"}},"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2883:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9044,"nodeType":"ExpressionStatement","src":"2883:24:25"},{"id":9048,"nodeType":"UncheckedBlock","src":"2922:46:25","statements":[{"expression":{"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2950:3:25","subExpression":{"id":9045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9034,"src":"2952:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9047,"nodeType":"ExpressionStatement","src":"2950:3:25"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9034,"src":"2857:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9037,"name":"cLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2861:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2857:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9050,"initializationExpression":{"assignments":[9034],"declarations":[{"constant":false,"id":9034,"mutability":"mutable","name":"i","nameLocation":"2854:1:25","nodeType":"VariableDeclaration","scope":9050,"src":"2846:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9035,"nodeType":"VariableDeclarationStatement","src":"2846:9:25"},"nodeType":"ForStatement","src":"2841:137:25"},{"assignments":[9052],"declarations":[{"constant":false,"id":9052,"mutability":"mutable","name":"amountClaimed","nameLocation":"2996:13:25","nodeType":"VariableDeclaration","scope":9106,"src":"2988:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2988:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9057,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3043:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}],"id":9056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3035:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9055,"name":"address","nodeType":"ElementaryTypeName","src":"3035:7:25","typeDescriptions":{}}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3035:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9053,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"3012:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"3012:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9060,"name":"initalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8952,"src":"3064:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3012:64:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2988:88:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3181:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}],"id":9066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3173:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9065,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:25","typeDescriptions":{}}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3173:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9071,"name":"rewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"3196:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}],"id":9070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3188:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9069,"name":"address","nodeType":"ElementaryTypeName","src":"3188:7:25","typeDescriptions":{}}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3188:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9063,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"3150:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":9064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":892,"src":"3150:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3150:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9074,"name":"amountClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"3228:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3150:91:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9091,"nodeType":"IfStatement","src":"3133:259:25","trueBody":{"id":9090,"nodeType":"Block","src":"3252:140:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":9081,"name":"rewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"3316:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}],"id":9080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3308:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9079,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:25","typeDescriptions":{}}},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3308:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":9085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3355:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3355:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9083,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3350:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3350:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3350:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9076,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"3266:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":1055,"src":"3266:24:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3266:115:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9089,"nodeType":"ExpressionStatement","src":"3266:115:25"}]}},{"expression":{"arguments":[{"id":9095,"name":"amountClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"3458:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9092,"name":"rewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"3428:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}},"id":9094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositReward","nodeType":"MemberAccess","referencedDeclaration":9768,"src":"3428:29:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3428:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9097,"nodeType":"ExpressionStatement","src":"3428:44:25"},{"eventCall":{"arguments":[{"arguments":[{"id":9101,"name":"defaultToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"3513:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}],"id":9100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3505:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9099,"name":"address","nodeType":"ElementaryTypeName","src":"3505:7:25","typeDescriptions":{}}},"id":9102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3505:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9103,"name":"amountClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9052,"src":"3528:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9098,"name":"BribeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"3488:16:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3488:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9105,"nodeType":"EmitStatement","src":"3483:59:25"}]},"documentation":{"id":8919,"nodeType":"StructuredDocumentation","src":"1734:137:25","text":" @notice Executes swaps via DEX\n @param  _claimSwapData  Common.ClaimAndSwapData[]  The data for the claims+swaps"},"functionSelector":"0027edb1","id":9107,"implemented":true,"kind":"function","modifiers":[{"id":8926,"kind":"modifierInvocation","modifierName":{"id":8925,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":8896,"src":"1985:12:25"},"nodeType":"ModifierInvocation","src":"1985:12:25"}],"name":"claimSwapAndDepositReward","nameLocation":"1885:25:25","nodeType":"FunctionDefinition","parameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8923,"mutability":"mutable","name":"_claimSwapData","nameLocation":"1955:14:25","nodeType":"VariableDeclaration","scope":9107,"src":"1920:49:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.ClaimAndSwapData[]"},"typeName":{"baseType":{"id":8921,"nodeType":"UserDefinedTypeName","pathNode":{"id":8920,"name":"Common.ClaimAndSwapData","nodeType":"IdentifierPath","referencedDeclaration":9863,"src":"1920:23:25"},"referencedDeclaration":9863,"src":"1920:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_storage_ptr","typeString":"struct Common.ClaimAndSwapData"}},"id":8922,"nodeType":"ArrayTypeName","src":"1920:25:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimAndSwapData_$9863_storage_$dyn_storage_ptr","typeString":"struct Common.ClaimAndSwapData[]"}},"visibility":"internal"}],"src":"1910:65:25"},"returnParameters":{"id":8927,"nodeType":"ParameterList","parameters":[],"src":"1998:0:25"},"scope":9447,"src":"1876:1673:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9119,"nodeType":"Block","src":"3726:40:25","statements":[{"expression":{"arguments":[{"id":9116,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9110,"src":"3749:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9115,"name":"_setOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"3736:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3736:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9118,"nodeType":"ExpressionStatement","src":"3736:23:25"}]},"documentation":{"id":9108,"nodeType":"StructuredDocumentation","src":"3555:104:25","text":"@notice Change the operator\n@param  _operator  address  New operator address"},"functionSelector":"06394c9b","id":9120,"implemented":true,"kind":"function","modifiers":[{"id":9113,"kind":"modifierInvocation","modifierName":{"id":9112,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"3716:9:25"},"nodeType":"ModifierInvocation","src":"3716:9:25"}],"name":"changeOperator","nameLocation":"3673:14:25","nodeType":"FunctionDefinition","parameters":{"id":9111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9110,"mutability":"mutable","name":"_operator","nameLocation":"3696:9:25","nodeType":"VariableDeclaration","scope":9120,"src":"3688:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9109,"name":"address","nodeType":"ElementaryTypeName","src":"3688:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3687:19:25"},"returnParameters":{"id":9114,"nodeType":"ParameterList","parameters":[],"src":"3726:0:25"},"scope":9447,"src":"3664:102:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9132,"nodeType":"Block","src":"3969:48:25","statements":[{"expression":{"arguments":[{"id":9129,"name":"_harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"3999:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9128,"name":"_setRewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"3979:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3979:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9131,"nodeType":"ExpressionStatement","src":"3979:31:25"}]},"documentation":{"id":9121,"nodeType":"StructuredDocumentation","src":"3772:122:25","text":"@notice Change the reward harvester address\n@param  _harvester  address  New harvester address"},"functionSelector":"a10843ec","id":9133,"implemented":true,"kind":"function","modifiers":[{"id":9126,"kind":"modifierInvocation","modifierName":{"id":9125,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"3959:9:25"},"nodeType":"ModifierInvocation","src":"3959:9:25"}],"name":"changeRewardHarvester","nameLocation":"3908:21:25","nodeType":"FunctionDefinition","parameters":{"id":9124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9123,"mutability":"mutable","name":"_harvester","nameLocation":"3938:10:25","nodeType":"VariableDeclaration","scope":9133,"src":"3930:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9122,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3929:20:25"},"returnParameters":{"id":9127,"nodeType":"ParameterList","parameters":[],"src":"3969:0:25"},"scope":9447,"src":"3899:118:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9145,"nodeType":"Block","src":"4230:52:25","statements":[{"expression":{"arguments":[{"id":9142,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9136,"src":"4262:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9141,"name":"_setRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9231,"src":"4240:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4240:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9144,"nodeType":"ExpressionStatement","src":"4240:35:25"}]},"documentation":{"id":9134,"nodeType":"StructuredDocumentation","src":"4023:128:25","text":"@notice Change the reward distributor address\n@param  _distributor  address  New distributor address"},"functionSelector":"28f59f05","id":9146,"implemented":true,"kind":"function","modifiers":[{"id":9139,"kind":"modifierInvocation","modifierName":{"id":9138,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"4220:9:25"},"nodeType":"ModifierInvocation","src":"4220:9:25"}],"name":"changeRewardDistributor","nameLocation":"4165:23:25","nodeType":"FunctionDefinition","parameters":{"id":9137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9136,"mutability":"mutable","name":"_distributor","nameLocation":"4197:12:25","nodeType":"VariableDeclaration","scope":9146,"src":"4189:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9135,"name":"address","nodeType":"ElementaryTypeName","src":"4189:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4188:22:25"},"returnParameters":{"id":9140,"nodeType":"ParameterList","parameters":[],"src":"4230:0:25"},"scope":9447,"src":"4156:126:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9172,"nodeType":"Block","src":"4549:145:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9152,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9149,"src":"4563:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4584:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4576:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9153,"name":"address","nodeType":"ElementaryTypeName","src":"4576:7:25","typeDescriptions":{}}},"id":9156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4576:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4563:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9163,"nodeType":"IfStatement","src":"4559:59:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9158,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4595:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"4595:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4595:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9162,"nodeType":"RevertStatement","src":"4588:30:25"}},{"expression":{"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9164,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8863,"src":"4629:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9165,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9149,"src":"4640:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4629:20:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9167,"nodeType":"ExpressionStatement","src":"4629:20:25"},{"eventCall":{"arguments":[{"id":9169,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9149,"src":"4677:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9168,"name":"SetOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"4665:11:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4665:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9171,"nodeType":"EmitStatement","src":"4660:27:25"}]},"documentation":{"id":9147,"nodeType":"StructuredDocumentation","src":"4385:109:25","text":"@dev    Internal to set the operator\n@param  _operator  address  Operator address"},"id":9173,"implemented":true,"kind":"function","modifiers":[],"name":"_setOperator","nameLocation":"4508:12:25","nodeType":"FunctionDefinition","parameters":{"id":9150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9149,"mutability":"mutable","name":"_operator","nameLocation":"4529:9:25","nodeType":"VariableDeclaration","scope":9173,"src":"4521:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9148,"name":"address","nodeType":"ElementaryTypeName","src":"4521:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4520:19:25"},"returnParameters":{"id":9151,"nodeType":"ParameterList","parameters":[],"src":"4549:0:25"},"scope":9447,"src":"4499:195:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9201,"nodeType":"Block","src":"4889:180:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9179,"name":"_harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9176,"src":"4903:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4917:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9180,"name":"address","nodeType":"ElementaryTypeName","src":"4917:7:25","typeDescriptions":{}}},"id":9183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4917:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4903:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9190,"nodeType":"IfStatement","src":"4899:60:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9185,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"4936:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"4936:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4936:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9189,"nodeType":"RevertStatement","src":"4929:30:25"}},{"expression":{"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9191,"name":"rewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"4970:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9193,"name":"_harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9176,"src":"5005:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9192,"name":"IRewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"4988:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardHarvester_$9769_$","typeString":"type(contract IRewardHarvester)"}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4988:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}},"src":"4970:46:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardHarvester_$9769","typeString":"contract IRewardHarvester"}},"id":9196,"nodeType":"ExpressionStatement","src":"4970:46:25"},{"eventCall":{"arguments":[{"id":9198,"name":"_harvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9176,"src":"5051:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9197,"name":"SetRewardHarvester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"5032:18:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5032:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9200,"nodeType":"EmitStatement","src":"5027:35:25"}]},"documentation":{"id":9174,"nodeType":"StructuredDocumentation","src":"4700:126:25","text":"@dev    Internal to set the reward harvester\n@param  _harvester  address  Reward Harvester address"},"id":9202,"implemented":true,"kind":"function","modifiers":[],"name":"_setRewardHarvester","nameLocation":"4840:19:25","nodeType":"FunctionDefinition","parameters":{"id":9177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9176,"mutability":"mutable","name":"_harvester","nameLocation":"4868:10:25","nodeType":"VariableDeclaration","scope":9202,"src":"4860:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9175,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4859:20:25"},"returnParameters":{"id":9178,"nodeType":"ParameterList","parameters":[],"src":"4889:0:25"},"scope":9447,"src":"4831:238:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9230,"nodeType":"Block","src":"5267:192:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9208,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"5281:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5305:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5297:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9209,"name":"address","nodeType":"ElementaryTypeName","src":"5297:7:25","typeDescriptions":{}}},"id":9212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5297:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5281:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9219,"nodeType":"IfStatement","src":"5277:62:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9214,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5316:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"5316:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5316:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9218,"nodeType":"RevertStatement","src":"5309:30:25"}},{"expression":{"id":9224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9220,"name":"rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"5350:17:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9222,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"5389:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9221,"name":"IRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9754,"src":"5370:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardDistributor_$9754_$","typeString":"type(contract IRewardDistributor)"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5370:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"src":"5350:52:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"id":9225,"nodeType":"ExpressionStatement","src":"5350:52:25"},{"eventCall":{"arguments":[{"id":9227,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"5439:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9226,"name":"SetRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8875,"src":"5418:20:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9229,"nodeType":"EmitStatement","src":"5413:39:25"}]},"documentation":{"id":9203,"nodeType":"StructuredDocumentation","src":"5075:125:25","text":"@dev    Internal to set the reward distributor\n@param  _distributor  address  Distributor address"},"id":9231,"implemented":true,"kind":"function","modifiers":[],"name":"_setRewardDistributor","nameLocation":"5214:21:25","nodeType":"FunctionDefinition","parameters":{"id":9206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9205,"mutability":"mutable","name":"_distributor","nameLocation":"5244:12:25","nodeType":"VariableDeclaration","scope":9231,"src":"5236:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9204,"name":"address","nodeType":"ElementaryTypeName","src":"5236:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5235:22:25"},"returnParameters":{"id":9207,"nodeType":"ParameterList","parameters":[],"src":"5267:0:25"},"scope":9447,"src":"5205:254:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9422,"nodeType":"Block","src":"5806:2124:25","statements":[{"condition":{"id":9256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5833:130:25","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9240,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"5835:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callees","nodeType":"MemberAccess","referencedDeclaration":9851,"src":"5835:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5835:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":9243,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"5863:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callLengths","nodeType":"MemberAccess","referencedDeclaration":9854,"src":"5863:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5863:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5835:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9247,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"5911:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callees","nodeType":"MemberAccess","referencedDeclaration":9851,"src":"5911:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5911:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":9250,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"5939:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"5939:16:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5939:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5911:51:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5835:127:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5834:129:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9263,"nodeType":"IfStatement","src":"5816:224:25","trueBody":{"id":9262,"nodeType":"Block","src":"5974:66:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9257,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"5995:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExchangeDataArrayMismatch","nodeType":"MemberAccess","referencedDeclaration":10008,"src":"5995:32:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5995:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9261,"nodeType":"RevertStatement","src":"5988:41:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9264,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"6054:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":9848,"src":"6054:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9266,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6075:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6075:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6054:36:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9275,"nodeType":"IfStatement","src":"6050:97:25","trueBody":{"id":9274,"nodeType":"Block","src":"6092:55:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9269,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6113:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DeadlineBreach","nodeType":"MemberAccess","referencedDeclaration":10002,"src":"6113:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6113:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9273,"nodeType":"RevertStatement","src":"6106:30:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9276,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"6161:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":9846,"src":"6161:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6183:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6161:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9286,"nodeType":"IfStatement","src":"6157:89:25","trueBody":{"id":9285,"nodeType":"Block","src":"6186:60:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9280,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6207:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZeroExpectedReturns","nodeType":"MemberAccess","referencedDeclaration":10005,"src":"6207:26:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6207:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9284,"nodeType":"RevertStatement","src":"6200:35:25"}]}},{"assignments":[9288],"declarations":[{"constant":false,"id":9288,"mutability":"mutable","name":"exchangeData","nameLocation":"6269:12:25","nodeType":"VariableDeclaration","scope":9422,"src":"6256:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9287,"name":"bytes","nodeType":"ElementaryTypeName","src":"6256:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9291,"initialValue":{"expression":{"id":9289,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"6284:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"exchangeData","nodeType":"MemberAccess","referencedDeclaration":9859,"src":"6284:22:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6256:50:25"},{"assignments":[9293],"declarations":[{"constant":false,"id":9293,"mutability":"mutable","name":"calleesLength","nameLocation":"6324:13:25","nodeType":"VariableDeclaration","scope":9422,"src":"6316:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6316:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9297,"initialValue":{"expression":{"expression":{"id":9294,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"6340:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callees","nodeType":"MemberAccess","referencedDeclaration":9851,"src":"6340:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6340:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6316:48:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9298,"name":"calleesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9293,"src":"6379:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6379:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9306,"nodeType":"IfStatement","src":"6375:52:25","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9301,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"6406:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidArray","nodeType":"MemberAccess","referencedDeclaration":9954,"src":"6406:19:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6406:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9305,"nodeType":"RevertStatement","src":"6399:28:25"}},{"assignments":[9308],"declarations":[{"constant":false,"id":9308,"mutability":"mutable","name":"transferFromSelector","nameLocation":"6445:20:25","nodeType":"VariableDeclaration","scope":9422,"src":"6438:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9307,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6438:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":9312,"initialValue":{"expression":{"expression":{"id":9309,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6468:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":9310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":914,"src":"6468:19:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transferFrom(address,address,uint256) returns (bool)"}},"id":9311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"6468:28:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"6438:58:25"},{"assignments":[9314],"declarations":[{"constant":false,"id":9314,"mutability":"mutable","name":"initialAmount","nameLocation":"6514:13:25","nodeType":"VariableDeclaration","scope":9422,"src":"6506:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9313,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9325,"initialValue":{"arguments":[{"arguments":[{"id":9322,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6587:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}],"id":9321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6579:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9320,"name":"address","nodeType":"ElementaryTypeName","src":"6579:7:25","typeDescriptions":{}}},"id":9323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6579:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":9316,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"6537:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"toToken","nodeType":"MemberAccess","referencedDeclaration":9842,"src":"6537:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9315,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6530:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6530:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":9319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"6530:35:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6530:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6506:96:25"},{"assignments":[9327],"declarations":[{"constant":false,"id":9327,"mutability":"mutable","name":"currentDataStartIndex","nameLocation":"6621:21:25","nodeType":"VariableDeclaration","scope":9422,"src":"6613:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9326,"name":"uint256","nodeType":"ElementaryTypeName","src":"6613:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9329,"initialValue":{"hexValue":"30","id":9328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6613:33:25"},{"body":{"id":9393,"nodeType":"Block","src":"6693:1025:25","statements":[{"id":9353,"nodeType":"Block","src":"6834:319:25","statements":[{"assignments":[9337],"declarations":[{"constant":false,"id":9337,"mutability":"mutable","name":"selector","nameLocation":"6860:8:25","nodeType":"VariableDeclaration","scope":9353,"src":"6852:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6852:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9338,"nodeType":"VariableDeclarationStatement","src":"6852:16:25"},{"AST":{"nodeType":"YulBlock","src":"6895:108:25","statements":[{"nodeType":"YulAssignment","src":"6917:68:25","value":{"arguments":[{"arguments":[{"name":"exchangeData","nodeType":"YulIdentifier","src":"6939:12:25"},{"arguments":[{"name":"currentDataStartIndex","nodeType":"YulIdentifier","src":"6957:21:25"},{"kind":"number","nodeType":"YulLiteral","src":"6980:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6953:3:25"},"nodeType":"YulFunctionCall","src":"6953:30:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6935:3:25"},"nodeType":"YulFunctionCall","src":"6935:49:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6929:5:25"},"nodeType":"YulFunctionCall","src":"6929:56:25"},"variableNames":[{"name":"selector","nodeType":"YulIdentifier","src":"6917:8:25"}]}]},"evmVersion":"london","externalReferences":[{"declaration":9327,"isOffset":false,"isSlot":false,"src":"6957:21:25","valueSize":1},{"declaration":9288,"isOffset":false,"isSlot":false,"src":"6939:12:25","valueSize":1},{"declaration":9337,"isOffset":false,"isSlot":false,"src":"6917:8:25","valueSize":1}],"id":9339,"nodeType":"InlineAssembly","src":"6886:117:25"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9342,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"7031:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7024:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":9340,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7024:6:25","typeDescriptions":{}}},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7024:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9344,"name":"transferFromSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"7044:20:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"7024:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9352,"nodeType":"IfStatement","src":"7020:119:25","trueBody":{"id":9351,"nodeType":"Block","src":"7066:73:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9346,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7095:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TransferFromCall","nodeType":"MemberAccess","referencedDeclaration":9993,"src":"7095:23:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7095:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9350,"nodeType":"RevertStatement","src":"7088:32:25"}]}}]},{"assignments":[9355],"declarations":[{"constant":false,"id":9355,"mutability":"mutable","name":"result","nameLocation":"7171:6:25","nodeType":"VariableDeclaration","scope":9393,"src":"7166:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9354,"name":"bool","nodeType":"ElementaryTypeName","src":"7166:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9372,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":9357,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"7211:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callees","nodeType":"MemberAccess","referencedDeclaration":9851,"src":"7211:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9360,"indexExpression":{"id":9359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"7229:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7211:20:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":9361,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"7263:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"7263:16:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9364,"indexExpression":{"id":9363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"7280:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7263:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9365,"name":"currentDataStartIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9327,"src":"7316:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":9366,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"7383:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callLengths","nodeType":"MemberAccess","referencedDeclaration":9854,"src":"7383:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9369,"indexExpression":{"id":9368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"7405:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7383:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9370,"name":"exchangeData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9288,"src":"7447:12:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9356,"name":"_externalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9446,"src":"7180:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,uint256,bytes memory) returns (bool)"}},"id":9371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7180:311:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7166:325:25"},{"condition":{"id":9374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7509:7:25","subExpression":{"id":9373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9355,"src":"7510:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9381,"nodeType":"IfStatement","src":"7505:81:25","trueBody":{"id":9380,"nodeType":"Block","src":"7518:68:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9375,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7543:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExternalCallFailure","nodeType":"MemberAccess","referencedDeclaration":9996,"src":"7543:26:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7543:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9379,"nodeType":"RevertStatement","src":"7536:35:25"}]}},{"expression":{"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9382,"name":"currentDataStartIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9327,"src":"7599:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"id":9383,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"7624:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callLengths","nodeType":"MemberAccess","referencedDeclaration":9854,"src":"7624:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9386,"indexExpression":{"id":9385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"7646:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7624:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7599:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9388,"nodeType":"ExpressionStatement","src":"7599:49:25"},{"id":9392,"nodeType":"UncheckedBlock","src":"7662:46:25","statements":[{"expression":{"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7690:3:25","subExpression":{"id":9389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"7692:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9391,"nodeType":"ExpressionStatement","src":"7690:3:25"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"6672:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9334,"name":"calleesLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9293,"src":"6676:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6672:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9394,"initializationExpression":{"assignments":[9331],"declarations":[{"constant":false,"id":9331,"mutability":"mutable","name":"i","nameLocation":"6669:1:25","nodeType":"VariableDeclaration","scope":9394,"src":"6661:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9332,"nodeType":"VariableDeclarationStatement","src":"6661:9:25"},"nodeType":"ForStatement","src":"6656:1062:25"},{"expression":{"id":9406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9395,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"7728:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9403,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7789:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RewardSwapper_$9447","typeString":"contract RewardSwapper"}],"id":9402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7781:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9401,"name":"address","nodeType":"ElementaryTypeName","src":"7781:7:25","typeDescriptions":{}}},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7781:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":9397,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"7752:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"toToken","nodeType":"MemberAccess","referencedDeclaration":9842,"src":"7752:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9396,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"7745:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7745:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$915","typeString":"contract IERC20"}},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":872,"src":"7745:35:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7745:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:67:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9407,"nodeType":"ExpressionStatement","src":"7728:67:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9408,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9238,"src":"7811:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9409,"name":"initialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"7828:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7811:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7810:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9412,"name":"_swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"7845:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData memory"}},"id":9413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":9846,"src":"7845:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7810:53:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9421,"nodeType":"IfStatement","src":"7806:118:25","trueBody":{"id":9420,"nodeType":"Block","src":"7865:59:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9415,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"7886:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InsufficientReturn","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"7886:25:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7886:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9419,"nodeType":"RevertStatement","src":"7879:34:25"}]}}]},"documentation":{"id":9232,"nodeType":"StructuredDocumentation","src":"5465:223:25","text":" @notice Executes a sequence of swaps via DEX\n @param  _swapData       Common.SwapData  The data for the swaps\n @return receivedAmount  uint256          The final amount of the toToken received"},"id":9423,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"5702:5:25","nodeType":"FunctionDefinition","parameters":{"id":9236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9235,"mutability":"mutable","name":"_swapData","nameLocation":"5748:9:25","nodeType":"VariableDeclaration","scope":9423,"src":"5717:40:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_memory_ptr","typeString":"struct Common.ClaimAndSwapData"},"typeName":{"id":9234,"nodeType":"UserDefinedTypeName","pathNode":{"id":9233,"name":"Common.ClaimAndSwapData","nodeType":"IdentifierPath","referencedDeclaration":9863,"src":"5717:23:25"},"referencedDeclaration":9863,"src":"5717:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimAndSwapData_$9863_storage_ptr","typeString":"struct Common.ClaimAndSwapData"}},"visibility":"internal"}],"src":"5707:56:25"},"returnParameters":{"id":9239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9238,"mutability":"mutable","name":"receivedAmount","nameLocation":"5790:14:25","nodeType":"VariableDeclaration","scope":9423,"src":"5782:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9237,"name":"uint256","nodeType":"ElementaryTypeName","src":"5782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5781:24:25"},"scope":9447,"src":"5693:2237:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9445,"nodeType":"Block","src":"8290:675:25","statements":[{"assignments":[9440],"declarations":[{"constant":false,"id":9440,"mutability":"mutable","name":"result","nameLocation":"8305:6:25","nodeType":"VariableDeclaration","scope":9445,"src":"8300:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9439,"name":"bool","nodeType":"ElementaryTypeName","src":"8300:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9441,"nodeType":"VariableDeclarationStatement","src":"8300:11:25"},{"AST":{"nodeType":"YulBlock","src":"8330:606:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8344:20:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8359:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8353:5:25"},"nodeType":"YulFunctionCall","src":"8353:11:25"},"variables":[{"name":"x","nodeType":"YulTypedName","src":"8348:1:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8487:23:25","value":{"arguments":[{"name":"_data","nodeType":"YulIdentifier","src":"8500:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8507:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8496:3:25"},"nodeType":"YulFunctionCall","src":"8496:14:25"},"variables":[{"name":"d","nodeType":"YulTypedName","src":"8491:1:25","type":""}]},{"nodeType":"YulAssignment","src":"8588:338:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8620:3:25"},"nodeType":"YulFunctionCall","src":"8620:5:25"},{"name":"_destination","nodeType":"YulIdentifier","src":"8643:12:25"},{"name":"_value","nodeType":"YulIdentifier","src":"8673:6:25"},{"arguments":[{"name":"d","nodeType":"YulIdentifier","src":"8701:1:25"},{"name":"_dataOffset","nodeType":"YulIdentifier","src":"8704:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8697:3:25"},"nodeType":"YulFunctionCall","src":"8697:19:25"},{"name":"_dataLength","nodeType":"YulIdentifier","src":"8734:11:25"},{"name":"x","nodeType":"YulIdentifier","src":"8836:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"8855:1:25","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8598:4:25"},"nodeType":"YulFunctionCall","src":"8598:328:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8588:6:25"}]}]},"evmVersion":"london","externalReferences":[{"declaration":9434,"isOffset":false,"isSlot":false,"src":"8500:5:25","valueSize":1},{"declaration":9432,"isOffset":false,"isSlot":false,"src":"8734:11:25","valueSize":1},{"declaration":9430,"isOffset":false,"isSlot":false,"src":"8704:11:25","valueSize":1},{"declaration":9426,"isOffset":false,"isSlot":false,"src":"8643:12:25","valueSize":1},{"declaration":9428,"isOffset":false,"isSlot":false,"src":"8673:6:25","valueSize":1},{"declaration":9440,"isOffset":false,"isSlot":false,"src":"8588:6:25","valueSize":1}],"id":9442,"nodeType":"InlineAssembly","src":"8321:615:25"},{"expression":{"id":9443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9440,"src":"8952:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9438,"id":9444,"nodeType":"Return","src":"8945:13:25"}]},"documentation":{"id":9424,"nodeType":"StructuredDocumentation","src":"7936:156:25","text":" @dev Source take from GNOSIS MultiSigWallet\n @dev https://github.com/gnosis/MultiSigWallet/blob/master/contracts/MultiSigWallet.sol"},"id":9446,"implemented":true,"kind":"function","modifiers":[],"name":"_externalCall","nameLocation":"8106:13:25","nodeType":"FunctionDefinition","parameters":{"id":9435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9426,"mutability":"mutable","name":"_destination","nameLocation":"8137:12:25","nodeType":"VariableDeclaration","scope":9446,"src":"8129:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9425,"name":"address","nodeType":"ElementaryTypeName","src":"8129:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9428,"mutability":"mutable","name":"_value","nameLocation":"8167:6:25","nodeType":"VariableDeclaration","scope":9446,"src":"8159:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9427,"name":"uint256","nodeType":"ElementaryTypeName","src":"8159:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9430,"mutability":"mutable","name":"_dataOffset","nameLocation":"8191:11:25","nodeType":"VariableDeclaration","scope":9446,"src":"8183:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9429,"name":"uint256","nodeType":"ElementaryTypeName","src":"8183:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9432,"mutability":"mutable","name":"_dataLength","nameLocation":"8220:11:25","nodeType":"VariableDeclaration","scope":9446,"src":"8212:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9431,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9434,"mutability":"mutable","name":"_data","nameLocation":"8254:5:25","nodeType":"VariableDeclaration","scope":9446,"src":"8241:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9433,"name":"bytes","nodeType":"ElementaryTypeName","src":"8241:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8119:146:25"},"returnParameters":{"id":9438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9446,"src":"8284:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9436,"name":"bool","nodeType":"ElementaryTypeName","src":"8284:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8283:6:25"},"scope":9447,"src":"8097:868:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9448,"src":"524:8443:25","usedErrors":[9888,9894,9954,9993,9996,9999,10002,10005,10008]}],"src":"32:8936:25"},"id":25},"contracts/VaultOperator.sol":{"ast":{"absolutePath":"contracts/VaultOperator.sol","exportedSymbols":{"Common":[9874],"Errors":[10009],"IBribeVault":[9666],"IRewardDistributor":[9754],"Ownable2Step":[584],"VaultOperator":[9615]},"id":9616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9449,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:26"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":9451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9616,"sourceUnit":585,"src":"57:77:26","symbolAliases":[{"foreign":{"id":9450,"name":"Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"65:12:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable2Step_$584_$","typeString":"type(contract Ownable2Step)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Common.sol","file":"./libraries/Common.sol","id":9453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9616,"sourceUnit":9875,"src":"135:46:26","symbolAliases":[{"foreign":{"id":9452,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"143:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBribeVault.sol","file":"./interfaces/IBribeVault.sol","id":9455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9616,"sourceUnit":9667,"src":"182:57:26","symbolAliases":[{"foreign":{"id":9454,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"190:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardDistributor.sol","file":"./interfaces/IRewardDistributor.sol","id":9457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9616,"sourceUnit":9755,"src":"240:71:26","symbolAliases":[{"foreign":{"id":9456,"name":"IRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9754,"src":"248:18:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardDistributor_$9754_$","typeString":"type(contract IRewardDistributor)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Errors.sol","file":"./libraries/Errors.sol","id":9459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9616,"sourceUnit":10010,"src":"312:46:26","symbolAliases":[{"foreign":{"id":9458,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"320:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9460,"name":"Ownable2Step","nodeType":"IdentifierPath","referencedDeclaration":584,"src":"386:12:26"},"id":9461,"nodeType":"InheritanceSpecifier","src":"386:12:26"}],"canonicalName":"VaultOperator","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9615,"linearizedBaseContracts":[9615,584,501,1687],"name":"VaultOperator","nameLocation":"369:13:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"833d657e","id":9464,"mutability":"immutable","name":"bribeVault","nameLocation":"434:10:26","nodeType":"VariableDeclaration","scope":9615,"src":"405:39:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"},"typeName":{"id":9463,"nodeType":"UserDefinedTypeName","pathNode":{"id":9462,"name":"IBribeVault","nodeType":"IdentifierPath","referencedDeclaration":9666,"src":"405:11:26"},"referencedDeclaration":9666,"src":"405:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"visibility":"public"},{"constant":false,"functionSelector":"acc2166a","id":9467,"mutability":"immutable","name":"rewardDistributor","nameLocation":"486:17:26","nodeType":"VariableDeclaration","scope":9615,"src":"450:53:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"},"typeName":{"id":9466,"nodeType":"UserDefinedTypeName","pathNode":{"id":9465,"name":"IRewardDistributor","nodeType":"IdentifierPath","referencedDeclaration":9754,"src":"450:18:26"},"referencedDeclaration":9754,"src":"450:18:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"visibility":"public"},{"constant":false,"functionSelector":"570ca735","id":9469,"mutability":"mutable","name":"operator","nameLocation":"524:8:26","nodeType":"VariableDeclaration","scope":9615,"src":"509:23:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9468,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"id":9473,"name":"SetOperator","nameLocation":"545:11:26","nodeType":"EventDefinition","parameters":{"id":9472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9471,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"573:8:26","nodeType":"VariableDeclaration","scope":9473,"src":"557:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9470,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"556:26:26"},"src":"539:44:26"},{"body":{"id":9522,"nodeType":"Block","src":"799:339:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9481,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"813:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"836:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"828:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9482,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:26","typeDescriptions":{}}},"id":9485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"828:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"813:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9492,"nodeType":"IfStatement","src":"809:61:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9487,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"847:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"847:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"847:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9491,"nodeType":"RevertStatement","src":"840:30:26"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9493,"name":"_rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"884:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"906:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9494,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:26","typeDescriptions":{}}},"id":9497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"906:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"884:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9504,"nodeType":"IfStatement","src":"880:68:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9499,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"925:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"925:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"925:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9503,"nodeType":"RevertStatement","src":"918:30:26"}},{"expression":{"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9505,"name":"bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"959:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9507,"name":"_bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"984:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9506,"name":"IBribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"972:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBribeVault_$9666_$","typeString":"type(contract IBribeVault)"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"972:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"src":"959:37:26","typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"id":9510,"nodeType":"ExpressionStatement","src":"959:37:26"},{"expression":{"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9511,"name":"rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"1006:17:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9513,"name":"_rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"1045:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9512,"name":"IRewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9754,"src":"1026:18:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardDistributor_$9754_$","typeString":"type(contract IRewardDistributor)"}},"id":9514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1026:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"src":"1006:58:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"id":9516,"nodeType":"ExpressionStatement","src":"1006:58:26"},{"expression":{"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9517,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"1110:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1121:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1121:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1110:21:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9521,"nodeType":"ExpressionStatement","src":"1110:21:26"}]},"documentation":{"id":9474,"nodeType":"StructuredDocumentation","src":"589:144:26","text":"@param  _bribeVault         Address of the bribe vault\n@param  _rewardDistributor  Address of the reward distributor"},"id":9523,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9476,"mutability":"mutable","name":"_bribeVault","nameLocation":"758:11:26","nodeType":"VariableDeclaration","scope":9523,"src":"750:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9475,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9478,"mutability":"mutable","name":"_rewardDistributor","nameLocation":"779:18:26","nodeType":"VariableDeclaration","scope":9523,"src":"771:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9477,"name":"address","nodeType":"ElementaryTypeName","src":"771:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"749:49:26"},"returnParameters":{"id":9480,"nodeType":"ParameterList","parameters":[],"src":"799:0:26"},"scope":9615,"src":"738:400:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9536,"nodeType":"Block","src":"1168:85:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9525,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1182:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1182:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9527,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"1196:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1182:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9534,"nodeType":"IfStatement","src":"1178:57:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9529,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"1213:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NotAuthorized","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"1213:20:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1213:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9533,"nodeType":"RevertStatement","src":"1206:29:26"}},{"id":9535,"nodeType":"PlaceholderStatement","src":"1245:1:26"}]},"id":9537,"name":"onlyOperator","nameLocation":"1153:12:26","nodeType":"ModifierDefinition","parameters":{"id":9524,"nodeType":"ParameterList","parameters":[],"src":"1165:2:26"},"src":"1144:109:26","virtual":false,"visibility":"internal"},{"body":{"id":9565,"nodeType":"Block","src":"1420:145:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9545,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9540,"src":"1434:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1455:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1447:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9546,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:26","typeDescriptions":{}}},"id":9549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1447:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1434:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9556,"nodeType":"IfStatement","src":"1430:59:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9551,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10009,"src":"1466:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$10009_$","typeString":"type(library Errors)"}},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"InvalidAddress","nodeType":"MemberAccess","referencedDeclaration":9894,"src":"1466:21:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1466:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9555,"nodeType":"RevertStatement","src":"1459:30:26"}},{"expression":{"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9557,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9469,"src":"1500:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9558,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9540,"src":"1511:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:20:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9560,"nodeType":"ExpressionStatement","src":"1500:20:26"},{"eventCall":{"arguments":[{"id":9562,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9540,"src":"1548:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9561,"name":"SetOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"1536:11:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1536:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9564,"nodeType":"EmitStatement","src":"1531:27:26"}]},"documentation":{"id":9538,"nodeType":"StructuredDocumentation","src":"1259:97:26","text":"@notice Set the operator\n@param  _operator  address  Operator address"},"functionSelector":"b3ab15fb","id":9566,"implemented":true,"kind":"function","modifiers":[{"id":9543,"kind":"modifierInvocation","modifierName":{"id":9542,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1410:9:26"},"nodeType":"ModifierInvocation","src":"1410:9:26"}],"name":"setOperator","nameLocation":"1370:11:26","nodeType":"FunctionDefinition","parameters":{"id":9541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9540,"mutability":"mutable","name":"_operator","nameLocation":"1390:9:26","nodeType":"VariableDeclaration","scope":9566,"src":"1382:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9539,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1381:19:26"},"returnParameters":{"id":9544,"nodeType":"ParameterList","parameters":[],"src":"1420:0:26"},"scope":9615,"src":"1361:204:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9581,"nodeType":"Block","src":"1842:61:26","statements":[{"expression":{"arguments":[{"id":9578,"name":"rewardIdentifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"1878:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"expression":{"id":9575,"name":"bribeVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"1852:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IBribeVault_$9666","typeString":"contract IBribeVault"}},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferBribes","nodeType":"MemberAccess","referencedDeclaration":9659,"src":"1852:25:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory) external"}},"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1852:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9580,"nodeType":"ExpressionStatement","src":"1852:44:26"}]},"documentation":{"id":9567,"nodeType":"StructuredDocumentation","src":"1571:168:26","text":"@notice Redirect transferBribes call to the bribeVault for approved operator\n@param  rewardIdentifiers  bytes32[]  List of rewardIdentifiers"},"functionSelector":"b2d7edb2","id":9582,"implemented":true,"kind":"function","modifiers":[{"id":9573,"kind":"modifierInvocation","modifierName":{"id":9572,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":9537,"src":"1829:12:26"},"nodeType":"ModifierInvocation","src":"1829:12:26"}],"name":"transferBribes","nameLocation":"1753:14:26","nodeType":"FunctionDefinition","parameters":{"id":9571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9570,"mutability":"mutable","name":"rewardIdentifiers","nameLocation":"1796:17:26","nodeType":"VariableDeclaration","scope":9582,"src":"1777:36:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1777:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9569,"nodeType":"ArrayTypeName","src":"1777:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1767:52:26"},"returnParameters":{"id":9574,"nodeType":"ParameterList","parameters":[],"src":"1842:0:26"},"scope":9615,"src":"1744:159:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9598,"nodeType":"Block","src":"2220:71:26","statements":[{"expression":{"arguments":[{"id":9595,"name":"distributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9587,"src":"2270:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution calldata[] calldata"}],"expression":{"id":9592,"name":"rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"2230:17:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateRewardsMetadata","nodeType":"MemberAccess","referencedDeclaration":9739,"src":"2230:39:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_struct$_Distribution_$9815_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (struct Common.Distribution memory[] memory) external"}},"id":9596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2230:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9597,"nodeType":"ExpressionStatement","src":"2230:54:26"}]},"documentation":{"id":9583,"nodeType":"StructuredDocumentation","src":"1909:193:26","text":"@notice Redirect updateRewardsMetadata call to the rewardDistributor for approved operator\n@param  distributions  Distribution[]  List of reward distribution details"},"functionSelector":"df45c752","id":9599,"implemented":true,"kind":"function","modifiers":[{"id":9590,"kind":"modifierInvocation","modifierName":{"id":9589,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":9537,"src":"2207:12:26"},"nodeType":"ModifierInvocation","src":"2207:12:26"}],"name":"updateRewardsMetadata","nameLocation":"2116:21:26","nodeType":"FunctionDefinition","parameters":{"id":9588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9587,"mutability":"mutable","name":"distributions","nameLocation":"2178:13:26","nodeType":"VariableDeclaration","scope":9599,"src":"2147:44:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution[]"},"typeName":{"baseType":{"id":9585,"nodeType":"UserDefinedTypeName","pathNode":{"id":9584,"name":"Common.Distribution","nodeType":"IdentifierPath","referencedDeclaration":9815,"src":"2147:19:26"},"referencedDeclaration":9815,"src":"2147:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_storage_ptr","typeString":"struct Common.Distribution"}},"id":9586,"nodeType":"ArrayTypeName","src":"2147:21:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_storage_$dyn_storage_ptr","typeString":"struct Common.Distribution[]"}},"visibility":"internal"}],"src":"2137:60:26"},"returnParameters":{"id":9591,"nodeType":"ParameterList","parameters":[],"src":"2220:0:26"},"scope":9615,"src":"2107:184:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9613,"nodeType":"Block","src":"2490:55:26","statements":[{"expression":{"arguments":[{"id":9610,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9602,"src":"2532:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9607,"name":"rewardDistributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"2500:17:26","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardDistributor_$9754","typeString":"contract IRewardDistributor"}},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setPauseState","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"2500:31:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bool_$returns$__$","typeString":"function (bool) external"}},"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9612,"nodeType":"ExpressionStatement","src":"2500:38:26"}]},"documentation":{"id":9600,"nodeType":"StructuredDocumentation","src":"2297:131:26","text":"@notice Set pause state on the rewardDistributor for approved operator\n@param  state  bool  Pause state"},"functionSelector":"cdb88ad1","id":9614,"implemented":true,"kind":"function","modifiers":[{"id":9605,"kind":"modifierInvocation","modifierName":{"id":9604,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":9537,"src":"2477:12:26"},"nodeType":"ModifierInvocation","src":"2477:12:26"}],"name":"setPauseState","nameLocation":"2442:13:26","nodeType":"FunctionDefinition","parameters":{"id":9603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9602,"mutability":"mutable","name":"state","nameLocation":"2461:5:26","nodeType":"VariableDeclaration","scope":9614,"src":"2456:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9601,"name":"bool","nodeType":"ElementaryTypeName","src":"2456:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2455:12:26"},"returnParameters":{"id":9606,"nodeType":"ParameterList","parameters":[],"src":"2490:0:26"},"scope":9615,"src":"2433:112:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9616,"src":"360:2187:26","usedErrors":[9888,9894]}],"src":"32:2516:26"},"id":26},"contracts/interfaces/IBribeMarket.sol":{"ast":{"absolutePath":"contracts/interfaces/IBribeMarket.sol","exportedSymbols":{"IBribeMarket":[9632]},"id":9633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9617,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IBribeMarket","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9632,"linearizedBaseContracts":[9632],"name":"IBribeMarket","nameLocation":"67:12:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9618,"nodeType":"StructuredDocumentation","src":"86:290:27","text":"@notice Initialize the contract\n@param  _bribeVault  Bribe vault address\n@param  _admin       Admin address\n@param  _protocol    Protocol name\n@param  _maxPeriods  Maximum number of periods\n@param  _periodDuration  Period duration"},"functionSelector":"8d23507f","id":9631,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"390:10:27","nodeType":"FunctionDefinition","parameters":{"id":9629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9620,"mutability":"mutable","name":"_bribeVault","nameLocation":"418:11:27","nodeType":"VariableDeclaration","scope":9631,"src":"410:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9619,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9622,"mutability":"mutable","name":"_admin","nameLocation":"447:6:27","nodeType":"VariableDeclaration","scope":9631,"src":"439:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9621,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9624,"mutability":"mutable","name":"_protocol","nameLocation":"479:9:27","nodeType":"VariableDeclaration","scope":9631,"src":"463:25:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9623,"name":"string","nodeType":"ElementaryTypeName","src":"463:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9626,"mutability":"mutable","name":"_maxPeriods","nameLocation":"506:11:27","nodeType":"VariableDeclaration","scope":9631,"src":"498:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9625,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9628,"mutability":"mutable","name":"_periodDuration","nameLocation":"535:15:27","nodeType":"VariableDeclaration","scope":9631,"src":"527:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9627,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"400:156:27"},"returnParameters":{"id":9630,"nodeType":"ParameterList","parameters":[],"src":"565:0:27"},"scope":9632,"src":"381:185:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9633,"src":"57:511:27","usedErrors":[]}],"src":"32:537:27"},"id":27},"contracts/interfaces/IBribeVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IBribeVault.sol","exportedSymbols":{"Common":[9874],"IBribeVault":[9666]},"id":9667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9634,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:28"},{"absolutePath":"contracts/libraries/Common.sol","file":"../libraries/Common.sol","id":9635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9667,"sourceUnit":9875,"src":"57:33:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBribeVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9666,"linearizedBaseContracts":[9666],"name":"IBribeVault","nameLocation":"102:11:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9636,"nodeType":"StructuredDocumentation","src":"120:119:28","text":"@notice Deposit bribe (ERC20 only)\n@param  _depositParams  DepositBribeParams  Deposit data"},"functionSelector":"5c2a802b","id":9642,"implemented":false,"kind":"function","modifiers":[],"name":"depositBribe","nameLocation":"253:12:28","nodeType":"FunctionDefinition","parameters":{"id":9640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9639,"mutability":"mutable","name":"_depositParams","nameLocation":"310:14:28","nodeType":"VariableDeclaration","scope":9642,"src":"275:49:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_calldata_ptr","typeString":"struct Common.DepositBribeParams"},"typeName":{"id":9638,"nodeType":"UserDefinedTypeName","pathNode":{"id":9637,"name":"Common.DepositBribeParams","nodeType":"IdentifierPath","referencedDeclaration":9836,"src":"275:25:28"},"referencedDeclaration":9836,"src":"275:25:28","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBribeParams_$9836_storage_ptr","typeString":"struct Common.DepositBribeParams"}},"visibility":"internal"}],"src":"265:65:28"},"returnParameters":{"id":9641,"nodeType":"ParameterList","parameters":[],"src":"339:0:28"},"scope":9666,"src":"244:96:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9643,"nodeType":"StructuredDocumentation","src":"346:157:28","text":"@notice Get bribe information based on the specified identifier\n@param  _bribeIdentifier  bytes32  The specified bribe identifier"},"functionSelector":"2c4ef0d5","id":9652,"implemented":false,"kind":"function","modifiers":[],"name":"getBribe","nameLocation":"517:8:28","nodeType":"FunctionDefinition","parameters":{"id":9646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9645,"mutability":"mutable","name":"_bribeIdentifier","nameLocation":"543:16:28","nodeType":"VariableDeclaration","scope":9652,"src":"535:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"535:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"525:40:28"},"returnParameters":{"id":9651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9648,"mutability":"mutable","name":"token","nameLocation":"597:5:28","nodeType":"VariableDeclaration","scope":9652,"src":"589:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9647,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9650,"mutability":"mutable","name":"amount","nameLocation":"612:6:28","nodeType":"VariableDeclaration","scope":9652,"src":"604:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9649,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"588:31:28"},"scope":9666,"src":"508:112:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9653,"nodeType":"StructuredDocumentation","src":"626:185:28","text":"@notice Transfer fees to fee recipient and bribes to distributor and update rewards metadata\n@param  _rewardIdentifiers  bytes32[]  List of rewardIdentifiers"},"functionSelector":"b2d7edb2","id":9659,"implemented":false,"kind":"function","modifiers":[],"name":"transferBribes","nameLocation":"825:14:28","nodeType":"FunctionDefinition","parameters":{"id":9657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9656,"mutability":"mutable","name":"_rewardIdentifiers","nameLocation":"859:18:28","nodeType":"VariableDeclaration","scope":9659,"src":"840:37:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9655,"nodeType":"ArrayTypeName","src":"840:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"839:39:28"},"returnParameters":{"id":9658,"nodeType":"ParameterList","parameters":[],"src":"887:0:28"},"scope":9666,"src":"816:72:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9660,"nodeType":"StructuredDocumentation","src":"894:139:28","text":"@notice Grant the depositor role to an address\n@param  _depositor  address  Address to grant the depositor role"},"functionSelector":"172becff","id":9665,"implemented":false,"kind":"function","modifiers":[],"name":"grantDepositorRole","nameLocation":"1047:18:28","nodeType":"FunctionDefinition","parameters":{"id":9663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9662,"mutability":"mutable","name":"_depositor","nameLocation":"1074:10:28","nodeType":"VariableDeclaration","scope":9665,"src":"1066:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9661,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1065:20:28"},"returnParameters":{"id":9664,"nodeType":"ParameterList","parameters":[],"src":"1094:0:28"},"scope":9666,"src":"1038:57:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9667,"src":"92:1005:28","usedErrors":[]}],"src":"32:1066:28"},"id":28},"contracts/interfaces/IPermit2.sol":{"ast":{"absolutePath":"contracts/interfaces/IPermit2.sol","exportedSymbols":{"IERC20":[915],"IPermit2":[9727]},"id":9728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9668,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":9670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9728,"sourceUnit":916,"src":"57:70:29","symbolAliases":[{"foreign":{"id":9669,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"65:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$915_$","typeString":"type(contract IERC20)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPermit2","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9727,"linearizedBaseContracts":[9727],"name":"IPermit2","nameLocation":"268:8:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPermit2.PermitDetails","id":9679,"members":[{"constant":false,"id":9672,"mutability":"mutable","name":"token","nameLocation":"397:5:29","nodeType":"VariableDeclaration","scope":9679,"src":"389:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9671,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9674,"mutability":"mutable","name":"amount","nameLocation":"467:6:29","nodeType":"VariableDeclaration","scope":9679,"src":"459:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9673,"name":"uint160","nodeType":"ElementaryTypeName","src":"459:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9676,"mutability":"mutable","name":"expiration","nameLocation":"564:10:29","nodeType":"VariableDeclaration","scope":9679,"src":"557:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9675,"name":"uint48","nodeType":"ElementaryTypeName","src":"557:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9678,"mutability":"mutable","name":"nonce","nameLocation":"679:5:29","nodeType":"VariableDeclaration","scope":9679,"src":"672:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9677,"name":"uint48","nodeType":"ElementaryTypeName","src":"672:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PermitDetails","nameLocation":"334:13:29","nodeType":"StructDefinition","scope":9727,"src":"327:364:29","visibility":"public"},{"canonicalName":"IPermit2.PermitSingle","id":9687,"members":[{"constant":false,"id":9682,"mutability":"mutable","name":"details","nameLocation":"868:7:29","nodeType":"VariableDeclaration","scope":9687,"src":"854:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$9679_storage_ptr","typeString":"struct IPermit2.PermitDetails"},"typeName":{"id":9681,"nodeType":"UserDefinedTypeName","pathNode":{"id":9680,"name":"PermitDetails","nodeType":"IdentifierPath","referencedDeclaration":9679,"src":"854:13:29"},"referencedDeclaration":9679,"src":"854:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$9679_storage_ptr","typeString":"struct IPermit2.PermitDetails"}},"visibility":"internal"},{"constant":false,"id":9684,"mutability":"mutable","name":"spender","nameLocation":"947:7:29","nodeType":"VariableDeclaration","scope":9687,"src":"939:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9683,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9686,"mutability":"mutable","name":"sigDeadline","nameLocation":"1016:11:29","nodeType":"VariableDeclaration","scope":9687,"src":"1008:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitSingle","nameLocation":"775:12:29","nodeType":"StructDefinition","scope":9727,"src":"768:266:29","visibility":"public"},{"documentation":{"id":9688,"nodeType":"StructuredDocumentation","src":"1040:455:29","text":"@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."},"functionSelector":"927da105","id":9703,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1509:9:29","nodeType":"FunctionDefinition","parameters":{"id":9695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9690,"mutability":"mutable","name":"user","nameLocation":"1527:4:29","nodeType":"VariableDeclaration","scope":9703,"src":"1519:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9689,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9692,"mutability":"mutable","name":"token","nameLocation":"1541:5:29","nodeType":"VariableDeclaration","scope":9703,"src":"1533:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9691,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9694,"mutability":"mutable","name":"spender","nameLocation":"1556:7:29","nodeType":"VariableDeclaration","scope":9703,"src":"1548:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9693,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:46:29"},"returnParameters":{"id":9702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9697,"mutability":"mutable","name":"amount","nameLocation":"1620:6:29","nodeType":"VariableDeclaration","scope":9703,"src":"1612:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9696,"name":"uint160","nodeType":"ElementaryTypeName","src":"1612:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9699,"mutability":"mutable","name":"expiration","nameLocation":"1635:10:29","nodeType":"VariableDeclaration","scope":9703,"src":"1628:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9698,"name":"uint48","nodeType":"ElementaryTypeName","src":"1628:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":9701,"mutability":"mutable","name":"nonce","nameLocation":"1654:5:29","nodeType":"VariableDeclaration","scope":9703,"src":"1647:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9700,"name":"uint48","nodeType":"ElementaryTypeName","src":"1647:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1611:49:29"},"scope":9727,"src":"1500:161:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9704,"nodeType":"StructuredDocumentation","src":"1667:407:29","text":"@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"},"functionSelector":"2b67b570","id":9714,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2088:6:29","nodeType":"FunctionDefinition","parameters":{"id":9712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9706,"mutability":"mutable","name":"owner","nameLocation":"2103:5:29","nodeType":"VariableDeclaration","scope":9714,"src":"2095:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9705,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9709,"mutability":"mutable","name":"permitSingle","nameLocation":"2130:12:29","nodeType":"VariableDeclaration","scope":9714,"src":"2110:32:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$9687_memory_ptr","typeString":"struct IPermit2.PermitSingle"},"typeName":{"id":9708,"nodeType":"UserDefinedTypeName","pathNode":{"id":9707,"name":"PermitSingle","nodeType":"IdentifierPath","referencedDeclaration":9687,"src":"2110:12:29"},"referencedDeclaration":9687,"src":"2110:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$9687_storage_ptr","typeString":"struct IPermit2.PermitSingle"}},"visibility":"internal"},{"constant":false,"id":9711,"mutability":"mutable","name":"signature","nameLocation":"2159:9:29","nodeType":"VariableDeclaration","scope":9714,"src":"2144:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9710,"name":"bytes","nodeType":"ElementaryTypeName","src":"2144:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2094:75:29"},"returnParameters":{"id":9713,"nodeType":"ParameterList","parameters":[],"src":"2178:0:29"},"scope":9727,"src":"2079:100:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9715,"nodeType":"StructuredDocumentation","src":"2185:386:29","text":"@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."},"functionSelector":"36c78516","id":9726,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2585:12:29","nodeType":"FunctionDefinition","parameters":{"id":9724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9717,"mutability":"mutable","name":"from","nameLocation":"2606:4:29","nodeType":"VariableDeclaration","scope":9726,"src":"2598:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9716,"name":"address","nodeType":"ElementaryTypeName","src":"2598:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9719,"mutability":"mutable","name":"to","nameLocation":"2620:2:29","nodeType":"VariableDeclaration","scope":9726,"src":"2612:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9718,"name":"address","nodeType":"ElementaryTypeName","src":"2612:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9721,"mutability":"mutable","name":"amount","nameLocation":"2632:6:29","nodeType":"VariableDeclaration","scope":9726,"src":"2624:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9720,"name":"uint160","nodeType":"ElementaryTypeName","src":"2624:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9723,"mutability":"mutable","name":"token","nameLocation":"2648:5:29","nodeType":"VariableDeclaration","scope":9726,"src":"2640:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9722,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2597:57:29"},"returnParameters":{"id":9725,"nodeType":"ParameterList","parameters":[],"src":"2663:0:29"},"scope":9727,"src":"2576:88:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9728,"src":"258:2408:29","usedErrors":[]}],"src":"32:2635:29"},"id":29},"contracts/interfaces/IRewardDistributor.sol":{"ast":{"absolutePath":"contracts/interfaces/IRewardDistributor.sol","exportedSymbols":{"Common":[9874],"IRewardDistributor":[9754]},"id":9755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9729,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:30"},{"absolutePath":"contracts/libraries/Common.sol","file":"../libraries/Common.sol","id":9731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9755,"sourceUnit":9875,"src":"57:47:30","symbolAliases":[{"foreign":{"id":9730,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"65:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Common_$9874_$","typeString":"type(library Common)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardDistributor","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9754,"linearizedBaseContracts":[9754],"name":"IRewardDistributor","nameLocation":"116:18:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9732,"nodeType":"StructuredDocumentation","src":"141:133:30","text":"@notice Update rewards metadata\n@param  distributions  Distribution[] List of reward distribution details"},"functionSelector":"df45c752","id":9739,"implemented":false,"kind":"function","modifiers":[],"name":"updateRewardsMetadata","nameLocation":"288:21:30","nodeType":"FunctionDefinition","parameters":{"id":9737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9736,"mutability":"mutable","name":"distributions","nameLocation":"350:13:30","nodeType":"VariableDeclaration","scope":9739,"src":"319:44:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Distribution[]"},"typeName":{"baseType":{"id":9734,"nodeType":"UserDefinedTypeName","pathNode":{"id":9733,"name":"Common.Distribution","nodeType":"IdentifierPath","referencedDeclaration":9815,"src":"319:19:30"},"referencedDeclaration":9815,"src":"319:19:30","typeDescriptions":{"typeIdentifier":"t_struct$_Distribution_$9815_storage_ptr","typeString":"struct Common.Distribution"}},"id":9735,"nodeType":"ArrayTypeName","src":"319:21:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Distribution_$9815_storage_$dyn_storage_ptr","typeString":"struct Common.Distribution[]"}},"visibility":"internal"}],"src":"309:60:30"},"returnParameters":{"id":9738,"nodeType":"ParameterList","parameters":[],"src":"378:0:30"},"scope":9754,"src":"279:100:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9740,"nodeType":"StructuredDocumentation","src":"385:146:30","text":"@notice Set the contract's pause state (ie. before taking snapshot for the harvester)\n@param  state  bool  Pause state"},"functionSelector":"cdb88ad1","id":9745,"implemented":false,"kind":"function","modifiers":[],"name":"setPauseState","nameLocation":"545:13:30","nodeType":"FunctionDefinition","parameters":{"id":9743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9742,"mutability":"mutable","name":"state","nameLocation":"564:5:30","nodeType":"VariableDeclaration","scope":9745,"src":"559:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9741,"name":"bool","nodeType":"ElementaryTypeName","src":"559:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"558:12:30"},"returnParameters":{"id":9744,"nodeType":"ParameterList","parameters":[],"src":"579:0:30"},"scope":9754,"src":"536:44:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9746,"nodeType":"StructuredDocumentation","src":"586:129:30","text":"@notice Claim rewards based on the specified metadata\n@param  _claims  Claim[] List of claim metadata"},"functionSelector":"56853398","id":9753,"implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"729:5:30","nodeType":"FunctionDefinition","parameters":{"id":9751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9750,"mutability":"mutable","name":"_claims","nameLocation":"759:7:30","nodeType":"VariableDeclaration","scope":9753,"src":"735:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Common.Claim[]"},"typeName":{"baseType":{"id":9748,"nodeType":"UserDefinedTypeName","pathNode":{"id":9747,"name":"Common.Claim","nodeType":"IdentifierPath","referencedDeclaration":9873,"src":"735:12:30"},"referencedDeclaration":9873,"src":"735:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$9873_storage_ptr","typeString":"struct Common.Claim"}},"id":9749,"nodeType":"ArrayTypeName","src":"735:14:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Claim_$9873_storage_$dyn_storage_ptr","typeString":"struct Common.Claim[]"}},"visibility":"internal"}],"src":"734:33:30"},"returnParameters":{"id":9752,"nodeType":"ParameterList","parameters":[],"src":"776:0:30"},"scope":9754,"src":"720:57:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9755,"src":"106:673:30","usedErrors":[]}],"src":"32:748:30"},"id":30},"contracts/interfaces/IRewardHarvester.sol":{"ast":{"absolutePath":"contracts/interfaces/IRewardHarvester.sol","exportedSymbols":{"IRewardHarvester":[9769]},"id":9770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9756,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardHarvester","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9769,"linearizedBaseContracts":[9769],"name":"IRewardHarvester","nameLocation":"67:16:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9757,"nodeType":"StructuredDocumentation","src":"90:60:31","text":"@notice Return the default token address"},"functionSelector":"74c13fda","id":9762,"implemented":false,"kind":"function","modifiers":[],"name":"defaultToken","nameLocation":"164:12:31","nodeType":"FunctionDefinition","parameters":{"id":9758,"nodeType":"ParameterList","parameters":[],"src":"176:2:31"},"returnParameters":{"id":9761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9762,"src":"202:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9759,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"201:9:31"},"scope":9769,"src":"155:56:31","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9763,"nodeType":"StructuredDocumentation","src":"217:137:31","text":"@notice Deposit `defaultToken` to this contract\n@param  _amount  uint256  Amount of `defaultToken` to deposit"},"functionSelector":"1e2720ff","id":9768,"implemented":false,"kind":"function","modifiers":[],"name":"depositReward","nameLocation":"368:13:31","nodeType":"FunctionDefinition","parameters":{"id":9766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9765,"mutability":"mutable","name":"_amount","nameLocation":"390:7:31","nodeType":"VariableDeclaration","scope":9768,"src":"382:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9764,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"381:17:31"},"returnParameters":{"id":9767,"nodeType":"ParameterList","parameters":[],"src":"407:0:31"},"scope":9769,"src":"359:49:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9770,"src":"57:353:31","usedErrors":[]}],"src":"32:379:31"},"id":31},"contracts/interfaces/IvlAura.sol":{"ast":{"absolutePath":"contracts/interfaces/IvlAura.sol","exportedSymbols":{"vlAura":[9804]},"id":9805,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9771,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"vlAura","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9804,"linearizedBaseContracts":[9804],"name":"vlAura","nameLocation":"67:6:32","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":9779,"name":"DelegateChanged","nameLocation":"86:15:32","nodeType":"EventDefinition","parameters":{"id":9778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9773,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"127:9:32","nodeType":"VariableDeclaration","scope":9779,"src":"111:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9772,"name":"address","nodeType":"ElementaryTypeName","src":"111:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9775,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"162:12:32","nodeType":"VariableDeclaration","scope":9779,"src":"146:28:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9774,"name":"address","nodeType":"ElementaryTypeName","src":"146:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9777,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"200:10:32","nodeType":"VariableDeclaration","scope":9779,"src":"184:26:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9776,"name":"address","nodeType":"ElementaryTypeName","src":"184:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101:115:32"},"src":"80:137:32"},{"documentation":{"id":9780,"nodeType":"StructuredDocumentation","src":"223:103:32","text":"@notice Delegate of the specified account\n@param  account  address  Account"},"functionSelector":"587cde1e","id":9787,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"340:9:32","nodeType":"FunctionDefinition","parameters":{"id":9783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9782,"mutability":"mutable","name":"account","nameLocation":"358:7:32","nodeType":"VariableDeclaration","scope":9787,"src":"350:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9781,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"349:17:32"},"returnParameters":{"id":9786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9787,"src":"390:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9784,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:9:32"},"scope":9804,"src":"331:68:32","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9788,"nodeType":"StructuredDocumentation","src":"405:101:32","text":"@notice Balance of the specified user\n@param  user  address  User account"},"functionSelector":"70a08231","id":9795,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"520:9:32","nodeType":"FunctionDefinition","parameters":{"id":9791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9790,"mutability":"mutable","name":"user","nameLocation":"538:4:32","nodeType":"VariableDeclaration","scope":9795,"src":"530:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9789,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"529:14:32"},"returnParameters":{"id":9794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9793,"mutability":"mutable","name":"amount","nameLocation":"575:6:32","nodeType":"VariableDeclaration","scope":9795,"src":"567:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9792,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"566:16:32"},"scope":9804,"src":"511:72:32","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9796,"nodeType":"StructuredDocumentation","src":"589:68:32","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":9803,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"671:8:32","nodeType":"FunctionDefinition","parameters":{"id":9799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9798,"mutability":"mutable","name":"account","nameLocation":"688:7:32","nodeType":"VariableDeclaration","scope":9803,"src":"680:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9797,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"679:17:32"},"returnParameters":{"id":9802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9803,"src":"720:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9800,"name":"uint256","nodeType":"ElementaryTypeName","src":"720:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"719:9:32"},"scope":9804,"src":"662:67:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9805,"src":"57:674:32","usedErrors":[]}],"src":"32:700:32"},"id":32},"contracts/libraries/Common.sol":{"ast":{"absolutePath":"contracts/libraries/Common.sol","exportedSymbols":{"Common":[9874]},"id":9875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9806,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:33"},{"abstract":false,"baseContracts":[],"canonicalName":"Common","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":9874,"linearizedBaseContracts":[9874],"name":"Common","nameLocation":"65:6:33","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Common.Distribution","id":9815,"members":[{"constant":false,"id":9808,"mutability":"mutable","name":"identifier","nameLocation":"396:10:33","nodeType":"VariableDeclaration","scope":9815,"src":"388:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"388:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9810,"mutability":"mutable","name":"token","nameLocation":"424:5:33","nodeType":"VariableDeclaration","scope":9815,"src":"416:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9809,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9812,"mutability":"mutable","name":"merkleRoot","nameLocation":"447:10:33","nodeType":"VariableDeclaration","scope":9815,"src":"439:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"439:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9814,"mutability":"mutable","name":"proof","nameLocation":"475:5:33","nodeType":"VariableDeclaration","scope":9815,"src":"467:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"467:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Distribution","nameLocation":"365:12:33","nodeType":"StructDefinition","scope":9874,"src":"358:129:33","visibility":"public"},{"canonicalName":"Common.DepositBribeParams","id":9836,"members":[{"constant":false,"id":9817,"mutability":"mutable","name":"proposal","nameLocation":"1229:8:33","nodeType":"VariableDeclaration","scope":9836,"src":"1221:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1221:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9819,"mutability":"mutable","name":"token","nameLocation":"1255:5:33","nodeType":"VariableDeclaration","scope":9836,"src":"1247:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9818,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9821,"mutability":"mutable","name":"briber","nameLocation":"1278:6:33","nodeType":"VariableDeclaration","scope":9836,"src":"1270:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9820,"name":"address","nodeType":"ElementaryTypeName","src":"1270:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9823,"mutability":"mutable","name":"amount","nameLocation":"1302:6:33","nodeType":"VariableDeclaration","scope":9836,"src":"1294:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9825,"mutability":"mutable","name":"maxTokensPerVote","nameLocation":"1326:16:33","nodeType":"VariableDeclaration","scope":9836,"src":"1318:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9827,"mutability":"mutable","name":"periods","nameLocation":"1360:7:33","nodeType":"VariableDeclaration","scope":9836,"src":"1352:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9829,"mutability":"mutable","name":"periodDuration","nameLocation":"1385:14:33","nodeType":"VariableDeclaration","scope":9836,"src":"1377:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9831,"mutability":"mutable","name":"proposalDeadline","nameLocation":"1417:16:33","nodeType":"VariableDeclaration","scope":9836,"src":"1409:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9833,"mutability":"mutable","name":"permitDeadline","nameLocation":"1451:14:33","nodeType":"VariableDeclaration","scope":9836,"src":"1443:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9835,"mutability":"mutable","name":"signature","nameLocation":"1481:9:33","nodeType":"VariableDeclaration","scope":9836,"src":"1475:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9834,"name":"bytes","nodeType":"ElementaryTypeName","src":"1475:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"DepositBribeParams","nameLocation":"1192:18:33","nodeType":"StructDefinition","scope":9874,"src":"1185:312:33","visibility":"public"},{"canonicalName":"Common.ClaimAndSwapData","id":9863,"members":[{"constant":false,"id":9838,"mutability":"mutable","name":"rwIdentifier","nameLocation":"2438:12:33","nodeType":"VariableDeclaration","scope":9863,"src":"2430:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2430:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9840,"mutability":"mutable","name":"fromToken","nameLocation":"2468:9:33","nodeType":"VariableDeclaration","scope":9863,"src":"2460:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9839,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9842,"mutability":"mutable","name":"toToken","nameLocation":"2495:7:33","nodeType":"VariableDeclaration","scope":9863,"src":"2487:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9841,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9844,"mutability":"mutable","name":"fromAmount","nameLocation":"2520:10:33","nodeType":"VariableDeclaration","scope":9863,"src":"2512:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2512:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9846,"mutability":"mutable","name":"toAmount","nameLocation":"2548:8:33","nodeType":"VariableDeclaration","scope":9863,"src":"2540:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2540:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9848,"mutability":"mutable","name":"deadline","nameLocation":"2574:8:33","nodeType":"VariableDeclaration","scope":9863,"src":"2566:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2566:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9851,"mutability":"mutable","name":"callees","nameLocation":"2602:7:33","nodeType":"VariableDeclaration","scope":9863,"src":"2592:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9849,"name":"address","nodeType":"ElementaryTypeName","src":"2592:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9850,"nodeType":"ArrayTypeName","src":"2592:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9854,"mutability":"mutable","name":"callLengths","nameLocation":"2629:11:33","nodeType":"VariableDeclaration","scope":9863,"src":"2619:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9853,"nodeType":"ArrayTypeName","src":"2619:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9857,"mutability":"mutable","name":"values","nameLocation":"2660:6:33","nodeType":"VariableDeclaration","scope":9863,"src":"2650:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2650:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9856,"nodeType":"ArrayTypeName","src":"2650:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9859,"mutability":"mutable","name":"exchangeData","nameLocation":"2682:12:33","nodeType":"VariableDeclaration","scope":9863,"src":"2676:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9858,"name":"bytes","nodeType":"ElementaryTypeName","src":"2676:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9862,"mutability":"mutable","name":"rwMerkleProof","nameLocation":"2714:13:33","nodeType":"VariableDeclaration","scope":9863,"src":"2704:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9861,"nodeType":"ArrayTypeName","src":"2704:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"ClaimAndSwapData","nameLocation":"2403:16:33","nodeType":"StructDefinition","scope":9874,"src":"2396:338:33","visibility":"public"},{"canonicalName":"Common.Claim","id":9873,"members":[{"constant":false,"id":9865,"mutability":"mutable","name":"identifier","nameLocation":"3066:10:33","nodeType":"VariableDeclaration","scope":9873,"src":"3058:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3058:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9867,"mutability":"mutable","name":"account","nameLocation":"3094:7:33","nodeType":"VariableDeclaration","scope":9873,"src":"3086:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9866,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9869,"mutability":"mutable","name":"amount","nameLocation":"3119:6:33","nodeType":"VariableDeclaration","scope":9873,"src":"3111:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9868,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9872,"mutability":"mutable","name":"merkleProof","nameLocation":"3145:11:33","nodeType":"VariableDeclaration","scope":9873,"src":"3135:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9871,"nodeType":"ArrayTypeName","src":"3135:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"Claim","nameLocation":"3042:5:33","nodeType":"StructDefinition","scope":9874,"src":"3035:128:33","visibility":"public"}],"scope":9875,"src":"57:3108:33","usedErrors":[]}],"src":"32:3134:33"},"id":33},"contracts/libraries/Errors.sol":{"ast":{"absolutePath":"contracts/libraries/Errors.sol","exportedSymbols":{"Errors":[10009]},"id":10010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9876,"literals":["solidity","0.8",".12"],"nodeType":"PragmaDirective","src":"32:23:34"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":10009,"linearizedBaseContracts":[10009],"name":"Errors","nameLocation":"65:6:34","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9877,"nodeType":"StructuredDocumentation","src":"78:67:34","text":" @notice max period 0 or greater than MAX_PERIODS"},"id":9879,"name":"InvalidMaxPeriod","nameLocation":"156:16:34","nodeType":"ErrorDefinition","parameters":{"id":9878,"nodeType":"ParameterList","parameters":[],"src":"172:2:34"},"src":"150:25:34"},{"documentation":{"id":9880,"nodeType":"StructuredDocumentation","src":"181:80:34","text":" @notice period duration 0 or greater than MAX_PERIOD_DURATION"},"id":9882,"name":"InvalidPeriodDuration","nameLocation":"272:21:34","nodeType":"ErrorDefinition","parameters":{"id":9881,"nodeType":"ParameterList","parameters":[],"src":"293:2:34"},"src":"266:30:34"},{"documentation":{"id":9883,"nodeType":"StructuredDocumentation","src":"302:61:34","text":" @notice address provided is not a contract"},"id":9885,"name":"NotAContract","nameLocation":"374:12:34","nodeType":"ErrorDefinition","parameters":{"id":9884,"nodeType":"ParameterList","parameters":[],"src":"386:2:34"},"src":"368:21:34"},{"documentation":{"id":9886,"nodeType":"StructuredDocumentation","src":"395:41:34","text":" @notice not authorized"},"id":9888,"name":"NotAuthorized","nameLocation":"447:13:34","nodeType":"ErrorDefinition","parameters":{"id":9887,"nodeType":"ParameterList","parameters":[],"src":"460:2:34"},"src":"441:22:34"},{"documentation":{"id":9889,"nodeType":"StructuredDocumentation","src":"469:55:34","text":" @notice contract already initialized"},"id":9891,"name":"AlreadyInitialized","nameLocation":"535:18:34","nodeType":"ErrorDefinition","parameters":{"id":9890,"nodeType":"ParameterList","parameters":[],"src":"553:2:34"},"src":"529:27:34"},{"documentation":{"id":9892,"nodeType":"StructuredDocumentation","src":"562:37:34","text":" @notice address(0)"},"id":9894,"name":"InvalidAddress","nameLocation":"610:14:34","nodeType":"ErrorDefinition","parameters":{"id":9893,"nodeType":"ParameterList","parameters":[],"src":"624:2:34"},"src":"604:23:34"},{"documentation":{"id":9895,"nodeType":"StructuredDocumentation","src":"633:49:34","text":" @notice empty bytes identifier"},"id":9897,"name":"InvalidIdentifier","nameLocation":"693:17:34","nodeType":"ErrorDefinition","parameters":{"id":9896,"nodeType":"ParameterList","parameters":[],"src":"710:2:34"},"src":"687:26:34"},{"documentation":{"id":9898,"nodeType":"StructuredDocumentation","src":"719:48:34","text":" @notice invalid protocol name"},"id":9900,"name":"InvalidProtocol","nameLocation":"778:15:34","nodeType":"ErrorDefinition","parameters":{"id":9899,"nodeType":"ParameterList","parameters":[],"src":"793:2:34"},"src":"772:24:34"},{"documentation":{"id":9901,"nodeType":"StructuredDocumentation","src":"802:52:34","text":" @notice invalid number of choices"},"id":9903,"name":"InvalidChoiceCount","nameLocation":"865:18:34","nodeType":"ErrorDefinition","parameters":{"id":9902,"nodeType":"ParameterList","parameters":[],"src":"883:2:34"},"src":"859:27:34"},{"documentation":{"id":9904,"nodeType":"StructuredDocumentation","src":"892:47:34","text":" @notice invalid input amount"},"id":9906,"name":"InvalidAmount","nameLocation":"950:13:34","nodeType":"ErrorDefinition","parameters":{"id":9905,"nodeType":"ParameterList","parameters":[],"src":"963:2:34"},"src":"944:22:34"},{"documentation":{"id":9907,"nodeType":"StructuredDocumentation","src":"972:42:34","text":" @notice not team member"},"id":9909,"name":"NotTeamMember","nameLocation":"1025:13:34","nodeType":"ErrorDefinition","parameters":{"id":9908,"nodeType":"ParameterList","parameters":[],"src":"1038:2:34"},"src":"1019:22:34"},{"documentation":{"id":9910,"nodeType":"StructuredDocumentation","src":"1047:55:34","text":" @notice cannot whitelist BRIBE_VAULT"},"id":9912,"name":"NoWhitelistBribeVault","nameLocation":"1113:21:34","nodeType":"ErrorDefinition","parameters":{"id":9911,"nodeType":"ParameterList","parameters":[],"src":"1134:2:34"},"src":"1107:30:34"},{"documentation":{"id":9913,"nodeType":"StructuredDocumentation","src":"1143:52:34","text":" @notice token already whitelisted"},"id":9915,"name":"TokenWhitelisted","nameLocation":"1206:16:34","nodeType":"ErrorDefinition","parameters":{"id":9914,"nodeType":"ParameterList","parameters":[],"src":"1222:2:34"},"src":"1200:25:34"},{"documentation":{"id":9916,"nodeType":"StructuredDocumentation","src":"1231:48:34","text":" @notice token not whitelisted"},"id":9918,"name":"TokenNotWhitelisted","nameLocation":"1290:19:34","nodeType":"ErrorDefinition","parameters":{"id":9917,"nodeType":"ParameterList","parameters":[],"src":"1309:2:34"},"src":"1284:28:34"},{"documentation":{"id":9919,"nodeType":"StructuredDocumentation","src":"1318:52:34","text":" @notice voter already blacklisted"},"id":9921,"name":"VoterBlacklisted","nameLocation":"1381:16:34","nodeType":"ErrorDefinition","parameters":{"id":9920,"nodeType":"ParameterList","parameters":[],"src":"1397:2:34"},"src":"1375:25:34"},{"documentation":{"id":9922,"nodeType":"StructuredDocumentation","src":"1406:48:34","text":" @notice voter not blacklisted"},"id":9924,"name":"VoterNotBlacklisted","nameLocation":"1465:19:34","nodeType":"ErrorDefinition","parameters":{"id":9923,"nodeType":"ParameterList","parameters":[],"src":"1484:2:34"},"src":"1459:28:34"},{"documentation":{"id":9925,"nodeType":"StructuredDocumentation","src":"1493:46:34","text":" @notice deadline has passed"},"id":9927,"name":"DeadlinePassed","nameLocation":"1550:14:34","nodeType":"ErrorDefinition","parameters":{"id":9926,"nodeType":"ParameterList","parameters":[],"src":"1564:2:34"},"src":"1544:23:34"},{"documentation":{"id":9928,"nodeType":"StructuredDocumentation","src":"1573:41:34","text":" @notice invalid period"},"id":9930,"name":"InvalidPeriod","nameLocation":"1625:13:34","nodeType":"ErrorDefinition","parameters":{"id":9929,"nodeType":"ParameterList","parameters":[],"src":"1638:2:34"},"src":"1619:22:34"},{"documentation":{"id":9931,"nodeType":"StructuredDocumentation","src":"1647:43:34","text":" @notice invalid deadline"},"id":9933,"name":"InvalidDeadline","nameLocation":"1701:15:34","nodeType":"ErrorDefinition","parameters":{"id":9932,"nodeType":"ParameterList","parameters":[],"src":"1716:2:34"},"src":"1695:24:34"},{"documentation":{"id":9934,"nodeType":"StructuredDocumentation","src":"1725:42:34","text":" @notice invalid max fee"},"id":9936,"name":"InvalidMaxFee","nameLocation":"1778:13:34","nodeType":"ErrorDefinition","parameters":{"id":9935,"nodeType":"ParameterList","parameters":[],"src":"1791:2:34"},"src":"1772:22:34"},{"documentation":{"id":9937,"nodeType":"StructuredDocumentation","src":"1800:38:34","text":" @notice invalid fee"},"id":9939,"name":"InvalidFee","nameLocation":"1849:10:34","nodeType":"ErrorDefinition","parameters":{"id":9938,"nodeType":"ParameterList","parameters":[],"src":"1859:2:34"},"src":"1843:19:34"},{"documentation":{"id":9940,"nodeType":"StructuredDocumentation","src":"1868:48:34","text":" @notice invalid fee recipient"},"id":9942,"name":"InvalidFeeRecipient","nameLocation":"1927:19:34","nodeType":"ErrorDefinition","parameters":{"id":9941,"nodeType":"ParameterList","parameters":[],"src":"1946:2:34"},"src":"1921:28:34"},{"documentation":{"id":9943,"nodeType":"StructuredDocumentation","src":"1955:46:34","text":" @notice invalid distributor"},"id":9945,"name":"InvalidDistributor","nameLocation":"2012:18:34","nodeType":"ErrorDefinition","parameters":{"id":9944,"nodeType":"ParameterList","parameters":[],"src":"2030:2:34"},"src":"2006:27:34"},{"documentation":{"id":9946,"nodeType":"StructuredDocumentation","src":"2039:41:34","text":" @notice invalid briber"},"id":9948,"name":"InvalidBriber","nameLocation":"2091:13:34","nodeType":"ErrorDefinition","parameters":{"id":9947,"nodeType":"ParameterList","parameters":[],"src":"2104:2:34"},"src":"2085:22:34"},{"documentation":{"id":9949,"nodeType":"StructuredDocumentation","src":"2113:63:34","text":" @notice address does not have DEPOSITOR_ROLE"},"id":9951,"name":"NotDepositor","nameLocation":"2187:12:34","nodeType":"ErrorDefinition","parameters":{"id":9950,"nodeType":"ParameterList","parameters":[],"src":"2199:2:34"},"src":"2181:21:34"},{"documentation":{"id":9952,"nodeType":"StructuredDocumentation","src":"2208:41:34","text":" @notice no array given"},"id":9954,"name":"InvalidArray","nameLocation":"2260:12:34","nodeType":"ErrorDefinition","parameters":{"id":9953,"nodeType":"ParameterList","parameters":[],"src":"2272:2:34"},"src":"2254:21:34"},{"documentation":{"id":9955,"nodeType":"StructuredDocumentation","src":"2281:52:34","text":" @notice invalid reward identifier"},"id":9957,"name":"InvalidRewardIdentifier","nameLocation":"2344:23:34","nodeType":"ErrorDefinition","parameters":{"id":9956,"nodeType":"ParameterList","parameters":[],"src":"2367:2:34"},"src":"2338:32:34"},{"documentation":{"id":9958,"nodeType":"StructuredDocumentation","src":"2376:61:34","text":" @notice bribe has already been transferred"},"id":9960,"name":"BribeAlreadyTransferred","nameLocation":"2448:23:34","nodeType":"ErrorDefinition","parameters":{"id":9959,"nodeType":"ParameterList","parameters":[],"src":"2471:2:34"},"src":"2442:32:34"},{"documentation":{"id":9961,"nodeType":"StructuredDocumentation","src":"2480:54:34","text":" @notice distribution does not exist"},"id":9963,"name":"InvalidDistribution","nameLocation":"2545:19:34","nodeType":"ErrorDefinition","parameters":{"id":9962,"nodeType":"ParameterList","parameters":[],"src":"2564:2:34"},"src":"2539:28:34"},{"documentation":{"id":9964,"nodeType":"StructuredDocumentation","src":"2573:46:34","text":" @notice invalid merkle root"},"id":9966,"name":"InvalidMerkleRoot","nameLocation":"2630:17:34","nodeType":"ErrorDefinition","parameters":{"id":9965,"nodeType":"ParameterList","parameters":[],"src":"2647:2:34"},"src":"2624:26:34"},{"documentation":{"id":9967,"nodeType":"StructuredDocumentation","src":"2656:46:34","text":" @notice token is address(0)"},"id":9969,"name":"InvalidToken","nameLocation":"2713:12:34","nodeType":"ErrorDefinition","parameters":{"id":9968,"nodeType":"ParameterList","parameters":[],"src":"2725:2:34"},"src":"2707:21:34"},{"documentation":{"id":9970,"nodeType":"StructuredDocumentation","src":"2734:47:34","text":" @notice claim does not exist"},"id":9972,"name":"InvalidClaim","nameLocation":"2792:12:34","nodeType":"ErrorDefinition","parameters":{"id":9971,"nodeType":"ParameterList","parameters":[],"src":"2804:2:34"},"src":"2786:21:34"},{"documentation":{"id":9973,"nodeType":"StructuredDocumentation","src":"2813:64:34","text":" @notice reward is not yet active for claiming"},"id":9975,"name":"RewardInactive","nameLocation":"2888:14:34","nodeType":"ErrorDefinition","parameters":{"id":9974,"nodeType":"ParameterList","parameters":[],"src":"2902:2:34"},"src":"2882:23:34"},{"documentation":{"id":9976,"nodeType":"StructuredDocumentation","src":"2911:52:34","text":" @notice timer duration is invalid"},"id":9978,"name":"InvalidTimerDuration","nameLocation":"2974:20:34","nodeType":"ErrorDefinition","parameters":{"id":9977,"nodeType":"ParameterList","parameters":[],"src":"2994:2:34"},"src":"2968:29:34"},{"documentation":{"id":9979,"nodeType":"StructuredDocumentation","src":"3003:50:34","text":" @notice merkle proof is invalid"},"id":9981,"name":"InvalidProof","nameLocation":"3064:12:34","nodeType":"ErrorDefinition","parameters":{"id":9980,"nodeType":"ParameterList","parameters":[],"src":"3076:2:34"},"src":"3058:21:34"},{"documentation":{"id":9982,"nodeType":"StructuredDocumentation","src":"3085:46:34","text":" @notice ETH transfer failed"},"id":9984,"name":"ETHTransferFailed","nameLocation":"3142:17:34","nodeType":"ErrorDefinition","parameters":{"id":9983,"nodeType":"ParameterList","parameters":[],"src":"3159:2:34"},"src":"3136:26:34"},{"documentation":{"id":9985,"nodeType":"StructuredDocumentation","src":"3168:51:34","text":" @notice Invalid operator address"},"id":9987,"name":"InvalidOperator","nameLocation":"3230:15:34","nodeType":"ErrorDefinition","parameters":{"id":9986,"nodeType":"ParameterList","parameters":[],"src":"3245:2:34"},"src":"3224:24:34"},{"documentation":{"id":9988,"nodeType":"StructuredDocumentation","src":"3254:62:34","text":" @notice call to TokenTransferProxy contract"},"id":9990,"name":"TokenTransferProxyCall","nameLocation":"3327:22:34","nodeType":"ErrorDefinition","parameters":{"id":9989,"nodeType":"ParameterList","parameters":[],"src":"3349:2:34"},"src":"3321:31:34"},{"documentation":{"id":9991,"nodeType":"StructuredDocumentation","src":"3358:47:34","text":" @notice calling TransferFrom"},"id":9993,"name":"TransferFromCall","nameLocation":"3416:16:34","nodeType":"ErrorDefinition","parameters":{"id":9992,"nodeType":"ParameterList","parameters":[],"src":"3432:2:34"},"src":"3410:25:34"},{"documentation":{"id":9994,"nodeType":"StructuredDocumentation","src":"3441:47:34","text":" @notice external call failed"},"id":9996,"name":"ExternalCallFailure","nameLocation":"3499:19:34","nodeType":"ErrorDefinition","parameters":{"id":9995,"nodeType":"ParameterList","parameters":[],"src":"3518:2:34"},"src":"3493:28:34"},{"documentation":{"id":9997,"nodeType":"StructuredDocumentation","src":"3527:50:34","text":" @notice returned tokens too few"},"id":9999,"name":"InsufficientReturn","nameLocation":"3588:18:34","nodeType":"ErrorDefinition","parameters":{"id":9998,"nodeType":"ParameterList","parameters":[],"src":"3606:2:34"},"src":"3582:27:34"},{"documentation":{"id":10000,"nodeType":"StructuredDocumentation","src":"3615:47:34","text":" @notice swapDeadline expired"},"id":10002,"name":"DeadlineBreach","nameLocation":"3673:14:34","nodeType":"ErrorDefinition","parameters":{"id":10001,"nodeType":"ParameterList","parameters":[],"src":"3687:2:34"},"src":"3667:23:34"},{"documentation":{"id":10003,"nodeType":"StructuredDocumentation","src":"3696:57:34","text":" @notice expected tokens returned are 0"},"id":10005,"name":"ZeroExpectedReturns","nameLocation":"3764:19:34","nodeType":"ErrorDefinition","parameters":{"id":10004,"nodeType":"ParameterList","parameters":[],"src":"3783:2:34"},"src":"3758:28:34"},{"documentation":{"id":10006,"nodeType":"StructuredDocumentation","src":"3792:77:34","text":" @notice arrays in SwapData.exchangeData have wrong lengths"},"id":10008,"name":"ExchangeDataArrayMismatch","nameLocation":"3880:25:34","nodeType":"ErrorDefinition","parameters":{"id":10007,"nodeType":"ParameterList","parameters":[],"src":"3905:2:34"},"src":"3874:34:34"}],"scope":10010,"src":"57:3853:34","usedErrors":[9879,9882,9885,9888,9891,9894,9897,9900,9903,9906,9909,9912,9915,9918,9921,9924,9927,9930,9933,9936,9939,9942,9945,9948,9951,9954,9957,9960,9963,9966,9969,9972,9975,9978,9981,9984,9987,9990,9993,9996,9999,10002,10005,10008]}],"src":"32:3879:34"},"id":34}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable2Step.sol":{"Ownable2Step":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea3646970667358221220288ecb7979c357d4b2865c313f411f5abfc895c9a94dd44647cb5f2723b8cd226c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 DUP15 0xCB PUSH26 0x79C357D4B2865C313F411F5ABFC895C9A94DD44647CB5F2723B8 0xCD 0x22 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"755:3275:4:-:0;;;;;;-1:-1:-1;755:3275:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea3646970667358221220288ecb7979c357d4b2865c313f411f5abfc895c9a94dd44647cb5f2723b8cd226c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 DUP15 0xCB PUSH26 0x79C357D4B2865C313F411F5ABFC895C9A94DD44647CB5F2723B8 0xCD 0x22 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"755:3275:4:-:0;;;;;:::i;:::-;-1:-1:-1;755:3275:4;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea364697066735822122059a164ad7033decb812338fd832b7a43cbc7f608e00033052b71565940adc99b6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE LOG1 PUSH5 0xAD7033DECB DUP2 0x23 CODESIZE REVERT DUP4 0x2B PUSH27 0x43CBC7F608E00033052B71565940ADC99B6C6578706572696D656E PUSH21 0x616CF564736F6C634300080C004100000000000000 ","sourceMap":"701:6234:9:-:0;;;;;;-1:-1:-1;701:6234:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea364697066735822122059a164ad7033decb812338fd832b7a43cbc7f608e00033052b71565940adc99b6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE LOG1 PUSH5 0xAD7033DECB DUP2 0x23 CODESIZE REVERT DUP4 0x2B PUSH27 0x43CBC7F608E00033052B71565940ADC99B6C6578706572696D656E PUSH21 0x616CF564736F6C634300080C004100000000000000 ","sourceMap":"701:6234:9:-:0;;;;;:::i;:::-;-1:-1:-1;701:6234:9;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea3646970667358221220e702dd338bffb61db5426533f31728e3f028662348393fe2b86df9f5e9451f916c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 MUL 0xDD CALLER DUP12 SELFDESTRUCT 0xB6 SAR 0xB5 TIMESTAMP PUSH6 0x33F31728E3F0 0x28 PUSH7 0x2348393FE2B86D 0xF9 CREATE2 0xE9 GASLIMIT 0x1F SWAP2 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"194:9169:10:-:0;;;;;;-1:-1:-1;194:9169:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea3646970667358221220e702dd338bffb61db5426533f31728e3f028662348393fe2b86df9f5e9451f916c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 MUL 0xDD CALLER DUP12 SELFDESTRUCT 0xB6 SAR 0xB5 TIMESTAMP PUSH6 0x33F31728E3F0 0x28 PUSH7 0x2348393FE2B86D 0xF9 CREATE2 0xE9 GASLIMIT 0x1F SWAP2 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"194:9169:10:-:0;;;;;:::i;:::-;-1:-1:-1;194:9169:10;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea364697066735822122025f5b40cfd7610ca5aee208ec75b2ddc525a80c84f5d3aae678ab903f43733d26c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CREATE2 0xB4 0xC REVERT PUSH23 0x10CA5AEE208EC75B2DDC525A80C84F5D3AAE678AB903F4 CALLDATACOPY CALLER 0xD2 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"220:2559:12:-:0;;;;;;-1:-1:-1;220:2559:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea364697066735822122025f5b40cfd7610ca5aee208ec75b2ddc525a80c84f5d3aae678ab903f43733d26c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CREATE2 0xB4 0xC REVERT PUSH23 0x10CA5AEE208EC75B2DDC525A80C84F5D3AAE678AB903F4 CALLDATACOPY CALLER 0xD2 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"220:2559:12:-:0;;;;;:::i;:::-;-1:-1:-1;220:2559:12;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea3646970667358221220bd98dd23b639a66e639c18029e15de43a9e87174400ae429c62346aa4ca7cb9c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP9 0xDD 0x23 0xB6 CODECOPY 0xA6 PUSH15 0x639C18029E15DE43A9E87174400AE4 0x29 0xC6 0x23 CHAINID 0xAA 0x4C 0xA7 0xCB SWAP13 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"802:8819:13:-:0;;;;;;-1:-1:-1;802:8819:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea3646970667358221220bd98dd23b639a66e639c18029e15de43a9e87174400ae429c62346aa4ca7cb9c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP9 0xDD 0x23 0xB6 CODECOPY 0xA6 PUSH15 0x639C18029E15DE43A9E87174400AE4 0x29 0xC6 0x23 CHAINID 0xAA 0x4C 0xA7 0xCB SWAP13 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"802:8819:13:-:0;;;;;:::i;:::-;-1:-1:-1;802:8819:13;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea3646970667358221220dd7fcc07aa5456b271630511729e1857ea839f1a3fb2735dc71e5664595d4a0c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH32 0xCC07AA5456B271630511729E1857EA839F1A3FB2735DC71E5664595D4A0C6C65 PUSH25 0x706572696D656E74616CF564736F6C634300080C0041000000 ","sourceMap":"202:12582:16:-:0;;;;;;-1:-1:-1;202:12582:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea3646970667358221220dd7fcc07aa5456b271630511729e1857ea839f1a3fb2735dc71e5664595d4a0c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH32 0xCC07AA5456B271630511729E1857EA839F1A3FB2735DC71E5664595D4A0C6C65 PUSH25 0x706572696D656E74616CF564736F6C634300080C0041000000 ","sourceMap":"202:12582:16:-:0;;;;;:::i;:::-;-1:-1:-1;202:12582:16;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea36469706673582212204304806cbb1b7012100702b8e1af5a1ee8385a55c180117d8a3fa591440a510c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER DIV DUP1 PUSH13 0xBB1B7012100702B8E1AF5A1EE8 CODESIZE GAS SSTORE 0xC1 DUP1 GT PUSH30 0x8A3FA591440A510C6C6578706572696D656E74616CF564736F6C63430008 0xC STOP COINBASE ","sourceMap":"927:34153:17:-:0;;;;;;-1:-1:-1;927:34153:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea36469706673582212204304806cbb1b7012100702b8e1af5a1ee8385a55c180117d8a3fa591440a510c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER DIV DUP1 PUSH13 0xBB1B7012100702B8E1AF5A1EE8 CODESIZE GAS SSTORE 0xC1 DUP1 GT PUSH30 0x8A3FA591440A510C6C6578706572696D656E74616CF564736F6C63430008 0xC STOP COINBASE ","sourceMap":"927:34153:17:-:0;;;;;:::i;:::-;-1:-1:-1;927:34153:17;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea364697066735822122005c4a691283e8fe8c6bb0a85d90e394db20a3c050c59875cec58a69d5fa7bae96c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xC4 0xA6 SWAP2 0x28 RETURNDATACOPY DUP16 0xE8 0xC6 0xBB EXP DUP6 0xD9 0xE CODECOPY 0x4D 0xB2 EXP EXTCODECOPY SDIV 0xC MSIZE DUP8 0x5C 0xEC PC 0xA6 SWAP14 0x5F 0xA7 0xBA 0xE9 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"215:1047:18:-:0;;;;;;-1:-1:-1;215:1047:18;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea364697066735822122005c4a691283e8fe8c6bb0a85d90e394db20a3c050c59875cec58a69d5fa7bae96c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xC4 0xA6 SWAP2 0x28 RETURNDATACOPY DUP16 0xE8 0xC6 0xBB EXP DUP6 0xD9 0xE CODECOPY 0x4D 0xB2 EXP EXTCODECOPY SDIV 0xC MSIZE DUP8 0x5C 0xEC PC 0xA6 SWAP14 0x5F 0xA7 0xBA 0xE9 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"215:1047:18:-:0;;;;;:::i;:::-;-1:-1:-1;215:1047:18;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/BribeFactory.sol":{"BribeFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_implementation","type":"address"},{"internalType":"address","name":"_bribeVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidMaxPeriod","type":"error"},{"inputs":[],"name":"InvalidPeriodDuration","type":"error"},{"inputs":[],"name":"NotAContract","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"bribeMarket","type":"address"}],"name":"BribeMarketCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"bribeMarketImplementation","type":"address"}],"name":"BribeMarketImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"bribeVault","type":"address"}],"name":"BribeVaultUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"MAX_PERIODS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PERIOD_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bribeMarketImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bribeVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_protocol","type":"string"},{"internalType":"uint256","name":"_maxPeriods","type":"uint256"},{"internalType":"uint256","name":"_periodDuration","type":"uint256"}],"name":"createBribeMarket","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_implementation","type":"address"}],"name":"setBribeMarketImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_bribeVault","type":"address"}],"name":"setBribeVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address_fromMemory":{"entryPoint":218,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":144,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_BribeFactory":{"entryPoint":314,"id":5065,"parameterSlots":2,"returnSlots":0},"constructor_Ownable":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"constructor_Ownable2Step":{"entryPoint":346,"id":null,"parameterSlots":0,"returnSlots":0},"convert_address_to_address":{"entryPoint":422,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":671,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":411,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":389,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_BribeFactory":{"entryPoint":275,"id":null,"parameterSlots":0,"returnSlots":2},"extract_from_storage_value_offsett_address":{"entryPoint":506,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":95,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":573,"id":500,"parameterSlots":1,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_setBribeMarketImplementation":{"entryPoint":759,"id":5184,"parameterSlots":1,"returnSlots":0},"fun_setBribeMarketImplementation_inner":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setBribeVault":{"entryPoint":836,"id":5211,"parameterSlots":1,"returnSlots":0},"fun_setBribeVault_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":481,"id":561,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_isContract":{"entryPoint":770,"id":5048,"parameterSlots":1,"returnSlots":0},"modifier_isContract_5177":{"entryPoint":687,"id":5048,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":72,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":517,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":66,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":467,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":358,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":529,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":433,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":184,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000032575b620000206200001962000113565b906200013a565b604051610c1c620003508239610c1c90f35b6200003c62000042565b6200000b565b50600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200008157604052565b6200008b62000048565b604052565b90620000a76200009f60405190565b92836200005f565b565b6001600160a01b031690565b90565b6001600160a01b03811614156200004257565b90505190620000a782620000b8565b9190620000b59060408482031262000103575b620000f98185620000cb565b93602001620000cb565b6200010d62000042565b620000ed565b6200013662000f6c803803806200012a8162000090565b928339810190620000da565b9091565b9062000154620000a7926200014e6200015a565b620002f7565b62000344565b620000a78033620001e1565b916001600160a01b0360089290920291821b911b5b9181191691161790565b620000b590620000a9906001600160a01b031682565b620000b59062000185565b620000b5906200019b565b9190620001c6620000b5620001cf93620001a6565b90835462000166565b9055565b620000a791600091620001b1565b620000a790620001f460006001620001d3565b6200023d565b620000b590620000a9565b620000b59054620001fa565b906001600160a01b03906200017b565b9062000235620000b5620001cf92620001a6565b825462000211565b62000249600062000205565b906200025781600062000221565b6200028e620002877f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093620001a6565b91620001a6565b916200029960405190565b600090a3565b620000b5620000b5620000b59290565b803b620002c5620002c160006200029f565b9190565b14620002d657620000a790620002ea565b50506040516309ee12d560e01b8152600490fd5b620000a790600262000221565b620000a790620002af565b803b62000314620002c160006200029f565b14620002d657620000a790803b62000331620002c160006200029f565b14620002d657620000a790600362000221565b620000a7906200030256fe60806040526004361015610018575b6100166102b2565b005b60003560e01c80630a25464014610288578063152bb06d146102615780631a00ab3314610237578063715018a614610210578063742a6c43146101e257806379ba5097146101bb5780637fb84bed14610181578063833d657e146101575780638da5cb5b1461012d578063a8f6902314610106578063e30c3978146100d05763f2fde38b146100a65761000e565b346100c3575b6100166100ba36600461031d565b610609565b0390f35b6100cb6102b2565b6100ac565b50346100f9575b6100e23660046102b8565b6100bf6100ed610541565b60405191829182610372565b6101016102b2565b6100d7565b5034610120575b61001661011b36600461031d565b610afe565b6101286102b2565b61010d565b503461014a575b61013f3660046102b8565b6100bf6100ed610471565b6101526102b2565b610134565b5034610174575b6101693660046102b8565b6100bf6100ed610452565b61017c6102b2565b61015e565b50346101ae575b6101933660046102b8565b6100bf61019e61044a565b6040519182918290815260200190565b6101b66102b2565b610188565b50346101d5575b6101cd3660046102b8565b61001661070d565b6101dd6102b2565b6101c2565b5034610203575b6100bf6100ed6101fa3660046103de565b92919091610800565b61020b6102b2565b6101e9565b503461022a575b6102223660046102b8565b6100166104b3565b6102326102b2565b610217565b5034610254575b6102493660046102b8565b6100bf6100ed61035d565b61025c6102b2565b61023e565b503461027b575b61001661027636600461031d565b610b46565b6102836102b2565b610268565b50346102a5575b61029a3660046102b8565b6100bf61019e6102e7565b6102ad6102b2565b61028f565b50600080fd5b60009103126102c357565b6102cb6102b2565b565b6102da6102da6102da9290565b90565b6102da600a6102cd565b6102da6102dd565b9052565b6001600160a01b031690565b610308816102f3565b14156102b257565b905035906102cb826102ff565b906102da9160208183031261033157610310565b6103396102b2565b610310565b6102da916008021c6001600160a01b031690565b906102da915461033e565b6102da60006002610352565b6102ef906102f3565b6020810192916102cb9190610369565b909182601f830112156103be575b602082359267ffffffffffffffff84116103b1575b0192828401116102c357565b6103b96102b2565b6103a5565b6103c66102b2565b610390565b80610308565b905035906102cb826103cb565b6102da9192606082850312610431575b61040b84833567ffffffffffffffff8111610424575b8401610382565b93909461041b81602086016103d1565b936040016103d1565b61042c6102b2565b610404565b6104396102b2565b6103ee565b6102da62278d006102cd565b6102da61043e565b6102da60006003610352565b6102da906102f3565b6102da905461045e565b6102da6000610467565b610483610519565b6102cb6104a1565b6102f36102da6102da9290565b6102da9061048b565b6102cb6104ae6000610498565b610650565b6102cb61047b565b0190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b156104fb57565b5060405162461bcd60e51b815280610515600482016104bf565b0390fd5b6102cb610524610471565b61053b610535336102f3565b6102f3565b916102f3565b146104f4565b6102da6001610467565b6102cb90610557610519565b6105b2565b906001600160a01b03905b9181191691161790565b6102da906102f3906001600160a01b031682565b6102da90610571565b6102da90610585565b906105a76102da6105ae9261058e565b825461055c565b9055565b6105bd816001610597565b6105c5610471565b906105f96105f37f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227009361058e565b9161058e565b9161060360405190565b600090a3565b6102cb9061054b565b916001600160a01b0360089290920291821b911b610567565b919061063c6102da6105ae9361058e565b908354610612565b6102cb9160009161062b565b6102cb9061066060006001610644565b61066a6000610467565b90610676816000610597565b6105f96105f37f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361058e565b60208082526029908201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206040820152683732bb9037bbb732b960b91b606082015260800190565b156106f357565b5060405162461bcd60e51b815280610515600482016106a3565b6102cb336104ae61071c610541565b610728610535846102f3565b146106ec565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761076757604052565b61076f61072e565b604052565b90826000939282370152565b919061079e81610797816104bb9560209181520190565b8095610774565b601f01601f191690565b916107ef916102cb969897956080956107da6107e7946107d060a089019560008a0190610369565b6020880190610369565b8583036040870152610780565b966060830152565b0152565b506040513d6000823e3d90fd5b91929091600091610810836102cd565b851480156109e8575b6109ca57610826836102cd565b811480156109b7575b610999576108d69383916108908361084f61084a6002610467565b610a4c565b9861089b61086461085f8c61058e565b61058e565b94638d23507f926108756003610467565b97339a883b1561098c575b6040519b8c9a8b998a9860e01b90565b8852600488016107a8565b03925af1801561097f575b61096b575b506108bc61085f61085f6003610467565b63172becff90803b1561095e575b60405193849260e01b90565b82528183816108e88860048301610372565b03925af18015610951575b610934575b507fc079bf405ebc76ac163f8dab16cc2e0570562f5b2d7cb957c69d4bf1f8d22fe86109238261058e565b9061092d60405190565b600090a290565b61094b906109423d82610745565b3d8101906102b8565b386108f8565b6109596107f3565b6108f3565b6109666102b2565b6108ca565b610979906109423d82610745565b386108ab565b6109876107f3565b6108a6565b6109946102b2565b610880565b5050505050506109a860405190565b634f08daf360e11b8152600490fd5b506109c36102da61043e565b811161082f565b5050505050506109d960405190565b63c17d8a0360e01b8152600490fd5b506109f46102da6102dd565b8511610819565b602080825260169082015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604082015260600190565b15610a3257565b5060405162461bcd60e51b815280610515600482016109fb565b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d730000008160601b60e81c1760005260781b17602052603760096000f0906102cb610a9f6105306000610498565b610aa8846102f3565b1415610a2b565b6102cb90610abb610519565b610ac481610b8f565b610aee7f2f64067393bb7145c8b43796303f94efd9c3c4633a970158de88b74aaae198e19161058e565b90610af860405190565b600090a2565b6102cb90610aaf565b6102cb90610b13610519565b610b1c81610bcf565b610aee7f8bd91d825017fca95e546ffcdf4ff56d37b0d717a6e77e5b472174db55250a809161058e565b6102cb90610b07565b803b610b62610b5e60006102cd565b9190565b14610b70576102cb90610b84565b50506040516309ee12d560e01b8152600490fd5b6102cb906002610597565b6102cb90610b4f565b803b610ba7610b5e60006102cd565b14610b70576102cb90803b610bbf610b5e60006102cd565b14610b70576102cb906003610597565b6102cb90610b9856fea36469706673582212205fa88e84ebf9137556a2ba8c506f504229f602bf875b0987350cfa2616052b6b6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x32 JUMPI JUMPDEST PUSH3 0x20 PUSH3 0x19 PUSH3 0x113 JUMP JUMPDEST SWAP1 PUSH3 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1C PUSH3 0x350 DUP3 CODECOPY PUSH2 0xC1C SWAP1 RETURN JUMPDEST PUSH3 0x3C PUSH3 0x42 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x8B PUSH3 0x48 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH3 0xA7 PUSH3 0x9F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EQ ISZERO PUSH3 0x42 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xA7 DUP3 PUSH3 0xB8 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0xB5 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH3 0x103 JUMPI JUMPDEST PUSH3 0xF9 DUP2 DUP6 PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH3 0xCB JUMP JUMPDEST PUSH3 0x10D PUSH3 0x42 JUMP JUMPDEST PUSH3 0xED JUMP JUMPDEST PUSH3 0x136 PUSH3 0xF6C DUP1 CODESIZE SUB DUP1 PUSH3 0x12A DUP2 PUSH3 0x90 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH3 0x154 PUSH3 0xA7 SWAP3 PUSH3 0x14E PUSH3 0x15A JUMP JUMPDEST PUSH3 0x2F7 JUMP JUMPDEST PUSH3 0x344 JUMP JUMPDEST PUSH3 0xA7 DUP1 CALLER PUSH3 0x1E1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x185 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x19B JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x1C6 PUSH3 0xB5 PUSH3 0x1CF SWAP4 PUSH3 0x1A6 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x166 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xA7 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x1B1 JUMP JUMPDEST PUSH3 0xA7 SWAP1 PUSH3 0x1F4 PUSH1 0x0 PUSH1 0x1 PUSH3 0x1D3 JUMP JUMPDEST PUSH3 0x23D JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 SLOAD PUSH3 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x17B JUMP JUMPDEST SWAP1 PUSH3 0x235 PUSH3 0xB5 PUSH3 0x1CF SWAP3 PUSH3 0x1A6 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x211 JUMP JUMPDEST PUSH3 0x249 PUSH1 0x0 PUSH3 0x205 JUMP JUMPDEST SWAP1 PUSH3 0x257 DUP2 PUSH1 0x0 PUSH3 0x221 JUMP JUMPDEST PUSH3 0x28E PUSH3 0x287 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x1A6 JUMP JUMPDEST SWAP2 PUSH3 0x1A6 JUMP JUMPDEST SWAP2 PUSH3 0x299 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH3 0xB5 PUSH3 0xB5 PUSH3 0xB5 SWAP3 SWAP1 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH3 0x2C5 PUSH3 0x2C1 PUSH1 0x0 PUSH3 0x29F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ PUSH3 0x2D6 JUMPI PUSH3 0xA7 SWAP1 PUSH3 0x2EA JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x9EE12D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0xA7 SWAP1 PUSH1 0x2 PUSH3 0x221 JUMP JUMPDEST PUSH3 0xA7 SWAP1 PUSH3 0x2AF JUMP JUMPDEST DUP1 EXTCODESIZE PUSH3 0x314 PUSH3 0x2C1 PUSH1 0x0 PUSH3 0x29F JUMP JUMPDEST EQ PUSH3 0x2D6 JUMPI PUSH3 0xA7 SWAP1 DUP1 EXTCODESIZE PUSH3 0x331 PUSH3 0x2C1 PUSH1 0x0 PUSH3 0x29F JUMP JUMPDEST EQ PUSH3 0x2D6 JUMPI PUSH3 0xA7 SWAP1 PUSH1 0x3 PUSH3 0x221 JUMP JUMPDEST PUSH3 0xA7 SWAP1 PUSH3 0x302 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA254640 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x152BB06D EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x1A00AB33 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x742A6C43 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x7FB84BED EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x833D657E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA8F69023 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xD0 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xC3 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST POP CALLVALUE PUSH2 0xF9 JUMPI JUMPDEST PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x120 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x128 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST POP CALLVALUE PUSH2 0x14A JUMPI JUMPDEST PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x471 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST POP CALLVALUE PUSH2 0x174 JUMPI JUMPDEST PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x452 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1AE JUMPI JUMPDEST PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0x19E PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI JUMPDEST PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x203 JUMPI JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22A JUMPI JUMPDEST PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST POP CALLVALUE PUSH2 0x254 JUMPI JUMPDEST PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x35D JUMP JUMPDEST PUSH2 0x25C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST POP CALLVALUE PUSH2 0x27B JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A5 JUMPI JUMPDEST PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0x19E PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2C3 JUMPI JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2B2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x2DA PUSH2 0x2DA SWAP3 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0xA PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x2DD JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x308 DUP2 PUSH2 0x2F3 JUMP JUMPDEST EQ ISZERO PUSH2 0x2B2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2CB DUP3 PUSH2 0x2FF JUMP JUMPDEST SWAP1 PUSH2 0x2DA SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x331 JUMPI PUSH2 0x310 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH2 0x2DA SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2DA SWAP2 SLOAD PUSH2 0x33E JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x0 PUSH1 0x2 PUSH2 0x352 JUMP JUMPDEST PUSH2 0x2EF SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3BE JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x3B1 JUMPI JUMPDEST ADD SWAP3 DUP3 DUP5 ADD GT PUSH2 0x2C3 JUMPI JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST DUP1 PUSH2 0x308 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2CB DUP3 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x2DA SWAP2 SWAP3 PUSH1 0x60 DUP3 DUP6 SUB SLT PUSH2 0x431 JUMPI JUMPDEST PUSH2 0x40B DUP5 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x424 JUMPI JUMPDEST DUP5 ADD PUSH2 0x382 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x41B DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x3D1 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x2DA PUSH3 0x278D00 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x43E JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x0 PUSH1 0x3 PUSH2 0x352 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x2DA SWAP1 SLOAD PUSH2 0x45E JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2DA PUSH2 0x2DA SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x4AE PUSH1 0x0 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x47B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4FB JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x515 PUSH1 0x4 DUP3 ADD PUSH2 0x4BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CB PUSH2 0x524 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x53B PUSH2 0x535 CALLER PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST SWAP2 PUSH2 0x2F3 JUMP JUMPDEST EQ PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x1 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0x557 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x2F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x571 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x585 JUMP JUMPDEST SWAP1 PUSH2 0x5A7 PUSH2 0x2DA PUSH2 0x5AE SWAP3 PUSH2 0x58E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x55C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH1 0x1 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x5C5 PUSH2 0x471 JUMP JUMPDEST SWAP1 PUSH2 0x5F9 PUSH2 0x5F3 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x58E JUMP JUMPDEST SWAP2 PUSH2 0x58E JUMP JUMPDEST SWAP2 PUSH2 0x603 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x567 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x63C PUSH2 0x2DA PUSH2 0x5AE SWAP4 PUSH2 0x58E JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x612 JUMP JUMPDEST PUSH2 0x2CB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0x660 PUSH1 0x0 PUSH1 0x1 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x66A PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST SWAP1 PUSH2 0x676 DUP2 PUSH1 0x0 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5F3 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x6F3 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x515 PUSH1 0x4 DUP3 ADD PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x2CB CALLER PUSH2 0x4AE PUSH2 0x71C PUSH2 0x541 JUMP JUMPDEST PUSH2 0x728 PUSH2 0x535 DUP5 PUSH2 0x2F3 JUMP JUMPDEST EQ PUSH2 0x6EC JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x767 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x76F PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x79E DUP2 PUSH2 0x797 DUP2 PUSH2 0x4BB SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x7EF SWAP2 PUSH2 0x2CB SWAP7 SWAP9 SWAP8 SWAP6 PUSH1 0x80 SWAP6 PUSH2 0x7DA PUSH2 0x7E7 SWAP5 PUSH2 0x7D0 PUSH1 0xA0 DUP10 ADD SWAP6 PUSH1 0x0 DUP11 ADD SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP1 PUSH2 0x369 JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x780 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x810 DUP4 PUSH2 0x2CD JUMP JUMPDEST DUP6 EQ DUP1 ISZERO PUSH2 0x9E8 JUMPI JUMPDEST PUSH2 0x9CA JUMPI PUSH2 0x826 DUP4 PUSH2 0x2CD JUMP JUMPDEST DUP2 EQ DUP1 ISZERO PUSH2 0x9B7 JUMPI JUMPDEST PUSH2 0x999 JUMPI PUSH2 0x8D6 SWAP4 DUP4 SWAP2 PUSH2 0x890 DUP4 PUSH2 0x84F PUSH2 0x84A PUSH1 0x2 PUSH2 0x467 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST SWAP9 PUSH2 0x89B PUSH2 0x864 PUSH2 0x85F DUP13 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST SWAP5 PUSH4 0x8D23507F SWAP3 PUSH2 0x875 PUSH1 0x3 PUSH2 0x467 JUMP JUMPDEST SWAP8 CALLER SWAP11 DUP9 EXTCODESIZE ISZERO PUSH2 0x98C JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP11 DUP12 SWAP10 DUP11 SWAP9 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x4 DUP9 ADD PUSH2 0x7A8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x97F JUMPI JUMPDEST PUSH2 0x96B JUMPI JUMPDEST POP PUSH2 0x8BC PUSH2 0x85F PUSH2 0x85F PUSH1 0x3 PUSH2 0x467 JUMP JUMPDEST PUSH4 0x172BECFF SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x95E JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x8E8 DUP9 PUSH1 0x4 DUP4 ADD PUSH2 0x372 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x951 JUMPI JUMPDEST PUSH2 0x934 JUMPI JUMPDEST POP PUSH32 0xC079BF405EBC76AC163F8DAB16CC2E0570562F5B2D7CB957C69D4BF1F8D22FE8 PUSH2 0x923 DUP3 PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH2 0x92D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x94B SWAP1 PUSH2 0x942 RETURNDATASIZE DUP3 PUSH2 0x745 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST CODESIZE PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x959 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x966 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x979 SWAP1 PUSH2 0x942 RETURNDATASIZE DUP3 PUSH2 0x745 JUMP JUMPDEST CODESIZE PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x987 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x994 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x9A8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4F08DAF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x9C3 PUSH2 0x2DA PUSH2 0x43E JUMP JUMPDEST DUP2 GT PUSH2 0x82F JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x9D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC17D8A03 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x9F4 PUSH2 0x2DA PUSH2 0x2DD JUMP JUMPDEST DUP6 GT PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA32 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x515 PUSH1 0x4 DUP3 ADD PUSH2 0x9FB JUMP JUMPDEST PUSH15 0x5AF43D82803E903D91602B57FD5BF3 SWAP1 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP2 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 PUSH2 0x2CB PUSH2 0xA9F PUSH2 0x530 PUSH1 0x0 PUSH2 0x498 JUMP JUMPDEST PUSH2 0xAA8 DUP5 PUSH2 0x2F3 JUMP JUMPDEST EQ ISZERO PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xABB PUSH2 0x519 JUMP JUMPDEST PUSH2 0xAC4 DUP2 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0xAEE PUSH32 0x2F64067393BB7145C8B43796303F94EFD9C3C4633A970158DE88B74AAAE198E1 SWAP2 PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH2 0xAF8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB13 PUSH2 0x519 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xAEE PUSH32 0x8BD91D825017FCA95E546FFCDF4FF56D37B0D717A6E77E5B472174DB55250A80 SWAP2 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB07 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xB62 PUSH2 0xB5E PUSH1 0x0 PUSH2 0x2CD JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ PUSH2 0xB70 JUMPI PUSH2 0x2CB SWAP1 PUSH2 0xB84 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x9EE12D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x2CB SWAP1 PUSH1 0x2 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xBA7 PUSH2 0xB5E PUSH1 0x0 PUSH2 0x2CD JUMP JUMPDEST EQ PUSH2 0xB70 JUMPI PUSH2 0x2CB SWAP1 DUP1 EXTCODESIZE PUSH2 0xBBF PUSH2 0xB5E PUSH1 0x0 PUSH2 0x2CD JUMP JUMPDEST EQ PUSH2 0xB70 JUMPI PUSH2 0x2CB SWAP1 PUSH1 0x3 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB98 JUMP INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xA8 DUP15 DUP5 0xEB 0xF9 SGT PUSH22 0x56A2BA8C506F504229F602BF875B0987350CFA261605 0x2B PUSH12 0x6C6578706572696D656E7461 PUSH13 0xF564736F6C634300080C004100 ","sourceMap":"366:3610:19:-:0;;;;;;-1:-1:-1;366:3610:19;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;366:3610:19;;;;;;-1:-1:-1;;;;;366:3610:19;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;366:3610:19;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;366:3610:19;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;1304:158::-;;1402:15;1443:11;1304:158;;;:::i;:::-;1402:15;:::i;:::-;1443:11;:::i;599:1349:3:-;;;734:10:11;955:12:2;:::i;366:3610:19:-;;-1:-1:-1;;;;;366:3610:19;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;366:3610:19;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;1638:8;:::i;366:3610:19:-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;366:3610:19;;;;;;;;;;:::i;:::-;;;;:::i;2426:187:2:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;366:3610:19;;;;2566:40:2;;;;2426:187::o;366:3610:19:-;;;;;;;936:214;1010:66;;1089:13;;1101:1;1089:13;:::i;:::-;;366:3610;;1089:13;;1085:47;;1142:1;;;:::i;1085:47::-;-1:-1:-1;;366:3610:19;;-1:-1:-1;;;1111:21:19;;;;;3361:175;3486:43;3361:175;3486:43;;:::i;3361:175::-;;;;:::i;936:214::-;1010:66;;1089:13;;1101:1;1089:13;:::i;:::-;;1085:47;;1142:1;;3807:69;;3889:13;;3901:1;3889:13;:::i;:::-;;3885:47;;3943:24;;;;:::i;3679:295::-;;;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":696,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_string_calldata":{"entryPoint":898,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldatat_uint256t_uint256":{"entryPoint":990,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_address":{"entryPoint":797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":873,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_string_calldata_uint256_uint256":{"entryPoint":1960,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":1920,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":1215,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2255":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_68ca":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":1699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_68ca":{"entryPoint":2555,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":755,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_MAX_PERIODS":{"entryPoint":733,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_PERIOD_DURATION":{"entryPoint":1086,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":1422,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IBribeMarket":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IBribeVault":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IBribeMarket_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IBribeVault_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1176,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1163,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":717,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1413,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IBribeMarket":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IBribeVault":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1393,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":1908,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":830,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":1118,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1861,"id":null,"parameterSlots":2,"returnSlots":0},"fun__setBribeMarketImplementation":{"entryPoint":2959,"id":5184,"parameterSlots":1,"returnSlots":0},"fun__transferOwnership":{"entryPoint":1616,"id":561,"parameterSlots":1,"returnSlots":0},"fun_acceptOwnership":{"entryPoint":1805,"id":583,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":1305,"id":443,"parameterSlots":0,"returnSlots":0},"fun_clone":{"entryPoint":2636,"id":607,"parameterSlots":1,"returnSlots":1},"fun_createBribeMarket":{"entryPoint":2048,"id":5136,"parameterSlots":4,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":1137,"id":429,"parameterSlots":0,"returnSlots":1},"fun_pendingOwner":{"entryPoint":1345,"id":524,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1203,"id":457,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1185,"id":null,"parameterSlots":0,"returnSlots":0},"fun_setBribeMarketImplementation":{"entryPoint":2814,"id":5153,"parameterSlots":1,"returnSlots":0},"fun_setBribeMarketImplementation_5153_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setBribeMarketImplementation_inner":{"entryPoint":2948,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setBribeVault":{"entryPoint":3023,"id":5211,"parameterSlots":1,"returnSlots":0},"fun_setBribeVault_5170":{"entryPoint":2886,"id":5170,"parameterSlots":1,"returnSlots":0},"fun_setBribeVault_5170_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setBribeVault_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":1545,"id":544,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":1458,"id":null,"parameterSlots":1,"returnSlots":0},"getter_fun_MAX_PERIODS":{"entryPoint":743,"id":5013,"parameterSlots":0,"returnSlots":1},"getter_fun_MAX_PERIOD_DURATION":{"entryPoint":1098,"id":5016,"parameterSlots":0,"returnSlots":1},"getter_fun_bribeMarketImplementation":{"entryPoint":861,"id":5008,"parameterSlots":0,"returnSlots":1},"getter_fun_bribeVault":{"entryPoint":1106,"id":5010,"parameterSlots":0,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_isContract":{"entryPoint":2968,"id":5048,"parameterSlots":1,"returnSlots":0},"modifier_isContract_5177":{"entryPoint":2895,"id":5048,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":2823,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_447":{"entryPoint":1147,"id":420,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_5142":{"entryPoint":2735,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_531":{"entryPoint":1355,"id":420,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":1838,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":850,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":1127,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1772,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_68ca":{"entryPoint":2603,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":1268,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":690,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2035,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":1604,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":1554,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":1372,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":1579,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":1431,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":971,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610018575b6100166102b2565b005b60003560e01c80630a25464014610288578063152bb06d146102615780631a00ab3314610237578063715018a614610210578063742a6c43146101e257806379ba5097146101bb5780637fb84bed14610181578063833d657e146101575780638da5cb5b1461012d578063a8f6902314610106578063e30c3978146100d05763f2fde38b146100a65761000e565b346100c3575b6100166100ba36600461031d565b610609565b0390f35b6100cb6102b2565b6100ac565b50346100f9575b6100e23660046102b8565b6100bf6100ed610541565b60405191829182610372565b6101016102b2565b6100d7565b5034610120575b61001661011b36600461031d565b610afe565b6101286102b2565b61010d565b503461014a575b61013f3660046102b8565b6100bf6100ed610471565b6101526102b2565b610134565b5034610174575b6101693660046102b8565b6100bf6100ed610452565b61017c6102b2565b61015e565b50346101ae575b6101933660046102b8565b6100bf61019e61044a565b6040519182918290815260200190565b6101b66102b2565b610188565b50346101d5575b6101cd3660046102b8565b61001661070d565b6101dd6102b2565b6101c2565b5034610203575b6100bf6100ed6101fa3660046103de565b92919091610800565b61020b6102b2565b6101e9565b503461022a575b6102223660046102b8565b6100166104b3565b6102326102b2565b610217565b5034610254575b6102493660046102b8565b6100bf6100ed61035d565b61025c6102b2565b61023e565b503461027b575b61001661027636600461031d565b610b46565b6102836102b2565b610268565b50346102a5575b61029a3660046102b8565b6100bf61019e6102e7565b6102ad6102b2565b61028f565b50600080fd5b60009103126102c357565b6102cb6102b2565b565b6102da6102da6102da9290565b90565b6102da600a6102cd565b6102da6102dd565b9052565b6001600160a01b031690565b610308816102f3565b14156102b257565b905035906102cb826102ff565b906102da9160208183031261033157610310565b6103396102b2565b610310565b6102da916008021c6001600160a01b031690565b906102da915461033e565b6102da60006002610352565b6102ef906102f3565b6020810192916102cb9190610369565b909182601f830112156103be575b602082359267ffffffffffffffff84116103b1575b0192828401116102c357565b6103b96102b2565b6103a5565b6103c66102b2565b610390565b80610308565b905035906102cb826103cb565b6102da9192606082850312610431575b61040b84833567ffffffffffffffff8111610424575b8401610382565b93909461041b81602086016103d1565b936040016103d1565b61042c6102b2565b610404565b6104396102b2565b6103ee565b6102da62278d006102cd565b6102da61043e565b6102da60006003610352565b6102da906102f3565b6102da905461045e565b6102da6000610467565b610483610519565b6102cb6104a1565b6102f36102da6102da9290565b6102da9061048b565b6102cb6104ae6000610498565b610650565b6102cb61047b565b0190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b156104fb57565b5060405162461bcd60e51b815280610515600482016104bf565b0390fd5b6102cb610524610471565b61053b610535336102f3565b6102f3565b916102f3565b146104f4565b6102da6001610467565b6102cb90610557610519565b6105b2565b906001600160a01b03905b9181191691161790565b6102da906102f3906001600160a01b031682565b6102da90610571565b6102da90610585565b906105a76102da6105ae9261058e565b825461055c565b9055565b6105bd816001610597565b6105c5610471565b906105f96105f37f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227009361058e565b9161058e565b9161060360405190565b600090a3565b6102cb9061054b565b916001600160a01b0360089290920291821b911b610567565b919061063c6102da6105ae9361058e565b908354610612565b6102cb9160009161062b565b6102cb9061066060006001610644565b61066a6000610467565b90610676816000610597565b6105f96105f37f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361058e565b60208082526029908201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206040820152683732bb9037bbb732b960b91b606082015260800190565b156106f357565b5060405162461bcd60e51b815280610515600482016106a3565b6102cb336104ae61071c610541565b610728610535846102f3565b146106ec565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761076757604052565b61076f61072e565b604052565b90826000939282370152565b919061079e81610797816104bb9560209181520190565b8095610774565b601f01601f191690565b916107ef916102cb969897956080956107da6107e7946107d060a089019560008a0190610369565b6020880190610369565b8583036040870152610780565b966060830152565b0152565b506040513d6000823e3d90fd5b91929091600091610810836102cd565b851480156109e8575b6109ca57610826836102cd565b811480156109b7575b610999576108d69383916108908361084f61084a6002610467565b610a4c565b9861089b61086461085f8c61058e565b61058e565b94638d23507f926108756003610467565b97339a883b1561098c575b6040519b8c9a8b998a9860e01b90565b8852600488016107a8565b03925af1801561097f575b61096b575b506108bc61085f61085f6003610467565b63172becff90803b1561095e575b60405193849260e01b90565b82528183816108e88860048301610372565b03925af18015610951575b610934575b507fc079bf405ebc76ac163f8dab16cc2e0570562f5b2d7cb957c69d4bf1f8d22fe86109238261058e565b9061092d60405190565b600090a290565b61094b906109423d82610745565b3d8101906102b8565b386108f8565b6109596107f3565b6108f3565b6109666102b2565b6108ca565b610979906109423d82610745565b386108ab565b6109876107f3565b6108a6565b6109946102b2565b610880565b5050505050506109a860405190565b634f08daf360e11b8152600490fd5b506109c36102da61043e565b811161082f565b5050505050506109d960405190565b63c17d8a0360e01b8152600490fd5b506109f46102da6102dd565b8511610819565b602080825260169082015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604082015260600190565b15610a3257565b5060405162461bcd60e51b815280610515600482016109fb565b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d730000008160601b60e81c1760005260781b17602052603760096000f0906102cb610a9f6105306000610498565b610aa8846102f3565b1415610a2b565b6102cb90610abb610519565b610ac481610b8f565b610aee7f2f64067393bb7145c8b43796303f94efd9c3c4633a970158de88b74aaae198e19161058e565b90610af860405190565b600090a2565b6102cb90610aaf565b6102cb90610b13610519565b610b1c81610bcf565b610aee7f8bd91d825017fca95e546ffcdf4ff56d37b0d717a6e77e5b472174db55250a809161058e565b6102cb90610b07565b803b610b62610b5e60006102cd565b9190565b14610b70576102cb90610b84565b50506040516309ee12d560e01b8152600490fd5b6102cb906002610597565b6102cb90610b4f565b803b610ba7610b5e60006102cd565b14610b70576102cb90803b610bbf610b5e60006102cd565b14610b70576102cb906003610597565b6102cb90610b9856fea36469706673582212205fa88e84ebf9137556a2ba8c506f504229f602bf875b0987350cfa2616052b6b6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA254640 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x152BB06D EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x1A00AB33 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x742A6C43 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x7FB84BED EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x833D657E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA8F69023 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xD0 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xC3 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST POP CALLVALUE PUSH2 0xF9 JUMPI JUMPDEST PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x120 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x128 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST POP CALLVALUE PUSH2 0x14A JUMPI JUMPDEST PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x471 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST POP CALLVALUE PUSH2 0x174 JUMPI JUMPDEST PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x452 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1AE JUMPI JUMPDEST PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0x19E PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI JUMPDEST PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x203 JUMPI JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22A JUMPI JUMPDEST PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST POP CALLVALUE PUSH2 0x254 JUMPI JUMPDEST PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x35D JUMP JUMPDEST PUSH2 0x25C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST POP CALLVALUE PUSH2 0x27B JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A5 JUMPI JUMPDEST PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xBF PUSH2 0x19E PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2C3 JUMPI JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2B2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x2DA PUSH2 0x2DA SWAP3 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0xA PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x2DD JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x308 DUP2 PUSH2 0x2F3 JUMP JUMPDEST EQ ISZERO PUSH2 0x2B2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2CB DUP3 PUSH2 0x2FF JUMP JUMPDEST SWAP1 PUSH2 0x2DA SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x331 JUMPI PUSH2 0x310 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH2 0x2DA SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2DA SWAP2 SLOAD PUSH2 0x33E JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x0 PUSH1 0x2 PUSH2 0x352 JUMP JUMPDEST PUSH2 0x2EF SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3BE JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x3B1 JUMPI JUMPDEST ADD SWAP3 DUP3 DUP5 ADD GT PUSH2 0x2C3 JUMPI JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST DUP1 PUSH2 0x308 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2CB DUP3 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x2DA SWAP2 SWAP3 PUSH1 0x60 DUP3 DUP6 SUB SLT PUSH2 0x431 JUMPI JUMPDEST PUSH2 0x40B DUP5 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x424 JUMPI JUMPDEST DUP5 ADD PUSH2 0x382 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x41B DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x3D1 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH2 0x439 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x2DA PUSH3 0x278D00 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x43E JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x0 PUSH1 0x3 PUSH2 0x352 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x2DA SWAP1 SLOAD PUSH2 0x45E JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2DA PUSH2 0x2DA SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x4AE PUSH1 0x0 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x47B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4FB JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x515 PUSH1 0x4 DUP3 ADD PUSH2 0x4BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CB PUSH2 0x524 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x53B PUSH2 0x535 CALLER PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST SWAP2 PUSH2 0x2F3 JUMP JUMPDEST EQ PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x1 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0x557 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x2F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x571 JUMP JUMPDEST PUSH2 0x2DA SWAP1 PUSH2 0x585 JUMP JUMPDEST SWAP1 PUSH2 0x5A7 PUSH2 0x2DA PUSH2 0x5AE SWAP3 PUSH2 0x58E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x55C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH1 0x1 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x5C5 PUSH2 0x471 JUMP JUMPDEST SWAP1 PUSH2 0x5F9 PUSH2 0x5F3 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x58E JUMP JUMPDEST SWAP2 PUSH2 0x58E JUMP JUMPDEST SWAP2 PUSH2 0x603 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x567 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x63C PUSH2 0x2DA PUSH2 0x5AE SWAP4 PUSH2 0x58E JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x612 JUMP JUMPDEST PUSH2 0x2CB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0x660 PUSH1 0x0 PUSH1 0x1 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x66A PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST SWAP1 PUSH2 0x676 DUP2 PUSH1 0x0 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5F3 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x6F3 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x515 PUSH1 0x4 DUP3 ADD PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x2CB CALLER PUSH2 0x4AE PUSH2 0x71C PUSH2 0x541 JUMP JUMPDEST PUSH2 0x728 PUSH2 0x535 DUP5 PUSH2 0x2F3 JUMP JUMPDEST EQ PUSH2 0x6EC JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x767 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x76F PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x79E DUP2 PUSH2 0x797 DUP2 PUSH2 0x4BB SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x7EF SWAP2 PUSH2 0x2CB SWAP7 SWAP9 SWAP8 SWAP6 PUSH1 0x80 SWAP6 PUSH2 0x7DA PUSH2 0x7E7 SWAP5 PUSH2 0x7D0 PUSH1 0xA0 DUP10 ADD SWAP6 PUSH1 0x0 DUP11 ADD SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP1 PUSH2 0x369 JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x780 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x810 DUP4 PUSH2 0x2CD JUMP JUMPDEST DUP6 EQ DUP1 ISZERO PUSH2 0x9E8 JUMPI JUMPDEST PUSH2 0x9CA JUMPI PUSH2 0x826 DUP4 PUSH2 0x2CD JUMP JUMPDEST DUP2 EQ DUP1 ISZERO PUSH2 0x9B7 JUMPI JUMPDEST PUSH2 0x999 JUMPI PUSH2 0x8D6 SWAP4 DUP4 SWAP2 PUSH2 0x890 DUP4 PUSH2 0x84F PUSH2 0x84A PUSH1 0x2 PUSH2 0x467 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST SWAP9 PUSH2 0x89B PUSH2 0x864 PUSH2 0x85F DUP13 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST SWAP5 PUSH4 0x8D23507F SWAP3 PUSH2 0x875 PUSH1 0x3 PUSH2 0x467 JUMP JUMPDEST SWAP8 CALLER SWAP11 DUP9 EXTCODESIZE ISZERO PUSH2 0x98C JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP11 DUP12 SWAP10 DUP11 SWAP9 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x4 DUP9 ADD PUSH2 0x7A8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x97F JUMPI JUMPDEST PUSH2 0x96B JUMPI JUMPDEST POP PUSH2 0x8BC PUSH2 0x85F PUSH2 0x85F PUSH1 0x3 PUSH2 0x467 JUMP JUMPDEST PUSH4 0x172BECFF SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x95E JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x8E8 DUP9 PUSH1 0x4 DUP4 ADD PUSH2 0x372 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x951 JUMPI JUMPDEST PUSH2 0x934 JUMPI JUMPDEST POP PUSH32 0xC079BF405EBC76AC163F8DAB16CC2E0570562F5B2D7CB957C69D4BF1F8D22FE8 PUSH2 0x923 DUP3 PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH2 0x92D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x94B SWAP1 PUSH2 0x942 RETURNDATASIZE DUP3 PUSH2 0x745 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2B8 JUMP JUMPDEST CODESIZE PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x959 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x966 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x979 SWAP1 PUSH2 0x942 RETURNDATASIZE DUP3 PUSH2 0x745 JUMP JUMPDEST CODESIZE PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x987 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x994 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x9A8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4F08DAF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x9C3 PUSH2 0x2DA PUSH2 0x43E JUMP JUMPDEST DUP2 GT PUSH2 0x82F JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x9D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC17D8A03 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x9F4 PUSH2 0x2DA PUSH2 0x2DD JUMP JUMPDEST DUP6 GT PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA32 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x515 PUSH1 0x4 DUP3 ADD PUSH2 0x9FB JUMP JUMPDEST PUSH15 0x5AF43D82803E903D91602B57FD5BF3 SWAP1 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP2 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 PUSH2 0x2CB PUSH2 0xA9F PUSH2 0x530 PUSH1 0x0 PUSH2 0x498 JUMP JUMPDEST PUSH2 0xAA8 DUP5 PUSH2 0x2F3 JUMP JUMPDEST EQ ISZERO PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xABB PUSH2 0x519 JUMP JUMPDEST PUSH2 0xAC4 DUP2 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0xAEE PUSH32 0x2F64067393BB7145C8B43796303F94EFD9C3C4633A970158DE88B74AAAE198E1 SWAP2 PUSH2 0x58E JUMP JUMPDEST SWAP1 PUSH2 0xAF8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB13 PUSH2 0x519 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xAEE PUSH32 0x8BD91D825017FCA95E546FFCDF4FF56D37B0D717A6E77E5B472174DB55250A80 SWAP2 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB07 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xB62 PUSH2 0xB5E PUSH1 0x0 PUSH2 0x2CD JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ PUSH2 0xB70 JUMPI PUSH2 0x2CB SWAP1 PUSH2 0xB84 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x9EE12D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x2CB SWAP1 PUSH1 0x2 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xBA7 PUSH2 0xB5E PUSH1 0x0 PUSH2 0x2CD JUMP JUMPDEST EQ PUSH2 0xB70 JUMPI PUSH2 0x2CB SWAP1 DUP1 EXTCODESIZE PUSH2 0xBBF PUSH2 0xB5E PUSH1 0x0 PUSH2 0x2CD JUMP JUMPDEST EQ PUSH2 0xB70 JUMPI PUSH2 0x2CB SWAP1 PUSH1 0x3 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH2 0xB98 JUMP INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xA8 DUP15 DUP5 0xEB 0xF9 SGT PUSH22 0x56A2BA8C506F504229F602BF875B0987350CFA261605 0x2B PUSH12 0x6C6578706572696D656E7461 PUSH13 0xF564736F6C634300080C004100 ","sourceMap":"366:3610:19:-:0;;;;;;;;;-1:-1:-1;366:3610:19;;:::i;:::-;-1:-1:-1;366:3610:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;;487:40;525:2;;;:::i;487:40::-;;;:::i;366:3610::-;;;:::o;:::-;-1:-1:-1;;;;;366:3610:19;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;;;;366:3610:19;;;;;;;;;:::i;410:40::-;;;;;:::i;366:3610::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;533:53;579:7;;;:::i;533:53::-;;;:::i;456:25::-;;;;;:::i;366:3610::-;;;;;;;;;;:::i;1201:85:2:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;366:3610:19:-;;;;;;;;;;;:::i;1824:101:2:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;366:3610:19:-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;366:3610:19;;-1:-1:-1;;;366:3610:19;;;;;;;;:::i;:::-;;;;1359:130:2;1414:68;1422:7;;:::i;:::-;:23;;734:10:11;1422:23:2;:::i;1433:12::-;1422:23;:::i;:::-;;;:::i;:::-;;1414:68;:::i;847:99:3:-;926:13;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;366:3610:19:-;;-1:-1:-1;;;;;366:3610:19;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;366:3610:19;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1139:178:3:-;1228:24;;;;:::i;:::-;1292:7;;:::i;:::-;1267:43;;;;;;:::i;:::-;;;:::i;:::-;;;366:3610:19;;;;1267:43:3;;;;1139:178::o;:::-;;;;:::i;366:3610:19:-;;-1:-1:-1;;;;;366:3610:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;2518:6:2;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;366:3610:19:-;;;;;;;;;;;;;;;-1:-1:-1;;;366:3610:19;;;;;;;;;;;;:::o;:::-;-1:-1:-1;366:3610:19;;-1:-1:-1;;;366:3610:19;;;;;;;;:::i;1734:212:3:-;1932:6;734:10:11;1825:78:3;1833:14;;:::i;:::-;:24;;;;:::i;:::-;;1825:78;:::i;366:3610:19:-;;;;;;;;;;;;;;;;;-1:-1:-1;;366:3610:19;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;366:3610:19;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;366:3610:19;;;;;;;;;1757:790;;;;;1943:1;1928:16;;;;:::i;:::-;;;:45;;;;1757:790;1924:95;;2033:20;;;:::i;:::-;;;:61;;;;1757:790;2029:116;;2409:55;2191:25;;;2228:171;2191:25;2178:39;2191:25;;;:::i;:::-;2178:39;:::i;:::-;2228:25;:171;:36;:25;;;:::i;:::-;:36;:::i;:::-;;;2278:10;;;;:::i;:::-;2302;;2228:171;;;;;;1757:790;366:3610;;2228:171;;;;;;;366:3610;;;;2228:171;;;;;;;:::i;:::-;;;;;;;;;1757:790;2228:171;;1757:790;2421:10;2409:42;:23;2421:10;;;:::i;2409:42::-;;:55;;;;;;1757:790;366:3610;;2409:55;;;366:3610;;;;2409:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1757:790;2409:55;;1757:790;2480:31;;;;;:::i;:::-;;;366:3610;;;;2480:31;;;;1757:790;:::o;2409:55::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;2228:171;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;2029:116;2115:30;;;;;;;366:3610;;;;2115:30;-1:-1:-1;;;2115:30:19;;;;366:3610;2033:61;2075:19;2057:37;2075:19;;:::i;2057:37::-;;;2033:61;;1924:95;1994:25;;;;;;;366:3610;;;;1994:25;-1:-1:-1;;;1994:25:19;;;;366:3610;1928:45;1962:11;1948:25;1962:11;;:::i;1948:25::-;;;1928:45;;366:3610;;;;;;;;;;-1:-1:-1;;;366:3610:19;;;;;;;;;;;;:::o;:::-;-1:-1:-1;366:3610:19;;-1:-1:-1;;;366:3610:19;;;;;;;;:::i;973:759:4:-;1101:558;;;;;;;;;;;;;;;;;;;;1696:1;1668:57;1676:22;1688:10;1696:1;1688:10;:::i;1676:22::-;;;;:::i;:::-;;;1668:57;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;2830:15:19;;;:::i;:::-;2862:49;;;;:::i;:::-;;;366:3610;;;;2862:49;;;;2694:224::o;:::-;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;3130:11:19;;;:::i;:::-;3158:30;;;;:::i;3042:153::-;;;;:::i;936:214::-;1010:66;;1089:13;;1101:1;1089:13;:::i;:::-;;366:3610;;1089:13;;1085:47;;1142:1;;;:::i;1085:47::-;-1:-1:-1;;366:3610:19;;-1:-1:-1;;;1111:21:19;;;;366:3610;3361:175;3486:43;3361:175;3486:43;;:::i;3361:175::-;;;;:::i;936:214::-;1010:66;;1089:13;;1101:1;1089:13;:::i;:::-;;1085:47;;1142:1;;3807:69;;3889:13;;3901:1;3889:13;:::i;:::-;;3885:47;;3943:24;;;;:::i;3679:295::-;;;;:::i"},"methodIdentifiers":{"MAX_PERIODS()":"0a254640","MAX_PERIOD_DURATION()":"7fb84bed","acceptOwnership()":"79ba5097","bribeMarketImplementation()":"1a00ab33","bribeVault()":"833d657e","createBribeMarket(string,uint256,uint256)":"742a6c43","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","setBribeMarketImplementation(address)":"a8f69023","setBribeVault(address)":"152bb06d","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bribeVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidMaxPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeriodDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bribeMarket\",\"type\":\"address\"}],\"name\":\"BribeMarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bribeMarketImplementation\",\"type\":\"address\"}],\"name\":\"BribeMarketImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bribeVault\",\"type\":\"address\"}],\"name\":\"BribeVaultUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PERIODS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERIOD_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bribeMarketImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bribeVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_protocol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxPeriods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodDuration\",\"type\":\"uint256\"}],\"name\":\"createBribeMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"setBribeMarketImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bribeVault\",\"type\":\"address\"}],\"name\":\"setBribeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"params\":{\"_bribeVault\":\"Address of the bribe vault\",\"_implementation\":\"Address of the implementation contract\"}},\"createBribeMarket(string,uint256,uint256)\":{\"params\":{\"_maxPeriods\":\"uint256  Maximum number of periods for bribe deposits\",\"_periodDuration\":\"uint256  Period duration in each voting round\",\"_protocol\":\"address  Market name/identifier\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBribeMarketImplementation(address)\":{\"params\":{\"_implementation\":\"address  Implementation address\"}},\"setBribeVault(address)\":{\"params\":{\"_bribeVault\":\"address  Bribe vault address\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidMaxPeriod()\":[{\"notice\":\"max period 0 or greater than MAX_PERIODS\"}],\"InvalidPeriodDuration()\":[{\"notice\":\"period duration 0 or greater than MAX_PERIOD_DURATION\"}],\"NotAContract()\":[{\"notice\":\"address provided is not a contract\"}]},\"kind\":\"user\",\"methods\":{\"createBribeMarket(string,uint256,uint256)\":{\"notice\":\"Deploy a new bribe market\"},\"setBribeMarketImplementation(address)\":{\"notice\":\"Set the bribe market implementation address\"},\"setBribeVault(address)\":{\"notice\":\"Set the bribe vault address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BribeFactory.sol\":\"BribeFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/BribeFactory.sol\":{\"keccak256\":\"0xa4af666de7f8d5997cdb0509ccef09c6b55f72812cc6f42145df92e199ab7cab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c2adb304ce9dc37e70ac5798442d65641d03f9b11bc04626f5613b2768d1d95\",\"dweb:/ipfs/QmPzhCoYRpVWQdhur6R5BVRcReMEPX7nfSnLD8ArQiiuTU\"]},\"contracts/interfaces/IBribeMarket.sol\":{\"keccak256\":\"0xa8769c89e8327117f0dfffc4f7ac26233d8c48655aac54b3498f3d806af1459a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2808bbbd7e28fb3ca4bc215308d19a0f24f07fe6a4285e62ffabeb449c1e42f3\",\"dweb:/ipfs/QmT8Nrypd1fvbReqNgJqNyDxWjLm5SVXQY4fUMb2gfLZRa\"]},\"contracts/interfaces/IBribeVault.sol\":{\"keccak256\":\"0x82bf444d894abacfec1f69dd5dc5140fd6b941ee8922738aee1783ede00d91b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fb794fb92bb601f019b8d73bf05d029a4cd545107a2f429ed874b04040fc41\",\"dweb:/ipfs/QmT8J8huF1RezxApkk23wRqZF3xtxf2bXdUonwRsmXeUty\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/BribeMarket.sol":{"BribeMarket":{"abi":[{"inputs":[],"name":"AlreadyInitialized","type":"error"},{"inputs":[],"name":"DeadlinePassed","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidChoiceCount","type":"error"},{"inputs":[],"name":"InvalidDeadline","type":"error"},{"inputs":[],"name":"InvalidIdentifier","type":"error"},{"inputs":[],"name":"InvalidMaxPeriod","type":"error"},{"inputs":[],"name":"InvalidPeriod","type":"error"},{"inputs":[],"name":"InvalidPeriodDuration","type":"error"},{"inputs":[],"name":"InvalidProtocol","type":"error"},{"inputs":[],"name":"NoWhitelistBribeVault","type":"error"},{"inputs":[],"name":"NotAuthorized","type":"error"},{"inputs":[],"name":"NotTeamMember","type":"error"},{"inputs":[],"name":"TokenNotWhitelisted","type":"error"},{"inputs":[],"name":"TokenWhitelisted","type":"error"},{"inputs":[],"name":"VoterBlacklisted","type":"error"},{"inputs":[],"name":"VoterNotBlacklisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"voters","type":"address[]"}],"name":"AddBlacklistedVoters","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"AddWhitelistedTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"teamMember","type":"address"}],"name":"GrantTeamRole","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"bribeVault","type":"address"},{"indexed":false,"internalType":"address","name":"admin","type":"address"},{"indexed":false,"internalType":"string","name":"protocol","type":"string"},{"indexed":false,"internalType":"uint256","name":"maxPeriods","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"periodDuration","type":"uint256"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"voters","type":"address[]"}],"name":"RemoveBlacklistedVoters","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"RemoveWhitelistedTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"teamMember","type":"address"}],"name":"RevokeTeamRole","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxPeriods","type":"uint256"}],"name":"SetMaxPeriods","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"periodDuration","type":"uint256"}],"name":"SetPeriodDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"proposals","type":"bytes32[]"},{"indexed":true,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"SetProposals","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"proposals","type":"bytes32[]"},{"indexed":true,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"SetProposalsByAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalIndex","type":"uint256"},{"indexed":false,"internalType":"bytes32[]","name":"proposals","type":"bytes32[]"},{"indexed":true,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"SetProposalsById","type":"event"},{"inputs":[],"name":"BRIBE_VAULT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PERIODS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PERIOD_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROTOCOL","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TEAM_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_voters","type":"address[]"}],"name":"addBlacklistedVoters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"addWhitelistedTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_proposal","type":"bytes32"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_maxTokensPerVote","type":"uint256"},{"internalType":"uint256","name":"_periods","type":"uint256"}],"name":"depositBribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_proposal","type":"bytes32"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_maxTokensPerVote","type":"uint256"},{"internalType":"uint256","name":"_periods","type":"uint256"},{"internalType":"uint256","name":"_permitDeadline","type":"uint256"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"depositBribeWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getBlacklistedVoters","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_proposal","type":"bytes32"},{"internalType":"uint256","name":"_proposalDeadline","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"getBribe","outputs":[{"internalType":"address","name":"bribeToken","type":"address"},{"internalType":"uint256","name":"bribeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWhitelistedTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_teamMember","type":"address"}],"name":"grantTeamRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"indexOfBlacklistedVoter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"indexOfWhitelistedToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_bribeVault","type":"address"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"string","name":"_protocol","type":"string"},{"internalType":"uint256","name":"_maxPeriods","type":"uint256"},{"internalType":"uint256","name":"_periodDuration","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voter","type":"address"}],"name":"isBlacklistedVoter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isWhitelistedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxPeriods","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periodDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"proposalDeadlines","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_voters","type":"address[]"}],"name":"removeBlacklistedVoters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"removeWhitelistedTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_teamMember","type":"address"}],"name":"revokeTeamRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_periods","type":"uint256"}],"name":"setMaxPeriods","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_periodDuration","type":"uint256"}],"name":"setPeriodDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"_identifiers","type":"bytes[]"},{"internalType":"uint256","name":"_deadline","type":"uint256"}],"name":"setProposals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addresses","type":"address[]"},{"internalType":"uint256","name":"_deadline","type":"uint256"}],"name":"setProposalsByAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_proposalIndex","type":"uint256"},{"internalType":"uint256","name":"_choiceCount","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"}],"name":"setProposalsById","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":92,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_BribeMarket":{"entryPoint":61,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":128,"id":791,"parameterSlots":0,"returnSlots":0},"convert_rational_by_to_uint256":{"entryPoint":73,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":55,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":104,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000027575b620000156200003d565b6040516130b76200009782396130b790f35b6200003162000037565b6200000b565b50600080fd5b6200004762000080565b565b6200005962000059620000599290565b90565b62000059600162000049565b9062000059620000596200007c9262000049565b9055565b620000476200008e6200005c565b60016200006856fe60806040526004361015610018575b6100166107f9565b005b60003560e01c806301ffc9a7146107cf5780630a254640146107a5578063114e6e731461077d5780632129831014610753578063248a9ca3146107295780632f2ff15d146107015780632fa4d218146106d757806336568abe146106af57806342a835511461068757806349d5e604146106515780635155bafa146106275780635699fbad146106005780637c2d6e01146105d95780637fb84bed146105af57806384f389a8146105875780638d23507f146105595780638e8efaee1461052f5780638fef58911461050157806391b9b827146104cb57806391d14854146104a05780639970227014610475578063a217fddf1461044b578063ab37f4861461040f578063b0b38baa146103e5578063b470aade146103bb578063bcec454f14610393578063be309bca1461034e578063cd698e6914610326578063d547741f146102fe578063d59551d2146102d6578063da606ce2146102af578063e26f790014610279578063ea24a7681461023e578063ed99c0d114610216578063f52c395a146101ef5763f7e6b46b146101ae5761000e565b346101e2575b6101c86101c2366004610ff7565b91612c11565b906101de6101d560405190565b92839283611035565b0390f35b6101ea6107f9565b6101b4565b5034610209575b6100166102043660046109d9565b6121ad565b6102116107f9565b6101f6565b5034610231575b61001661022b366004610a1a565b91612127565b6102396107f9565b61021d565b503461026c575b6101de61025b6102563660046109d9565b610fe5565b6040515b9182918290815260200190565b6102746107f9565b610245565b50346102a2575b61028b36600461084a565b6101de610296612b80565b60405191829182610f66565b6102aa6107f9565b610280565b50346102c9575b6100166102c4366004610922565b6122bd565b6102d16107f9565b6102b6565b50346102f1575b6100166102eb366004610fa7565b91611f97565b6102f96107f9565b6102dd565b5034610319575b6100166103133660046109a8565b90611257565b6103216107f9565b610305565b5034610341575b61001661033b3660046108c8565b9061263d565b6103496107f9565b61032d565b5034610386575b61036036600461084a565b6101de61036b610f9b565b6040515b918291826001600160a01b03909116815260200190565b61038e6107f9565b610355565b50346103ae575b6100166103a83660046108c8565b906127f5565b6103b66107f9565b61039a565b50346103d8575b6103cd36600461084a565b6101de61025b610f77565b6103e06107f9565b6103c2565b5034610402575b6103f736600461084a565b6101de610296612b8a565b61040a6107f9565b6103ec565b503461043e575b6101de61042c6104273660046109d9565b612cdb565b60405191829182901515815260200190565b6104466107f9565b610416565b5034610468575b61045d36600461084a565b6101de61025b610eff565b6104706107f9565b610452565b5034610493575b61001661048a366004610ea4565b93929092612a32565b61049b6107f9565b61047c565b50346104be575b6101de61042c6104b83660046109a8565b906110a5565b6104c66107f9565b6104a7565b50346104f4575b6104dd36600461084a565b6101de6104e8610e28565b60405191829182610e93565b6104fc6107f9565b6104d2565b5034610522575b610016610516366004610c71565b95949094939193612af4565b61052a6107f9565b610508565b503461054c575b6101de61025b6105473660046109d9565b610b60565b6105546107f9565b610536565b503461057a575b61001661056e366004610ab4565b94939093929192611af7565b6105826107f9565b610560565b50346105a2575b61001661059c366004610a1a565b91611e26565b6105aa6107f9565b61058e565b50346105cc575b6105c136600461084a565b6101de61025b610a12565b6105d46107f9565b6105b6565b50346105f3575b6100166105ee366004610922565b612342565b6105fb6107f9565b6105e0565b503461061a575b6100166106153660046109d9565b612238565b6106226107f9565b610607565b5034610644575b61063936600461084a565b6101de61025b6109fa565b61064c6107f9565b61062e565b503461067a575b61066336600461084a565b6101de60008051602061305483398151915261025b565b6106826107f9565b610658565b50346106a2575b61001661069c3660046108c8565b906129d9565b6106aa6107f9565b61068e565b50346106ca575b6100166106c43660046109a8565b906112c6565b6106d26107f9565b6106b6565b50346106f4575b6101de61042c6106ef3660046109d9565b612d56565b6106fc6107f9565b6106de565b503461071c575b6100166107163660046109a8565b90611114565b6107246107f9565b610708565b5034610746575b6101de61025b610741366004610922565b6110d5565b61074e6107f9565b610730565b5034610770575b6101de61025b61076b366004610922565b610969565b6107786107f9565b61075a565b5034610798575b6100166107923660046108c8565b906128e7565b6107a06107f9565b610784565b50346107c2575b6107b736600461084a565b6101de61025b610874565b6107ca6107f9565b6107ac565b50346107ec575b6101de61042c6107e7366004610822565b611056565b6107f46107f9565b6107d6565b50600080fd5b6001600160e01b031981165b14156107f957565b90503590610820826107ff565b565b906108369160208183031261083957610813565b90565b6108416107f9565b610813565b9052565b600091031261085557565b6108206107f9565b6108366108366108369290565b610836600a61085d565b61083661086a565b909182601f830112156108bb575b602082359267ffffffffffffffff84116108ae575b01926020830284011161085557565b6108b66107f9565b61089f565b6108c36107f9565b61088a565b906108f191602081830312610902575b80359067ffffffffffffffff82116108f5575b0161087c565b9091565b6108fd6107f9565b6108eb565b61090a6107f9565b6108d8565b8061080b565b905035906108208261090f565b906108369160208183031261093657610915565b61093e6107f9565b610915565b905b600052602052604060002090565b610836916008021c81565b906108369154610953565b6108369061097b600891600092610943565b61095e565b6001600160a01b031690565b6001600160a01b03811661080b565b905035906108208261098c565b9190610836906040848203126109cc575b6109c38185610915565b9360200161099b565b6109d46107f9565b6109b9565b90610836916020818303126109ed5761099b565b6109f56107f9565b61099b565b6108366000600461095e565b61083662278d0061085d565b610836610a06565b91604083830312610a5e575b610836610a4683853567ffffffffffffffff8111610a51575b860161087c565b939094602001610915565b610a596107f9565b610a3f565b610a666107f9565b610a26565b909182601f83011215610aa7575b602082359267ffffffffffffffff8411610a9a575b01928284011161085557565b610aa26107f9565b610a8e565b610aaf6107f9565b610a79565b919060a083820312610b23575b610836610ace828561099b565b93610adc836020830161099b565b93610afd84604084013567ffffffffffffffff8111610b16575b8401610a6b565b939094610b0d8160608601610915565b93608001610915565b610b1e6107f9565b610af6565b610b2b6107f9565b610ac1565b61083690610980906001600160a01b031682565b61083690610b30565b61083690610b44565b9061094590610b4d565b6108369061097b600991600092610b56565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610bb557604052565b610bbd610b7c565b604052565b90610820610bcf60405190565b9283610b93565b610bf560209167ffffffffffffffff8111610bf957601f01601f191690565b0190565b610b72610b7c565b90826000939282370152565b92919061082091610c25610c2083610bd6565b610bc2565b94828652602086019183820111610c3b57610c01565b610c436107f9565b610c01565b906108369181601f82011215610c64575b602081359101610c0d565b610c6c6107f9565b610c59565b60e081830312610cf9575b610c868282610915565b92610c94836020840161099b565b92610ca28160408501610915565b92610cb08260608301610915565b92610836610cc18460808501610915565b93610ccf8160a08601610915565b9360c08101359067ffffffffffffffff8211610cec575b01610c48565b610cf46107f9565b610ce6565b610d016107f9565b610c7c565b50634e487b7160e01b600052600060045260246000fd5b50634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610d57575b6020831014610d4f57565b610820610d1d565b91607f1691610d44565b80546000939291610d7e610d7483610d34565b8085529360200190565b9160018116908115610dd05750600114610d9757505050565b610daa9192939450600052602060002090565b916000925b818410610dbc5750500190565b805484840152602090930192600101610daf565b60ff191683525050602001925050565b9061083691610d61565b90610820610e0492610dfb60405190565b93848092610de0565b0383610b93565b60006108369211610e1b57610dea565b610e23610d06565b610dea565b61083660006002610e0b565b918091926000905b828210610e54575011610e4d575050565b6000910152565b91508060209183015181860152018291610e3c565b610e8a610b72602093610bf593610e7e815190565b80835293849260200190565b95869101610e34565b602080825261083692910190610e69565b919060a083820312610ee8575b610ebb8184610915565b92610ec9826020830161099b565b92610836610eda8460408501610915565b93610b0d8160608601610915565b610ef06107f9565b610eb1565b610836600061085d565b610836610ef5565b90610f27610f20610f16845190565b8084529260200190565b9260200190565b9060005b818110610f385750505090565b909192610f5e610f5760019286516001600160a01b0316815260200190565b9460200190565b929101610f2b565b602080825261083692910190610f07565b6108366000600561095e565b610836916008021c610980565b906108369154610f83565b61083660006003610f90565b9091606082840312610fd8575b610836610fc18484610915565b93610fcf8160208601610915565b93604001610915565b610fe06107f9565b610fb4565b6108369061097b600a91600092610b56565b9091606082840312611028575b6108366110118484610915565b9361101f8160208601610915565b9360400161099b565b6110306107f9565b611004565b6001600160a01b0390911681526040810192916108209160200152565b0152565b637965db0b60e01b6001600160e01b0319821614908115611075575090565b61083691506001600160e01b0319166301ffc9a760e01b1490565b610836905b60ff1690565b6108369054611090565b610836916110bf916110b960009182610943565b01610b56565b61109b565b6108369081565b61083690546110c4565b60016110ee610836926110e6600090565b506000610943565b016110cb565b906108209161110a611105826110d5565b61111e565b9061082091611316565b90610820916110f4565b6108209033906111ae565b6108369061085d565b610bf561114a92602092611144815190565b94859290565b93849101610e34565b611191610836939261118b61118b937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90611132565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b906111c06111bc82846110a5565b1590565b6111c8575050565b6112389250906108366111e66111e0611220946116a2565b92611129565b6111fb6020916111f58361085d565b90611542565b9261121461120860405190565b94859384019283611153565b90810382520382610b93565b60405162461bcd60e51b815291829160048301610e93565b0390fd5b906108209161124d611105826110d5565b906108209161138c565b906108209161123c565b1561126857565b5060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b61082091906112e76112d733610980565b6001600160a01b03841614611261565b61138c565b9060ff905b9181191691161790565b9061130b61083661131292151590565b82546112ec565b9055565b906113246111bc82846110a5565b61132c575050565b61134660016113418360006110b98782610943565b6112fb565b339061137c6113766113767f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b92610b4d565b9261138660405190565b600090a4565b9061139781836110a5565b61139f575050565b6113b3600061134183826110b98782610943565b339061137c6113766113767ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b50634e487b7160e01b600052601160045260246000fd5b90611404565b9190565b908060001904821181151516611418570290565b6114206113e3565b0290565b81198111611430570190565b610bf56113e3565b90611445610c2083610bd6565b918252565b369037565b9061082061146561145f84611438565b93610bd6565b601f19016020840161144a565b50634e487b7160e01b600052603260045260246000fd5b906001602091611497845190565b8110156114a5575b02010190565b6114ad611472565b61149f565b60019080156114bf570390565b6114c76113e3565b0390565b6110956108366108369290565b610836906114ec6114006108369460ff1690565b901c90565b156114f857565b5060405162461bcd60e51b815280611238600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b919060029061157361156e61155f8361155a8661085d565b6113fa565b6115688561085d565b90611424565b61144f565b91600091603061158b6115858561085d565b86611489565b536115c36115ba600f60fb1b9261155a6001958695881a6115b46115ae8861085d565b8b611489565b5361085d565b6115688361085d565b915b6115e6575b505061083692936115e06114006108369361085d565b146114f1565b90946115f18261085d565b8611156116705761165d611657839261163a61161d6f181899199a1a9b1b9c1cb0b131b232b360811b90565b611627600f61085d565b83166010811015611663575b1a60f81b90565b861a6116468a89611489565b5361165160046114cb565b906114d8565b966114b2565b916115c5565b61166b611472565b611633565b946115ca565b6108369081906001600160a01b031681565b61083660146114cb565b6108366108366108369260ff1690565b6116bf6116ba610836926116b4606090565b50610b44565b611676565b6111f56116ca611688565b611692565b94939291906116de600b61109b565b6116f7576116eb9561196d565b6108206001600b6112fb565b5050505050505061170760405190565b62dc149f60e41b8152600490fd5b6109806108366108369290565b61083690611715565b906001600160a01b03906112f1565b9061174a61083661131292610b4d565b825461172b565b9160001960089290920291821b911b6112f1565b91906117766108366113129361085d565b908354611751565b61082091600091611765565b818110611795575050565b806117a3600060019361177e565b0161178a565b9190601f81116117b857505050565b6117ca61082093600052602060002090565b906020601f8401819004830193106117ec575b6020601f90910104019061178a565b90915081906117dd565b919067ffffffffffffffff82116118c1575b61181c826118168554610d34565b856117a9565b600090601f83116001146118575761131292916000918361184c575b5050600019600883021c1916906002021790565b013590503880611838565b601f1983169161186c85600052602060002090565b92815b8181106118a957509160029391856001969410611890575b50505002019055565b0135600019601f84166008021c19169055388080611887565b9193602060018192878701358155019501920161186f565b6118c9610b7c565b611808565b9061082092916117f6565b90600019906112f1565b906118f36108366113129261085d565b82546118d9565b9190610b728161191181610bf59560209181520190565b8095610c01565b9161105291610820969897956080956119586119659461194860a089019560008a01906001600160a01b03169052565b6001600160a01b03166020880152565b85830360408701526118fa565b966060830152565b9291949093600061198061098082611722565b6001600160a01b03861614611ad7578361199a565b905090565b6119a66114008361085d565b14611ab7576119b48161085d565b82148015611aa4575b611a84576119ca9061085d565b82148015611a71575b611a5257611a4d926119e685600361173a565b6119f2818860026118ce565b6119fd8260046118e3565b611a088360056118e3565b611a1986611a14610ef5565b611316565b7fa80caddab9a93c4df4f67cd3ee3490472325e6903e29687fc5904cef451041f996611a4460405190565b96879687611918565b0390a1565b50505050505050611a6260405190565b634f08daf360e11b8152600490fd5b50611a7d610836610a06565b82116119d3565b5050505050505050611a9560405190565b63c17d8a0360e01b8152600490fd5b50611ab061083661086a565b82116119bd565b5050505050505050611ac860405190565b6301fc71f560e21b8152600490fd5b5050505050505050611ae860405190565b63e6c4247b60e01b8152600490fd5b9061082095949392916116cf565b9190611b0f610ef5565b611b1d6111bc3380936110a5565b9081611b4e575b50611b325761082092611cb6565b50505050611b3f60405190565b63ea8e4eb560e01b8152600490fd5b611b6b91506111bc906000805160206130548339815191526110a5565b38611b24565b6020809167ffffffffffffffff8111611b8957020190565b611b91610b7c565b020190565b90611445610c2083611b71565b90610820611465611bb384611b96565b93611b71565b903590601e193682900301821215611bfd575b01602081359167ffffffffffffffff8311611bf0575b019136829003831361085557565b611bf86107f9565b611be2565b611c056107f9565b611bcc565b906108f192602091811015611c23575b02810190611bb9565b611c2b611472565b611c1a565b9091610bf59083908093610c01565b909161083692611c30565b9060208091611497845190565b6001906000198114611430570190565b90611c76610f20610f16845190565b9060005b818110611c875750505090565b909192611c9d610f576001928651815260200190565b929101611c7a565b602080825261083692910190611c67565b929181926000611cc58161085d565b8514611e1757428310611df957611cdb85611ba3565b9160009560015b15611d9f575b8296611cf861199582898c611c0a565b611d046114008661085d565b14611d7e5780611d59611214611d39611d21611d78958c8f611c0a565b90611d2b60405190565b938492602084019283611c3f565b611d4b611d44825190565b9160200190565b20611d568389611c4a565b52565b611d7387611d6e611d6a848a611c4a565b5190565b613044565b611c57565b96611ce2565b505050505050505050611d9060405190565b63eb48439160e01b8152600490fd5b80871015611dac57611ce8565b5095505092509050611df4611de17f8c852cad34f901531c4a1328ddfefbc6152fbd45aa7eb38890e74f351d8493a69261085d565b92611deb60405190565b91829182611ca5565b0390a2565b505050505050611e0860405190565b631da7447960e21b8152600490fd5b505050505050611ae860405190565b906108209291611b05565b9190611e3b610ef5565b611e496111bc3380936110a5565b9081611e5e575b50611b325761082092611e87565b611e7b91506111bc906000805160206130548339815191526110a5565b38611e50565b01918252565b9190916000611e958161085d565b8414611f7a57428310611f6c57611eab84611ba3565b9460009460015b15611f15575b611f0f8396611efe611ec960405190565b611ee88160208101611214868c83602081611e81610bf5938396959052565b611ef3611d44825190565b20611d56838c611c4a565b611d7387611d6e611d6a848d611c4a565b95611eb2565b80861015611f2257611eb8565b5094935050611f67611f5d611f577fc3c3780ed921778d05400bdfaf133352f1c8ce56e4ce47391118f53a22103cce9361085d565b9361085d565b93611deb60405190565b0390a3565b5050505050611e0860405190565b5050505050611f8860405190565b633d25757960e01b8152600490fd5b906108209291611e31565b9190611fac610ef5565b611fba6111bc3380936110a5565b9081611fcf575b50611b325761082092612033565b611fec91506111bc906000805160206130548339815191526110a5565b38611fc1565b9160209181101561200257020190565b611b91611472565b356108368161098c565b610846906001600160a01b031660601b90565b610bf581601493612014565b909291839260006120438161085d565b8514611e1757428310611df95761205985611ba3565b9160009560015b156120e5575b829661207b612076828b8a611ff2565b61200a565b61209761208a61098087611722565b916001600160a01b031690565b146120d35780611d596120b16120766120cd948d8c611ff2565b611d396120bd60405190565b8092611214602083019182612027565b96612060565b505050505050505050611ae860405190565b808710156120f257612066565b5095505092509050611df4611de17fa9411f55f4ccd3f63f1f6236481c2f6b385a4221287184e89ca4c40792f8224e9261085d565b906108209291611fa2565b61082090612141611105610ef5565b61214e6109806000611722565b6001600160a01b038216146121a35761217581600080516020613054833981519152611316565b611a4d7fd36b0989e598a1b05388150a9a8c84925e2710d91910406b8735e01f3ed028179161036f60405190565b5050604051611ae8565b61082090612132565b610820906121c5611105610ef5565b6000805160206130548339815191526121e16111bc83836110a5565b61221d57816121ef9161138c565b611a4d7f708bd40f8f4d2ad60032caea0582161d35c50177cc0b2c575b5d483bd2902caa9161036f60405190565b50505061222960405190565b632793ed7d60e01b8152600490fd5b610820906121b6565b61082090612250611105610ef5565b61225a600061085d565b811480156122aa575b6122a0576122728160046118e3565b611a4d7fbff777c073bd9101dd1e419471fe91c54c9ffe380882bca8eb1fcf75d6086f779161025f60405190565b5050604051611a95565b506122b661083661086a565b8111612263565b61082090612241565b610820906122d5611105610ef5565b6122df600061085d565b8114801561232f575b612325576122f78160056118e3565b611a4d7f7d7455c70e1855cfeb6ff84fe7b6d37efcfdaee91c05f2e25a55368f50ba7b5a9161025f60405190565b5050604051611a62565b5061233b610836610a06565b81116122e8565b610820906122c6565b90612354610ef5565b6123626111bc3380936110a5565b9081612383575b5061237757610820916124e1565b505050611b3f60405190565b6123a091506111bc906000805160206130548339815191526110a5565b38612369565b61083690610980565b61083690546123a6565b6123d96001916123c7815490565b8410156123e257600052602060002090565b91020190600090565b6123ea611472565b600052602060002090565b916001600160a01b0360089290920291821b911b6112f1565b919061241f61083661131293610b4d565b9083546123f5565b9061244f6108209280549068010000000000000000821015612455575b6001820181556123b9565b9061240e565b61245d610b7c565b612444565b8181106114bf570390565b5061083690602081019061099b565b818352602090920191906000825b828210612498575050505090565b909192936124c76124c06001926124af888661246d565b6001600160a01b0316815260200190565b9560200190565b9392019061248a565b60208082526108369391019161247c565b909190829160005b835b81101561260157612500612076828786611ff2565b61251061208a6109806000611722565b146125f357612523612076828786611ff2565b61253361208a61098060036123af565b146125d657612549610427612076838887611ff2565b6125b9576124eb906125b2906125ac61258e61257e600661257a89612574612076888f865b94611ff2565b90612427565b5490565b612588600161085d565b90612462565b6125a760096125a1612076868d8c611ff2565b90610b56565b6118e3565b60010190565b90506124e9565b50505050506125c760405190565b63241d2edf60e01b8152600490fd5b50505050506125e460405190565b63a122bf3960e01b8152600490fd5b5050505050611ae860405190565b50929091507fe7e9e18eae0a1664f98ba7e59eda81692d5802c7e9bd75bb0261f3fc6fd4a49391611a4d61263460405190565b928392836124d0565b906108209161234b565b90612650610ef5565b61265e6111bc3380936110a5565b9081612673575b5061237757610820916126ef565b61269091506111bc906000805160206130548339815191526110a5565b38612665565b50634e487b7160e01b600052603160045260246000fd5b6108209160009161240e565b60016126c3825490565b80156126e2575b03906126df6126d983836123b9565b906126ad565b55565b6126ea612696565b6126ca565b909190829160005b835b8110156127c2576127146111bc610427612076848988611ff2565b6127a55761279e816125ac61279961275461083660006127948a6125a16120768f9b6126f99c60099461278f61275f61275a612754612076878787611ff2565b89610b56565b6110cb565b6125a78160069d8e61244f61278761278161277b61257e855490565b846123b9565b90610f90565b9384926123b9565b611ff2565b61177e565b6126b9565b90506126f7565b50505050506127b360405190565b6307c241ad60e51b8152600490fd5b50929091507fc18397a78d98d67911be09b9c32315c4b8db0454529f84f856e61f537494cbfc91611a4d61263460405190565b9061082091612647565b906108209161280f611105610ef5565b909190829160005b835b8110156128b45761282e612076828786611ff2565b61283e61208a6109806000611722565b146125f3576128546106ef612076838887611ff2565b6128975761281990612890906125ac61287d61257e600761257a89612574612076888f8661256e565b6125a7600a6125a1612076868d8c611ff2565b9050612817565b50505050506128a560405190565b6336650e8f60e11b8152600490fd5b50929091507f8ff2887f41c4af26bbcadf0889537a4641e2d1d6d9fa287feaf683a76096efd891611a4d61263460405190565b90610820916127ff565b9061082091612901611105610ef5565b909190829160005b835b8110156129a6576129266111bc6106ef612076848988611ff2565b61298957612982816125ac61279961275461083660006127948a6125a16120768f9b61290b9c600a9461278f61296661275a612754612076878787611ff2565b6125a78160079d8e61244f61278761278161277b61257e855490565b9050612909565b505050505061299760405190565b637463712b60e01b8152600490fd5b50929091507fa520ff964bc029411023e3f0e20bf29e54c023e5e23b0e28d0de3ae5d4231a9e91611a4d61263460405190565b90610820916128f1565b906129f8949392916129f3612a96565b612a12565b610820612ac8565b6108366000611438565b610836612a00565b92610820949192612a23600061085d565b93612a2c612a0a565b95612e44565b90610820949392916129e3565b610836600261085d565b15612a5057565b5060405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b610820612aa360016110cb565b612ab7612aae612a3f565b91821415612a49565b60016118e3565b610836600161085d565b610820612ab7612abe565b906129f8969594939291612ae5612a96565b90610820969594939291612e44565b90610820969594939291612ad3565b90612b1e612b12610f16845490565b92600052602060002090565b9060005b818110612b2f5750505090565b909192612b4b612b446001926124af876123af565b9460010190565b929101612b22565b9061083691612b03565b90610820610e0492612b6e60405190565b93848092612b53565b61083690612b5d565b6108366006612b77565b6108366007612b77565b92612bb16020610bf594611e81601488611e81829b9a8699612014565b018092612014565b905051906108208261098c565b905051906108208261090f565b919061083690604084820312612bf7575b612bee8185612bb9565b93602001612bc6565b612bff6107f9565b612be4565b506040513d6000823e3d90fd5b91612c9992612c8b604093612c24600090565b50612c68612c3d612c38612c3860036123af565b610b4d565b93632c4ef0d595611214612c5030610b4d565b91612c5a60405190565b958694602086019485612b94565b612c73611d44825190565b2092612c7e60405190565b9586948593849360e01b90565b835260048301526024820190565b03915afa908115612cce575b600080919092612cb457509091565b90506108f19150612cc53d82610b93565b3d810190612bd3565b612cd6612c04565b612ca5565b600690612ce6825490565b600090612cf56114008361085d565b14612d5057612d0861275a836009610b56565b612d146114008361085d565b1415928315612d24575b50505090565b612d4792935061278161208a92612d3a926123b9565b926001600160a01b031690565b14388080612d1e565b91505090565b600790612d61825490565b600090612d706114008361085d565b14612d5057612d0861275a83600a610b56565b610836610140610bc2565b805182526020808201516001600160a01b03169083015261083691610140810191610120906040818101516001600160a01b031690840152612dd560608201516060850152565b612de460808201516080850152565b612df360a082015160a0850152565b612e0260c082015160c0850152565b612e1160e082015160e0850152565b612e22610100820151610100850152565b015190610120818403910152610e69565b602080825261083692910190612d8e565b9394959095612e5761275a866008610943565b42811061302357600097612e6a8961085d565b8814801561300e575b612fec57612e836109808a611722565b6001600160a01b03821614612fd957612e9e6111bc82612cdb565b612fc657612eab8961085d565b8514612fa4578897612ebd60036123af565b612ec690610b4d565b612ecf90610b4d565b96635c2a802b9633612ee160056110cb565b94612eea612d83565b9b612ef5908e8e0152565b6001600160a01b031660208c01526001600160a01b031660408b015260608a0152608089015260a088015260c087015260e0860152610100850152610120840152612f6194612f5691833b15612f97575b6040519687958694859360e01b90565b835260048301612e33565b03925af18015612f8a575b612f735750565b61082090612f813d82610b93565b3d81019061084a565b612f92612c04565b612f6c565b612f9f6107f9565b612f46565b50505050505050505050612fb760405190565b63162908e360e11b8152600490fd5b505050505050505050506127b360405190565b50505050505050505050611ae860405190565b50505050505050505050612fff60405190565b6302e8f35960e31b8152600490fd5b5061301c61083660046110cb565b8811612e73565b50505050505050505061303560405190565b63387b2e5560e11b8152600490fd5b906125a761082092600861094356fe5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33a36469706673582212203de87fe65e419580b394cc648a6887356af0210ace8c733dc23f090de2bfc3116c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x27 JUMPI JUMPDEST PUSH3 0x15 PUSH3 0x3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B7 PUSH3 0x97 DUP3 CODECOPY PUSH2 0x30B7 SWAP1 RETURN JUMPDEST PUSH3 0x31 PUSH3 0x37 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x47 PUSH3 0x80 JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x59 PUSH3 0x59 PUSH3 0x59 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x59 PUSH1 0x1 PUSH3 0x49 JUMP JUMPDEST SWAP1 PUSH3 0x59 PUSH3 0x59 PUSH3 0x7C SWAP3 PUSH3 0x49 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x47 PUSH3 0x8E PUSH3 0x5C JUMP JUMPDEST PUSH1 0x1 PUSH3 0x68 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xA254640 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0x114E6E73 EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0x21298310 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0x2FA4D218 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x42A83551 EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x49D5E604 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x5155BAFA EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x5699FBAD EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x7C2D6E01 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x7FB84BED EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x84F389A8 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x8D23507F EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x8E8EFAEE EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x8FEF5891 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x91B9B827 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x99702270 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xAB37F486 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xB0B38BAA EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xB470AADE EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xBCEC454F EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xBE309BCA EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xCD698E69 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD59551D2 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDA606CE2 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xE26F7900 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xEA24A768 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xED99C0D1 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF52C395A EQ PUSH2 0x1EF JUMPI PUSH4 0xF7E6B46B EQ PUSH2 0x1AE JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI JUMPDEST PUSH2 0x1C8 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF7 JUMP JUMPDEST SWAP2 PUSH2 0x2C11 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1035 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x209 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x21AD JUMP JUMPDEST PUSH2 0x211 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x231 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x239 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST POP CALLVALUE PUSH2 0x26C JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A2 JUMPI JUMPDEST PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x296 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2C9 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2F1 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x319 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST POP CALLVALUE PUSH2 0x341 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x349 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST POP CALLVALUE PUSH2 0x386 JUMPI JUMPDEST PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x36B PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x38E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AE JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x27F5 JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST POP CALLVALUE PUSH2 0x3D8 JUMPI JUMPDEST PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x402 JUMPI JUMPDEST PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x296 PUSH2 0x2B8A JUMP JUMPDEST PUSH2 0x40A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST POP CALLVALUE PUSH2 0x43E JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x2CDB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST POP CALLVALUE PUSH2 0x468 JUMPI JUMPDEST PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x470 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST POP CALLVALUE PUSH2 0x493 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x49B PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST POP CALLVALUE PUSH2 0x4BE JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F4 JUMPI JUMPDEST PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x4E8 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x522 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x2AF4 JUMP JUMPDEST PUSH2 0x52A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST POP CALLVALUE PUSH2 0x54C JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x554 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST POP CALLVALUE PUSH2 0x57A JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x582 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5A2 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x5AA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST POP CALLVALUE PUSH2 0x5CC JUMPI JUMPDEST PUSH2 0x5C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5F3 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x5EE CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2342 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x61A JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x615 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x622 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST POP CALLVALUE PUSH2 0x644 JUMPI JUMPDEST PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x64C PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST POP CALLVALUE PUSH2 0x67A JUMPI JUMPDEST PUSH2 0x663 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x25B JUMP JUMPDEST PUSH2 0x682 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6A2 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST POP CALLVALUE PUSH2 0x6CA JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6F4 JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x2D56 JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x71C JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x724 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST POP CALLVALUE PUSH2 0x746 JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x741 CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST POP CALLVALUE PUSH2 0x770 JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x76B CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x778 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST POP CALLVALUE PUSH2 0x798 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7C2 JUMPI JUMPDEST PUSH2 0x7B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x874 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST POP CALLVALUE PUSH2 0x7EC JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x7F9 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x7FF JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x839 JUMPI PUSH2 0x813 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x841 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0x820 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x836 PUSH2 0x836 PUSH2 0x836 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x836 PUSH1 0xA PUSH2 0x85D JUMP JUMPDEST PUSH2 0x836 PUSH2 0x86A JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x8BB JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x8AE JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0x8B6 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH2 0x8C3 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST SWAP1 PUSH2 0x8F1 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x902 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8F5 JUMPI JUMPDEST ADD PUSH2 0x87C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x90A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST DUP1 PUSH2 0x80B JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x90F JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x936 JUMPI PUSH2 0x915 JUMP JUMPDEST PUSH2 0x93E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 SLOAD PUSH2 0x953 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x97B PUSH1 0x8 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80B JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x98C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x836 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x9CC JUMPI JUMPDEST PUSH2 0x9C3 DUP2 DUP6 PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x99B JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x9ED JUMPI PUSH2 0x99B JUMP JUMPDEST PUSH2 0x9F5 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x4 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x836 PUSH3 0x278D00 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x836 PUSH2 0xA06 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0xA5E JUMPI JUMPDEST PUSH2 0x836 PUSH2 0xA46 DUP4 DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA51 JUMPI JUMPDEST DUP7 ADD PUSH2 0x87C JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x20 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xA59 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH2 0xA66 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xAA7 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0xA9A JUMPI JUMPDEST ADD SWAP3 DUP3 DUP5 ADD GT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0xAAF PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0xB23 JUMPI JUMPDEST PUSH2 0x836 PUSH2 0xACE DUP3 DUP6 PUSH2 0x99B JUMP JUMPDEST SWAP4 PUSH2 0xADC DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x99B JUMP JUMPDEST SWAP4 PUSH2 0xAFD DUP5 PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB16 JUMPI JUMPDEST DUP5 ADD PUSH2 0xA6B JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0xB0D DUP2 PUSH1 0x60 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x80 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xB1E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0xB2B PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x980 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0xB44 JUMP JUMPDEST SWAP1 PUSH2 0x945 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x97B PUSH1 0x9 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBB5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xBBD PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0xBCF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0xBF5 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xBF9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0xB72 PUSH2 0xB7C JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x820 SWAP2 PUSH2 0xC25 PUSH2 0xC20 DUP4 PUSH2 0xBD6 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 DUP4 DUP3 ADD GT PUSH2 0xC3B JUMPI PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xC43 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xC64 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0xC6C PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0xCF9 JUMPI JUMPDEST PUSH2 0xC86 DUP3 DUP3 PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0xC94 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x99B JUMP JUMPDEST SWAP3 PUSH2 0xCA2 DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0xCB0 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0x836 PUSH2 0xCC1 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0xCCF DUP2 PUSH1 0xA0 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xCEC JUMPI JUMPDEST ADD PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xCF4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0xD01 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xD57 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xD4F JUMPI JUMP JUMPDEST PUSH2 0x820 PUSH2 0xD1D JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xD44 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xD7E PUSH2 0xD74 DUP4 PUSH2 0xD34 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD97 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xDAA SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xDBC JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDAF JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP PUSH1 0x20 ADD SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH2 0xD61 JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0xE04 SWAP3 PUSH2 0xDFB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xDE0 JUMP JUMPDEST SUB DUP4 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 SWAP3 GT PUSH2 0xE1B JUMPI PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xE23 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x2 PUSH2 0xE0B JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xE54 JUMPI POP GT PUSH2 0xE4D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xE8A PUSH2 0xB72 PUSH1 0x20 SWAP4 PUSH2 0xBF5 SWAP4 PUSH2 0xE7E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xE69 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0xEE8 JUMPI JUMPDEST PUSH2 0xEBB DUP2 DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0xEC9 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x99B JUMP JUMPDEST SWAP3 PUSH2 0x836 PUSH2 0xEDA DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0xB0D DUP2 PUSH1 0x60 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xEF0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x836 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 PUSH2 0xF27 PUSH2 0xF20 PUSH2 0xF16 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF38 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xF5E PUSH2 0xF57 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x5 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x836 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x980 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 SLOAD PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x3 PUSH2 0xF90 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xFD8 JUMPI JUMPDEST PUSH2 0x836 PUSH2 0xFC1 DUP5 DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0xFCF DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xFE0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x97B PUSH1 0xA SWAP2 PUSH1 0x0 SWAP3 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x1028 JUMPI JUMPDEST PUSH2 0x836 PUSH2 0x1011 DUP5 DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0x101F DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x99B JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x820 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x1075 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 SLOAD PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x836 SWAP2 PUSH2 0x10BF SWAP2 PUSH2 0x10B9 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x943 JUMP JUMPDEST ADD PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x109B JUMP JUMPDEST PUSH2 0x836 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x836 SWAP1 SLOAD PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x10EE PUSH2 0x836 SWAP3 PUSH2 0x10E6 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x943 JUMP JUMPDEST ADD PUSH2 0x10CB JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x110A PUSH2 0x1105 DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x111E JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x1316 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x820 SWAP1 CALLER SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0xBF5 PUSH2 0x114A SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x1144 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1191 PUSH2 0x836 SWAP4 SWAP3 PUSH2 0x118B PUSH2 0x118B SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11C0 PUSH2 0x11BC DUP3 DUP5 PUSH2 0x10A5 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x11C8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1238 SWAP3 POP SWAP1 PUSH2 0x836 PUSH2 0x11E6 PUSH2 0x11E0 PUSH2 0x1220 SWAP5 PUSH2 0x16A2 JUMP JUMPDEST SWAP3 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x11FB PUSH1 0x20 SWAP2 PUSH2 0x11F5 DUP4 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 PUSH2 0x1214 PUSH2 0x1208 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 ADD SWAP3 DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xE93 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x124D PUSH2 0x1105 DUP3 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x138C JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x123C JUMP JUMPDEST ISZERO PUSH2 0x1268 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x12E7 PUSH2 0x12D7 CALLER PUSH2 0x980 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x130B PUSH2 0x836 PUSH2 0x1312 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x12EC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1324 PUSH2 0x11BC DUP3 DUP5 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x132C JUMPI POP POP JUMP JUMPDEST PUSH2 0x1346 PUSH1 0x1 PUSH2 0x1341 DUP4 PUSH1 0x0 PUSH2 0x10B9 DUP8 DUP3 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST CALLER SWAP1 PUSH2 0x137C PUSH2 0x1376 PUSH2 0x1376 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0xB4D JUMP JUMPDEST SWAP3 PUSH2 0x1386 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST SWAP1 PUSH2 0x1397 DUP2 DUP4 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x139F JUMPI POP POP JUMP JUMPDEST PUSH2 0x13B3 PUSH1 0x0 PUSH2 0x1341 DUP4 DUP3 PUSH2 0x10B9 DUP8 DUP3 PUSH2 0x943 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x137C PUSH2 0x1376 PUSH2 0x1376 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP6 SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x1404 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1418 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0x1420 PUSH2 0x13E3 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x1430 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xBF5 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 PUSH2 0x1445 PUSH2 0xC20 DUP4 PUSH2 0xBD6 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0x1465 PUSH2 0x145F DUP5 PUSH2 0x1438 JUMP JUMPDEST SWAP4 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x144A JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 SWAP2 PUSH2 0x1497 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14A5 JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x14AD PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP1 ISZERO PUSH2 0x14BF JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0x14C7 PUSH2 0x13E3 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x1095 PUSH2 0x836 PUSH2 0x836 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x14EC PUSH2 0x1400 PUSH2 0x836 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x14F8 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1238 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x1573 PUSH2 0x156E PUSH2 0x155F DUP4 PUSH2 0x155A DUP7 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x1568 DUP6 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x30 PUSH2 0x158B PUSH2 0x1585 DUP6 PUSH2 0x85D JUMP JUMPDEST DUP7 PUSH2 0x1489 JUMP JUMPDEST MSTORE8 PUSH2 0x15C3 PUSH2 0x15BA PUSH1 0xF PUSH1 0xFB SHL SWAP3 PUSH2 0x155A PUSH1 0x1 SWAP6 DUP7 SWAP6 DUP9 BYTE PUSH2 0x15B4 PUSH2 0x15AE DUP9 PUSH2 0x85D JUMP JUMPDEST DUP12 PUSH2 0x1489 JUMP JUMPDEST MSTORE8 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x1568 DUP4 PUSH2 0x85D JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x15E6 JUMPI JUMPDEST POP POP PUSH2 0x836 SWAP3 SWAP4 PUSH2 0x15E0 PUSH2 0x1400 PUSH2 0x836 SWAP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x14F1 JUMP JUMPDEST SWAP1 SWAP5 PUSH2 0x15F1 DUP3 PUSH2 0x85D JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x165D PUSH2 0x1657 DUP4 SWAP3 PUSH2 0x163A PUSH2 0x161D PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 JUMP JUMPDEST PUSH2 0x1627 PUSH1 0xF PUSH2 0x85D JUMP JUMPDEST DUP4 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1663 JUMPI JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST DUP7 BYTE PUSH2 0x1646 DUP11 DUP10 PUSH2 0x1489 JUMP JUMPDEST MSTORE8 PUSH2 0x1651 PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST SWAP1 PUSH2 0x14D8 JUMP JUMPDEST SWAP7 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 PUSH2 0x15C5 JUMP JUMPDEST PUSH2 0x166B PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1633 JUMP JUMPDEST SWAP5 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x836 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x14 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x836 PUSH2 0x836 PUSH2 0x836 SWAP3 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x16BF PUSH2 0x16BA PUSH2 0x836 SWAP3 PUSH2 0x16B4 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x1676 JUMP JUMPDEST PUSH2 0x11F5 PUSH2 0x16CA PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x1692 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE PUSH1 0xB PUSH2 0x109B JUMP JUMPDEST PUSH2 0x16F7 JUMPI PUSH2 0x16EB SWAP6 PUSH2 0x196D JUMP JUMPDEST PUSH2 0x820 PUSH1 0x1 PUSH1 0xB PUSH2 0x12FB JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1707 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xDC149F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x980 PUSH2 0x836 PUSH2 0x836 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x1715 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 PUSH2 0x174A PUSH2 0x836 PUSH2 0x1312 SWAP3 PUSH2 0xB4D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x172B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x12F1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1776 PUSH2 0x836 PUSH2 0x1312 SWAP4 PUSH2 0x85D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x820 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1765 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1795 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x17A3 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x177E JUMP JUMPDEST ADD PUSH2 0x178A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x17B8 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x17CA PUSH2 0x820 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x17EC JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x178A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x17DD JUMP JUMPDEST SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18C1 JUMPI JUMPDEST PUSH2 0x181C DUP3 PUSH2 0x1816 DUP6 SLOAD PUSH2 0xD34 JUMP JUMPDEST DUP6 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1857 JUMPI PUSH2 0x1312 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x184C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x186C DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x18A9 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x1890 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x1F DUP5 AND PUSH1 0x8 MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1887 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x186F JUMP JUMPDEST PUSH2 0x18C9 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x1808 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 PUSH2 0x18F3 PUSH2 0x836 PUSH2 0x1312 SWAP3 PUSH2 0x85D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x18D9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB72 DUP2 PUSH2 0x1911 DUP2 PUSH2 0xBF5 SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0xC01 JUMP JUMPDEST SWAP2 PUSH2 0x1052 SWAP2 PUSH2 0x820 SWAP7 SWAP9 SWAP8 SWAP6 PUSH1 0x80 SWAP6 PUSH2 0x1958 PUSH2 0x1965 SWAP5 PUSH2 0x1948 PUSH1 0xA0 DUP10 ADD SWAP6 PUSH1 0x0 DUP11 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x18FA JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP5 SWAP1 SWAP4 PUSH1 0x0 PUSH2 0x1980 PUSH2 0x980 DUP3 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x1AD7 JUMPI DUP4 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19A6 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x1AB7 JUMPI PUSH2 0x19B4 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP3 EQ DUP1 ISZERO PUSH2 0x1AA4 JUMPI JUMPDEST PUSH2 0x1A84 JUMPI PUSH2 0x19CA SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP3 EQ DUP1 ISZERO PUSH2 0x1A71 JUMPI JUMPDEST PUSH2 0x1A52 JUMPI PUSH2 0x1A4D SWAP3 PUSH2 0x19E6 DUP6 PUSH1 0x3 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x19F2 DUP2 DUP9 PUSH1 0x2 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x19FD DUP3 PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A08 DUP4 PUSH1 0x5 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A19 DUP7 PUSH2 0x1A14 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1316 JUMP JUMPDEST PUSH32 0xA80CADDAB9A93C4DF4F67CD3EE3490472325E6903E29687FC5904CEF451041F9 SWAP7 PUSH2 0x1A44 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1918 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1A62 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4F08DAF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1A7D PUSH2 0x836 PUSH2 0xA06 JUMP JUMPDEST DUP3 GT PUSH2 0x19D3 JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1A95 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC17D8A03 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1AB0 PUSH2 0x836 PUSH2 0x86A JUMP JUMPDEST DUP3 GT PUSH2 0x19BD JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1AC8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1FC71F5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x820 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x16CF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1B0F PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1B1D PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1B4E JUMPI JUMPDEST POP PUSH2 0x1B32 JUMPI PUSH2 0x820 SWAP3 PUSH2 0x1CB6 JUMP JUMPDEST POP POP POP POP PUSH2 0x1B3F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1B6B SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B89 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B91 PUSH2 0xB7C JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1445 PUSH2 0xC20 DUP4 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0x1465 PUSH2 0x1BB3 DUP5 PUSH2 0x1B96 JUMP JUMPDEST SWAP4 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x1BFD JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1BF0 JUMPI JUMPDEST ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0x1BF8 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1C05 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1BCC JUMP JUMPDEST SWAP1 PUSH2 0x8F1 SWAP3 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x1C23 JUMPI JUMPDEST MUL DUP2 ADD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1C2B PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1C1A JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xBF5 SWAP1 DUP4 SWAP1 DUP1 SWAP4 PUSH2 0xC01 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x836 SWAP3 PUSH2 0x1C30 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0x1497 DUP5 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1430 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C76 PUSH2 0xF20 PUSH2 0xF16 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C87 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1C9D PUSH2 0xF57 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1C67 JUMP JUMPDEST SWAP3 SWAP2 DUP2 SWAP3 PUSH1 0x0 PUSH2 0x1CC5 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP6 EQ PUSH2 0x1E17 JUMPI TIMESTAMP DUP4 LT PUSH2 0x1DF9 JUMPI PUSH2 0x1CDB DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP6 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1D9F JUMPI JUMPDEST DUP3 SWAP7 PUSH2 0x1CF8 PUSH2 0x1995 DUP3 DUP10 DUP13 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x1D04 PUSH2 0x1400 DUP7 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x1D7E JUMPI DUP1 PUSH2 0x1D59 PUSH2 0x1214 PUSH2 0x1D39 PUSH2 0x1D21 PUSH2 0x1D78 SWAP6 DUP13 DUP16 PUSH2 0x1C0A JUMP JUMPDEST SWAP1 PUSH2 0x1D2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1D4B PUSH2 0x1D44 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x1D56 DUP4 DUP10 PUSH2 0x1C4A JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH2 0x1D73 DUP8 PUSH2 0x1D6E PUSH2 0x1D6A DUP5 DUP11 PUSH2 0x1C4A JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3044 JUMP JUMPDEST PUSH2 0x1C57 JUMP JUMPDEST SWAP7 PUSH2 0x1CE2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1D90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEB484391 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 DUP8 LT ISZERO PUSH2 0x1DAC JUMPI PUSH2 0x1CE8 JUMP JUMPDEST POP SWAP6 POP POP SWAP3 POP SWAP1 POP PUSH2 0x1DF4 PUSH2 0x1DE1 PUSH32 0x8C852CAD34F901531C4A1328DDFEFBC6152FBD45AA7EB38890E74F351D8493A6 SWAP3 PUSH2 0x85D JUMP JUMPDEST SWAP3 PUSH2 0x1DEB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CA5 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x1E08 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1DA74479 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1E3B PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1E49 PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1E5E JUMPI JUMPDEST POP PUSH2 0x1B32 JUMPI PUSH2 0x820 SWAP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1E7B SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x1E50 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x0 PUSH2 0x1E95 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP5 EQ PUSH2 0x1F7A JUMPI TIMESTAMP DUP4 LT PUSH2 0x1F6C JUMPI PUSH2 0x1EAB DUP5 PUSH2 0x1BA3 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP5 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1F15 JUMPI JUMPDEST PUSH2 0x1F0F DUP4 SWAP7 PUSH2 0x1EFE PUSH2 0x1EC9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH1 0x20 DUP2 ADD PUSH2 0x1214 DUP7 DUP13 DUP4 PUSH1 0x20 DUP2 PUSH2 0x1E81 PUSH2 0xBF5 SWAP4 DUP4 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1EF3 PUSH2 0x1D44 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x1D56 DUP4 DUP13 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1D73 DUP8 PUSH2 0x1D6E PUSH2 0x1D6A DUP5 DUP14 PUSH2 0x1C4A JUMP JUMPDEST SWAP6 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 DUP7 LT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1EB8 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP PUSH2 0x1F67 PUSH2 0x1F5D PUSH2 0x1F57 PUSH32 0xC3C3780ED921778D05400BDFAF133352F1C8CE56E4CE47391118F53A22103CCE SWAP4 PUSH2 0x85D JUMP JUMPDEST SWAP4 PUSH2 0x85D JUMP JUMPDEST SWAP4 PUSH2 0x1DEB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1E08 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1F88 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3D257579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1FAC PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1FBA PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1FCF JUMPI JUMPDEST POP PUSH2 0x1B32 JUMPI PUSH2 0x820 SWAP3 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x1FEC SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x2002 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B91 PUSH2 0x1472 JUMP JUMPDEST CALLDATALOAD PUSH2 0x836 DUP2 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x846 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0xBF5 DUP2 PUSH1 0x14 SWAP4 PUSH2 0x2014 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x0 PUSH2 0x2043 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP6 EQ PUSH2 0x1E17 JUMPI TIMESTAMP DUP4 LT PUSH2 0x1DF9 JUMPI PUSH2 0x2059 DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP6 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x20E5 JUMPI JUMPDEST DUP3 SWAP7 PUSH2 0x207B PUSH2 0x2076 DUP3 DUP12 DUP11 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x200A JUMP JUMPDEST PUSH2 0x2097 PUSH2 0x208A PUSH2 0x980 DUP8 PUSH2 0x1722 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x20D3 JUMPI DUP1 PUSH2 0x1D59 PUSH2 0x20B1 PUSH2 0x2076 PUSH2 0x20CD SWAP5 DUP14 DUP13 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x1D39 PUSH2 0x20BD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1214 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x2027 JUMP JUMPDEST SWAP7 PUSH2 0x2060 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP8 LT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x2066 JUMP JUMPDEST POP SWAP6 POP POP SWAP3 POP SWAP1 POP PUSH2 0x1DF4 PUSH2 0x1DE1 PUSH32 0xA9411F55F4CCD3F63F1F6236481C2F6B385A4221287184E89CA4C40792F8224E SWAP3 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2141 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x214E PUSH2 0x980 PUSH1 0x0 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x21A3 JUMPI PUSH2 0x2175 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0xD36B0989E598A1B05388150A9A8C84925E2710D91910406B8735E01F3ED02817 SWAP2 PUSH2 0x36F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x21C5 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x21E1 PUSH2 0x11BC DUP4 DUP4 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x221D JUMPI DUP2 PUSH2 0x21EF SWAP2 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0x708BD40F8F4D2AD60032CAEA0582161D35C50177CC0B2C575B5D483BD2902CAA SWAP2 PUSH2 0x36F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP PUSH2 0x2229 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2793ED7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2250 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x225A PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ DUP1 ISZERO PUSH2 0x22AA JUMPI JUMPDEST PUSH2 0x22A0 JUMPI PUSH2 0x2272 DUP2 PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0xBFF777C073BD9101DD1E419471FE91C54C9FFE380882BCA8EB1FCF75D6086F77 SWAP2 PUSH2 0x25F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1A95 JUMP JUMPDEST POP PUSH2 0x22B6 PUSH2 0x836 PUSH2 0x86A JUMP JUMPDEST DUP2 GT PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x22D5 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x22DF PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ DUP1 ISZERO PUSH2 0x232F JUMPI JUMPDEST PUSH2 0x2325 JUMPI PUSH2 0x22F7 DUP2 PUSH1 0x5 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0x7D7455C70E1855CFEB6FF84FE7B6D37EFCFDAEE91C05F2E25A55368F50BA7B5A SWAP2 PUSH2 0x25F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1A62 JUMP JUMPDEST POP PUSH2 0x233B PUSH2 0x836 PUSH2 0xA06 JUMP JUMPDEST DUP2 GT PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x22C6 JUMP JUMPDEST SWAP1 PUSH2 0x2354 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x2362 PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2383 JUMPI JUMPDEST POP PUSH2 0x2377 JUMPI PUSH2 0x820 SWAP2 PUSH2 0x24E1 JUMP JUMPDEST POP POP POP PUSH2 0x1B3F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23A0 SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x836 SWAP1 SLOAD PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x23D9 PUSH1 0x1 SWAP2 PUSH2 0x23C7 DUP2 SLOAD SWAP1 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x23E2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x23EA PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x12F1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x241F PUSH2 0x836 PUSH2 0x1312 SWAP4 PUSH2 0xB4D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x23F5 JUMP JUMPDEST SWAP1 PUSH2 0x244F PUSH2 0x820 SWAP3 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x2455 JUMPI JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x23B9 JUMP JUMPDEST SWAP1 PUSH2 0x240E JUMP JUMPDEST PUSH2 0x245D PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x2444 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x14BF JUMPI SUB SWAP1 JUMP JUMPDEST POP PUSH2 0x836 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 PUSH1 0x0 DUP3 JUMPDEST DUP3 DUP3 LT PUSH2 0x2498 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x24C7 PUSH2 0x24C0 PUSH1 0x1 SWAP3 PUSH2 0x24AF DUP9 DUP7 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 ADD SWAP1 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP4 SWAP2 ADD SWAP2 PUSH2 0x247C JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x2601 JUMPI PUSH2 0x2500 PUSH2 0x2076 DUP3 DUP8 DUP7 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2510 PUSH2 0x208A PUSH2 0x980 PUSH1 0x0 PUSH2 0x1722 JUMP JUMPDEST EQ PUSH2 0x25F3 JUMPI PUSH2 0x2523 PUSH2 0x2076 DUP3 DUP8 DUP7 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2533 PUSH2 0x208A PUSH2 0x980 PUSH1 0x3 PUSH2 0x23AF JUMP JUMPDEST EQ PUSH2 0x25D6 JUMPI PUSH2 0x2549 PUSH2 0x427 PUSH2 0x2076 DUP4 DUP9 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x25B9 JUMPI PUSH2 0x24EB SWAP1 PUSH2 0x25B2 SWAP1 PUSH2 0x25AC PUSH2 0x258E PUSH2 0x257E PUSH1 0x6 PUSH2 0x257A DUP10 PUSH2 0x2574 PUSH2 0x2076 DUP9 DUP16 DUP7 JUMPDEST SWAP5 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 PUSH2 0x2427 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2588 PUSH1 0x1 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x25A7 PUSH1 0x9 PUSH2 0x25A1 PUSH2 0x2076 DUP7 DUP14 DUP13 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x24E9 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x25C7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x241D2EDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x25E4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA122BF39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0xE7E9E18EAE0A1664F98BA7E59EDA81692D5802C7E9BD75BB0261F3FC6FD4A493 SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x24D0 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x234B JUMP JUMPDEST SWAP1 PUSH2 0x2650 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x265E PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2673 JUMPI JUMPDEST POP PUSH2 0x2377 JUMPI PUSH2 0x820 SWAP2 PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2690 SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x2665 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x820 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x26C3 DUP3 SLOAD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E2 JUMPI JUMPDEST SUB SWAP1 PUSH2 0x26DF PUSH2 0x26D9 DUP4 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP1 PUSH2 0x26AD JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x26EA PUSH2 0x2696 JUMP JUMPDEST PUSH2 0x26CA JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x27C2 JUMPI PUSH2 0x2714 PUSH2 0x11BC PUSH2 0x427 PUSH2 0x2076 DUP5 DUP10 DUP9 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x27A5 JUMPI PUSH2 0x279E DUP2 PUSH2 0x25AC PUSH2 0x2799 PUSH2 0x2754 PUSH2 0x836 PUSH1 0x0 PUSH2 0x2794 DUP11 PUSH2 0x25A1 PUSH2 0x2076 DUP16 SWAP12 PUSH2 0x26F9 SWAP13 PUSH1 0x9 SWAP5 PUSH2 0x278F PUSH2 0x275F PUSH2 0x275A PUSH2 0x2754 PUSH2 0x2076 DUP8 DUP8 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST DUP10 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x25A7 DUP2 PUSH1 0x6 SWAP14 DUP15 PUSH2 0x244F PUSH2 0x2787 PUSH2 0x2781 PUSH2 0x277B PUSH2 0x257E DUP6 SLOAD SWAP1 JUMP JUMPDEST DUP5 PUSH2 0x23B9 JUMP JUMPDEST SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x177E JUMP JUMPDEST PUSH2 0x26B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x26F7 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x27B3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7C241AD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0xC18397A78D98D67911BE09B9C32315C4B8DB0454529F84F856E61F537494CBFC SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x2647 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x280F PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x28B4 JUMPI PUSH2 0x282E PUSH2 0x2076 DUP3 DUP8 DUP7 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x283E PUSH2 0x208A PUSH2 0x980 PUSH1 0x0 PUSH2 0x1722 JUMP JUMPDEST EQ PUSH2 0x25F3 JUMPI PUSH2 0x2854 PUSH2 0x6EF PUSH2 0x2076 DUP4 DUP9 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2897 JUMPI PUSH2 0x2819 SWAP1 PUSH2 0x2890 SWAP1 PUSH2 0x25AC PUSH2 0x287D PUSH2 0x257E PUSH1 0x7 PUSH2 0x257A DUP10 PUSH2 0x2574 PUSH2 0x2076 DUP9 DUP16 DUP7 PUSH2 0x256E JUMP JUMPDEST PUSH2 0x25A7 PUSH1 0xA PUSH2 0x25A1 PUSH2 0x2076 DUP7 DUP14 DUP13 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x28A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x36650E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0x8FF2887F41C4AF26BBCADF0889537A4641E2D1D6D9FA287FEAF683A76096EFD8 SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x27FF JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x2901 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x29A6 JUMPI PUSH2 0x2926 PUSH2 0x11BC PUSH2 0x6EF PUSH2 0x2076 DUP5 DUP10 DUP9 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2989 JUMPI PUSH2 0x2982 DUP2 PUSH2 0x25AC PUSH2 0x2799 PUSH2 0x2754 PUSH2 0x836 PUSH1 0x0 PUSH2 0x2794 DUP11 PUSH2 0x25A1 PUSH2 0x2076 DUP16 SWAP12 PUSH2 0x290B SWAP13 PUSH1 0xA SWAP5 PUSH2 0x278F PUSH2 0x2966 PUSH2 0x275A PUSH2 0x2754 PUSH2 0x2076 DUP8 DUP8 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x25A7 DUP2 PUSH1 0x7 SWAP14 DUP15 PUSH2 0x244F PUSH2 0x2787 PUSH2 0x2781 PUSH2 0x277B PUSH2 0x257E DUP6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2909 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x2997 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7463712B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0xA520FF964BC029411023E3F0E20BF29E54C023E5E23B0E28D0DE3AE5D4231A9E SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x28F1 JUMP JUMPDEST SWAP1 PUSH2 0x29F8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x29F3 PUSH2 0x2A96 JUMP JUMPDEST PUSH2 0x2A12 JUMP JUMPDEST PUSH2 0x820 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x836 PUSH2 0x2A00 JUMP JUMPDEST SWAP3 PUSH2 0x820 SWAP5 SWAP2 SWAP3 PUSH2 0x2A23 PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST SWAP4 PUSH2 0x2A2C PUSH2 0x2A0A JUMP JUMPDEST SWAP6 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x29E3 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x2 PUSH2 0x85D JUMP JUMPDEST ISZERO PUSH2 0x2A50 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x820 PUSH2 0x2AA3 PUSH1 0x1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x2AB7 PUSH2 0x2AAE PUSH2 0x2A3F JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x820 PUSH2 0x2AB7 PUSH2 0x2ABE JUMP JUMPDEST SWAP1 PUSH2 0x29F8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2AE5 PUSH2 0x2A96 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2AD3 JUMP JUMPDEST SWAP1 PUSH2 0x2B1E PUSH2 0x2B12 PUSH2 0xF16 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B2F JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2B4B PUSH2 0x2B44 PUSH1 0x1 SWAP3 PUSH2 0x24AF DUP8 PUSH2 0x23AF JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x2B22 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH2 0x2B03 JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0xE04 SWAP3 PUSH2 0x2B6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2B53 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x836 PUSH1 0x6 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x7 PUSH2 0x2B77 JUMP JUMPDEST SWAP3 PUSH2 0x2BB1 PUSH1 0x20 PUSH2 0xBF5 SWAP5 PUSH2 0x1E81 PUSH1 0x14 DUP9 PUSH2 0x1E81 DUP3 SWAP12 SWAP11 DUP7 SWAP10 PUSH2 0x2014 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x98C JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x90F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x836 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x2BF7 JUMPI JUMPDEST PUSH2 0x2BEE DUP2 DUP6 PUSH2 0x2BB9 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x2BC6 JUMP JUMPDEST PUSH2 0x2BFF PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2C99 SWAP3 PUSH2 0x2C8B PUSH1 0x40 SWAP4 PUSH2 0x2C24 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2C68 PUSH2 0x2C3D PUSH2 0x2C38 PUSH2 0x2C38 PUSH1 0x3 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST SWAP4 PUSH4 0x2C4EF0D5 SWAP6 PUSH2 0x1214 PUSH2 0x2C50 ADDRESS PUSH2 0xB4D JUMP JUMPDEST SWAP2 PUSH2 0x2C5A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 PUSH2 0x2B94 JUMP JUMPDEST PUSH2 0x2C73 PUSH2 0x1D44 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0x2C7E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2CCE JUMPI JUMPDEST PUSH1 0x0 DUP1 SWAP2 SWAP1 SWAP3 PUSH2 0x2CB4 JUMPI POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F1 SWAP2 POP PUSH2 0x2CC5 RETURNDATASIZE DUP3 PUSH2 0xB93 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x2CD6 PUSH2 0x2C04 JUMP JUMPDEST PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x6 SWAP1 PUSH2 0x2CE6 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2CF5 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x2D50 JUMPI PUSH2 0x2D08 PUSH2 0x275A DUP4 PUSH1 0x9 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x2D14 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ ISZERO SWAP3 DUP4 ISZERO PUSH2 0x2D24 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2D47 SWAP3 SWAP4 POP PUSH2 0x2781 PUSH2 0x208A SWAP3 PUSH2 0x2D3A SWAP3 PUSH2 0x23B9 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ CODESIZE DUP1 DUP1 PUSH2 0x2D1E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SWAP1 PUSH2 0x2D61 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2D70 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x2D50 JUMPI PUSH2 0x2D08 PUSH2 0x275A DUP4 PUSH1 0xA PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x836 PUSH2 0x140 PUSH2 0xBC2 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x836 SWAP2 PUSH2 0x140 DUP2 ADD SWAP2 PUSH2 0x120 SWAP1 PUSH1 0x40 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 ADD MSTORE PUSH2 0x2DD5 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DE4 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DF3 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E02 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E11 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E22 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH2 0x120 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x2D8E JUMP JUMPDEST SWAP4 SWAP5 SWAP6 SWAP1 SWAP6 PUSH2 0x2E57 PUSH2 0x275A DUP7 PUSH1 0x8 PUSH2 0x943 JUMP JUMPDEST TIMESTAMP DUP2 LT PUSH2 0x3023 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x2E6A DUP10 PUSH2 0x85D JUMP JUMPDEST DUP9 EQ DUP1 ISZERO PUSH2 0x300E JUMPI JUMPDEST PUSH2 0x2FEC JUMPI PUSH2 0x2E83 PUSH2 0x980 DUP11 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2FD9 JUMPI PUSH2 0x2E9E PUSH2 0x11BC DUP3 PUSH2 0x2CDB JUMP JUMPDEST PUSH2 0x2FC6 JUMPI PUSH2 0x2EAB DUP10 PUSH2 0x85D JUMP JUMPDEST DUP6 EQ PUSH2 0x2FA4 JUMPI DUP9 SWAP8 PUSH2 0x2EBD PUSH1 0x3 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x2EC6 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x2ECF SWAP1 PUSH2 0xB4D JUMP JUMPDEST SWAP7 PUSH4 0x5C2A802B SWAP7 CALLER PUSH2 0x2EE1 PUSH1 0x5 PUSH2 0x10CB JUMP JUMPDEST SWAP5 PUSH2 0x2EEA PUSH2 0x2D83 JUMP JUMPDEST SWAP12 PUSH2 0x2EF5 SWAP1 DUP15 DUP15 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x2F61 SWAP5 PUSH2 0x2F56 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x2F97 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2E33 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2F8A JUMPI JUMPDEST PUSH2 0x2F73 JUMPI POP JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2F81 RETURNDATASIZE DUP3 PUSH2 0xB93 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x2F92 PUSH2 0x2C04 JUMP JUMPDEST PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x2F9F PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2F46 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x2FB7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x27B3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x2FFF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2E8F359 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x301C PUSH2 0x836 PUSH1 0x4 PUSH2 0x10CB JUMP JUMPDEST DUP9 GT PUSH2 0x2E73 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x3035 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x387B2E55 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x25A7 PUSH2 0x820 SWAP3 PUSH1 0x8 PUSH2 0x943 JUMP INVALID MLOAD CHAINID LOG0 DUP12 0xAF SWAP1 0x25 ORIGIN 0xD0 0xEE 0x2F SWAP1 SWAP10 PUSH18 0x144F12CA32651CD70CBEE1117CDDFB3B3B33 LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE8 PUSH32 0xE65E419580B394CC648A6887356AF0210ACE8C733DC23F090DE2BFC3116C6578 PUSH17 0x6572696D656E74616CF564736F6C634300 ADDMOD 0xC STOP COINBASE ","sourceMap":"376:17904:20:-:0;;;;;;-1:-1:-1;376:17904:20;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;1676:41:6;1716:1;;;:::i;:::-;;;;;;;:::i;:::-;;;:::o;1797:53::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":2122,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":2459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":11193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_string_calldatat_uint256t_uint256":{"entryPoint":2740,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_addresst_uint256_fromMemory":{"entryPoint":11219,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_calldata":{"entryPoint":2172,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_calldata_ptr":{"entryPoint":2248,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_calldatat_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_array_bytes_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_bytes_calldata_dyn_calldatat_uint256":{"entryPoint":2586,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_available_length_bytes":{"entryPoint":3085,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":2338,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_address":{"entryPoint":2472,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes32t_addresst_uint256t_uint256t_uint256":{"entryPoint":3748,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_bytes32t_addresst_uint256t_uint256t_uint256t_uint256t_bytes":{"entryPoint":3185,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_bytes32t_uint256t_address":{"entryPoint":4087,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_bytes4":{"entryPoint":2082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_string_calldata":{"entryPoint":2667,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":2325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":2067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":2521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":11206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256t_uint256":{"entryPoint":4007,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_address_dyn_storage":{"entryPoint":11091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":3552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_string_calldata_uint256_uint256":{"entryPoint":6424,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":8212,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256":{"entryPoint":4149,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":3847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_calldata":{"entryPoint":9424,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn_calldata_ptr":{"entryPoint":9340,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn_memory_ptr":{"entryPoint":3942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_storage":{"entryPoint":11011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":7333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_memory_ptr":{"entryPoint":7271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_to_bytes32_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes_calldata":{"entryPoint":7216,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_address":{"entryPoint":8231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_address_bytes32_uint256_address":{"entryPoint":11156,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_packed_bytes_calldata":{"entryPoint":7231,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_stringliteral_da0d_string_stringliteral_f986_string":{"entryPoint":4435,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":3731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":6394,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":4402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":3425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":3689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_04fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_da0d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f986":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fb06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_DepositBribeParams":{"entryPoint":11827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_DepositBribeParams_memory_ptr":{"entryPoint":11662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_04fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_fb06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_bytes_calldata":{"entryPoint":7097,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":7075,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":5199,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":3010,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_bytes32_dyn":{"entryPoint":7062,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":5176,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_DepositBribeParams_storage_ptr":{"entryPoint":11651,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":7025,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":3030,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_nextElement_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_pop_array_address_dyn_storage_ptr":{"entryPoint":9913,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":9255,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_array_address_dyn_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_bytes_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_address":{"entryPoint":9325,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":8178,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":7178,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_uint256":{"entryPoint":5156,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":5114,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9314,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6057,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":2432,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_0_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_10_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_15_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_2592000_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_2_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":6026,"id":null,"parameterSlots":2,"returnSlots":0},"constant_ADDRESS_LENGTH":{"entryPoint":5768,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":3829,"id":null,"parameterSlots":0,"returnSlots":1},"constant_ENTERED":{"entryPoint":10815,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_PERIODS":{"entryPoint":2154,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_PERIOD_DURATION":{"entryPoint":2566,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":10942,"id":null,"parameterSlots":0,"returnSlots":1},"constant_SYMBOLS":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TEAM_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":2893,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IBribeVault":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_address_dyn_storage_to_array_address_dyn":{"entryPoint":11127,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_address_dyn_storage_to_array_address_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_bytes_to_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_calldata_to_bytes_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":4393,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_BribeMarket_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IBribeVault_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2592000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":5922,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":5909,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":2141,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":5323,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_0448_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_c5d2_to_bytes":{"entryPoint":10762,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_cb29_to_bytes16":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":2884,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IBribeVault":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2864,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":5750,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint8_to_uint256":{"entryPoint":5778,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_address_dyn":{"entryPoint":11101,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3562,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_calldata_to_string":{"entryPoint":6134,"id":null,"parameterSlots":3,"returnSlots":0},"copy_calldata_to_memory":{"entryPoint":3073,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":10752,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3636,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":5298,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3380,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_address":{"entryPoint":3971,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":2387,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":9126,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":4240,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bytes32":{"entryPoint":4292,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2963,"id":null,"parameterSlots":2,"returnSlots":0},"fun__checkRole":{"entryPoint":4382,"id":92,"parameterSlots":1,"returnSlots":0},"fun__revokeRole":{"entryPoint":5004,"id":314,"parameterSlots":2,"returnSlots":0},"fun_addBlacklistedVoters":{"entryPoint":10471,"id":6113,"parameterSlots":2,"returnSlots":0},"fun_addBlacklistedVoters_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_addWhitelistedTokens":{"entryPoint":9789,"id":5953,"parameterSlots":2,"returnSlots":0},"fun_addWhitelistedTokens_inner":{"entryPoint":9441,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":4526,"id":131,"parameterSlots":2,"returnSlots":0},"fun_depositBribe":{"entryPoint":11844,"id":6470,"parameterSlots":7,"returnSlots":0},"fun_depositBribeWithPermit":{"entryPoint":10996,"id":6256,"parameterSlots":7,"returnSlots":0},"fun_depositBribeWithPermit_inner":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":0},"fun_depositBribe_6225":{"entryPoint":10802,"id":6225,"parameterSlots":5,"returnSlots":0},"fun_depositBribe_inner":{"entryPoint":10770,"id":null,"parameterSlots":5,"returnSlots":0},"fun_getBlacklistedVoters":{"entryPoint":11146,"id":6276,"parameterSlots":0,"returnSlots":1},"fun_getBribe":{"entryPoint":11281,"id":6313,"parameterSlots":3,"returnSlots":2},"fun_getRoleAdmin":{"entryPoint":4309,"id":146,"parameterSlots":1,"returnSlots":1},"fun_getWhitelistedTokens":{"entryPoint":11136,"id":6266,"parameterSlots":0,"returnSlots":1},"fun_grantRole":{"entryPoint":4886,"id":283,"parameterSlots":2,"returnSlots":0},"fun_grantRole_166":{"entryPoint":4372,"id":166,"parameterSlots":2,"returnSlots":0},"fun_grantRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_grantTeamRole":{"entryPoint":8621,"id":5775,"parameterSlots":1,"returnSlots":0},"fun_grantTeamRole_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_hasRole":{"entryPoint":4261,"id":79,"parameterSlots":2,"returnSlots":1},"fun_initialize":{"entryPoint":6903,"id":5473,"parameterSlots":6,"returnSlots":0},"fun_initialize_inner":{"entryPoint":6509,"id":null,"parameterSlots":6,"returnSlots":0},"fun_isBlacklistedVoter":{"entryPoint":11606,"id":6371,"parameterSlots":1,"returnSlots":1},"fun_isWhitelistedToken":{"entryPoint":11483,"id":6342,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":10952,"id":825,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":10902,"id":817,"parameterSlots":0,"returnSlots":0},"fun_removeBlacklistedVoters":{"entryPoint":10713,"id":6198,"parameterSlots":2,"returnSlots":0},"fun_removeBlacklistedVoters_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_removeWhitelistedTokens":{"entryPoint":10229,"id":6037,"parameterSlots":2,"returnSlots":0},"fun_removeWhitelistedTokens_inner":{"entryPoint":9967,"id":null,"parameterSlots":2,"returnSlots":0},"fun_renounceRole":{"entryPoint":4806,"id":209,"parameterSlots":2,"returnSlots":0},"fun_revokeRole":{"entryPoint":4695,"id":186,"parameterSlots":2,"returnSlots":0},"fun_revokeRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_revokeTeamRole":{"entryPoint":8760,"id":5805,"parameterSlots":1,"returnSlots":0},"fun_revokeTeamRole_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setMaxPeriods":{"entryPoint":8893,"id":5836,"parameterSlots":1,"returnSlots":0},"fun_setMaxPeriods_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setPeriodDuration":{"entryPoint":9026,"id":5867,"parameterSlots":1,"returnSlots":0},"fun_setPeriodDuration_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setProposal":{"entryPoint":12356,"id":6485,"parameterSlots":2,"returnSlots":0},"fun_setProposals":{"entryPoint":7718,"id":5568,"parameterSlots":3,"returnSlots":0},"fun_setProposalsByAddress":{"entryPoint":8487,"id":5744,"parameterSlots":3,"returnSlots":0},"fun_setProposalsByAddress_inner":{"entryPoint":8243,"id":null,"parameterSlots":3,"returnSlots":0},"fun_setProposalsById":{"entryPoint":8087,"id":5647,"parameterSlots":3,"returnSlots":0},"fun_setProposalsById_inner":{"entryPoint":7815,"id":null,"parameterSlots":3,"returnSlots":0},"fun_setProposals_inner":{"entryPoint":7350,"id":null,"parameterSlots":3,"returnSlots":0},"fun_supportsInterface":{"entryPoint":4182,"id":60,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_2467":{"entryPoint":null,"id":2467,"parameterSlots":1,"returnSlots":1},"fun_toHexString":{"entryPoint":5794,"id":1890,"parameterSlots":1,"returnSlots":1},"fun_toHexString_1870":{"entryPoint":5442,"id":1870,"parameterSlots":2,"returnSlots":1},"getter_fun_BRIBE_VAULT":{"entryPoint":3995,"id":5243,"parameterSlots":0,"returnSlots":1},"getter_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":3839,"id":27,"parameterSlots":0,"returnSlots":1},"getter_fun_MAX_PERIODS":{"entryPoint":2164,"id":5236,"parameterSlots":0,"returnSlots":1},"getter_fun_MAX_PERIOD_DURATION":{"entryPoint":2578,"id":5239,"parameterSlots":0,"returnSlots":1},"getter_fun_PROTOCOL":{"entryPoint":3624,"id":5241,"parameterSlots":0,"returnSlots":1},"getter_fun_TEAM_ROLE":{"entryPoint":null,"id":5233,"parameterSlots":0,"returnSlots":1},"getter_fun_indexOfBlacklistedVoter":{"entryPoint":4069,"id":5265,"parameterSlots":1,"returnSlots":1},"getter_fun_indexOfWhitelistedToken":{"entryPoint":2912,"id":5261,"parameterSlots":1,"returnSlots":1},"getter_fun_maxPeriods":{"entryPoint":2554,"id":5245,"parameterSlots":0,"returnSlots":1},"getter_fun_periodDuration":{"entryPoint":3959,"id":5247,"parameterSlots":0,"returnSlots":1},"getter_fun_proposalDeadlines":{"entryPoint":2409,"id":5257,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":7255,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":2902,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32":{"entryPoint":2371,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":5257,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":7242,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":10963,"id":802,"parameterSlots":7,"returnSlots":0},"modifier_nonReentrant_6212":{"entryPoint":10723,"id":802,"parameterSlots":5,"returnSlots":0},"modifier_onlyAuthorized":{"entryPoint":6917,"id":5361,"parameterSlots":3,"returnSlots":0},"modifier_onlyAuthorized_5578":{"entryPoint":7729,"id":5361,"parameterSlots":3,"returnSlots":0},"modifier_onlyAuthorized_5656":{"entryPoint":8098,"id":5361,"parameterSlots":3,"returnSlots":0},"modifier_onlyAuthorized_5874":{"entryPoint":9035,"id":5361,"parameterSlots":2,"returnSlots":0},"modifier_onlyAuthorized_5960":{"entryPoint":9799,"id":5361,"parameterSlots":2,"returnSlots":0},"modifier_onlyInitializer":{"entryPoint":5839,"id":5376,"parameterSlots":6,"returnSlots":0},"modifier_onlyRole":{"entryPoint":4340,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_178":{"entryPoint":4668,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_5751":{"entryPoint":8498,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_5782":{"entryPoint":8630,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_5812":{"entryPoint":8769,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_5843":{"entryPoint":8902,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6045":{"entryPoint":10239,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_6121":{"entryPoint":10481,"id":38,"parameterSlots":2,"returnSlots":0},"panic_error_0x00":{"entryPoint":3334,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":5091,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3357,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":9878,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5234,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2940,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":8202,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_dynamic_split_string":{"entryPoint":3595,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":3984,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":2398,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":9135,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":4251,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":4299,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_04fc":{"entryPoint":5361,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ebf7":{"entryPoint":10825,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fb06":{"entryPoint":4705,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":2041,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":11268,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint8":{"entryPoint":5336,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_address_dyn_ptr":{"entryPoint":9145,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_address":{"entryPoint":9901,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":6014,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":5931,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic20":{"entryPoint":9205,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":5969,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":6361,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":4844,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":9230,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":5946,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":4859,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_string_calldata_to_string":{"entryPoint":6350,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":6371,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":5989,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":2444,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":2319,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":2047,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_bytes1":{"entryPoint":5194,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes32":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610018575b6100166107f9565b005b60003560e01c806301ffc9a7146107cf5780630a254640146107a5578063114e6e731461077d5780632129831014610753578063248a9ca3146107295780632f2ff15d146107015780632fa4d218146106d757806336568abe146106af57806342a835511461068757806349d5e604146106515780635155bafa146106275780635699fbad146106005780637c2d6e01146105d95780637fb84bed146105af57806384f389a8146105875780638d23507f146105595780638e8efaee1461052f5780638fef58911461050157806391b9b827146104cb57806391d14854146104a05780639970227014610475578063a217fddf1461044b578063ab37f4861461040f578063b0b38baa146103e5578063b470aade146103bb578063bcec454f14610393578063be309bca1461034e578063cd698e6914610326578063d547741f146102fe578063d59551d2146102d6578063da606ce2146102af578063e26f790014610279578063ea24a7681461023e578063ed99c0d114610216578063f52c395a146101ef5763f7e6b46b146101ae5761000e565b346101e2575b6101c86101c2366004610ff7565b91612c11565b906101de6101d560405190565b92839283611035565b0390f35b6101ea6107f9565b6101b4565b5034610209575b6100166102043660046109d9565b6121ad565b6102116107f9565b6101f6565b5034610231575b61001661022b366004610a1a565b91612127565b6102396107f9565b61021d565b503461026c575b6101de61025b6102563660046109d9565b610fe5565b6040515b9182918290815260200190565b6102746107f9565b610245565b50346102a2575b61028b36600461084a565b6101de610296612b80565b60405191829182610f66565b6102aa6107f9565b610280565b50346102c9575b6100166102c4366004610922565b6122bd565b6102d16107f9565b6102b6565b50346102f1575b6100166102eb366004610fa7565b91611f97565b6102f96107f9565b6102dd565b5034610319575b6100166103133660046109a8565b90611257565b6103216107f9565b610305565b5034610341575b61001661033b3660046108c8565b9061263d565b6103496107f9565b61032d565b5034610386575b61036036600461084a565b6101de61036b610f9b565b6040515b918291826001600160a01b03909116815260200190565b61038e6107f9565b610355565b50346103ae575b6100166103a83660046108c8565b906127f5565b6103b66107f9565b61039a565b50346103d8575b6103cd36600461084a565b6101de61025b610f77565b6103e06107f9565b6103c2565b5034610402575b6103f736600461084a565b6101de610296612b8a565b61040a6107f9565b6103ec565b503461043e575b6101de61042c6104273660046109d9565b612cdb565b60405191829182901515815260200190565b6104466107f9565b610416565b5034610468575b61045d36600461084a565b6101de61025b610eff565b6104706107f9565b610452565b5034610493575b61001661048a366004610ea4565b93929092612a32565b61049b6107f9565b61047c565b50346104be575b6101de61042c6104b83660046109a8565b906110a5565b6104c66107f9565b6104a7565b50346104f4575b6104dd36600461084a565b6101de6104e8610e28565b60405191829182610e93565b6104fc6107f9565b6104d2565b5034610522575b610016610516366004610c71565b95949094939193612af4565b61052a6107f9565b610508565b503461054c575b6101de61025b6105473660046109d9565b610b60565b6105546107f9565b610536565b503461057a575b61001661056e366004610ab4565b94939093929192611af7565b6105826107f9565b610560565b50346105a2575b61001661059c366004610a1a565b91611e26565b6105aa6107f9565b61058e565b50346105cc575b6105c136600461084a565b6101de61025b610a12565b6105d46107f9565b6105b6565b50346105f3575b6100166105ee366004610922565b612342565b6105fb6107f9565b6105e0565b503461061a575b6100166106153660046109d9565b612238565b6106226107f9565b610607565b5034610644575b61063936600461084a565b6101de61025b6109fa565b61064c6107f9565b61062e565b503461067a575b61066336600461084a565b6101de60008051602061305483398151915261025b565b6106826107f9565b610658565b50346106a2575b61001661069c3660046108c8565b906129d9565b6106aa6107f9565b61068e565b50346106ca575b6100166106c43660046109a8565b906112c6565b6106d26107f9565b6106b6565b50346106f4575b6101de61042c6106ef3660046109d9565b612d56565b6106fc6107f9565b6106de565b503461071c575b6100166107163660046109a8565b90611114565b6107246107f9565b610708565b5034610746575b6101de61025b610741366004610922565b6110d5565b61074e6107f9565b610730565b5034610770575b6101de61025b61076b366004610922565b610969565b6107786107f9565b61075a565b5034610798575b6100166107923660046108c8565b906128e7565b6107a06107f9565b610784565b50346107c2575b6107b736600461084a565b6101de61025b610874565b6107ca6107f9565b6107ac565b50346107ec575b6101de61042c6107e7366004610822565b611056565b6107f46107f9565b6107d6565b50600080fd5b6001600160e01b031981165b14156107f957565b90503590610820826107ff565b565b906108369160208183031261083957610813565b90565b6108416107f9565b610813565b9052565b600091031261085557565b6108206107f9565b6108366108366108369290565b610836600a61085d565b61083661086a565b909182601f830112156108bb575b602082359267ffffffffffffffff84116108ae575b01926020830284011161085557565b6108b66107f9565b61089f565b6108c36107f9565b61088a565b906108f191602081830312610902575b80359067ffffffffffffffff82116108f5575b0161087c565b9091565b6108fd6107f9565b6108eb565b61090a6107f9565b6108d8565b8061080b565b905035906108208261090f565b906108369160208183031261093657610915565b61093e6107f9565b610915565b905b600052602052604060002090565b610836916008021c81565b906108369154610953565b6108369061097b600891600092610943565b61095e565b6001600160a01b031690565b6001600160a01b03811661080b565b905035906108208261098c565b9190610836906040848203126109cc575b6109c38185610915565b9360200161099b565b6109d46107f9565b6109b9565b90610836916020818303126109ed5761099b565b6109f56107f9565b61099b565b6108366000600461095e565b61083662278d0061085d565b610836610a06565b91604083830312610a5e575b610836610a4683853567ffffffffffffffff8111610a51575b860161087c565b939094602001610915565b610a596107f9565b610a3f565b610a666107f9565b610a26565b909182601f83011215610aa7575b602082359267ffffffffffffffff8411610a9a575b01928284011161085557565b610aa26107f9565b610a8e565b610aaf6107f9565b610a79565b919060a083820312610b23575b610836610ace828561099b565b93610adc836020830161099b565b93610afd84604084013567ffffffffffffffff8111610b16575b8401610a6b565b939094610b0d8160608601610915565b93608001610915565b610b1e6107f9565b610af6565b610b2b6107f9565b610ac1565b61083690610980906001600160a01b031682565b61083690610b30565b61083690610b44565b9061094590610b4d565b6108369061097b600991600092610b56565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610bb557604052565b610bbd610b7c565b604052565b90610820610bcf60405190565b9283610b93565b610bf560209167ffffffffffffffff8111610bf957601f01601f191690565b0190565b610b72610b7c565b90826000939282370152565b92919061082091610c25610c2083610bd6565b610bc2565b94828652602086019183820111610c3b57610c01565b610c436107f9565b610c01565b906108369181601f82011215610c64575b602081359101610c0d565b610c6c6107f9565b610c59565b60e081830312610cf9575b610c868282610915565b92610c94836020840161099b565b92610ca28160408501610915565b92610cb08260608301610915565b92610836610cc18460808501610915565b93610ccf8160a08601610915565b9360c08101359067ffffffffffffffff8211610cec575b01610c48565b610cf46107f9565b610ce6565b610d016107f9565b610c7c565b50634e487b7160e01b600052600060045260246000fd5b50634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610d57575b6020831014610d4f57565b610820610d1d565b91607f1691610d44565b80546000939291610d7e610d7483610d34565b8085529360200190565b9160018116908115610dd05750600114610d9757505050565b610daa9192939450600052602060002090565b916000925b818410610dbc5750500190565b805484840152602090930192600101610daf565b60ff191683525050602001925050565b9061083691610d61565b90610820610e0492610dfb60405190565b93848092610de0565b0383610b93565b60006108369211610e1b57610dea565b610e23610d06565b610dea565b61083660006002610e0b565b918091926000905b828210610e54575011610e4d575050565b6000910152565b91508060209183015181860152018291610e3c565b610e8a610b72602093610bf593610e7e815190565b80835293849260200190565b95869101610e34565b602080825261083692910190610e69565b919060a083820312610ee8575b610ebb8184610915565b92610ec9826020830161099b565b92610836610eda8460408501610915565b93610b0d8160608601610915565b610ef06107f9565b610eb1565b610836600061085d565b610836610ef5565b90610f27610f20610f16845190565b8084529260200190565b9260200190565b9060005b818110610f385750505090565b909192610f5e610f5760019286516001600160a01b0316815260200190565b9460200190565b929101610f2b565b602080825261083692910190610f07565b6108366000600561095e565b610836916008021c610980565b906108369154610f83565b61083660006003610f90565b9091606082840312610fd8575b610836610fc18484610915565b93610fcf8160208601610915565b93604001610915565b610fe06107f9565b610fb4565b6108369061097b600a91600092610b56565b9091606082840312611028575b6108366110118484610915565b9361101f8160208601610915565b9360400161099b565b6110306107f9565b611004565b6001600160a01b0390911681526040810192916108209160200152565b0152565b637965db0b60e01b6001600160e01b0319821614908115611075575090565b61083691506001600160e01b0319166301ffc9a760e01b1490565b610836905b60ff1690565b6108369054611090565b610836916110bf916110b960009182610943565b01610b56565b61109b565b6108369081565b61083690546110c4565b60016110ee610836926110e6600090565b506000610943565b016110cb565b906108209161110a611105826110d5565b61111e565b9061082091611316565b90610820916110f4565b6108209033906111ae565b6108369061085d565b610bf561114a92602092611144815190565b94859290565b93849101610e34565b611191610836939261118b61118b937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90611132565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b906111c06111bc82846110a5565b1590565b6111c8575050565b6112389250906108366111e66111e0611220946116a2565b92611129565b6111fb6020916111f58361085d565b90611542565b9261121461120860405190565b94859384019283611153565b90810382520382610b93565b60405162461bcd60e51b815291829160048301610e93565b0390fd5b906108209161124d611105826110d5565b906108209161138c565b906108209161123c565b1561126857565b5060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b61082091906112e76112d733610980565b6001600160a01b03841614611261565b61138c565b9060ff905b9181191691161790565b9061130b61083661131292151590565b82546112ec565b9055565b906113246111bc82846110a5565b61132c575050565b61134660016113418360006110b98782610943565b6112fb565b339061137c6113766113767f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b92610b4d565b9261138660405190565b600090a4565b9061139781836110a5565b61139f575050565b6113b3600061134183826110b98782610943565b339061137c6113766113767ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b50634e487b7160e01b600052601160045260246000fd5b90611404565b9190565b908060001904821181151516611418570290565b6114206113e3565b0290565b81198111611430570190565b610bf56113e3565b90611445610c2083610bd6565b918252565b369037565b9061082061146561145f84611438565b93610bd6565b601f19016020840161144a565b50634e487b7160e01b600052603260045260246000fd5b906001602091611497845190565b8110156114a5575b02010190565b6114ad611472565b61149f565b60019080156114bf570390565b6114c76113e3565b0390565b6110956108366108369290565b610836906114ec6114006108369460ff1690565b901c90565b156114f857565b5060405162461bcd60e51b815280611238600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b919060029061157361156e61155f8361155a8661085d565b6113fa565b6115688561085d565b90611424565b61144f565b91600091603061158b6115858561085d565b86611489565b536115c36115ba600f60fb1b9261155a6001958695881a6115b46115ae8861085d565b8b611489565b5361085d565b6115688361085d565b915b6115e6575b505061083692936115e06114006108369361085d565b146114f1565b90946115f18261085d565b8611156116705761165d611657839261163a61161d6f181899199a1a9b1b9c1cb0b131b232b360811b90565b611627600f61085d565b83166010811015611663575b1a60f81b90565b861a6116468a89611489565b5361165160046114cb565b906114d8565b966114b2565b916115c5565b61166b611472565b611633565b946115ca565b6108369081906001600160a01b031681565b61083660146114cb565b6108366108366108369260ff1690565b6116bf6116ba610836926116b4606090565b50610b44565b611676565b6111f56116ca611688565b611692565b94939291906116de600b61109b565b6116f7576116eb9561196d565b6108206001600b6112fb565b5050505050505061170760405190565b62dc149f60e41b8152600490fd5b6109806108366108369290565b61083690611715565b906001600160a01b03906112f1565b9061174a61083661131292610b4d565b825461172b565b9160001960089290920291821b911b6112f1565b91906117766108366113129361085d565b908354611751565b61082091600091611765565b818110611795575050565b806117a3600060019361177e565b0161178a565b9190601f81116117b857505050565b6117ca61082093600052602060002090565b906020601f8401819004830193106117ec575b6020601f90910104019061178a565b90915081906117dd565b919067ffffffffffffffff82116118c1575b61181c826118168554610d34565b856117a9565b600090601f83116001146118575761131292916000918361184c575b5050600019600883021c1916906002021790565b013590503880611838565b601f1983169161186c85600052602060002090565b92815b8181106118a957509160029391856001969410611890575b50505002019055565b0135600019601f84166008021c19169055388080611887565b9193602060018192878701358155019501920161186f565b6118c9610b7c565b611808565b9061082092916117f6565b90600019906112f1565b906118f36108366113129261085d565b82546118d9565b9190610b728161191181610bf59560209181520190565b8095610c01565b9161105291610820969897956080956119586119659461194860a089019560008a01906001600160a01b03169052565b6001600160a01b03166020880152565b85830360408701526118fa565b966060830152565b9291949093600061198061098082611722565b6001600160a01b03861614611ad7578361199a565b905090565b6119a66114008361085d565b14611ab7576119b48161085d565b82148015611aa4575b611a84576119ca9061085d565b82148015611a71575b611a5257611a4d926119e685600361173a565b6119f2818860026118ce565b6119fd8260046118e3565b611a088360056118e3565b611a1986611a14610ef5565b611316565b7fa80caddab9a93c4df4f67cd3ee3490472325e6903e29687fc5904cef451041f996611a4460405190565b96879687611918565b0390a1565b50505050505050611a6260405190565b634f08daf360e11b8152600490fd5b50611a7d610836610a06565b82116119d3565b5050505050505050611a9560405190565b63c17d8a0360e01b8152600490fd5b50611ab061083661086a565b82116119bd565b5050505050505050611ac860405190565b6301fc71f560e21b8152600490fd5b5050505050505050611ae860405190565b63e6c4247b60e01b8152600490fd5b9061082095949392916116cf565b9190611b0f610ef5565b611b1d6111bc3380936110a5565b9081611b4e575b50611b325761082092611cb6565b50505050611b3f60405190565b63ea8e4eb560e01b8152600490fd5b611b6b91506111bc906000805160206130548339815191526110a5565b38611b24565b6020809167ffffffffffffffff8111611b8957020190565b611b91610b7c565b020190565b90611445610c2083611b71565b90610820611465611bb384611b96565b93611b71565b903590601e193682900301821215611bfd575b01602081359167ffffffffffffffff8311611bf0575b019136829003831361085557565b611bf86107f9565b611be2565b611c056107f9565b611bcc565b906108f192602091811015611c23575b02810190611bb9565b611c2b611472565b611c1a565b9091610bf59083908093610c01565b909161083692611c30565b9060208091611497845190565b6001906000198114611430570190565b90611c76610f20610f16845190565b9060005b818110611c875750505090565b909192611c9d610f576001928651815260200190565b929101611c7a565b602080825261083692910190611c67565b929181926000611cc58161085d565b8514611e1757428310611df957611cdb85611ba3565b9160009560015b15611d9f575b8296611cf861199582898c611c0a565b611d046114008661085d565b14611d7e5780611d59611214611d39611d21611d78958c8f611c0a565b90611d2b60405190565b938492602084019283611c3f565b611d4b611d44825190565b9160200190565b20611d568389611c4a565b52565b611d7387611d6e611d6a848a611c4a565b5190565b613044565b611c57565b96611ce2565b505050505050505050611d9060405190565b63eb48439160e01b8152600490fd5b80871015611dac57611ce8565b5095505092509050611df4611de17f8c852cad34f901531c4a1328ddfefbc6152fbd45aa7eb38890e74f351d8493a69261085d565b92611deb60405190565b91829182611ca5565b0390a2565b505050505050611e0860405190565b631da7447960e21b8152600490fd5b505050505050611ae860405190565b906108209291611b05565b9190611e3b610ef5565b611e496111bc3380936110a5565b9081611e5e575b50611b325761082092611e87565b611e7b91506111bc906000805160206130548339815191526110a5565b38611e50565b01918252565b9190916000611e958161085d565b8414611f7a57428310611f6c57611eab84611ba3565b9460009460015b15611f15575b611f0f8396611efe611ec960405190565b611ee88160208101611214868c83602081611e81610bf5938396959052565b611ef3611d44825190565b20611d56838c611c4a565b611d7387611d6e611d6a848d611c4a565b95611eb2565b80861015611f2257611eb8565b5094935050611f67611f5d611f577fc3c3780ed921778d05400bdfaf133352f1c8ce56e4ce47391118f53a22103cce9361085d565b9361085d565b93611deb60405190565b0390a3565b5050505050611e0860405190565b5050505050611f8860405190565b633d25757960e01b8152600490fd5b906108209291611e31565b9190611fac610ef5565b611fba6111bc3380936110a5565b9081611fcf575b50611b325761082092612033565b611fec91506111bc906000805160206130548339815191526110a5565b38611fc1565b9160209181101561200257020190565b611b91611472565b356108368161098c565b610846906001600160a01b031660601b90565b610bf581601493612014565b909291839260006120438161085d565b8514611e1757428310611df95761205985611ba3565b9160009560015b156120e5575b829661207b612076828b8a611ff2565b61200a565b61209761208a61098087611722565b916001600160a01b031690565b146120d35780611d596120b16120766120cd948d8c611ff2565b611d396120bd60405190565b8092611214602083019182612027565b96612060565b505050505050505050611ae860405190565b808710156120f257612066565b5095505092509050611df4611de17fa9411f55f4ccd3f63f1f6236481c2f6b385a4221287184e89ca4c40792f8224e9261085d565b906108209291611fa2565b61082090612141611105610ef5565b61214e6109806000611722565b6001600160a01b038216146121a35761217581600080516020613054833981519152611316565b611a4d7fd36b0989e598a1b05388150a9a8c84925e2710d91910406b8735e01f3ed028179161036f60405190565b5050604051611ae8565b61082090612132565b610820906121c5611105610ef5565b6000805160206130548339815191526121e16111bc83836110a5565b61221d57816121ef9161138c565b611a4d7f708bd40f8f4d2ad60032caea0582161d35c50177cc0b2c575b5d483bd2902caa9161036f60405190565b50505061222960405190565b632793ed7d60e01b8152600490fd5b610820906121b6565b61082090612250611105610ef5565b61225a600061085d565b811480156122aa575b6122a0576122728160046118e3565b611a4d7fbff777c073bd9101dd1e419471fe91c54c9ffe380882bca8eb1fcf75d6086f779161025f60405190565b5050604051611a95565b506122b661083661086a565b8111612263565b61082090612241565b610820906122d5611105610ef5565b6122df600061085d565b8114801561232f575b612325576122f78160056118e3565b611a4d7f7d7455c70e1855cfeb6ff84fe7b6d37efcfdaee91c05f2e25a55368f50ba7b5a9161025f60405190565b5050604051611a62565b5061233b610836610a06565b81116122e8565b610820906122c6565b90612354610ef5565b6123626111bc3380936110a5565b9081612383575b5061237757610820916124e1565b505050611b3f60405190565b6123a091506111bc906000805160206130548339815191526110a5565b38612369565b61083690610980565b61083690546123a6565b6123d96001916123c7815490565b8410156123e257600052602060002090565b91020190600090565b6123ea611472565b600052602060002090565b916001600160a01b0360089290920291821b911b6112f1565b919061241f61083661131293610b4d565b9083546123f5565b9061244f6108209280549068010000000000000000821015612455575b6001820181556123b9565b9061240e565b61245d610b7c565b612444565b8181106114bf570390565b5061083690602081019061099b565b818352602090920191906000825b828210612498575050505090565b909192936124c76124c06001926124af888661246d565b6001600160a01b0316815260200190565b9560200190565b9392019061248a565b60208082526108369391019161247c565b909190829160005b835b81101561260157612500612076828786611ff2565b61251061208a6109806000611722565b146125f357612523612076828786611ff2565b61253361208a61098060036123af565b146125d657612549610427612076838887611ff2565b6125b9576124eb906125b2906125ac61258e61257e600661257a89612574612076888f865b94611ff2565b90612427565b5490565b612588600161085d565b90612462565b6125a760096125a1612076868d8c611ff2565b90610b56565b6118e3565b60010190565b90506124e9565b50505050506125c760405190565b63241d2edf60e01b8152600490fd5b50505050506125e460405190565b63a122bf3960e01b8152600490fd5b5050505050611ae860405190565b50929091507fe7e9e18eae0a1664f98ba7e59eda81692d5802c7e9bd75bb0261f3fc6fd4a49391611a4d61263460405190565b928392836124d0565b906108209161234b565b90612650610ef5565b61265e6111bc3380936110a5565b9081612673575b5061237757610820916126ef565b61269091506111bc906000805160206130548339815191526110a5565b38612665565b50634e487b7160e01b600052603160045260246000fd5b6108209160009161240e565b60016126c3825490565b80156126e2575b03906126df6126d983836123b9565b906126ad565b55565b6126ea612696565b6126ca565b909190829160005b835b8110156127c2576127146111bc610427612076848988611ff2565b6127a55761279e816125ac61279961275461083660006127948a6125a16120768f9b6126f99c60099461278f61275f61275a612754612076878787611ff2565b89610b56565b6110cb565b6125a78160069d8e61244f61278761278161277b61257e855490565b846123b9565b90610f90565b9384926123b9565b611ff2565b61177e565b6126b9565b90506126f7565b50505050506127b360405190565b6307c241ad60e51b8152600490fd5b50929091507fc18397a78d98d67911be09b9c32315c4b8db0454529f84f856e61f537494cbfc91611a4d61263460405190565b9061082091612647565b906108209161280f611105610ef5565b909190829160005b835b8110156128b45761282e612076828786611ff2565b61283e61208a6109806000611722565b146125f3576128546106ef612076838887611ff2565b6128975761281990612890906125ac61287d61257e600761257a89612574612076888f8661256e565b6125a7600a6125a1612076868d8c611ff2565b9050612817565b50505050506128a560405190565b6336650e8f60e11b8152600490fd5b50929091507f8ff2887f41c4af26bbcadf0889537a4641e2d1d6d9fa287feaf683a76096efd891611a4d61263460405190565b90610820916127ff565b9061082091612901611105610ef5565b909190829160005b835b8110156129a6576129266111bc6106ef612076848988611ff2565b61298957612982816125ac61279961275461083660006127948a6125a16120768f9b61290b9c600a9461278f61296661275a612754612076878787611ff2565b6125a78160079d8e61244f61278761278161277b61257e855490565b9050612909565b505050505061299760405190565b637463712b60e01b8152600490fd5b50929091507fa520ff964bc029411023e3f0e20bf29e54c023e5e23b0e28d0de3ae5d4231a9e91611a4d61263460405190565b90610820916128f1565b906129f8949392916129f3612a96565b612a12565b610820612ac8565b6108366000611438565b610836612a00565b92610820949192612a23600061085d565b93612a2c612a0a565b95612e44565b90610820949392916129e3565b610836600261085d565b15612a5057565b5060405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b610820612aa360016110cb565b612ab7612aae612a3f565b91821415612a49565b60016118e3565b610836600161085d565b610820612ab7612abe565b906129f8969594939291612ae5612a96565b90610820969594939291612e44565b90610820969594939291612ad3565b90612b1e612b12610f16845490565b92600052602060002090565b9060005b818110612b2f5750505090565b909192612b4b612b446001926124af876123af565b9460010190565b929101612b22565b9061083691612b03565b90610820610e0492612b6e60405190565b93848092612b53565b61083690612b5d565b6108366006612b77565b6108366007612b77565b92612bb16020610bf594611e81601488611e81829b9a8699612014565b018092612014565b905051906108208261098c565b905051906108208261090f565b919061083690604084820312612bf7575b612bee8185612bb9565b93602001612bc6565b612bff6107f9565b612be4565b506040513d6000823e3d90fd5b91612c9992612c8b604093612c24600090565b50612c68612c3d612c38612c3860036123af565b610b4d565b93632c4ef0d595611214612c5030610b4d565b91612c5a60405190565b958694602086019485612b94565b612c73611d44825190565b2092612c7e60405190565b9586948593849360e01b90565b835260048301526024820190565b03915afa908115612cce575b600080919092612cb457509091565b90506108f19150612cc53d82610b93565b3d810190612bd3565b612cd6612c04565b612ca5565b600690612ce6825490565b600090612cf56114008361085d565b14612d5057612d0861275a836009610b56565b612d146114008361085d565b1415928315612d24575b50505090565b612d4792935061278161208a92612d3a926123b9565b926001600160a01b031690565b14388080612d1e565b91505090565b600790612d61825490565b600090612d706114008361085d565b14612d5057612d0861275a83600a610b56565b610836610140610bc2565b805182526020808201516001600160a01b03169083015261083691610140810191610120906040818101516001600160a01b031690840152612dd560608201516060850152565b612de460808201516080850152565b612df360a082015160a0850152565b612e0260c082015160c0850152565b612e1160e082015160e0850152565b612e22610100820151610100850152565b015190610120818403910152610e69565b602080825261083692910190612d8e565b9394959095612e5761275a866008610943565b42811061302357600097612e6a8961085d565b8814801561300e575b612fec57612e836109808a611722565b6001600160a01b03821614612fd957612e9e6111bc82612cdb565b612fc657612eab8961085d565b8514612fa4578897612ebd60036123af565b612ec690610b4d565b612ecf90610b4d565b96635c2a802b9633612ee160056110cb565b94612eea612d83565b9b612ef5908e8e0152565b6001600160a01b031660208c01526001600160a01b031660408b015260608a0152608089015260a088015260c087015260e0860152610100850152610120840152612f6194612f5691833b15612f97575b6040519687958694859360e01b90565b835260048301612e33565b03925af18015612f8a575b612f735750565b61082090612f813d82610b93565b3d81019061084a565b612f92612c04565b612f6c565b612f9f6107f9565b612f46565b50505050505050505050612fb760405190565b63162908e360e11b8152600490fd5b505050505050505050506127b360405190565b50505050505050505050611ae860405190565b50505050505050505050612fff60405190565b6302e8f35960e31b8152600490fd5b5061301c61083660046110cb565b8811612e73565b50505050505050505061303560405190565b63387b2e5560e11b8152600490fd5b906125a761082092600861094356fe5146a08baf902532d0ee2f909971144f12ca32651cd70cbee1117cddfb3b3b33a36469706673582212203de87fe65e419580b394cc648a6887356af0210ace8c733dc23f090de2bfc3116c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xA254640 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0x114E6E73 EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0x21298310 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0x2FA4D218 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x42A83551 EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x49D5E604 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x5155BAFA EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x5699FBAD EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x7C2D6E01 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x7FB84BED EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x84F389A8 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x8D23507F EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0x8E8EFAEE EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x8FEF5891 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x91B9B827 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x99702270 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xAB37F486 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xB0B38BAA EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xB470AADE EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xBCEC454F EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xBE309BCA EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xCD698E69 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD59551D2 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDA606CE2 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xE26F7900 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xEA24A768 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xED99C0D1 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF52C395A EQ PUSH2 0x1EF JUMPI PUSH4 0xF7E6B46B EQ PUSH2 0x1AE JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x1E2 JUMPI JUMPDEST PUSH2 0x1C8 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF7 JUMP JUMPDEST SWAP2 PUSH2 0x2C11 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1035 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x209 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x21AD JUMP JUMPDEST PUSH2 0x211 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x231 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x239 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST POP CALLVALUE PUSH2 0x26C JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A2 JUMPI JUMPDEST PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x296 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2C9 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2F1 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST POP CALLVALUE PUSH2 0x319 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x1257 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST POP CALLVALUE PUSH2 0x341 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x349 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST POP CALLVALUE PUSH2 0x386 JUMPI JUMPDEST PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x36B PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x38E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3AE JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x27F5 JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST POP CALLVALUE PUSH2 0x3D8 JUMPI JUMPDEST PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x402 JUMPI JUMPDEST PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x296 PUSH2 0x2B8A JUMP JUMPDEST PUSH2 0x40A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST POP CALLVALUE PUSH2 0x43E JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x2CDB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST POP CALLVALUE PUSH2 0x468 JUMPI JUMPDEST PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x470 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST POP CALLVALUE PUSH2 0x493 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x49B PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST POP CALLVALUE PUSH2 0x4BE JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F4 JUMPI JUMPDEST PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x4E8 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x4FC PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x522 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0xC71 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x2AF4 JUMP JUMPDEST PUSH2 0x52A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST POP CALLVALUE PUSH2 0x54C JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x554 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST POP CALLVALUE PUSH2 0x57A JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x582 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5A2 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x5AA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST POP CALLVALUE PUSH2 0x5CC JUMPI JUMPDEST PUSH2 0x5C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5F3 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x5EE CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2342 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x61A JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x615 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x622 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST POP CALLVALUE PUSH2 0x644 JUMPI JUMPDEST PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x64C PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST POP CALLVALUE PUSH2 0x67A JUMPI JUMPDEST PUSH2 0x663 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x25B JUMP JUMPDEST PUSH2 0x682 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6A2 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST POP CALLVALUE PUSH2 0x6CA JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6F4 JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x2D56 JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x71C JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x724 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST POP CALLVALUE PUSH2 0x746 JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x741 CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST POP CALLVALUE PUSH2 0x770 JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x76B CALLDATASIZE PUSH1 0x4 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x778 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST POP CALLVALUE PUSH2 0x798 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7C2 JUMPI JUMPDEST PUSH2 0x7B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x25B PUSH2 0x874 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST POP CALLVALUE PUSH2 0x7EC JUMPI JUMPDEST PUSH2 0x1DE PUSH2 0x42C PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x7F9 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x7FF JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x839 JUMPI PUSH2 0x813 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x841 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0x820 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x836 PUSH2 0x836 PUSH2 0x836 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x836 PUSH1 0xA PUSH2 0x85D JUMP JUMPDEST PUSH2 0x836 PUSH2 0x86A JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x8BB JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x8AE JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0x8B6 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH2 0x8C3 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST SWAP1 PUSH2 0x8F1 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x902 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8F5 JUMPI JUMPDEST ADD PUSH2 0x87C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x90A PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST DUP1 PUSH2 0x80B JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x90F JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x936 JUMPI PUSH2 0x915 JUMP JUMPDEST PUSH2 0x93E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 SLOAD PUSH2 0x953 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x97B PUSH1 0x8 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80B JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x98C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x836 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x9CC JUMPI JUMPDEST PUSH2 0x9C3 DUP2 DUP6 PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x99B JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x9ED JUMPI PUSH2 0x99B JUMP JUMPDEST PUSH2 0x9F5 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x4 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x836 PUSH3 0x278D00 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x836 PUSH2 0xA06 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0xA5E JUMPI JUMPDEST PUSH2 0x836 PUSH2 0xA46 DUP4 DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA51 JUMPI JUMPDEST DUP7 ADD PUSH2 0x87C JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x20 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xA59 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH2 0xA66 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xAA7 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0xA9A JUMPI JUMPDEST ADD SWAP3 DUP3 DUP5 ADD GT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0xAAF PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0xB23 JUMPI JUMPDEST PUSH2 0x836 PUSH2 0xACE DUP3 DUP6 PUSH2 0x99B JUMP JUMPDEST SWAP4 PUSH2 0xADC DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x99B JUMP JUMPDEST SWAP4 PUSH2 0xAFD DUP5 PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB16 JUMPI JUMPDEST DUP5 ADD PUSH2 0xA6B JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0xB0D DUP2 PUSH1 0x60 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x80 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xB1E PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0xB2B PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x980 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0xB44 JUMP JUMPDEST SWAP1 PUSH2 0x945 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x97B PUSH1 0x9 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBB5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xBBD PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0xBCF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0xBF5 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xBF9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0xB72 PUSH2 0xB7C JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x820 SWAP2 PUSH2 0xC25 PUSH2 0xC20 DUP4 PUSH2 0xBD6 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 DUP4 DUP3 ADD GT PUSH2 0xC3B JUMPI PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xC43 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xC64 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xC0D JUMP JUMPDEST PUSH2 0xC6C PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0xCF9 JUMPI JUMPDEST PUSH2 0xC86 DUP3 DUP3 PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0xC94 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x99B JUMP JUMPDEST SWAP3 PUSH2 0xCA2 DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0xCB0 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0x836 PUSH2 0xCC1 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0xCCF DUP2 PUSH1 0xA0 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xCEC JUMPI JUMPDEST ADD PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xCF4 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0xD01 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xD57 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xD4F JUMPI JUMP JUMPDEST PUSH2 0x820 PUSH2 0xD1D JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xD44 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xD7E PUSH2 0xD74 DUP4 PUSH2 0xD34 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xDD0 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD97 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xDAA SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xDBC JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDAF JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP PUSH1 0x20 ADD SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH2 0xD61 JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0xE04 SWAP3 PUSH2 0xDFB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xDE0 JUMP JUMPDEST SUB DUP4 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 SWAP3 GT PUSH2 0xE1B JUMPI PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xE23 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x2 PUSH2 0xE0B JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xE54 JUMPI POP GT PUSH2 0xE4D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xE8A PUSH2 0xB72 PUSH1 0x20 SWAP4 PUSH2 0xBF5 SWAP4 PUSH2 0xE7E DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xE69 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0xEE8 JUMPI JUMPDEST PUSH2 0xEBB DUP2 DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP3 PUSH2 0xEC9 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x99B JUMP JUMPDEST SWAP3 PUSH2 0x836 PUSH2 0xEDA DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0xB0D DUP2 PUSH1 0x60 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xEF0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x836 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 PUSH2 0xF27 PUSH2 0xF20 PUSH2 0xF16 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF38 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xF5E PUSH2 0xF57 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x5 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x836 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x980 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 SLOAD PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH1 0x3 PUSH2 0xF90 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xFD8 JUMPI JUMPDEST PUSH2 0x836 PUSH2 0xFC1 DUP5 DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0xFCF DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x915 JUMP JUMPDEST PUSH2 0xFE0 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x97B PUSH1 0xA SWAP2 PUSH1 0x0 SWAP3 PUSH2 0xB56 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x1028 JUMPI JUMPDEST PUSH2 0x836 PUSH2 0x1011 DUP5 DUP5 PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH2 0x101F DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x915 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x99B JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x820 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x1075 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 SLOAD PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x836 SWAP2 PUSH2 0x10BF SWAP2 PUSH2 0x10B9 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x943 JUMP JUMPDEST ADD PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x109B JUMP JUMPDEST PUSH2 0x836 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x836 SWAP1 SLOAD PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x10EE PUSH2 0x836 SWAP3 PUSH2 0x10E6 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x943 JUMP JUMPDEST ADD PUSH2 0x10CB JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x110A PUSH2 0x1105 DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x111E JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x1316 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x820 SWAP1 CALLER SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0xBF5 PUSH2 0x114A SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x1144 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1191 PUSH2 0x836 SWAP4 SWAP3 PUSH2 0x118B PUSH2 0x118B SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11C0 PUSH2 0x11BC DUP3 DUP5 PUSH2 0x10A5 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x11C8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1238 SWAP3 POP SWAP1 PUSH2 0x836 PUSH2 0x11E6 PUSH2 0x11E0 PUSH2 0x1220 SWAP5 PUSH2 0x16A2 JUMP JUMPDEST SWAP3 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x11FB PUSH1 0x20 SWAP2 PUSH2 0x11F5 DUP4 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 PUSH2 0x1214 PUSH2 0x1208 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 ADD SWAP3 DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xE93 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x124D PUSH2 0x1105 DUP3 PUSH2 0x10D5 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x138C JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x123C JUMP JUMPDEST ISZERO PUSH2 0x1268 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x12E7 PUSH2 0x12D7 CALLER PUSH2 0x980 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x130B PUSH2 0x836 PUSH2 0x1312 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x12EC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1324 PUSH2 0x11BC DUP3 DUP5 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x132C JUMPI POP POP JUMP JUMPDEST PUSH2 0x1346 PUSH1 0x1 PUSH2 0x1341 DUP4 PUSH1 0x0 PUSH2 0x10B9 DUP8 DUP3 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST CALLER SWAP1 PUSH2 0x137C PUSH2 0x1376 PUSH2 0x1376 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0xB4D JUMP JUMPDEST SWAP3 PUSH2 0x1386 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST SWAP1 PUSH2 0x1397 DUP2 DUP4 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x139F JUMPI POP POP JUMP JUMPDEST PUSH2 0x13B3 PUSH1 0x0 PUSH2 0x1341 DUP4 DUP3 PUSH2 0x10B9 DUP8 DUP3 PUSH2 0x943 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x137C PUSH2 0x1376 PUSH2 0x1376 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP6 SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x1404 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1418 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0x1420 PUSH2 0x13E3 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x1430 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xBF5 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 PUSH2 0x1445 PUSH2 0xC20 DUP4 PUSH2 0xBD6 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0x1465 PUSH2 0x145F DUP5 PUSH2 0x1438 JUMP JUMPDEST SWAP4 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x144A JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 SWAP2 PUSH2 0x1497 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x14A5 JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x14AD PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP1 ISZERO PUSH2 0x14BF JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0x14C7 PUSH2 0x13E3 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x1095 PUSH2 0x836 PUSH2 0x836 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x14EC PUSH2 0x1400 PUSH2 0x836 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x14F8 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1238 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x1573 PUSH2 0x156E PUSH2 0x155F DUP4 PUSH2 0x155A DUP7 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x1568 DUP6 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x144F JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x30 PUSH2 0x158B PUSH2 0x1585 DUP6 PUSH2 0x85D JUMP JUMPDEST DUP7 PUSH2 0x1489 JUMP JUMPDEST MSTORE8 PUSH2 0x15C3 PUSH2 0x15BA PUSH1 0xF PUSH1 0xFB SHL SWAP3 PUSH2 0x155A PUSH1 0x1 SWAP6 DUP7 SWAP6 DUP9 BYTE PUSH2 0x15B4 PUSH2 0x15AE DUP9 PUSH2 0x85D JUMP JUMPDEST DUP12 PUSH2 0x1489 JUMP JUMPDEST MSTORE8 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x1568 DUP4 PUSH2 0x85D JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x15E6 JUMPI JUMPDEST POP POP PUSH2 0x836 SWAP3 SWAP4 PUSH2 0x15E0 PUSH2 0x1400 PUSH2 0x836 SWAP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x14F1 JUMP JUMPDEST SWAP1 SWAP5 PUSH2 0x15F1 DUP3 PUSH2 0x85D JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x165D PUSH2 0x1657 DUP4 SWAP3 PUSH2 0x163A PUSH2 0x161D PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 JUMP JUMPDEST PUSH2 0x1627 PUSH1 0xF PUSH2 0x85D JUMP JUMPDEST DUP4 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1663 JUMPI JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST DUP7 BYTE PUSH2 0x1646 DUP11 DUP10 PUSH2 0x1489 JUMP JUMPDEST MSTORE8 PUSH2 0x1651 PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST SWAP1 PUSH2 0x14D8 JUMP JUMPDEST SWAP7 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 PUSH2 0x15C5 JUMP JUMPDEST PUSH2 0x166B PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1633 JUMP JUMPDEST SWAP5 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x836 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x14 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x836 PUSH2 0x836 PUSH2 0x836 SWAP3 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x16BF PUSH2 0x16BA PUSH2 0x836 SWAP3 PUSH2 0x16B4 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x1676 JUMP JUMPDEST PUSH2 0x11F5 PUSH2 0x16CA PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x1692 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE PUSH1 0xB PUSH2 0x109B JUMP JUMPDEST PUSH2 0x16F7 JUMPI PUSH2 0x16EB SWAP6 PUSH2 0x196D JUMP JUMPDEST PUSH2 0x820 PUSH1 0x1 PUSH1 0xB PUSH2 0x12FB JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1707 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xDC149F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x980 PUSH2 0x836 PUSH2 0x836 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x1715 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 PUSH2 0x174A PUSH2 0x836 PUSH2 0x1312 SWAP3 PUSH2 0xB4D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x172B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x12F1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1776 PUSH2 0x836 PUSH2 0x1312 SWAP4 PUSH2 0x85D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x820 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1765 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1795 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x17A3 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x177E JUMP JUMPDEST ADD PUSH2 0x178A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x17B8 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x17CA PUSH2 0x820 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x17EC JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x178A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x17DD JUMP JUMPDEST SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18C1 JUMPI JUMPDEST PUSH2 0x181C DUP3 PUSH2 0x1816 DUP6 SLOAD PUSH2 0xD34 JUMP JUMPDEST DUP6 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1857 JUMPI PUSH2 0x1312 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x184C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x186C DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x18A9 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x1890 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x1F DUP5 AND PUSH1 0x8 MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1887 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x186F JUMP JUMPDEST PUSH2 0x18C9 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x1808 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 PUSH2 0x18F3 PUSH2 0x836 PUSH2 0x1312 SWAP3 PUSH2 0x85D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x18D9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB72 DUP2 PUSH2 0x1911 DUP2 PUSH2 0xBF5 SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0xC01 JUMP JUMPDEST SWAP2 PUSH2 0x1052 SWAP2 PUSH2 0x820 SWAP7 SWAP9 SWAP8 SWAP6 PUSH1 0x80 SWAP6 PUSH2 0x1958 PUSH2 0x1965 SWAP5 PUSH2 0x1948 PUSH1 0xA0 DUP10 ADD SWAP6 PUSH1 0x0 DUP11 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x18FA JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP5 SWAP1 SWAP4 PUSH1 0x0 PUSH2 0x1980 PUSH2 0x980 DUP3 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x1AD7 JUMPI DUP4 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19A6 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x1AB7 JUMPI PUSH2 0x19B4 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP3 EQ DUP1 ISZERO PUSH2 0x1AA4 JUMPI JUMPDEST PUSH2 0x1A84 JUMPI PUSH2 0x19CA SWAP1 PUSH2 0x85D JUMP JUMPDEST DUP3 EQ DUP1 ISZERO PUSH2 0x1A71 JUMPI JUMPDEST PUSH2 0x1A52 JUMPI PUSH2 0x1A4D SWAP3 PUSH2 0x19E6 DUP6 PUSH1 0x3 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x19F2 DUP2 DUP9 PUSH1 0x2 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x19FD DUP3 PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A08 DUP4 PUSH1 0x5 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A19 DUP7 PUSH2 0x1A14 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1316 JUMP JUMPDEST PUSH32 0xA80CADDAB9A93C4DF4F67CD3EE3490472325E6903E29687FC5904CEF451041F9 SWAP7 PUSH2 0x1A44 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1918 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1A62 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4F08DAF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1A7D PUSH2 0x836 PUSH2 0xA06 JUMP JUMPDEST DUP3 GT PUSH2 0x19D3 JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1A95 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC17D8A03 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1AB0 PUSH2 0x836 PUSH2 0x86A JUMP JUMPDEST DUP3 GT PUSH2 0x19BD JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1AC8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1FC71F5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x820 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x16CF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1B0F PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1B1D PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1B4E JUMPI JUMPDEST POP PUSH2 0x1B32 JUMPI PUSH2 0x820 SWAP3 PUSH2 0x1CB6 JUMP JUMPDEST POP POP POP POP PUSH2 0x1B3F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1B6B SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B89 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B91 PUSH2 0xB7C JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1445 PUSH2 0xC20 DUP4 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0x1465 PUSH2 0x1BB3 DUP5 PUSH2 0x1B96 JUMP JUMPDEST SWAP4 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x1BFD JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1BF0 JUMPI JUMPDEST ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0x855 JUMPI JUMP JUMPDEST PUSH2 0x1BF8 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x1C05 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1BCC JUMP JUMPDEST SWAP1 PUSH2 0x8F1 SWAP3 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x1C23 JUMPI JUMPDEST MUL DUP2 ADD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1C2B PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1C1A JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xBF5 SWAP1 DUP4 SWAP1 DUP1 SWAP4 PUSH2 0xC01 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x836 SWAP3 PUSH2 0x1C30 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0x1497 DUP5 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1430 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C76 PUSH2 0xF20 PUSH2 0xF16 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C87 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1C9D PUSH2 0xF57 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1C67 JUMP JUMPDEST SWAP3 SWAP2 DUP2 SWAP3 PUSH1 0x0 PUSH2 0x1CC5 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP6 EQ PUSH2 0x1E17 JUMPI TIMESTAMP DUP4 LT PUSH2 0x1DF9 JUMPI PUSH2 0x1CDB DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP6 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1D9F JUMPI JUMPDEST DUP3 SWAP7 PUSH2 0x1CF8 PUSH2 0x1995 DUP3 DUP10 DUP13 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x1D04 PUSH2 0x1400 DUP7 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x1D7E JUMPI DUP1 PUSH2 0x1D59 PUSH2 0x1214 PUSH2 0x1D39 PUSH2 0x1D21 PUSH2 0x1D78 SWAP6 DUP13 DUP16 PUSH2 0x1C0A JUMP JUMPDEST SWAP1 PUSH2 0x1D2B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1D4B PUSH2 0x1D44 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x1D56 DUP4 DUP10 PUSH2 0x1C4A JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH2 0x1D73 DUP8 PUSH2 0x1D6E PUSH2 0x1D6A DUP5 DUP11 PUSH2 0x1C4A JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3044 JUMP JUMPDEST PUSH2 0x1C57 JUMP JUMPDEST SWAP7 PUSH2 0x1CE2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1D90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEB484391 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 DUP8 LT ISZERO PUSH2 0x1DAC JUMPI PUSH2 0x1CE8 JUMP JUMPDEST POP SWAP6 POP POP SWAP3 POP SWAP1 POP PUSH2 0x1DF4 PUSH2 0x1DE1 PUSH32 0x8C852CAD34F901531C4A1328DDFEFBC6152FBD45AA7EB38890E74F351D8493A6 SWAP3 PUSH2 0x85D JUMP JUMPDEST SWAP3 PUSH2 0x1DEB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CA5 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x1E08 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1DA74479 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1E3B PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1E49 PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1E5E JUMPI JUMPDEST POP PUSH2 0x1B32 JUMPI PUSH2 0x820 SWAP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1E7B SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x1E50 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x0 PUSH2 0x1E95 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP5 EQ PUSH2 0x1F7A JUMPI TIMESTAMP DUP4 LT PUSH2 0x1F6C JUMPI PUSH2 0x1EAB DUP5 PUSH2 0x1BA3 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP5 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1F15 JUMPI JUMPDEST PUSH2 0x1F0F DUP4 SWAP7 PUSH2 0x1EFE PUSH2 0x1EC9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH1 0x20 DUP2 ADD PUSH2 0x1214 DUP7 DUP13 DUP4 PUSH1 0x20 DUP2 PUSH2 0x1E81 PUSH2 0xBF5 SWAP4 DUP4 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1EF3 PUSH2 0x1D44 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x1D56 DUP4 DUP13 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1D73 DUP8 PUSH2 0x1D6E PUSH2 0x1D6A DUP5 DUP14 PUSH2 0x1C4A JUMP JUMPDEST SWAP6 PUSH2 0x1EB2 JUMP JUMPDEST DUP1 DUP7 LT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1EB8 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP PUSH2 0x1F67 PUSH2 0x1F5D PUSH2 0x1F57 PUSH32 0xC3C3780ED921778D05400BDFAF133352F1C8CE56E4CE47391118F53A22103CCE SWAP4 PUSH2 0x85D JUMP JUMPDEST SWAP4 PUSH2 0x85D JUMP JUMPDEST SWAP4 PUSH2 0x1DEB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1E08 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1F88 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3D257579 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1FAC PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x1FBA PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1FCF JUMPI JUMPDEST POP PUSH2 0x1B32 JUMPI PUSH2 0x820 SWAP3 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x1FEC SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x2002 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1B91 PUSH2 0x1472 JUMP JUMPDEST CALLDATALOAD PUSH2 0x836 DUP2 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x846 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0xBF5 DUP2 PUSH1 0x14 SWAP4 PUSH2 0x2014 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x0 PUSH2 0x2043 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP6 EQ PUSH2 0x1E17 JUMPI TIMESTAMP DUP4 LT PUSH2 0x1DF9 JUMPI PUSH2 0x2059 DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP6 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x20E5 JUMPI JUMPDEST DUP3 SWAP7 PUSH2 0x207B PUSH2 0x2076 DUP3 DUP12 DUP11 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x200A JUMP JUMPDEST PUSH2 0x2097 PUSH2 0x208A PUSH2 0x980 DUP8 PUSH2 0x1722 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x20D3 JUMPI DUP1 PUSH2 0x1D59 PUSH2 0x20B1 PUSH2 0x2076 PUSH2 0x20CD SWAP5 DUP14 DUP13 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x1D39 PUSH2 0x20BD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1214 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x2027 JUMP JUMPDEST SWAP7 PUSH2 0x2060 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP8 LT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x2066 JUMP JUMPDEST POP SWAP6 POP POP SWAP3 POP SWAP1 POP PUSH2 0x1DF4 PUSH2 0x1DE1 PUSH32 0xA9411F55F4CCD3F63F1F6236481C2F6B385A4221287184E89CA4C40792F8224E SWAP3 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP3 SWAP2 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2141 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x214E PUSH2 0x980 PUSH1 0x0 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x21A3 JUMPI PUSH2 0x2175 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0xD36B0989E598A1B05388150A9A8C84925E2710D91910406B8735E01F3ED02817 SWAP2 PUSH2 0x36F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x21C5 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x21E1 PUSH2 0x11BC DUP4 DUP4 PUSH2 0x10A5 JUMP JUMPDEST PUSH2 0x221D JUMPI DUP2 PUSH2 0x21EF SWAP2 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0x708BD40F8F4D2AD60032CAEA0582161D35C50177CC0B2C575B5D483BD2902CAA SWAP2 PUSH2 0x36F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP PUSH2 0x2229 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2793ED7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2250 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x225A PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ DUP1 ISZERO PUSH2 0x22AA JUMPI JUMPDEST PUSH2 0x22A0 JUMPI PUSH2 0x2272 DUP2 PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0xBFF777C073BD9101DD1E419471FE91C54C9FFE380882BCA8EB1FCF75D6086F77 SWAP2 PUSH2 0x25F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1A95 JUMP JUMPDEST POP PUSH2 0x22B6 PUSH2 0x836 PUSH2 0x86A JUMP JUMPDEST DUP2 GT PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x22D5 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x22DF PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ DUP1 ISZERO PUSH2 0x232F JUMPI JUMPDEST PUSH2 0x2325 JUMPI PUSH2 0x22F7 DUP2 PUSH1 0x5 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1A4D PUSH32 0x7D7455C70E1855CFEB6FF84FE7B6D37EFCFDAEE91C05F2E25A55368F50BA7B5A SWAP2 PUSH2 0x25F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1A62 JUMP JUMPDEST POP PUSH2 0x233B PUSH2 0x836 PUSH2 0xA06 JUMP JUMPDEST DUP2 GT PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x22C6 JUMP JUMPDEST SWAP1 PUSH2 0x2354 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x2362 PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2383 JUMPI JUMPDEST POP PUSH2 0x2377 JUMPI PUSH2 0x820 SWAP2 PUSH2 0x24E1 JUMP JUMPDEST POP POP POP PUSH2 0x1B3F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23A0 SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x836 SWAP1 SLOAD PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x23D9 PUSH1 0x1 SWAP2 PUSH2 0x23C7 DUP2 SLOAD SWAP1 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x23E2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x23EA PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x12F1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x241F PUSH2 0x836 PUSH2 0x1312 SWAP4 PUSH2 0xB4D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x23F5 JUMP JUMPDEST SWAP1 PUSH2 0x244F PUSH2 0x820 SWAP3 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x2455 JUMPI JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x23B9 JUMP JUMPDEST SWAP1 PUSH2 0x240E JUMP JUMPDEST PUSH2 0x245D PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x2444 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x14BF JUMPI SUB SWAP1 JUMP JUMPDEST POP PUSH2 0x836 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 PUSH1 0x0 DUP3 JUMPDEST DUP3 DUP3 LT PUSH2 0x2498 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x24C7 PUSH2 0x24C0 PUSH1 0x1 SWAP3 PUSH2 0x24AF DUP9 DUP7 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 ADD SWAP1 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP4 SWAP2 ADD SWAP2 PUSH2 0x247C JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x2601 JUMPI PUSH2 0x2500 PUSH2 0x2076 DUP3 DUP8 DUP7 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2510 PUSH2 0x208A PUSH2 0x980 PUSH1 0x0 PUSH2 0x1722 JUMP JUMPDEST EQ PUSH2 0x25F3 JUMPI PUSH2 0x2523 PUSH2 0x2076 DUP3 DUP8 DUP7 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2533 PUSH2 0x208A PUSH2 0x980 PUSH1 0x3 PUSH2 0x23AF JUMP JUMPDEST EQ PUSH2 0x25D6 JUMPI PUSH2 0x2549 PUSH2 0x427 PUSH2 0x2076 DUP4 DUP9 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x25B9 JUMPI PUSH2 0x24EB SWAP1 PUSH2 0x25B2 SWAP1 PUSH2 0x25AC PUSH2 0x258E PUSH2 0x257E PUSH1 0x6 PUSH2 0x257A DUP10 PUSH2 0x2574 PUSH2 0x2076 DUP9 DUP16 DUP7 JUMPDEST SWAP5 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 PUSH2 0x2427 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2588 PUSH1 0x1 PUSH2 0x85D JUMP JUMPDEST SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x25A7 PUSH1 0x9 PUSH2 0x25A1 PUSH2 0x2076 DUP7 DUP14 DUP13 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x24E9 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x25C7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x241D2EDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x25E4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA122BF39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0xE7E9E18EAE0A1664F98BA7E59EDA81692D5802C7E9BD75BB0261F3FC6FD4A493 SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x24D0 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x234B JUMP JUMPDEST SWAP1 PUSH2 0x2650 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x265E PUSH2 0x11BC CALLER DUP1 SWAP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2673 JUMPI JUMPDEST POP PUSH2 0x2377 JUMPI PUSH2 0x820 SWAP2 PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2690 SWAP2 POP PUSH2 0x11BC SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3054 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10A5 JUMP JUMPDEST CODESIZE PUSH2 0x2665 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x820 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x26C3 DUP3 SLOAD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E2 JUMPI JUMPDEST SUB SWAP1 PUSH2 0x26DF PUSH2 0x26D9 DUP4 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP1 PUSH2 0x26AD JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x26EA PUSH2 0x2696 JUMP JUMPDEST PUSH2 0x26CA JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x27C2 JUMPI PUSH2 0x2714 PUSH2 0x11BC PUSH2 0x427 PUSH2 0x2076 DUP5 DUP10 DUP9 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x27A5 JUMPI PUSH2 0x279E DUP2 PUSH2 0x25AC PUSH2 0x2799 PUSH2 0x2754 PUSH2 0x836 PUSH1 0x0 PUSH2 0x2794 DUP11 PUSH2 0x25A1 PUSH2 0x2076 DUP16 SWAP12 PUSH2 0x26F9 SWAP13 PUSH1 0x9 SWAP5 PUSH2 0x278F PUSH2 0x275F PUSH2 0x275A PUSH2 0x2754 PUSH2 0x2076 DUP8 DUP8 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST DUP10 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x25A7 DUP2 PUSH1 0x6 SWAP14 DUP15 PUSH2 0x244F PUSH2 0x2787 PUSH2 0x2781 PUSH2 0x277B PUSH2 0x257E DUP6 SLOAD SWAP1 JUMP JUMPDEST DUP5 PUSH2 0x23B9 JUMP JUMPDEST SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x177E JUMP JUMPDEST PUSH2 0x26B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x26F7 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x27B3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7C241AD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0xC18397A78D98D67911BE09B9C32315C4B8DB0454529F84F856E61F537494CBFC SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x2647 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x280F PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x28B4 JUMPI PUSH2 0x282E PUSH2 0x2076 DUP3 DUP8 DUP7 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x283E PUSH2 0x208A PUSH2 0x980 PUSH1 0x0 PUSH2 0x1722 JUMP JUMPDEST EQ PUSH2 0x25F3 JUMPI PUSH2 0x2854 PUSH2 0x6EF PUSH2 0x2076 DUP4 DUP9 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2897 JUMPI PUSH2 0x2819 SWAP1 PUSH2 0x2890 SWAP1 PUSH2 0x25AC PUSH2 0x287D PUSH2 0x257E PUSH1 0x7 PUSH2 0x257A DUP10 PUSH2 0x2574 PUSH2 0x2076 DUP9 DUP16 DUP7 PUSH2 0x256E JUMP JUMPDEST PUSH2 0x25A7 PUSH1 0xA PUSH2 0x25A1 PUSH2 0x2076 DUP7 DUP14 DUP13 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x28A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x36650E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0x8FF2887F41C4AF26BBCADF0889537A4641E2D1D6D9FA287FEAF683A76096EFD8 SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x27FF JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x2901 PUSH2 0x1105 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 JUMPDEST DUP4 JUMPDEST DUP2 LT ISZERO PUSH2 0x29A6 JUMPI PUSH2 0x2926 PUSH2 0x11BC PUSH2 0x6EF PUSH2 0x2076 DUP5 DUP10 DUP9 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x2989 JUMPI PUSH2 0x2982 DUP2 PUSH2 0x25AC PUSH2 0x2799 PUSH2 0x2754 PUSH2 0x836 PUSH1 0x0 PUSH2 0x2794 DUP11 PUSH2 0x25A1 PUSH2 0x2076 DUP16 SWAP12 PUSH2 0x290B SWAP13 PUSH1 0xA SWAP5 PUSH2 0x278F PUSH2 0x2966 PUSH2 0x275A PUSH2 0x2754 PUSH2 0x2076 DUP8 DUP8 DUP8 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x25A7 DUP2 PUSH1 0x7 SWAP14 DUP15 PUSH2 0x244F PUSH2 0x2787 PUSH2 0x2781 PUSH2 0x277B PUSH2 0x257E DUP6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2909 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x2997 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7463712B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP1 SWAP2 POP PUSH32 0xA520FF964BC029411023E3F0E20BF29E54C023E5E23B0E28D0DE3AE5D4231A9E SWAP2 PUSH2 0x1A4D PUSH2 0x2634 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP2 PUSH2 0x28F1 JUMP JUMPDEST SWAP1 PUSH2 0x29F8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x29F3 PUSH2 0x2A96 JUMP JUMPDEST PUSH2 0x2A12 JUMP JUMPDEST PUSH2 0x820 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x0 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x836 PUSH2 0x2A00 JUMP JUMPDEST SWAP3 PUSH2 0x820 SWAP5 SWAP2 SWAP3 PUSH2 0x2A23 PUSH1 0x0 PUSH2 0x85D JUMP JUMPDEST SWAP4 PUSH2 0x2A2C PUSH2 0x2A0A JUMP JUMPDEST SWAP6 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x29E3 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x2 PUSH2 0x85D JUMP JUMPDEST ISZERO PUSH2 0x2A50 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x820 PUSH2 0x2AA3 PUSH1 0x1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x2AB7 PUSH2 0x2AAE PUSH2 0x2A3F JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x820 PUSH2 0x2AB7 PUSH2 0x2ABE JUMP JUMPDEST SWAP1 PUSH2 0x29F8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2AE5 PUSH2 0x2A96 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 PUSH2 0x820 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x2AD3 JUMP JUMPDEST SWAP1 PUSH2 0x2B1E PUSH2 0x2B12 PUSH2 0xF16 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B2F JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2B4B PUSH2 0x2B44 PUSH1 0x1 SWAP3 PUSH2 0x24AF DUP8 PUSH2 0x23AF JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x2B22 JUMP JUMPDEST SWAP1 PUSH2 0x836 SWAP2 PUSH2 0x2B03 JUMP JUMPDEST SWAP1 PUSH2 0x820 PUSH2 0xE04 SWAP3 PUSH2 0x2B6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2B53 JUMP JUMPDEST PUSH2 0x836 SWAP1 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x836 PUSH1 0x6 PUSH2 0x2B77 JUMP JUMPDEST PUSH2 0x836 PUSH1 0x7 PUSH2 0x2B77 JUMP JUMPDEST SWAP3 PUSH2 0x2BB1 PUSH1 0x20 PUSH2 0xBF5 SWAP5 PUSH2 0x1E81 PUSH1 0x14 DUP9 PUSH2 0x1E81 DUP3 SWAP12 SWAP11 DUP7 SWAP10 PUSH2 0x2014 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x98C JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x820 DUP3 PUSH2 0x90F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x836 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x2BF7 JUMPI JUMPDEST PUSH2 0x2BEE DUP2 DUP6 PUSH2 0x2BB9 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x2BC6 JUMP JUMPDEST PUSH2 0x2BFF PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2C99 SWAP3 PUSH2 0x2C8B PUSH1 0x40 SWAP4 PUSH2 0x2C24 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2C68 PUSH2 0x2C3D PUSH2 0x2C38 PUSH2 0x2C38 PUSH1 0x3 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST SWAP4 PUSH4 0x2C4EF0D5 SWAP6 PUSH2 0x1214 PUSH2 0x2C50 ADDRESS PUSH2 0xB4D JUMP JUMPDEST SWAP2 PUSH2 0x2C5A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 PUSH2 0x2B94 JUMP JUMPDEST PUSH2 0x2C73 PUSH2 0x1D44 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0x2C7E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2CCE JUMPI JUMPDEST PUSH1 0x0 DUP1 SWAP2 SWAP1 SWAP3 PUSH2 0x2CB4 JUMPI POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F1 SWAP2 POP PUSH2 0x2CC5 RETURNDATASIZE DUP3 PUSH2 0xB93 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x2CD6 PUSH2 0x2C04 JUMP JUMPDEST PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x6 SWAP1 PUSH2 0x2CE6 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2CF5 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x2D50 JUMPI PUSH2 0x2D08 PUSH2 0x275A DUP4 PUSH1 0x9 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x2D14 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ ISZERO SWAP3 DUP4 ISZERO PUSH2 0x2D24 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2D47 SWAP3 SWAP4 POP PUSH2 0x2781 PUSH2 0x208A SWAP3 PUSH2 0x2D3A SWAP3 PUSH2 0x23B9 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ CODESIZE DUP1 DUP1 PUSH2 0x2D1E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SWAP1 PUSH2 0x2D61 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2D70 PUSH2 0x1400 DUP4 PUSH2 0x85D JUMP JUMPDEST EQ PUSH2 0x2D50 JUMPI PUSH2 0x2D08 PUSH2 0x275A DUP4 PUSH1 0xA PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x836 PUSH2 0x140 PUSH2 0xBC2 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x836 SWAP2 PUSH2 0x140 DUP2 ADD SWAP2 PUSH2 0x120 SWAP1 PUSH1 0x40 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 ADD MSTORE PUSH2 0x2DD5 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DE4 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2DF3 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E02 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E11 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E22 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH2 0x120 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x836 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x2D8E JUMP JUMPDEST SWAP4 SWAP5 SWAP6 SWAP1 SWAP6 PUSH2 0x2E57 PUSH2 0x275A DUP7 PUSH1 0x8 PUSH2 0x943 JUMP JUMPDEST TIMESTAMP DUP2 LT PUSH2 0x3023 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x2E6A DUP10 PUSH2 0x85D JUMP JUMPDEST DUP9 EQ DUP1 ISZERO PUSH2 0x300E JUMPI JUMPDEST PUSH2 0x2FEC JUMPI PUSH2 0x2E83 PUSH2 0x980 DUP11 PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2FD9 JUMPI PUSH2 0x2E9E PUSH2 0x11BC DUP3 PUSH2 0x2CDB JUMP JUMPDEST PUSH2 0x2FC6 JUMPI PUSH2 0x2EAB DUP10 PUSH2 0x85D JUMP JUMPDEST DUP6 EQ PUSH2 0x2FA4 JUMPI DUP9 SWAP8 PUSH2 0x2EBD PUSH1 0x3 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x2EC6 SWAP1 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x2ECF SWAP1 PUSH2 0xB4D JUMP JUMPDEST SWAP7 PUSH4 0x5C2A802B SWAP7 CALLER PUSH2 0x2EE1 PUSH1 0x5 PUSH2 0x10CB JUMP JUMPDEST SWAP5 PUSH2 0x2EEA PUSH2 0x2D83 JUMP JUMPDEST SWAP12 PUSH2 0x2EF5 SWAP1 DUP15 DUP15 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x2F61 SWAP5 PUSH2 0x2F56 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x2F97 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2E33 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2F8A JUMPI JUMPDEST PUSH2 0x2F73 JUMPI POP JUMP JUMPDEST PUSH2 0x820 SWAP1 PUSH2 0x2F81 RETURNDATASIZE DUP3 PUSH2 0xB93 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x2F92 PUSH2 0x2C04 JUMP JUMPDEST PUSH2 0x2F6C JUMP JUMPDEST PUSH2 0x2F9F PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2F46 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x2FB7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x27B3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x1AE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x2FFF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2E8F359 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x301C PUSH2 0x836 PUSH1 0x4 PUSH2 0x10CB JUMP JUMPDEST DUP9 GT PUSH2 0x2E73 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x3035 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x387B2E55 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x25A7 PUSH2 0x820 SWAP3 PUSH1 0x8 PUSH2 0x943 JUMP INVALID MLOAD CHAINID LOG0 DUP12 0xAF SWAP1 0x25 ORIGIN 0xD0 0xEE 0x2F SWAP1 SWAP10 PUSH18 0x144F12CA32651CD70CBEE1117CDDFB3B3B33 LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE8 PUSH32 0xE65E419580B394CC648A6887356AF0210ACE8C733DC23F090DE2BFC3116C6578 PUSH17 0x6572696D656E74616CF564736F6C634300 ADDMOD 0xC STOP COINBASE ","sourceMap":"376:17904:20:-:0;;;;;;;;;-1:-1:-1;376:17904:20;;:::i;:::-;-1:-1:-1;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;376:17904:20;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;376:17904:20;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;502:40;540:2;;;:::i;502:40::-;;;:::i;376:17904::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;1168:52::-;;;;;;;;;:::i;:::-;;:::i;376:17904::-;-1:-1:-1;;;;;376:17904:20;;:::o;:::-;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;884:25::-;;;;;:::i;548:53::-;594:7;;;:::i;548:53::-;;;:::i;376:17904::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;1260:58::-;;;;;;;;;:::i;376:17904::-;;;-1:-1:-1;;376:17904:20;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;376:17904:20;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;376:17904:20;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;376:17904:20;;;-1:-1:-1;;376:17904:20;;;-1:-1:-1;;376:17904:20:o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;718:22::-;;;;;:::i;376:17904::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;2153:49:0;2198:4;;;:::i;2153:49::-;;;:::i;376:17904:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;939:29::-;;;;;:::i;376:17904::-;;;;;;;;;;;;;;:::i;818:26::-;;;;;:::i;376:17904::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;1358:58;;;;;;;;;:::i;376:17904::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;;;;;;2732:202:0;-1:-1:-1;;;;;;;;;376:17904:20;;2840:47:0;:87;;;;;2833:94;2732:202;:::o;2840:87::-;2891:36;;;-1:-1:-1;;;;;;376:17904:20;-1:-1:-1;;;937:40:14;;829:155;376:17904:20;;;;;;;;;;;;;:::i;3021:145:0:-;3130:29;;;;:12;:6;:12;;;:::i;:::-;:20;:29;:::i;:::-;;:::i;376:17904:20:-;;;;;;;;;;:::i;4504:129:0:-;4604:22;:12;:22;4504:129;4578:7;376:17904:20;;;4578:7:0;4604:6;;:12;:::i;:::-;:22;;:::i;2589:76::-;;2657:1;2589:76;2642:4;5012:18;;;:::i;:::-;2642:4;:::i;:::-;4929:145;5059:7;4929:145;5059:7;:::i;4929:145::-;;;;;:::i;3460:103::-;3543:12;;734:10:11;3543:12:0;;:::i;376:17904:20:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;376:17904:20;;;;;;3844:479:0;;3931:23;3932:22;;;;:::i;:::-;3931:23;;376:17904:20;3931:23:0;3927:390;;3844:479;;:::o;3927:390::-;3970:336;4115:28;;;4022:252;4234:13;4115:28;3994:298;4115:28;;:::i;:::-;4234:13;;:::i;:::-;4214:38;4249:2;4214:38;;;;:::i;:::-;;;:::i;:::-;4022:252;;;376:17904:20;;;;4022:252:0;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3994:298::-;376:17904:20;;-1:-1:-1;;;3970:336:0;;;;;;;;;:::i;:::-;;;;2589:76;;2657:1;2589:76;2642:4;5438:18;;;:::i;2642:4::-;5354:147;5486:7;5354:147;5486:7;:::i;5354:147::-;;;;;:::i;376:17904:20:-;;;;:::o;:::-;-1:-1:-1;376:17904:20;;-1:-1:-1;;;376:17904:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:17904:20;;;;;;3970:336:0;6038:214;6237:7;;6038:214;6125:83;6133:23;734:10:11;6144:12:0;655:96:11;6133:23:0;-1:-1:-1;;;;;376:17904:20;;6133:23:0;6125:83;:::i;:::-;6237:7;:::i;376:17904:20:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;7587:233:0:-;;7669:23;7670:22;;;;:::i;7669:23::-;7665:149;;7587:233;;:::o;7665:149::-;7708:36;7740:4;7708:29;:6;;:12;;;;:::i;:29::-;:36;:::i;:::-;734:10:11;7763:40:0;;;;;;376:17904:20;;7763:40:0;;;:::i;:::-;;;376:17904:20;;;;7763:40:0;;;;7587:233::o;7991:234::-;;8074:22;;;;:::i;:::-;8070:149;;7991:234;;:::o;8070:149::-;8112:37;8144:5;8112:29;:12;;;;;;:::i;:37::-;734:10:11;8168:40:0;;;;;;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;376:17904:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;278:18:12:-;;;;;;;;;;;;;;;;;;;;376:17904:20;;;278:18:12;;;;:::o;:::-;-1:-1:-1;376:17904:20;;-1:-1:-1;;;278:18:12;;;;;;;;;;;;;;376:17904:20;278:18:12;376:17904:20;;;278:18:12;376:17904:20;;;;1818:437:12;;;1950:1;:10;1940:25;1950:14;:10;;;;;:::i;:::-;;:::i;:::-;:14;;;:::i;:::-;;;:::i;:::-;1940:25;:::i;:::-;1975:15;1982:1;;1975:15;;;1982:1;1975:15;:::i;:::-;;;:::i;:::-;;2042:14;:10;-1:-1:-1;;;2007:1:12;2042:10;2007:1;2000:15;;;;;;;;;:::i;:::-;;;:::i;:::-;;2042:10;:::i;:::-;:14;;;:::i;:::-;2025:128;2007:1;;;2025:128;2170:10;;2234:14;2170:10;;;;2162:55;2170:10;;:::i;:::-;;2162:55;:::i;2065:3::-;2058:5;;;;;:::i;:::-;;;;;;2065:3;2131:11;2096:8;;:21;:8;-1:-1:-1;;;376:17904:20;;2096:8:12;2105:11;2113:3;2105:11;:::i;:::-;;;2096:21;;;;;;2065:3;2096:21;278:18;;;;2096:21;2084:33;;;;;;:::i;:::-;;2131:11;2141:1;2131:11;:::i;:::-;;;:::i;:::-;2065:3;;:::i;:::-;2030:26;;;2096:21;;;:::i;:::-;;;2058:5;;;;376:17904:20;;;;;-1:-1:-1;;;;;376:17904:20;;;302:43:12;343:2;;;:::i;:::-;;;;;278:18;;;;2407:149;2509:22;2517:13;2497:52;2407:149;2465:13;376:17904:20;;;2465:13:12;2517;;:::i;:::-;2509:22;:::i;:::-;2497:52;2533:15;;:::i;:::-;2497:52;:::i;2506:136:20:-;;;;;;2547:12;;;:::i;:::-;2543:52;;2605:1;;;:::i;:::-;2616:19;2631:4;2616:19;;:::i;2543:52::-;2568:27;;;;;;;;376:17904;;;;2568:27;-1:-1:-1;;;2568:27:20;;;;3970:336:0;376:17904:20;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;376:17904:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;376:17904:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:17904:20;;;;;;;;;;;;;;;;-1:-1:-1;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;-1:-1:-1;;376:17904:20;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2943:934;;;;;;3181:1;3158:25;3173:10;;;:::i;3158:25::-;-1:-1:-1;;;;;376:17904:20;;3158:25;3154:61;;3229:16;:23;376:17904;3229:16;:23;376:17904;;;3229:23;:28;;;;:::i;:::-;;3225:65;;3304:16;;;:::i;:::-;;;:45;;;;2943:934;3300:95;;3409:20;;;:::i;:::-;;;:61;;;;2943:934;3405:116;;3728:142;3532:25;;;;;:::i;:::-;3567:20;;;;;:::i;:::-;3597:24;;;;:::i;:::-;3631:32;;;;:::i;:::-;3705:6;3685:18;;;:::i;:::-;3705:6;:::i;:::-;3728:142;;;376:17904;;;;3728:142;;;;;;:::i;:::-;;;;2943:934::o;3405:116::-;3491:30;;;;;;;;376:17904;;;;3491:30;-1:-1:-1;;;3491:30:20;;;;3970:336:0;3409:61:20;3451:19;3433:37;3451:19;;:::i;3433:37::-;;;3409:61;;3300:95;3370:25;;;;;;;;;376:17904;;;;3370:25;-1:-1:-1;;;3370:25:20;;;;3970:336:0;3304:45:20;3338:11;3324:25;3338:11;;:::i;3324:25::-;;;3304:45;;3225:65;3266:24;;;;;;;;;376:17904;;;;3266:24;-1:-1:-1;;;3266:24:20;;;;3970:336:0;3154:61:20;3192:23;;;;;;;;;376:17904;;;;3192:23;-1:-1:-1;;;3192:23:20;;;;3970:336:0;2943:934:20;;;;;;;;;:::i;2302:198::-;;;2364:18;;:::i;:::-;2355:40;2356:39;2384:10;2356:39;;;:::i;2355:40::-;:87;;;;2302:198;2338:144;;;2492:1;;;:::i;2338:144::-;2460:22;;;;;376:17904;;;;2460:22;-1:-1:-1;;;2460:22:20;;;;3970:336:0;2355:87:20;2411:31;;-1:-1:-1;2412:30:20;;-1:-1:-1;;;;;;;;;;;2412:30:20;:::i;2411:31::-;2355:87;;;376:17904;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;376:17904:20;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4111:740::-;;;4264:19;4315:1;;4297:19;;;:::i;:::-;;;4293:55;;4374:15;4362:27;;4358:64;;4464:29;;;:::i;:::-;4504:9;376:17904;4523:270;;;;;;;4773:18;4544:15;:22;:15;;;;;:::i;:22::-;:27;;;;:::i;:::-;;4540:66;;4665:15;4621:61;4648:33;;4665:15;4751:3;4665:15;;;;:::i;:::-;4648:33;;376:17904;;;;4648:33;;;;;;;;;;:::i;:::-;4638:44;;;376:17904;;;4638:44;;376:17904;;;;4638:44;;4621:61;;;;:::i;:::-;376:17904;;4621:61;4726:9;4710:14;;;;;;:::i;:::-;376:17904;;;4710:14;4726:9;:::i;:::-;4751:3;:::i;:::-;4523:270;;;4540:66;4580:26;;;;;;;;;;376:17904;;;;4580:26;-1:-1:-1;;;4580:26:20;;;;3970:336:0;4523:270:20;4773:18;;;;;;4523:270;;4773:18;;;;;;;;;4808:36;;;;;:::i;:::-;;;376:17904;;;;4808:36;;;;;;:::i;:::-;;;;4111:740::o;4358:64::-;4398:24;;;;;;;376:17904;;;;4398:24;-1:-1:-1;;;4398:24:20;;;;3970:336:0;4293:55:20;4325:23;;;;;;;376:17904;;;;4111:740;;;;;;:::i;2302:198::-;;;2364:18;;:::i;:::-;2355:40;2356:39;2384:10;2356:39;;;:::i;2355:40::-;:87;;;;2302:198;2338:144;;;2492:1;;;:::i;2355:87::-;2411:31;;-1:-1:-1;2412:30:20;;-1:-1:-1;;;;;;;;;;;2412:30:20;:::i;2411:31::-;2355:87;;;376:17904;;;;;:::o;5154:652::-;;;;5329:1;5313:17;;;:::i;:::-;;;5309:57;;5392:15;5380:27;;5376:64;;5482:27;;;:::i;:::-;5520:9;376:17904;5539:189;;;;;;;5688:3;5710:16;5583:35;5556:63;5583:35;376:17904;;;;5583:35;;;;;;;;;;376:17904;;;;;;;;;;;5583:35;5573:46;;;376:17904;;;5573:46;;5556:63;;;;:::i;:::-;5663:9;5647:14;;;;;;:::i;5688:3::-;5539:189;;;;5710:16;;;;;;5539:189;;5710:16;;;;;;5743:56;;;;;;:::i;:::-;;;:::i;:::-;;;376:17904;;;;5743:56;;;;5154:652::o;5376:64::-;5416:24;;;;;;376:17904;;;;5309:57;5339:27;;;;;;376:17904;;;;5339:27;-1:-1:-1;;;5339:27:20;;;;3970:336:0;5154:652:20;;;;;;:::i;2302:198::-;;;2364:18;;:::i;:::-;2355:40;2356:39;2384:10;2356:39;;;:::i;2355:40::-;:87;;;;2302:198;2338:144;;;2492:1;;;:::i;2355:87::-;2411:31;;-1:-1:-1;2412:30:20;;-1:-1:-1;;;;;;;;;;;2412:30:20;:::i;2411:31::-;2355:87;;;376:17904;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;:::i;6038:743::-;;;;;6245:1;;6229:17;;;:::i;:::-;;;6225:53;;6304:15;6292:27;;6288:64;;6394:27;;;:::i;:::-;6432:9;376:17904;6451:263;;;;;;;6696:16;6472:13;;;;;;;:::i;:::-;;:::i;:::-;:27;;6489:10;;;:::i;6472:27::-;;-1:-1:-1;;;;;376:17904:20;;;6472:27;;6468:63;;6590:13;6546:59;6590:13;;6674:3;6590:13;;;;:::i;:::-;6573:31;;376:17904;;;;6573:31;;;;;;;;;;:::i;6674:3::-;6451:263;;;6468:63;6508:23;;;;;;;;;;376:17904;;;;6451:263;6696:16;;;;;;6451:263;;6696:16;;;;;;;;;6729:45;;;;;:::i;6038:743::-;;;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;7004:18:20;;:::i;2642:4:0:-;7038:25:20;7053:10;7061:1;7053:10;:::i;7038:25::-;-1:-1:-1;;;;;376:17904:20;;7038:25;7034:61;;7127:11;7116:9;-1:-1:-1;;;;;;;;;;;3705:6:20;:::i;7127:11::-;7155:26;;;;376:17904;;;;7034:61;-1:-1:-1;;376:17904:20;;7072:23;376:17904;6928:260;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;7416:18:20;;:::i;2642:4:0:-;-1:-1:-1;;;;;;;;;;;7450:32:20;7451:31;;;;:::i;7450:32::-;7446:67;;7546:11;;;;:::i;:::-;7574:27;;;;376:17904;;;;7446:67;7491:22;;;;376:17904;;;;7491:22;-1:-1:-1;;;7491:22:20;;;;3970:336:0;7339:269:20;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;7826:18:20;;:::i;2642:4:0:-;7860:13:20;7872:1;7860:13;:::i;:::-;;;:39;;;;7753:270;7856:89;;7956:21;;;;:::i;:::-;7993:23;;;;376:17904;;;;7856:89;-1:-1:-1;;376:17904:20;;7920:25;376:17904;7860:39;7888:11;7877:22;7888:11;;:::i;7877:22::-;;;7860:39;;7753:270;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;8240:18:20;;:::i;2642:4:0:-;8274:20:20;8293:1;8274:20;:::i;:::-;;;:61;;;;8156:330;8270:116;;8397:32;;;;:::i;:::-;8445:34;;;;376:17904;;;;8270:116;-1:-1:-1;;376:17904:20;;8356:30;376:17904;8274:61;8316:19;8298:37;8316:19;;:::i;8298:37::-;;;8274:61;;8156:330;;;;:::i;2302:198::-;;2364:18;;:::i;:::-;2355:40;2356:39;2384:10;2356:39;;;:::i;2355:40::-;:87;;;;2302:198;2338:144;;;2492:1;;;:::i;2338:144::-;2460:22;;;;376:17904;;;;2355:87;2411:31;;-1:-1:-1;2412:30:20;;-1:-1:-1;;;;;;;;;;;2412:30:20;:::i;2411:31::-;2355:87;;;376:17904;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8610:795::-;;;;;8760:9;376:17904;8760:9;8771:8;;;;;;;8801:10;;;;;;:::i;:::-;:24;;8815:10;8823:1;8815:10;:::i;8801:24::-;;8797:60;;8875:10;;;;;;:::i;:::-;:25;;8889:11;;;:::i;8875:25::-;;8871:84;;8973:30;8992:10;;;;;;:::i;8973:30::-;8969:84;;8771:8;;9326:3;;9181:102;9235:48;:28;9129:21;:38;:21;9156:10;;9129:21;;;:26;9156:10;;:::i;:::-;9129:38;;:::i;:::-;376:17904;;;9235:28;:48;9282:1;9235:48;:::i;:::-;;;:::i;:::-;9181:35;:23;9205:10;;;;;;:::i;:::-;9181:35;;:::i;:::-;:102;:::i;:::-;376:17904;;;;9326:3;8760:9;;;;8969:84;9028:25;;;;;;376:17904;;;;9028:25;-1:-1:-1;;;9028:25:20;;;;3970:336:0;8871:84:20;8925:30;;;;;;376:17904;;;;8925:30;-1:-1:-1;;;8925:30:20;;;;3970:336:0;8797:60:20;8834:23;;;;;;376:17904;;;;8771:8;;;;;;9369:29;;;;376:17904;;;;9369:29;;;;;;:::i;8610:795::-;;;;;:::i;2302:198::-;;2364:18;;:::i;:::-;2355:40;2356:39;2384:10;2356:39;;;:::i;2355:40::-;:87;;;;2302:198;2338:144;;;2492:1;;;:::i;2355:87::-;2411:31;;-1:-1:-1;2412:30:20;;-1:-1:-1;;;;;;;;;;;2412:30:20;:::i;2411:31::-;2355:87;;;376:17904;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;9537:915;;;;;9690:9;376:17904;9690:9;9701:8;;;;;;;9731:31;9732:30;9751:10;;;;;;:::i;9731:31::-;9727:88;;10370:3;9979:23;10300:25;;10143:35;10244:42;;10251:35;9979:23;10275:10;;9979:23;;9701:8;9979:23;;10003:10;10192:37;9979:35;;10003:10;;;;;;:::i;:::-;9979:35;;:::i;:::-;;:::i;:::-;10192:29;10043:21;;10082:28;;10143;10043:85;;10082:32;:28;;376:17904;;;10082:32;10043:85;;:::i;:::-;;;:::i;:::-;10143:28;;;;:::i;10192:37::-;10275:10;:::i;10251:35::-;10244:42;:::i;10300:25::-;;:::i;10370:3::-;9690:9;;;;9727:88;9787:28;;;;;;376:17904;;;;9787:28;-1:-1:-1;;;9787:28:20;;;;3970:336:0;9701:8:20;;;;;;10413:32;;;;376:17904;;;;9537:915;;;;;:::i;2589:76:0:-;;2657:1;2589:76;2642:4;10666:18:20;;:::i;2642:4:0:-;10576:650:20;;;;10740:9;376:17904;10740:9;10751:8;;;;;;;10781:10;;;;;;:::i;:::-;:24;;10795:10;10803:1;10795:10;:::i;10781:24::-;;10777:60;;10855:30;10874:10;;;;;;:::i;10855:30::-;10851:84;;10751:8;;11147:3;;11002:102;11056:48;:28;10950:21;:38;:21;10977:10;;10950:21;;;:26;376:17904;11056:48;11002:35;:23;11026:10;;;;;;:::i;11147:3::-;10740:9;;;;10851:84;10910:25;;;;;;376:17904;;;;10910:25;-1:-1:-1;;;10910:25:20;;;;3970:336:0;10751:8:20;;;;;;11190:29;;;;376:17904;;;;10576:650;;;;;:::i;2589:76:0:-;;2657:1;2589:76;2642:4;11451:18:20;;:::i;2642:4:0:-;11358:929:20;;;;11525:9;376:17904;11525:9;11536:8;;;;;;;11566:31;11567:30;11586:10;;;;;;:::i;11566:31::-;11562:88;;12205:3;11814:23;12135:25;;11978:35;12079:42;;12086:35;11814:23;12110:10;;11814:23;;11536:8;11814:23;;11838:10;12027:37;11814:35;;11838:10;;;;;;:::i;11814:35::-;12027:29;11878:21;;11917:28;;11978;11878:85;;11917:32;:28;;376:17904;;;12205:3;11525:9;;;;11562:88;11622:28;;;;;;376:17904;;;;11622:28;-1:-1:-1;;;11622:28:20;;;;3970:336:0;11536:8:20;;;;;;12248:32;;;;376:17904;;;;11358:929;;;;;:::i;2227:103:6:-;;2292:1;2227:103;;;;;;:::i;:::-;2292:1;:::i;:::-;;;:::i;376:17904:20:-;;;;:::i;:::-;;;:::i;12693:375::-;;12890:171;12693:375;;;12890:171;13034:1;12890:171;:::i;:::-;;;;:::i;:::-;;;:::i;12693:375::-;;;;;;;;:::i;1723:37:6:-;1759:1;;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;376:17904:20;;-1:-1:-1;;;1759:1:6;;;;;;;;;;;376:17904:20;1759:1:6;376:17904:20;;;1759:1:6;376:17904:20;;3970:336:0;2336:287:6;2598:18;2468:7;;;:::i;:::-;2460:63;2479:8;;:::i;:::-;2468:19;;;;2460:63;:::i;:::-;2598:18;;:::i;1676:41::-;1716:1;;;:::i;2629:209::-;2809:22;2819:12;;:::i;2227:103::-;;2292:1;2227:103;;;;;;;;:::i;:::-;13622:473:20;14068:10;13622:473;;;;;;14068:10;:::i;13622:473::-;;;;;;;;;;:::i;376:17904::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;14190:118::-;14273:28;14280:21;14273:28;:::i;14403:118::-;14486:28;14493:21;14486:28;:::i;376:17904::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;376:17904:20;;;;;;;;;14865:484;;15077:265;14865:484;15077:265;;14865:484;14998:18;376:17904;;;14998:18;-1:-1:-1;15151:167:20;15077:33;:24;15089:11;;;:::i;:::-;15077:24;:::i;:33::-;;;15197:4;15151:167;15189:13;15197:4;15189:13;:::i;:::-;15151:167;;376:17904;;;;15151:167;;;;;;;;;;:::i;:::-;15124:208;;;376:17904;;;15124:208;;15077:265;;376:17904;;;;15077:265;;;;;;;;376:17904;;;;15077:265;;;;;;376:17904;;;;;;15077:265;;;;;;;;;;14865:484;15077:265;;;;;;;15049:293;;14865:484;:::o;15077:265::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;15497:279;15582:21;:28;;;376:17904;;;15582:28;15614:1;15582:33;;;;;:::i;:::-;;15578:76;;15683:31;;:23;;:31;:::i;:::-;:36;;;;:::i;:::-;;;:86;;;;;15497:279;15664:105;;;15497:279;:::o;15683:86::-;15735:34;:24;;;;:34;:24;;;;:::i;:::-;:34;-1:-1:-1;;;;;376:17904:20;;;15735:34;;15683:86;;;;;15578:76;15631:12;;;;:::o;15926:279::-;16011:21;:28;;;376:17904;;;16011:28;16043:1;16011:33;;;;;:::i;:::-;;16007:76;;16112:31;;:23;;:31;:::i;376:17904::-;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:17904:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;16778:1215::-;;;;;;17056:28;;:17;;:28;:::i;:::-;17117:15;17098:34;;17094:70;;17190:1;17178:13;;;;:::i;:::-;;;:38;;;;16778:1215;17174:85;;17273:20;17283:10;;;:::i;17273:20::-;-1:-1:-1;;;;;376:17904:20;;17273:20;17269:56;;17339:27;17340:26;;;:::i;17339:27::-;17335:68;;17417:12;;;:::i;:::-;;;17413:47;;17483:11;;;;;:::i;:::-;17471:24;;;:::i;:::-;:37;;;:::i;:::-;;;17642:10;;17807:14;;;:::i;:::-;17522:454;;;:::i;:::-;;;;;;;376:17904;;17522:454;-1:-1:-1;;;;;376:17904:20;17522:454;;;376:17904;-1:-1:-1;;;;;376:17904:20;17522:454;;;376:17904;17522:454;;;376:17904;17522:454;;;376:17904;17522:454;;;376:17904;17522:454;;;376:17904;17522:454;;;376:17904;17522:454;;;376:17904;17522:454;;;376:17904;17471:515;;;;;;;;;16778:1215;376:17904;;17471:515;;;;;;;376:17904;;;;17471:515;;;;;;;:::i;:::-;;;;;;;;;16778:1215;17471:515;;16778:1215;:::o;17471:515::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;17413:47;17438:22;;;;;;;;;;;376:17904;;;;17438:22;-1:-1:-1;;;17438:22:20;;;;3970:336:0;17335:68:20;17375:28;;;;;;;;;;;376:17904;;;;17269:56;17302:23;;;;;;;;;;;376:17904;;;;17174:85;17237:22;;;;;;;;;;;376:17904;;;;17237:22;-1:-1:-1;;;17237:22:20;;;;3970:336:0;17178:38:20;17206:10;17195:21;17206:10;;;:::i;17195:21::-;;;17178:38;;17094:70;17141:23;;;;;;;;;;376:17904;;;;17141:23;-1:-1:-1;;;17141:23:20;;;;3970:336:0;18152:126:20;;18231:28;:40;18152:126;18231:17;:28;:::i"},"methodIdentifiers":{"BRIBE_VAULT()":"be309bca","DEFAULT_ADMIN_ROLE()":"a217fddf","MAX_PERIODS()":"0a254640","MAX_PERIOD_DURATION()":"7fb84bed","PROTOCOL()":"91b9b827","TEAM_ROLE()":"49d5e604","addBlacklistedVoters(address[])":"114e6e73","addWhitelistedTokens(address[])":"cd698e69","depositBribe(bytes32,address,uint256,uint256,uint256)":"99702270","depositBribeWithPermit(bytes32,address,uint256,uint256,uint256,uint256,bytes)":"8fef5891","getBlacklistedVoters()":"b0b38baa","getBribe(bytes32,uint256,address)":"f7e6b46b","getRoleAdmin(bytes32)":"248a9ca3","getWhitelistedTokens()":"e26f7900","grantRole(bytes32,address)":"2f2ff15d","grantTeamRole(address)":"f52c395a","hasRole(bytes32,address)":"91d14854","indexOfBlacklistedVoter(address)":"ea24a768","indexOfWhitelistedToken(address)":"8e8efaee","initialize(address,address,string,uint256,uint256)":"8d23507f","isBlacklistedVoter(address)":"2fa4d218","isWhitelistedToken(address)":"ab37f486","maxPeriods()":"5155bafa","periodDuration()":"b470aade","proposalDeadlines(bytes32)":"21298310","removeBlacklistedVoters(address[])":"42a83551","removeWhitelistedTokens(address[])":"bcec454f","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","revokeTeamRole(address)":"5699fbad","setMaxPeriods(uint256)":"da606ce2","setPeriodDuration(uint256)":"7c2d6e01","setProposals(bytes[],uint256)":"84f389a8","setProposalsByAddress(address[],uint256)":"ed99c0d1","setProposalsById(uint256,uint256,uint256)":"d59551d2","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChoiceCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIdentifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeriodDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProtocol\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoWhitelistBribeVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTeamMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoterBlacklisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoterNotBlacklisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"}],\"name\":\"AddBlacklistedVoters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"AddWhitelistedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"GrantTeamRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bribeVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"protocol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPeriods\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodDuration\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"}],\"name\":\"RemoveBlacklistedVoters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"RemoveWhitelistedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamMember\",\"type\":\"address\"}],\"name\":\"RevokeTeamRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPeriods\",\"type\":\"uint256\"}],\"name\":\"SetMaxPeriods\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodDuration\",\"type\":\"uint256\"}],\"name\":\"SetPeriodDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"proposals\",\"type\":\"bytes32[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"SetProposals\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"proposals\",\"type\":\"bytes32[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"SetProposalsByAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"proposals\",\"type\":\"bytes32[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"SetProposalsById\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIBE_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERIODS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERIOD_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_voters\",\"type\":\"address[]\"}],\"name\":\"addBlacklistedVoters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"addWhitelistedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_proposal\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokensPerVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periods\",\"type\":\"uint256\"}],\"name\":\"depositBribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_proposal\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokensPerVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"depositBribeWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlacklistedVoters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bribeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bribeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamMember\",\"type\":\"address\"}],\"name\":\"grantTeamRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfBlacklistedVoter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfWhitelistedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bribeVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_protocol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxPeriods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodDuration\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"isBlacklistedVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isWhitelistedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposalDeadlines\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_voters\",\"type\":\"address[]\"}],\"name\":\"removeBlacklistedVoters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"removeWhitelistedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamMember\",\"type\":\"address\"}],\"name\":\"revokeTeamRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periods\",\"type\":\"uint256\"}],\"name\":\"setMaxPeriods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodDuration\",\"type\":\"uint256\"}],\"name\":\"setPeriodDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_identifiers\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"setProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"setProposalsByAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_choiceCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"setProposalsById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBlacklistedVoters(address[])\":{\"params\":{\"_voters\":\"address[]  Voters to add to blacklist\"}},\"addWhitelistedTokens(address[])\":{\"params\":{\"_tokens\":\"address[]  Tokens to add to whitelist\"}},\"depositBribe(bytes32,address,uint256,uint256,uint256)\":{\"params\":{\"_amount\":\"uint256  Token amount\",\"_maxTokensPerVote\":\"uint256  Max amount of token per vote\",\"_periods\":\"uint256  Number of periods the bribe will be valid\",\"_proposal\":\"bytes32  Proposal\",\"_token\":\"address  Token\"}},\"depositBribeWithPermit(bytes32,address,uint256,uint256,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"uint256  Token amount\",\"_maxTokensPerVote\":\"uint256  Max amount of token per vote\",\"_periods\":\"uint256  Number of periods the bribe will be valid\",\"_permitDeadline\":\"uint256  Deadline for permit signature\",\"_proposal\":\"bytes32  Proposal\",\"_signature\":\"bytes    Permit signature\",\"_token\":\"address  Token\"}},\"getBribe(bytes32,uint256,address)\":{\"params\":{\"_proposal\":\"bytes32  Proposal\",\"_proposalDeadline\":\"uint256  Proposal deadline\",\"_token\":\"address  Token\"},\"returns\":{\"bribeAmount\":\"       address  Token amount\",\"bribeToken\":\"        address  Token address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"grantTeamRole(address)\":{\"params\":{\"_teamMember\":\"address  Address to grant the teamMember role\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,string,uint256,uint256)\":{\"params\":{\"_admin\":\"Admin address\",\"_bribeVault\":\"Bribe vault address\",\"_maxPeriods\":\"Maximum number of periods\",\"_periodDuration\":\"Period duration\",\"_protocol\":\"Protocol name\"}},\"isBlacklistedVoter(address)\":{\"params\":{\"_voter\":\"address Voter address to be checked\"}},\"isWhitelistedToken(address)\":{\"params\":{\"_token\":\"address Token address to be checked\"}},\"removeBlacklistedVoters(address[])\":{\"params\":{\"_voters\":\"address[]  Voters to remove from blacklist\"}},\"removeWhitelistedTokens(address[])\":{\"params\":{\"_tokens\":\"address[]  Tokens to remove from whitelist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"revokeTeamRole(address)\":{\"params\":{\"_teamMember\":\"address  Address to revoke the teamMember role\"}},\"setMaxPeriods(uint256)\":{\"params\":{\"_periods\":\"uint256  Maximum periods\"}},\"setPeriodDuration(uint256)\":{\"params\":{\"_periodDuration\":\"uint256  Period duration\"}},\"setProposals(bytes[],uint256)\":{\"params\":{\"_deadline\":\"uint256  Proposal deadline\",\"_identifiers\":\"bytes[]  identifiers\"}},\"setProposalsByAddress(address[],uint256)\":{\"params\":{\"_addresses\":\"address[]  addresses (eg. gauge addresses)\",\"_deadline\":\"uint256    Proposal deadline\"}},\"setProposalsById(uint256,uint256,uint256)\":{\"params\":{\"_choiceCount\":\"uint256  Number of choices to be voted for\",\"_deadline\":\"uint256  Proposal deadline\",\"_proposalIndex\":\"uint256  Proposal index\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"contract already initialized\"}],\"DeadlinePassed()\":[{\"notice\":\"deadline has passed\"}],\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"InvalidAmount()\":[{\"notice\":\"invalid input amount\"}],\"InvalidChoiceCount()\":[{\"notice\":\"invalid number of choices\"}],\"InvalidDeadline()\":[{\"notice\":\"invalid deadline\"}],\"InvalidIdentifier()\":[{\"notice\":\"empty bytes identifier\"}],\"InvalidMaxPeriod()\":[{\"notice\":\"max period 0 or greater than MAX_PERIODS\"}],\"InvalidPeriod()\":[{\"notice\":\"invalid period\"}],\"InvalidPeriodDuration()\":[{\"notice\":\"period duration 0 or greater than MAX_PERIOD_DURATION\"}],\"InvalidProtocol()\":[{\"notice\":\"invalid protocol name\"}],\"NoWhitelistBribeVault()\":[{\"notice\":\"cannot whitelist BRIBE_VAULT\"}],\"NotAuthorized()\":[{\"notice\":\"not authorized\"}],\"NotTeamMember()\":[{\"notice\":\"not team member\"}],\"TokenNotWhitelisted()\":[{\"notice\":\"token not whitelisted\"}],\"TokenWhitelisted()\":[{\"notice\":\"token already whitelisted\"}],\"VoterBlacklisted()\":[{\"notice\":\"voter already blacklisted\"}],\"VoterNotBlacklisted()\":[{\"notice\":\"voter not blacklisted\"}]},\"kind\":\"user\",\"methods\":{\"addBlacklistedVoters(address[])\":{\"notice\":\"Add blacklisted voters\"},\"addWhitelistedTokens(address[])\":{\"notice\":\"Add whitelisted tokens\"},\"depositBribe(bytes32,address,uint256,uint256,uint256)\":{\"notice\":\"Deposit bribe for a proposal (ERC20 tokens only)\"},\"depositBribeWithPermit(bytes32,address,uint256,uint256,uint256,uint256,bytes)\":{\"notice\":\"Deposit bribe for a proposal (ERC20 tokens only) using permit\"},\"getBlacklistedVoters()\":{\"notice\":\"Return the list of currently blacklisted voter addresses\"},\"getBribe(bytes32,uint256,address)\":{\"notice\":\"Get bribe from BribeVault\"},\"getWhitelistedTokens()\":{\"notice\":\"Return the list of currently whitelisted token addresses\"},\"grantTeamRole(address)\":{\"notice\":\"Grant the team role to an address\"},\"initialize(address,address,string,uint256,uint256)\":{\"notice\":\"Initialize the contract\"},\"isBlacklistedVoter(address)\":{\"notice\":\"Return whether the specified address is blacklisted\"},\"isWhitelistedToken(address)\":{\"notice\":\"Return whether the specified token is whitelisted\"},\"removeBlacklistedVoters(address[])\":{\"notice\":\"Remove blacklisted voters\"},\"removeWhitelistedTokens(address[])\":{\"notice\":\"Remove whitelisted tokens\"},\"revokeTeamRole(address)\":{\"notice\":\"Revoke the team role from an address\"},\"setMaxPeriods(uint256)\":{\"notice\":\"Set maximum periods for submitting bribes ahead of time\"},\"setPeriodDuration(uint256)\":{\"notice\":\"Set period duration per voting round\"},\"setProposals(bytes[],uint256)\":{\"notice\":\"Set multiple proposals with arbitrary bytes data as identifiers under the same deadline\"},\"setProposalsByAddress(address[],uint256)\":{\"notice\":\"Set multiple proposals for many addresses under the same deadline\"},\"setProposalsById(uint256,uint256,uint256)\":{\"notice\":\"Set proposals based on the index of the proposal and the number of choices\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BribeMarket.sol\":\"BribeMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/BribeMarket.sol\":{\"keccak256\":\"0x6269cfaf5af06bd63e04a7c2325faec7f14a605e87ad190289ea814e27159d6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f26f87f2915a86cac68f373475fab39a9e00f5b29d57fde1395f7cf683364df1\",\"dweb:/ipfs/QmRUhzEF5P33aieuwoGmeC2VEBcfr5QgDARGx9yiYMBFh8\"]},\"contracts/interfaces/IBribeVault.sol\":{\"keccak256\":\"0x82bf444d894abacfec1f69dd5dc5140fd6b941ee8922738aee1783ede00d91b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fb794fb92bb601f019b8d73bf05d029a4cd545107a2f429ed874b04040fc41\",\"dweb:/ipfs/QmT8J8huF1RezxApkk23wRqZF3xtxf2bXdUonwRsmXeUty\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/BribeVault.sol":{"BribeVault":{"abi":[{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"uint256","name":"_feeMax","type":"uint256"},{"internalType":"address","name":"_feeRecipient","type":"address"},{"internalType":"address","name":"_distributor","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"BribeAlreadyTransferred","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidArray","type":"error"},{"inputs":[],"name":"InvalidBriber","type":"error"},{"inputs":[],"name":"InvalidDistributor","type":"error"},{"inputs":[],"name":"InvalidFee","type":"error"},{"inputs":[],"name":"InvalidFeeRecipient","type":"error"},{"inputs":[],"name":"InvalidMaxFee","type":"error"},{"inputs":[],"name":"InvalidRewardIdentifier","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"NotDepositor","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"market","type":"address"},{"indexed":true,"internalType":"bytes32","name":"proposal","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"deadline","type":"uint256"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"briber","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxTokensPerVote","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"periodIndex","type":"uint256"}],"name":"DepositBribe","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"admin","type":"address"}],"name":"EmergencyWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_distributor","type":"address"}],"name":"SetDistributor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"SetFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SetRewardForwarding","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"rewardIdentifier","type":"bytes32"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"distributorAmount","type":"uint256"}],"name":"TransferBribe","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSITOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_MAX","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT2","outputs":[{"internalType":"contract IPermit2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"bribes","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"proposal","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"briber","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensPerVote","type":"uint256"},{"internalType":"uint256","name":"periods","type":"uint256"},{"internalType":"uint256","name":"periodDuration","type":"uint256"},{"internalType":"uint256","name":"proposalDeadline","type":"uint256"},{"internalType":"uint256","name":"permitDeadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct Common.DepositBribeParams","name":"_dp","type":"tuple"}],"name":"depositBribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_market","type":"address"},{"internalType":"bytes32","name":"_proposal","type":"bytes32"},{"internalType":"uint256","name":"_proposalDeadline","type":"uint256"},{"internalType":"address","name":"_token","type":"address"}],"name":"generateBribeVaultIdentifier","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_market","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_proposalDeadline","type":"uint256"}],"name":"generateRewardIdentifier","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"bribeIdentifier","type":"bytes32"}],"name":"getBribe","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"rewardIdentifier","type":"bytes32"}],"name":"getBribeIdentifiersByRewardIdentifier","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"}],"name":"grantDepositorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"}],"name":"revokeDepositorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewardForwarding","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"rewardToBribes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"rewardTransfers","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"},{"internalType":"uint256","name":"distributorAmountTransferred","type":"uint256"},{"internalType":"uint256","name":"distributorAmountReceived","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_distributor","type":"address"}],"name":"setDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"setRewardForwarding","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"rewardIdentifiers","type":"bytes32[]"}],"name":"transferBribes","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256t_addresst_address_fromMemory":{"entryPoint":260,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":163,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_div_uint256":{"entryPoint":440,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":214,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":628,"id":null,"parameterSlots":0,"returnSlots":1},"constant_FEE_DIVISOR":{"entryPoint":403,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_BribeVault":{"entryPoint":640,"id":6701,"parameterSlots":4,"returnSlots":0},"convert_address_to_address":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":481,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":465,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":387,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":578,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":556,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_BribeVault":{"entryPoint":346,"id":null,"parameterSlots":0,"returnSlots":4},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":114,"id":null,"parameterSlots":2,"returnSlots":0},"fun_grantRole":{"entryPoint":1012,"id":283,"parameterSlots":2,"returnSlots":0},"fun_hasRole":{"entryPoint":1162,"id":79,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":963,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":947,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":417,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":91,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":1155,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":85,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":492,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":975,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":600,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":985,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":508,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":229,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":188,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x45 JUMPI JUMPDEST PUSH3 0x23 PUSH3 0x19 PUSH3 0x15A JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH3 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CAB PUSH3 0x4A9 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2DC ADD MSTORE PUSH2 0x1511 ADD MSTORE PUSH2 0x2CAB SWAP1 RETURN JUMPDEST PUSH3 0x4F PUSH3 0x55 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x94 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x9E PUSH3 0x5B JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH3 0xBA PUSH3 0xB2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x72 JUMP JUMPDEST JUMP JUMPDEST DUP1 JUMPDEST EQ ISZERO PUSH3 0x55 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBA DUP3 PUSH3 0xBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBA DUP3 PUSH3 0xE5 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH3 0x14A JUMPI JUMPDEST PUSH3 0x11C DUP3 DUP3 PUSH3 0xC7 JUMP JUMPDEST SWAP3 PUSH3 0xE2 PUSH3 0x130 DUP5 PUSH1 0x20 DUP6 ADD PUSH3 0xC7 JUMP JUMPDEST SWAP4 PUSH3 0x140 DUP2 PUSH1 0x40 DUP7 ADD PUSH3 0xF5 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH3 0xF5 JUMP JUMPDEST PUSH3 0x154 PUSH3 0x55 JUMP JUMPDEST PUSH3 0x110 JUMP JUMPDEST PUSH3 0x17D PUSH3 0x3154 DUP1 CODESIZE SUB DUP1 PUSH3 0x171 DUP2 PUSH3 0xA3 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x104 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH3 0xE2 PUSH3 0xE2 PUSH3 0xE2 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xE2 PUSH3 0xF4240 PUSH3 0x183 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x1C3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH3 0x1CD PUSH3 0x1A1 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH3 0xD6 PUSH3 0xE2 PUSH3 0xE2 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xE2 SWAP1 PUSH3 0x1D1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x210 PUSH3 0xE2 PUSH3 0x218 SWAP3 PUSH3 0x183 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x1EC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x1F2 JUMP JUMPDEST PUSH3 0xE2 SWAP1 PUSH3 0xD6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xE2 SWAP1 PUSH3 0x22C JUMP JUMPDEST PUSH3 0xE2 SWAP1 PUSH3 0x242 JUMP JUMPDEST SWAP1 PUSH3 0x26C PUSH3 0xE2 PUSH3 0x218 SWAP3 PUSH3 0x24D JUMP JUMPDEST DUP3 SLOAD PUSH3 0x21C JUMP JUMPDEST PUSH3 0xE2 PUSH1 0x0 PUSH3 0x183 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH3 0x28D PUSH3 0x193 JUMP JUMPDEST PUSH3 0x2AA PUSH3 0xE2 PUSH1 0x2 SWAP3 PUSH3 0x2A3 DUP5 PUSH3 0x183 JUMP JUMPDEST SWAP1 PUSH3 0x1B8 JUMP JUMPDEST DUP6 LT ISZERO PUSH3 0x394 JUMPI DUP5 DUP4 GT PUSH3 0x375 JUMPI PUSH3 0x2C6 PUSH1 0x0 PUSH3 0x1E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH3 0x355 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH3 0x336 JUMPI PUSH3 0x312 PUSH3 0x318 SWAP4 PUSH3 0x320 SWAP7 PUSH1 0x80 MSTORE PUSH1 0x1 PUSH3 0x1FC JUMP JUMPDEST PUSH3 0x258 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x258 JUMP JUMPDEST PUSH3 0xBA PUSH3 0x32E PUSH3 0x274 JUMP JUMPDEST CALLER SWAP1 PUSH3 0x3F4 JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x346 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5C187B8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH3 0x366 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xED1B8B3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH3 0x385 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH3 0x3A4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA51D0C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x3B5 SWAP1 PUSH3 0x24D JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH3 0x1F2 JUMP JUMPDEST SWAP1 PUSH3 0x3EC PUSH3 0xE2 PUSH3 0x218 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3CF JUMP JUMPDEST SWAP1 PUSH3 0x409 PUSH3 0x405 DUP3 DUP5 PUSH3 0x48A JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH3 0x412 JUMPI POP POP JUMP JUMPDEST PUSH3 0x438 PUSH1 0x1 PUSH3 0x432 DUP4 PUSH1 0x0 PUSH3 0x42B DUP8 DUP3 PUSH3 0x3B3 JUMP JUMPDEST ADD PUSH3 0x3C3 JUMP JUMPDEST PUSH3 0x3D9 JUMP JUMPDEST CALLER SWAP1 PUSH3 0x472 PUSH3 0x46B PUSH3 0x46B PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH3 0x24D JUMP JUMPDEST SWAP3 PUSH3 0x47D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0xE2 SWAP2 PUSH3 0x4A2 SWAP2 PUSH3 0x42B PUSH1 0x0 SWAP2 DUP3 PUSH3 0x3B3 JUMP JUMPDEST PUSH3 0x483 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x7CD2FFE EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0x172BECFF EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x1AEA69CA EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x1DA08B87 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x28B16A3F EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x2C4EF0D5 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x429C8910 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x5C2A802B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x6AFDD850 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x75619AB5 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x9E93AD8E EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xB2D7EDB2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xBFE10928 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xC2624E1E EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xCC6C9388 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xE8FA2948 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xEDCDAB77 EQ PUSH2 0x1A1 JUMPI PUSH4 0xF96258C4 EQ PUSH2 0x177 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x2736 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH2 0x717 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST POP CALLVALUE PUSH2 0x1D1 JUMPI JUMPDEST PUSH2 0x1BB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC96 JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x1C8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1F8 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST POP CALLVALUE PUSH2 0x25A JUMPI JUMPDEST PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST POP CALLVALUE PUSH2 0x282 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x717 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST POP CALLVALUE PUSH2 0x2B8 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST POP CALLVALUE PUSH2 0x300 JUMPI JUMPDEST PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH32 0x0 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI JUMPDEST PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x32A PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x34D PUSH2 0x717 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST POP CALLVALUE PUSH2 0x36D JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x375 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3A3 JUMPI JUMPDEST PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x249 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x717 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3CD JUMPI JUMPDEST PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3F7 JUMPI JUMPDEST PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x717 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x41F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0xB12 JUMP JUMPDEST SWAP1 PUSH2 0x2C3D JUMP JUMPDEST PUSH2 0x427 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST POP CALLVALUE PUSH2 0x45C JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x44A PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST POP CALLVALUE PUSH2 0x483 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x48B PUSH2 0x717 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4B9 JUMPI JUMPDEST PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x4AD PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4E0 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x507 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x50F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x531 JUMPI JUMPDEST PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x32A PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x539 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST POP CALLVALUE PUSH2 0x55F JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x567 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST POP CALLVALUE PUSH2 0x587 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5AF JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST POP CALLVALUE PUSH2 0x5D6 JUMPI JUMPDEST PUSH2 0x1BB PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x717 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x601 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x5FB CALLDATASIZE PUSH1 0x4 PUSH2 0x8F5 JUMP JUMPDEST SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x609 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST POP CALLVALUE PUSH2 0x62B JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x633 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST POP CALLVALUE PUSH2 0x664 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x655 PUSH2 0x650 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP4 SWAP2 SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x66C PUSH2 0x717 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST POP CALLVALUE PUSH2 0x68F JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x831 JUMP JUMPDEST SWAP2 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x697 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6B6 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x717 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6E0 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x32A PUSH2 0x6DB CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST POP CALLVALUE PUSH2 0x70A JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x44A PUSH2 0x705 CALLDATASIZE PUSH1 0x4 PUSH2 0x740 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x717 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x71D JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x757 JUMPI PUSH2 0x731 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x75F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x729 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x774 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x7A4 JUMPI PUSH2 0x783 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x717 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x768 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 PUSH2 0x7E1 SWAP1 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 SLOAD PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x819 PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST DUP1 PUSH2 0x729 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x81E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x862 JUMPI JUMPDEST PUSH2 0x754 PUSH2 0x84B DUP5 DUP5 PUSH2 0x783 JUMP JUMPDEST SWAP4 PUSH2 0x859 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x783 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x824 JUMP JUMPDEST PUSH2 0x86A PUSH2 0x717 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x883 JUMPI PUSH2 0x824 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x717 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x754 SWAP1 SLOAD PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8B2 SWAP1 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x8BB DUP2 PUSH2 0x89D JUMP JUMPDEST SWAP2 PUSH2 0x754 PUSH1 0x2 PUSH2 0x8CD PUSH1 0x1 DUP6 ADD PUSH2 0x89D JUMP JUMPDEST SWAP4 ADD PUSH2 0x89D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x73E SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x8F1 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x919 JUMPI JUMPDEST PUSH2 0x910 DUP2 DUP6 PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x824 JUMP JUMPDEST PUSH2 0x921 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x95D PUSH1 0x1 SWAP2 PUSH2 0x94B DUP2 SLOAD SWAP1 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x926 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 SLOAD PUSH2 0x979 JUMP JUMPDEST PUSH2 0x99D PUSH1 0x5 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x890 JUMP JUMPDEST SWAP1 PUSH2 0x9A6 DUP3 SLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x9C1 JUMPI POP PUSH2 0x754 SWAP2 PUSH2 0x9BB SWAP2 PUSH2 0x93D JUMP JUMPDEST SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP3 POP POP POP DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0xA09 JUMPI JUMPDEST PUSH2 0xA00 DUP2 DUP6 PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xA11 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0xA53 JUMPI JUMPDEST PUSH2 0xA2B DUP3 DUP3 PUSH2 0x783 JUMP JUMPDEST SWAP3 PUSH2 0x754 PUSH2 0xA3C DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH2 0xA4A DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x717 JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xA6B JUMPI JUMP JUMPDEST PUSH2 0x73E PUSH2 0x717 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH1 0x2 PUSH2 0x7FC JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x140 SWAP2 SUB SLT PUSH2 0xA8E JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x717 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xACC JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xABF JUMPI JUMPDEST ADD PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x754 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x754 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x764 SWAP1 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0xB2D JUMPI JUMPDEST PUSH2 0x910 DUP2 DUP6 PUSH2 0x783 JUMP JUMPDEST PUSH2 0xB35 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH3 0xF4240 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x754 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x754 PUSH2 0xB5B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xBAC JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0xB9F JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0xA6B JUMPI JUMP JUMPDEST PUSH2 0xBA7 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST SWAP1 PUSH2 0xBE2 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xBF3 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xBE6 JUMPI JUMPDEST ADD PUSH2 0xB6D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0xBEE PUSH2 0x717 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0xBFB PUSH2 0x717 JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH1 0x3 PUSH2 0x7FC JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC30 PUSH2 0xC29 PUSH2 0xC1F DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC41 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xC5E PUSH2 0xC57 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x754 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH1 0x1 PUSH2 0x984 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x754 SWAP1 SLOAD PUSH2 0xC83 JUMP JUMPDEST PUSH2 0xCA1 SWAP1 PUSH1 0x4 PUSH2 0x890 JUMP JUMPDEST SWAP1 PUSH2 0x754 PUSH1 0x1 PUSH2 0x8CD DUP5 PUSH2 0xC8C JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xCCF JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 SLOAD PUSH2 0xCEA JUMP JUMPDEST PUSH2 0x754 SWAP2 PUSH2 0xD19 SWAP2 PUSH2 0xD13 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD37 PUSH2 0x754 SWAP3 PUSH2 0xD2F PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0x89D JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xD53 PUSH2 0xD4E DUP3 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x1020 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x73E SWAP1 CALLER SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0xB3A JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD9B JUMPI POP GT PUSH2 0xD94 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xC0C PUSH2 0xDC8 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xDC2 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xE0F PUSH2 0x754 SWAP4 SWAP3 PUSH2 0xE09 PUSH2 0xE09 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE6F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE77 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE9D PUSH2 0xE2C PUSH1 0x20 SWAP4 PUSH2 0xC0C SWAP4 PUSH2 0xE91 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x754 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 PUSH2 0xEC9 PUSH2 0xEC5 DUP3 DUP5 PUSH2 0xCFF JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xED1 JUMPI POP POP JUMP JUMPDEST PUSH2 0xF42 SWAP3 POP SWAP1 PUSH2 0x754 PUSH2 0xEEF PUSH2 0xEE9 PUSH2 0xF29 SWAP5 PUSH2 0x13D5 JUMP JUMPDEST SWAP3 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xF04 PUSH1 0x20 SWAP2 PUSH2 0xEFE DUP4 PUSH2 0xB3A JUMP JUMPDEST SWAP1 PUSH2 0x1275 JUMP JUMPDEST SWAP3 PUSH2 0xF1D PUSH2 0xF11 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 ADD SWAP3 DUP4 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xEA6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xF57 PUSH2 0xD4E DUP3 PUSH2 0xD1E JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x1096 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xF46 JUMP JUMPDEST ISZERO PUSH2 0xF72 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP2 SWAP1 PUSH2 0xFF1 PUSH2 0xFE1 CALLER PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1015 PUSH2 0x754 PUSH2 0x101C SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFF6 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x102E PUSH2 0xEC5 DUP3 DUP5 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x1036 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1050 PUSH1 0x1 PUSH2 0x104B DUP4 PUSH1 0x0 PUSH2 0xD13 DUP8 DUP3 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1086 PUSH2 0x1080 PUSH2 0x1080 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x7CE JUMP JUMPDEST SWAP3 PUSH2 0x1090 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST SWAP1 PUSH2 0x10A1 DUP2 DUP4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x10A9 JUMPI POP POP JUMP JUMPDEST PUSH2 0x10BD PUSH1 0x0 PUSH2 0x104B DUP4 DUP3 PUSH2 0xD13 DUP8 DUP3 PUSH2 0x890 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1086 PUSH2 0x1080 PUSH2 0x1080 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP6 SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x110E JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1122 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0x112A PUSH2 0x10ED JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x113A JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xC0C PUSH2 0x10ED JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x114F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xC0C PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1175 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0xE2C PUSH2 0xE36 JUMP JUMPDEST SWAP1 PUSH2 0x118F PUSH2 0x118A DUP4 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x11AF PUSH2 0x11A9 DUP5 PUSH2 0x117D JUMP JUMPDEST SWAP4 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 SWAP2 PUSH2 0x11CA DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x11D8 JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x11E0 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP1 ISZERO PUSH2 0x11F2 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0x11FA PUSH2 0x10ED JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0xCEF PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x121F PUSH2 0x110A PUSH2 0x754 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x122B JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xF42 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x12A6 PUSH2 0x12A1 PUSH2 0x1292 DUP4 PUSH2 0x128D DUP7 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x129B DUP6 PUSH2 0xB3A JUMP JUMPDEST SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1199 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x30 PUSH2 0x12BE PUSH2 0x12B8 DUP6 PUSH2 0xB3A JUMP JUMPDEST DUP7 PUSH2 0x11BC JUMP JUMPDEST MSTORE8 PUSH2 0x12F6 PUSH2 0x12ED PUSH1 0xF PUSH1 0xFB SHL SWAP3 PUSH2 0x128D PUSH1 0x1 SWAP6 DUP7 SWAP6 DUP9 BYTE PUSH2 0x12E7 PUSH2 0x12E1 DUP9 PUSH2 0xB3A JUMP JUMPDEST DUP12 PUSH2 0x11BC JUMP JUMPDEST MSTORE8 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x129B DUP4 PUSH2 0xB3A JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x1319 JUMPI JUMPDEST POP POP PUSH2 0x754 SWAP3 SWAP4 PUSH2 0x1313 PUSH2 0x110A PUSH2 0x754 SWAP4 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x1224 JUMP JUMPDEST SWAP1 SWAP5 PUSH2 0x1324 DUP3 PUSH2 0xB3A JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0x13A3 JUMPI PUSH2 0x1390 PUSH2 0x138A DUP4 SWAP3 PUSH2 0x136D PUSH2 0x1350 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 JUMP JUMPDEST PUSH2 0x135A PUSH1 0xF PUSH2 0xB3A JUMP JUMPDEST DUP4 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1396 JUMPI JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST DUP7 BYTE PUSH2 0x1379 DUP11 DUP10 PUSH2 0x11BC JUMP JUMPDEST MSTORE8 PUSH2 0x1384 PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST SWAP1 PUSH2 0x120B JUMP JUMPDEST SWAP7 PUSH2 0x11E5 JUMP JUMPDEST SWAP2 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x139E PUSH2 0x926 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST SWAP5 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x14 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0x754 PUSH2 0x754 PUSH2 0x754 SWAP3 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13F2 PUSH2 0x13ED PUSH2 0x754 SWAP3 PUSH2 0x13E7 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x13FD PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1411 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST PUSH2 0x768 PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x1439 PUSH2 0x768 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1460 JUMPI PUSH2 0x73E SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1020 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x148C PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x14A9 PUSH2 0xEC5 DUP3 DUP5 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x14B6 JUMPI PUSH2 0x73E SWAP2 PUSH2 0x1096 JUMP JUMPDEST POP POP POP PUSH2 0x14C2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3CC50B45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x14E9 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x150F JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xFFB JUMP JUMPDEST SWAP1 PUSH2 0x1508 PUSH2 0x754 PUSH2 0x101C SWAP3 PUSH2 0xB3A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x14EE JUMP JUMPDEST PUSH32 0x0 DUP2 GT PUSH2 0x1573 JUMPI PUSH2 0x1541 DUP2 PUSH1 0x1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x156E PUSH31 0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7 SWAP2 PUSH2 0x24D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x159F PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xFFB JUMP JUMPDEST SWAP1 PUSH2 0x15C3 PUSH2 0x754 PUSH2 0x101C SWAP3 PUSH2 0x7CE JUMP JUMPDEST DUP3 SLOAD PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x768 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x161F JUMPI PUSH2 0x15F1 DUP2 PUSH1 0x2 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x156E PUSH32 0x2E979F80FE4D43055C584CF4A8467C55875EA36728FC37176C05ACD784EB7A73 SWAP2 PUSH2 0x32E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xED1B8B3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x164B PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1658 PUSH2 0x768 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x16A0 JUMPI PUSH2 0x1672 DUP2 PUSH1 0x3 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x156E PUSH32 0xF52F1295A5BD82818185311D8284477532C0EBA12FD2BA17314486D3A8F6810D SWAP2 PUSH2 0x32E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x5C187B8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x764 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x16F3 PUSH1 0x20 PUSH2 0xC0C SWAP5 PUSH2 0x16ED PUSH1 0x14 DUP9 PUSH2 0x16ED DUP3 SWAP12 SWAP11 DUP7 SWAP10 PUSH2 0x16BD JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xF1D PUSH2 0x171D SWAP4 SWAP5 PUSH2 0x170B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x172F PUSH2 0x1728 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x14 SWAP4 SWAP3 PUSH2 0x16F3 DUP6 DUP4 PUSH2 0x16ED PUSH1 0x20 SWAP6 PUSH2 0xC0C SWAP8 PUSH2 0x16BD JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x171D SWAP2 PUSH2 0xF1D PUSH2 0x175D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x40 PUSH2 0x1142 JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x17A0 PUSH1 0x1 PUSH2 0x1786 PUSH2 0x176B JUMP JUMPDEST SWAP5 PUSH2 0xD37 PUSH2 0x1793 DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x17C7 PUSH2 0x17CC SWAP2 PUSH2 0x17BF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH2 0x754 PUSH1 0x20 PUSH2 0x17E3 DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1804 PUSH2 0x17F8 PUSH2 0xC1F DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1815 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1839 PUSH2 0x1832 PUSH1 0x1 SWAP3 PUSH2 0x182A DUP8 PUSH2 0x89D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x1808 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x1865 SWAP3 PUSH2 0x185C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1841 JUMP JUMPDEST SUB DUP4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH2 0x188C PUSH2 0x754 SWAP2 PUSH2 0x1884 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x186C JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x18AC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x1A5D JUMP JUMPDEST CALLDATALOAD PUSH2 0x754 DUP2 PUSH2 0x774 JUMP JUMPDEST CALLDATALOAD PUSH2 0x754 DUP2 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x81E JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x18E6 JUMPI PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x18EE PUSH2 0x717 JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x1944 JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1937 JUMPI JUMPDEST ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0xA6B JUMPI JUMP JUMPDEST PUSH2 0x193F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x194C PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1913 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x11F2 JUMPI SUB SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x197D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x1985 PUSH2 0x195C JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1993 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x199B PUSH2 0x195C JUMP JUMPDEST MOD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xFFB JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x19C2 PUSH2 0x754 PUSH2 0x101C SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x199F JUMP JUMPDEST SWAP1 PUSH2 0x19F2 PUSH2 0x73E SWAP3 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x19F8 JUMPI JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x93D JUMP JUMPDEST SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x1A00 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x19E7 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1A56 PUSH2 0x8F1 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1A4F PUSH1 0xA0 SWAP7 PUSH2 0x1A48 PUSH2 0x73E SWAP11 PUSH2 0x1A38 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD SWAP2 PUSH2 0x1A6C DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 PUSH2 0x1A77 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST SWAP2 PUSH2 0x1A93 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1E9F JUMPI PUSH1 0x60 DUP2 ADD SWAP4 PUSH2 0x1AA6 DUP6 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x1AB3 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x1E82 JUMPI PUSH1 0x40 DUP3 ADD SWAP5 PUSH2 0x1AC6 DUP7 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x1AD8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x1A86 JUMP JUMPDEST EQ PUSH2 0x1E64 JUMPI PUSH2 0x1BE3 SWAP1 PUSH2 0x1AF5 PUSH2 0x1AF0 PUSH2 0x1AF0 DUP6 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST SWAP1 PUSH4 0x70A08231 DUP5 DUP10 PUSH2 0x1B06 ADDRESS PUSH2 0x7CE JUMP JUMPDEST SWAP4 PUSH1 0x20 PUSH2 0x1B12 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x1B1E DUP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1E57 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x1E2F JUMPI JUMPDEST POP SWAP2 PUSH1 0x20 SWAP4 SWAP2 DUP6 PUSH2 0x1BC9 SWAP7 SWAP5 PUSH2 0x1B69 PUSH2 0x1B64 DUP14 PUSH2 0x120 DUP2 ADD SWAP1 PUSH2 0x1900 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B76 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST GT ISZERO PUSH2 0x1E09 JUMPI POP POP POP POP PUSH2 0x1B89 DUP9 PUSH2 0x242F JUMP JUMPDEST PUSH2 0x1BB2 PUSH2 0x1B9B PUSH2 0x1AF0 PUSH2 0x1AF0 DUP11 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH2 0x1BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DFC JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x1DDE JUMPI JUMPDEST POP PUSH2 0x1951 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP5 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1DBA JUMPI JUMPDEST PUSH2 0x1D65 PUSH1 0x0 SWAP7 DUP7 PUSH2 0x1C1B PUSH2 0x1C06 PUSH1 0xE0 DUP8 ADD PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x129B PUSH2 0x1C15 PUSH1 0xC0 DUP10 ADD PUSH2 0x18BB JUMP JUMPDEST DUP6 PUSH2 0x1104 JUMP JUMPDEST DUP6 DUP12 PUSH2 0x1CDE DUP3 DUP11 DUP13 PUSH2 0x1C93 PUSH2 0x1C43 PUSH2 0x1C32 DUP6 PUSH2 0x18BB JUMP JUMPDEST DUP10 PUSH2 0x1C3C DUP7 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 CALLER PUSH2 0x16FB JUMP JUMPDEST SWAP2 PUSH1 0xA0 PUSH2 0x1C54 PUSH2 0x754 DUP6 PUSH1 0x4 PUSH2 0x890 JUMP JUMPDEST SWAP9 ADD PUSH2 0x1C68 PUSH2 0x1C62 DUP3 PUSH2 0x18BB JUMP JUMPDEST DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 DUP13 PUSH2 0x1C77 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 SWAP2 EQ ISZERO PUSH2 0x1DAE JUMPI POP PUSH2 0x1C8D PUSH2 0x129B SWAP3 PUSH2 0x18BB JUMP JUMPDEST SWAP1 PUSH2 0x1989 JUMP JUMPDEST SWAP8 PUSH2 0x1CB5 PUSH2 0x1CAC DUP11 PUSH2 0x1CA7 PUSH1 0x1 DUP12 ADD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH1 0x1 DUP10 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x1CD1 PUSH2 0x1A86 PUSH2 0x1CC4 DUP10 PUSH2 0xC8C JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1D6B JUMPI JUMPDEST POP POP PUSH2 0x18BB JUMP JUMPDEST SWAP2 PUSH2 0x1CFD PUSH1 0x1 PUSH2 0x1CF6 PUSH2 0x1CF0 DUP14 PUSH2 0x18B1 JUMP JUMPDEST SWAP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 ADD PUSH2 0x89D JUMP JUMPDEST SWAP2 PUSH2 0x1D5C DUP8 PUSH2 0x1D0E PUSH1 0x80 DUP14 ADD PUSH2 0x18BB JUMP JUMPDEST PUSH32 0x9350247AE5F8389ED8487DABA15BC7F2173887676A95759508E1844AAE0DFDC7 SWAP6 PUSH2 0x1D49 PUSH2 0x1D43 PUSH2 0x1D3F CALLER PUSH2 0x7CE JUMP JUMPDEST SWAP10 SWAP1 JUMP JUMPDEST SWAP10 PUSH2 0xB3A JUMP JUMPDEST SWAP10 PUSH2 0x1D53 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1A05 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1DA2 PUSH2 0x754 DUP4 PUSH2 0x1D87 PUSH2 0x1D81 PUSH2 0x1DA7 SWAP7 PUSH2 0x18B1 JUMP JUMPDEST DUP11 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x1D9C DUP11 PUSH2 0x1D96 PUSH1 0x5 SWAP4 PUSH2 0x18B1 JUMP JUMPDEST CALLER PUSH2 0x174B JUMP JUMPDEST SWAP1 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x19CA JUMP JUMPDEST DUP11 CODESIZE PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x129B SWAP2 POP PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x1DC9 PUSH2 0x754 PUSH1 0xA0 DUP5 ADD PUSH2 0x18BB JUMP JUMPDEST DUP7 LT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1BF0 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DF6 SWAP2 POP PUSH2 0x1DED RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x18D2 JUMP JUMPDEST CODESIZE PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0x1E04 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0x1E24 PUSH2 0x1E1E PUSH2 0x1CF0 PUSH2 0x1AF0 PUSH2 0x1E2A SWAP8 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH2 0x18BB JUMP JUMPDEST SWAP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1B89 JUMP JUMPDEST DUP6 PUSH2 0x1BC9 SWAP7 SWAP5 SWAP3 SWAP8 POP PUSH2 0x1E4A PUSH1 0x20 SWAP7 SWAP5 SWAP3 PUSH2 0x1DED RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST SWAP8 SWAP3 SWAP5 POP SWAP6 POP SWAP2 SWAP4 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1E5F PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x1E73 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7BC101AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1E90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP PUSH2 0x1EAC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x1EDD PUSH2 0x1ED7 PUSH2 0x754 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x73E SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x8F1 SWAP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F60 SWAP1 PUSH2 0x1F51 PUSH2 0x73E SWAP6 PUSH1 0x4 SWAP6 PUSH2 0x1F37 PUSH4 0x23B872DD PUSH2 0x1EC4 JUMP JUMPDEST SWAP4 PUSH2 0x1F41 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 PUSH2 0x117D JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x729 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x1FA0 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1FC9 JUMPI PUSH2 0x1FA8 JUMP JUMPDEST PUSH2 0x1FD1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1FA8 JUMP JUMPDEST ISZERO PUSH2 0x1FDD JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP2 PUSH2 0x2046 PUSH2 0x2055 SWAP3 PUSH2 0x7CE JUMP JUMPDEST SWAP1 PUSH2 0x204F PUSH2 0x1F98 JUMP JUMPDEST SWAP2 PUSH2 0x2093 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2064 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x2073 JUMPI JUMPDEST POP PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x208D SWAP2 POP PUSH1 0x20 PUSH2 0x2082 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x1FB5 JUMP JUMPDEST CODESIZE PUSH2 0x206D JUMP JUMPDEST PUSH2 0x754 SWAP3 SWAP2 PUSH2 0x20A2 PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST SWAP2 PUSH2 0x2123 JUMP JUMPDEST ISZERO PUSH2 0x20AF JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x211E JUMPI PUSH2 0x2113 RETURNDATASIZE PUSH2 0x117D JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x754 SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x2135 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x214C PUSH2 0x2142 ADDRESS PUSH2 0x7CE JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x215E PUSH2 0x2104 JUMP JUMPDEST SWAP2 PUSH2 0x21B1 JUMP JUMPDEST ISZERO PUSH2 0x216B JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x21E6 JUMPI POP POP DUP2 MLOAD PUSH2 0x21CC PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x21D5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x21E1 PUSH2 0x754 SWAP2 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2164 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x73E SWAP3 POP PUSH2 0x2205 JUMP JUMPDEST EXTCODESIZE PUSH2 0x2201 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 POP PUSH2 0x220F DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x221C PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST GT ISZERO PUSH2 0x222B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF42 SWAP3 POP PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x774 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP2 AND PUSH2 0x729 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x2245 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x2291 JUMPI JUMPDEST PUSH2 0x754 PUSH2 0x227A DUP5 DUP5 PUSH2 0x2238 JUMP JUMPDEST SWAP4 PUSH2 0x2288 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x2299 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x226D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x73E SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x22C3 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x754 PUSH1 0x80 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x22E9 PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x60 PUSH2 0x1142 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0x73E SWAP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE PUSH1 0x40 DUP2 DUP2 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP6 ADD MSTORE ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x40 PUSH2 0x73E SWAP4 PUSH2 0x2364 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xE2C DUP2 PUSH2 0x23A1 DUP2 PUSH2 0xC0C SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x23D8 PUSH2 0x754 SWAP6 SWAP4 SWAP5 SWAP3 SWAP5 PUSH2 0x23CE PUSH2 0x100 DUP5 ADD SWAP7 PUSH1 0x0 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x238A JUMP JUMPDEST PUSH2 0x22C3 PUSH2 0x73E SWAP5 PUSH2 0x241F PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x240F PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x243A PUSH2 0x1AF0 PUSH2 0xAD9 JUMP JUMPDEST PUSH4 0x927DA105 SWAP2 PUSH1 0x40 DUP2 ADD SWAP2 PUSH2 0x244E DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x60 PUSH2 0x2485 PUSH2 0x2462 DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP8 PUSH2 0x2490 PUSH2 0x246F ADDRESS PUSH2 0x7CE JUMP JUMPDEST DUP1 SWAP11 PUSH2 0x247A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP10 DUP11 SWAP6 DUP7 SWAP6 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x229E JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2689 JUMPI JUMPDEST PUSH1 0x0 SWAP5 PUSH2 0x2668 JUMPI JUMPDEST POP PUSH4 0x2B67B570 SWAP5 PUSH2 0x24B5 DUP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH2 0x24BF DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP2 ADD SWAP7 PUSH2 0x24CE DUP9 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x24D7 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 PUSH2 0x24E7 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x250B SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x40 DUP5 ADD MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2532 PUSH2 0x100 DUP3 ADD PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x253A PUSH2 0x22F4 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD PUSH2 0x255F SWAP2 PUSH2 0x1900 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 DUP7 EXTCODESIZE ISZERO PUSH2 0x258D PUSH1 0x0 SWAP11 PUSH2 0x2598 PUSH2 0x25EC SWAP10 DUP14 SWAP10 PUSH2 0x25F7 SWAP9 DUP12 SWAP7 PUSH2 0x265B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x23A8 JUMP JUMPDEST SUB DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x264E JUMPI JUMPDEST PUSH2 0x263A JUMPI JUMPDEST POP PUSH2 0x25D3 PUSH2 0x25CD PUSH2 0x25C8 PUSH2 0x25C2 PUSH4 0x36C78516 SWAP7 PUSH2 0x18B1 JUMP JUMPDEST SWAP10 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x26F3 JUMP JUMPDEST SWAP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 DUP7 EXTCODESIZE ISZERO PUSH2 0x262D JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x23E5 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2620 JUMPI JUMPDEST PUSH2 0x2609 JUMPI POP JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x2617 RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x2628 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2635 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x25DC JUMP JUMPDEST PUSH2 0x2648 SWAP1 PUSH2 0x2617 RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST CODESIZE PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x2656 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x25A5 JUMP JUMPDEST PUSH2 0x2663 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x257F JUMP JUMPDEST PUSH2 0x2681 SWAP2 SWAP5 POP PUSH2 0x2678 RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2260 JUMP JUMPDEST SWAP5 SWAP2 POP PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x2691 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x249D JUMP JUMPDEST ISZERO PUSH2 0x269D JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x36302062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x2712 PUSH2 0x270A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13A9 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x2696 JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x274C DUP2 PUSH2 0x2747 DUP5 PUSH1 0x7 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x15B3 JUMP JUMPDEST PUSH32 0xBBD6EB1E2586CC8EA8E80AA1CCF25590BEFFDD2CB73367B5AC49214505BB48C4 SWAP2 PUSH2 0x156E PUSH2 0x277A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2717 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2793 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x27C8 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x27A8 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x27B0 PUSH2 0x926 JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 SWAP2 PUSH1 0x0 SWAP4 PUSH2 0x27D7 DUP6 PUSH2 0xB3A JUMP JUMPDEST DUP5 EQ PUSH2 0x2A92 JUMPI PUSH1 0x0 JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x2A8A JUMPI PUSH2 0x27FC PUSH2 0x27F7 DUP3 DUP7 DUP7 PUSH2 0x2798 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH2 0x2810 PUSH2 0x280C DUP3 DUP5 PUSH2 0x890 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x281C PUSH2 0x110A DUP11 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x2A6A JUMPI PUSH2 0x282F PUSH2 0x754 DUP3 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST SWAP1 PUSH2 0x285B DUP10 PUSH2 0x2855 PUSH2 0x284F PUSH2 0x9BB DUP4 PUSH2 0x284A DUP8 PUSH1 0x4 SWAP11 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST DUP7 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0xC8C JUMP JUMPDEST SWAP2 PUSH2 0x2865 DUP3 PUSH2 0x2AFA JUMP JUMPDEST SWAP1 SWAP5 PUSH1 0x1 DUP4 ADD SWAP2 PUSH2 0x2875 DUP4 PUSH2 0x89D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3E JUMPI PUSH1 0x2 PUSH2 0x299F DUP9 DUP16 PUSH2 0x2A04 SWAP11 SWAP9 SWAP7 DUP9 SWAP7 PUSH2 0x28D1 PUSH2 0x29B4 SWAP8 PUSH2 0x27E2 SWAP16 SWAP14 SWAP12 SWAP5 PUSH2 0x291F SWAP6 ADD SWAP4 PUSH2 0x28CC PUSH2 0x28B3 PUSH2 0x28AD DUP8 PUSH2 0x89D JUMP JUMPDEST DUP10 PUSH2 0x1951 JUMP JUMPDEST SWAP8 PUSH2 0x28C6 PUSH2 0x28C0 DUP5 PUSH2 0x89D JUMP JUMPDEST DUP6 PUSH2 0x1951 JUMP JUMPDEST SWAP7 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x28DA DUP11 PUSH2 0x7CE JUMP JUMPDEST SWAP2 PUSH2 0x28E4 DUP4 PUSH2 0x7CE JUMP JUMPDEST SWAP1 PUSH4 0x70A08231 SWAP4 PUSH1 0x20 PUSH2 0x28F7 PUSH1 0x3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP3 PUSH2 0x2908 DUP11 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x2A31 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x2A0B JUMPI JUMPDEST POP SWAP1 PUSH2 0x2961 SWAP2 PUSH2 0x2951 PUSH1 0x20 SWAP7 SWAP8 SWAP9 PUSH2 0x294B DUP13 PUSH2 0xC8C JUMP JUMPDEST DUP4 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x295B PUSH1 0x3 PUSH2 0xC8C JUMP JUMPDEST SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x2988 PUSH2 0x296E PUSH1 0x3 PUSH2 0xC8C JUMP JUMPDEST SWAP5 PUSH2 0x1BC9 PUSH2 0x297B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ADD PUSH2 0x29AE DUP4 PUSH2 0x1CA7 DUP4 PUSH2 0x89D JUMP JUMPDEST SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x29E5 PUSH2 0x29DF PUSH32 0xB14BADDC4B3D8807F1D5DFE595F14ED9E87FCDB8D45909968B5A64F952E399FD SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x7CE JUMP JUMPDEST SWAP4 PUSH2 0x29FB PUSH2 0x29F2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x27B5 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x20 SWAP6 SWAP7 POP SWAP1 PUSH2 0x2951 PUSH2 0x2A26 PUSH2 0x2961 SWAP5 SWAP4 PUSH2 0x1DED RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST SWAP8 SWAP7 POP POP SWAP1 SWAP2 PUSH2 0x2934 JUMP JUMPDEST PUSH2 0x2A39 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x292C JUMP JUMPDEST POP SWAP10 POP POP POP POP POP POP POP POP POP POP PUSH2 0xF42 SWAP2 POP PUSH2 0x2A58 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6E997D67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x2A7B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7E1FAE3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP POP POP PUSH2 0x2AA0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1EC5AA51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1F60 PUSH1 0x4 SWAP3 PUSH2 0x1F51 PUSH2 0x73E SWAP6 PUSH2 0x2AD3 PUSH4 0xA9059CBB PUSH2 0x1EC4 JUMP JUMPDEST SWAP3 PUSH2 0x2ADD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0x11CA DUP5 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B0A PUSH2 0x188C PUSH1 0x0 SWAP3 PUSH1 0x5 PUSH2 0x890 JUMP JUMPDEST DUP2 SWAP3 PUSH2 0x2B14 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP4 JUMPDEST DUP4 JUMPDEST DUP6 LT ISZERO PUSH2 0x2B54 JUMPI PUSH2 0x2B4C PUSH2 0x2B45 PUSH2 0x2B19 SWAP3 PUSH2 0x129B PUSH1 0x1 PUSH2 0xD37 PUSH1 0x4 PUSH2 0x1D9C PUSH2 0x2B41 DUP14 DUP13 PUSH2 0x2AED JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP6 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2B17 JUMP JUMPDEST SWAP4 POP SWAP2 POP POP PUSH2 0x754 PUSH2 0x2B7A PUSH2 0x2B6C PUSH2 0x1C15 PUSH1 0x1 PUSH2 0x89D JUMP JUMPDEST PUSH2 0x2B74 PUSH2 0xB47 JUMP JUMPDEST SWAP1 PUSH2 0x1973 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x1951 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2B91 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x2BAB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB9 PUSH2 0x768 DUP3 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x1E9F JUMPI PUSH2 0x2BD1 SWAP1 PUSH2 0xB3A JUMP JUMPDEST DUP3 EQ PUSH2 0x2C31 JUMPI PUSH2 0x2BE0 DUP2 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x2BEC DUP4 CALLER DUP1 SWAP4 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x2C16 PUSH32 0x3AB9DB27A4CDD8C603A752B62D5FBD93B4B3509FE2596708E9688E42BBAC3576 SWAP3 PUSH2 0x7CE JUMP JUMPDEST SWAP3 PUSH2 0x2C2C PUSH2 0x2C23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2B96 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP POP POP PUSH2 0x1E90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2B81 JUMP INVALID DUP16 0x4F 0x2D LOG2 0x2E DUP11 0xC8 CALL 0x1E ISZERO 0xF9 0xFC EQ SHR 0xDD 0xBB 0x5D 0xEE 0xA8 DUP1 ADD DUP7 JUMP EXP 0xBB PUSH15 0x68C5496619A9A36469706673582212 KECCAK256 SHR 0xE3 XOR 0xEA 0xCC STATICCALL PUSH11 0xF2BED5640C13F2AFB68735 CALLDATACOPY PUSH31 0x329B38AB9D38BD1BEADC29EF6C6578706572696D656E74616CF564736F6C63 NUMBER STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"584:14918:21:-:0;;;;;;-1:-1:-1;584:14918:21;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;584:14918:21;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;584:14918:21;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;1011:47;1049:9;;;:::i;:::-;;584:14918;;;1049:9;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1049:9:21;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;;;;584:14918:21;1049:9;;;;;;;-1:-1:-1;;;;;584:14918:21;1049:9;584:14918;1049:9;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;2153:49:0:-;2198:4;;;:::i;2980:629:21:-;;;;3171:11;;:::i;:::-;3160:26;3171:15;3185:1;3171:15;;;;:::i;:::-;;;:::i;3160:26::-;;;;3156:61;;3231:14;;;3227:46;;3304:10;3312:1;3304:10;:::i;:::-;-1:-1:-1;;;;;584:14918:21;;-1:-1:-1;;;;;584:14918:21;;3287:27;3283:68;;-1:-1:-1;;;;;584:14918:21;-1:-1:-1;;;;;584:14918:21;;3365:26;3361:66;;3465:10;3485:28;3438:17;3523:26;3438:17;;;3465:10;;:::i;:::-;3485:28;:::i;:::-;3523:26;;:::i;:::-;3591:10;3571:18;;:::i;:::-;3591:10;;;:::i;3361:66::-;3400:27;;;;;;;584:14918;;;;3400:27;-1:-1:-1;;;3400:27:21;;;;;3283:68;3323:28;;;;;;;;584:14918;;;;3323:28;-1:-1:-1;;;3323:28:21;;;;3400:27;3227:46;3254:19;;;;;;;584:14918;;;;3254:19;-1:-1:-1;;;3254:19:21;;;;3400:27;3156:61;3195:22;;;;;;;584:14918;;;;3195:22;-1:-1:-1;;;3195:22:21;;;;3400:27;584:14918;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;1049:9;584:14918;;;;;;;;;;;;;;:::i;7587:233:0:-;;7669:23;7670:22;;;;:::i;:::-;7669:23;;584:14918:21;7669:23:0;7665:149;;7587:233;;:::o;7665:149::-;7708:36;7740:4;7708:29;:6;;:12;;;;:::i;:::-;:20;:29;:::i;:::-;:36;:::i;:::-;734:10:11;7763:40:0;;;;;;584:14918:21;;7763:40:0;;;:::i;:::-;;;584:14918:21;;;;7763:40:0;;;;7587:233::o;584:14918:21:-;;;;;:::o;3021:145:0:-;3130:29;;;;:12;:6;:12;;;:::i;:29::-;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":2656,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_bytes32t_uint256t_address":{"entryPoint":2582,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_addresst_uint256":{"entryPoint":2834,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":2925,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_bytes32_dyn_calldata_ptr":{"entryPoint":3001,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":8117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":2159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_address":{"entryPoint":2533,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes32t_uint256":{"entryPoint":2293,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes4":{"entryPoint":1856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_struct_DepositBribeParams_calldata":{"entryPoint":2687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_DepositBribeParams_calldata_ptr":{"entryPoint":2710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":8104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":1841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint160_fromMemory":{"entryPoint":8760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint160t_uint48t_uint48_fromMemory":{"entryPoint":8800,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256":{"entryPoint":2084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":6354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint48_fromMemory":{"entryPoint":8787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_bytes32_dyn_storage":{"entryPoint":6209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":10007,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_address":{"entryPoint":8862,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint160_address":{"entryPoint":9189,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":7914,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint256_uint256":{"entryPoint":6661,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_address_struct_PermitSingle_bytes_calldata":{"entryPoint":9128,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":5821,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256":{"entryPoint":2504,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":3174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_memory_ptr":{"entryPoint":3088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_storage":{"entryPoint":6121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_to_bytes32_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes_calldata":{"entryPoint":9098,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_contract_IPermit2":{"entryPoint":2809,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_address_bytes32_uint256_address":{"entryPoint":5840,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_packed_address_uint256_address":{"entryPoint":5939,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_stringliteral_da0d_string_stringliteral_f986_string":{"entryPoint":3537,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":3750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":3504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":3708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_04fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_976e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_da0d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f986":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fb06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_PermitDetails":{"entryPoint":8958,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_PermitSingle":{"entryPoint":9033,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IPermit2":{"entryPoint":2818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_04fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_976e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_fb06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint160":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint160_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":11158,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":10165,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":2260,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_bytes_calldata":{"entryPoint":6400,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_bytes":{"entryPoint":4505,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":4418,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":4477,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Bribe":{"entryPoint":5995,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_PermitDetails_storage_ptr":{"entryPoint":8914,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_PermitSingle_storage_ptr":{"entryPoint":8948,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":4438,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr":{"entryPoint":6602,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_array_bytes32_dyn_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes32_dyn_calldata":{"entryPoint":10136,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":4398,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":6515,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":4356,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6481,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1896,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_0_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_15_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_1_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_281474976710655_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_2_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_ADDRESS_LENGTH":{"entryPoint":5051,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":2907,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEPOSITOR_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_FEE_DIVISOR":{"entryPoint":2887,"id":null,"parameterSlots":0,"returnSlots":1},"constant_PERMIT2":{"entryPoint":2777,"id":null,"parameterSlots":0,"returnSlots":1},"constant_SYMBOLS":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":1998,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IPermit2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_bytes32_dyn_storage_to_array_bytes32_dyn":{"entryPoint":6252,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_bytes32_dyn_storage_to_array_bytes32_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_bytes_to_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":3442,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_Address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_BribeVault_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IERC20_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IPermit2_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1000000_by_1_to_uint256":{"entryPoint":2874,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":5155,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":5142,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint48":{"entryPoint":8924,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":4606,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_0448_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_47fb_to_string":{"entryPoint":8088,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_cb29_to_bytes16":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_Bribe_storage_to_struct_Bribe":{"entryPoint":6055,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Bribe_storage_to_struct_Bribe_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Transfer_storage_to_struct_Transfer_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1989,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IPermit2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1969,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":5033,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":7876,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint8_to_uint256":{"entryPoint":5061,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_bytes32_dyn":{"entryPoint":6219,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":9086,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":8037,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3451,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":4581,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_address":{"entryPoint":2031,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bytes32":{"entryPoint":2425,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":3203,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":3306,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":2198,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":8452,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":3661,"id":null,"parameterSlots":2,"returnSlots":0},"fun__checkRole":{"entryPoint":3431,"id":92,"parameterSlots":1,"returnSlots":0},"fun__revokeRole":{"entryPoint":4246,"id":314,"parameterSlots":2,"returnSlots":0},"fun_calculateTransferAmounts":{"entryPoint":11002,"id":7312,"parameterSlots":1,"returnSlots":2},"fun_callOptionalReturn":{"entryPoint":8246,"id":1278,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":3767,"id":131,"parameterSlots":2,"returnSlots":0},"fun_depositBribe":{"entryPoint":7867,"id":7228,"parameterSlots":1,"returnSlots":0},"fun_depositBribe_inner":{"entryPoint":6749,"id":null,"parameterSlots":1,"returnSlots":0},"fun_emergencyWithdraw":{"entryPoint":11325,"id":7528,"parameterSlots":2,"returnSlots":0},"fun_emergencyWithdraw_inner":{"entryPoint":11179,"id":null,"parameterSlots":2,"returnSlots":0},"fun_functionCall":{"entryPoint":8339,"id":1417,"parameterSlots":3,"returnSlots":1},"fun_functionCallWithValue":{"entryPoint":8483,"id":1481,"parameterSlots":4,"returnSlots":1},"fun_generateBribeVaultIdentifier":{"entryPoint":5883,"id":6868,"parameterSlots":4,"returnSlots":1},"fun_generateRewardIdentifier":{"entryPoint":5963,"id":6892,"parameterSlots":3,"returnSlots":1},"fun_getBribe":{"entryPoint":6064,"id":6916,"parameterSlots":1,"returnSlots":2},"fun_getBribeIdentifiersByRewardIdentifier":{"entryPoint":6261,"id":6930,"parameterSlots":1,"returnSlots":1},"fun_getRoleAdmin":{"entryPoint":3358,"id":146,"parameterSlots":1,"returnSlots":1},"fun_grantDepositorRole":{"entryPoint":5236,"id":6728,"parameterSlots":1,"returnSlots":0},"fun_grantDepositorRole_inner":{"entryPoint":5164,"id":null,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":4128,"id":283,"parameterSlots":2,"returnSlots":0},"fun_grantRole_166":{"entryPoint":3421,"id":166,"parameterSlots":2,"returnSlots":0},"fun_grantRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_hasRole":{"entryPoint":3327,"id":79,"parameterSlots":2,"returnSlots":1},"fun_isContract":{"entryPoint":8691,"id":1345,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_renounceRole":{"entryPoint":4048,"id":209,"parameterSlots":2,"returnSlots":0},"fun_revert":{"entryPoint":8709,"id":1656,"parameterSlots":2,"returnSlots":0},"fun_revokeDepositorRole":{"entryPoint":5329,"id":6754,"parameterSlots":1,"returnSlots":0},"fun_revokeDepositorRole_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_revokeRole":{"entryPoint":3937,"id":186,"parameterSlots":2,"returnSlots":0},"fun_revokeRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_safeTransfer":{"entryPoint":10937,"id":984,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":7963,"id":1011,"parameterSlots":4,"returnSlots":0},"fun_setDistributor":{"entryPoint":5812,"id":6841,"parameterSlots":1,"returnSlots":0},"fun_setDistributor_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setFee":{"entryPoint":5511,"id":6781,"parameterSlots":1,"returnSlots":0},"fun_setFeeRecipient":{"entryPoint":5683,"id":6811,"parameterSlots":1,"returnSlots":0},"fun_setFeeRecipient_inner":{"entryPoint":5578,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setFee_inner":{"entryPoint":5391,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setRewardForwarding":{"entryPoint":10038,"id":7248,"parameterSlots":1,"returnSlots":0},"fun_supportsInterface":{"entryPoint":3248,"id":60,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_2467":{"entryPoint":null,"id":2467,"parameterSlots":1,"returnSlots":1},"fun_toHexString":{"entryPoint":5077,"id":1890,"parameterSlots":1,"returnSlots":1},"fun_toHexString_1870":{"entryPoint":4725,"id":1870,"parameterSlots":2,"returnSlots":1},"fun_toUint160":{"entryPoint":9971,"id":3649,"parameterSlots":1,"returnSlots":1},"fun_transferBribes":{"entryPoint":10927,"id":7479,"parameterSlots":2,"returnSlots":0},"fun_transferBribes_inner":{"entryPoint":10184,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferWithPermit":{"entryPoint":9263,"id":7002,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":8625,"id":1612,"parameterSlots":4,"returnSlots":1},"getter_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":2917,"id":27,"parameterSlots":0,"returnSlots":1},"getter_fun_DEPOSITOR_ROLE":{"entryPoint":null,"id":6541,"parameterSlots":0,"returnSlots":1},"getter_fun_FEE_DIVISOR":{"entryPoint":2899,"id":6534,"parameterSlots":0,"returnSlots":1},"getter_fun_FEE_MAX":{"entryPoint":null,"id":6536,"parameterSlots":0,"returnSlots":1},"getter_fun_PERMIT2":{"entryPoint":2801,"id":6531,"parameterSlots":0,"returnSlots":1},"getter_fun_bribes":{"entryPoint":3222,"id":6552,"parameterSlots":1,"returnSlots":2},"getter_fun_distributor":{"entryPoint":3072,"id":6547,"parameterSlots":0,"returnSlots":1},"getter_fun_fee":{"entryPoint":3191,"id":6543,"parameterSlots":0,"returnSlots":1},"getter_fun_feeRecipient":{"entryPoint":2675,"id":6545,"parameterSlots":0,"returnSlots":1},"getter_fun_rewardForwarding":{"entryPoint":2055,"id":6566,"parameterSlots":1,"returnSlots":1},"getter_fun_rewardToBribes":{"entryPoint":2447,"id":6557,"parameterSlots":2,"returnSlots":1},"getter_fun_rewardTransfers":{"entryPoint":2215,"id":6562,"parameterSlots":1,"returnSlots":3},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_address_of_address":{"entryPoint":2007,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_array_bytes32_dyn_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_Bribe_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_Transfer_storage_of_bytes32":{"entryPoint":2192,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":4540,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":10989,"id":null,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":6537,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyRole":{"entryPoint":3389,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_178":{"entryPoint":3910,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_6708":{"entryPoint":5122,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6735":{"entryPoint":5245,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6761":{"entryPoint":5338,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6788":{"entryPoint":5520,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_6818":{"entryPoint":5692,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_7010":{"entryPoint":6289,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_7320":{"entryPoint":10115,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_7488":{"entryPoint":11137,"id":38,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":4333,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6492,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2342,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3638,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":6321,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint256":{"entryPoint":6331,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Bribe":{"entryPoint":6005,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":2044,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bytes32":{"entryPoint":2436,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":3212,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":3317,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":2205,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_04fc":{"entryPoint":4644,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_565f":{"entryPoint":8360,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_976e":{"entryPoint":9878,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc2e":{"entryPoint":8548,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e11a":{"entryPoint":8150,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fb06":{"entryPoint":3947,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":1815,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":6387,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":3628,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint8":{"entryPoint":4619,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_bytes32_dyn":{"entryPoint":2365,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":5540,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":6559,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":5358,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":4086,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_bytes32_to_bytes32":{"entryPoint":6579,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":5555,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":4101,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":5368,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":1908,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":8096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":1821,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":2078,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint48":{"entryPoint":8773,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_struct_PermitDetails":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint160":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_bytes1":{"entryPoint":4500,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes32":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint160":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"6536":[{"length":32,"start":732},{"length":32,"start":5393}]},"linkReferences":{},"object":"60806040526004361015610018575b610016610717565b005b60003560e01c806301ffc9a7146106ed57806307cd2ffe146106c3578063172becff1461069c5780631aea69ca146106715780631da08b8714610638578063248a9ca31461060e57806328b16a3f146105e35780632c4ef0d5146105bc5780632f2ff15d1461059457806336568abe1461056c578063429c89101461053e57806346904840146105145780635c2a802b146104ed57806369fe0e2d146104c65780636afdd8501461049057806375619ab51461046957806391d148541461042c57806395ccea67146104045780639e93ad8e146103da578063a217fddf146103b0578063a3b0b5a31461037a578063b2d7edb214610352578063bfe109281461030d578063c2624e1e146102c5578063cc6c93881461028f578063d547741f14610267578063ddca3f431461022c578063e74b981b14610205578063e8fa2948146101de578063edcdab77146101a15763f96258c4146101775761000e565b34610194575b61001661018b366004610790565b612736565b0390f35b61019c610717565b61017d565b50346101d1575b6101bb6101b636600461086f565b610c96565b906101906101c860405190565b928392836109c8565b6101d9610717565b6101a8565b50346101f8575b6100166101f3366004610790565b6114d1565b610200610717565b6101e5565b503461021f575b61001661021a366004610790565b611633565b610227610717565b61020c565b503461025a575b61023e366004610a60565b610190610249610c77565b6040515b9182918290815260200190565b610262610717565b610233565b5034610282575b61001661027c3660046109e5565b90610f61565b61028a610717565b61026e565b50346102b8575b6101906102ac6102a736600461086f565b611875565b60405191829182610c66565b6102c0610717565b610296565b5034610300575b6102d7366004610a60565b6101907f0000000000000000000000000000000000000000000000000000000000000000610249565b610308610717565b6102cc565b5034610345575b61031f366004610a60565b61019061032a610c00565b6040515b918291826001600160a01b03909116815260200190565b61034d610717565b610314565b503461036d575b610016610367366004610bb9565b90612aaf565b610375610717565b610359565b50346103a3575b61038c366004610a60565b610190600080516020612c48833981519152610249565b6103ab610717565b610381565b50346103cd575b6103c2366004610a60565b610190610249610b65565b6103d5610717565b6103b7565b50346103f7575b6103ec366004610a60565b610190610249610b53565b6103ff610717565b6103e1565b503461041f575b610016610419366004610b12565b90612c3d565b610427610717565b61040b565b503461045c575b61019061044a6104443660046109e5565b90610cff565b60405191829182901515815260200190565b610464610717565b610433565b5034610483575b61001661047e366004610790565b6116b4565b61048b610717565b610470565b50346104b9575b6104a2366004610a60565b6101906104ad610af1565b60405191829182610b02565b6104c1610717565b610497565b50346104e0575b6100166104db36600461086f565b611587565b6104e8610717565b6104cd565b5034610507575b610016610502366004610a96565b611ebb565b61050f610717565b6104f4565b5034610531575b610526366004610a60565b61019061032a610a73565b610539610717565b61051b565b503461055f575b610190610249610556366004610a16565b929190916116fb565b610567610717565b610545565b5034610587575b6100166105813660046109e5565b90610fd0565b61058f610717565b610573565b50346105af575b6100166105a93660046109e5565b90610d5d565b6105b7610717565b61059b565b50346105d6575b6101bb6105d136600461086f565b6117b0565b6105de610717565b6105c3565b5034610601575b6101906102496105fb3660046108f5565b9061098f565b610609610717565b6105ea565b503461062b575b61019061024961062636600461086f565b610d1e565b610633610717565b610615565b5034610664575b61019061065561065036600461086f565b6108a7565b604051919391938493846108d4565b61066c610717565b61063f565b503461068f575b610190610249610689366004610831565b9161174b565b610697610717565b610678565b50346106b6575b6100166106b1366004610790565b611474565b6106be610717565b6106a3565b50346106e0575b61019061032a6106db366004610790565b610807565b6106e8610717565b6106ca565b503461070a575b61019061044a610705366004610740565b610cb0565b610712610717565b6106f4565b50600080fd5b6001600160e01b031981165b141561071757565b9050359061073e8261071d565b565b906107549160208183031261075757610731565b90565b61075f610717565b610731565b9052565b6001600160a01b031690565b6001600160a01b038116610729565b9050359061073e82610774565b90610754916020818303126107a457610783565b6107ac610717565b610783565b61075490610768906001600160a01b031682565b610754906107b1565b610754906107c5565b906107e1906107ce565b600052602052604060002090565b610754916008021c610768565b9061075491546107ef565b610754906108196007916000926107d7565b6107fc565b80610729565b9050359061073e8261081e565b9091606082840312610862575b61075461084b8484610783565b936108598160208601610783565b93604001610824565b61086a610717565b61083e565b906107549160208183031261088357610824565b61088b610717565b610824565b906107e1565b6107549081565b6107549054610896565b6108b2906006610890565b6108bb8161089d565b9161075460026108cd6001850161089d565b930161089d565b90815260608101939261073e9290916040916108f1906020830152565b0152565b919061075490604084820312610919575b6109108185610824565b93602001610824565b610921610717565b610906565b50634e487b7160e01b600052603260045260246000fd5b61095d60019161094b815490565b84101561096657600052602060002090565b91020190600090565b61096e610926565b600052602060002090565b610754916008021c81565b906107549154610979565b61099d600591600092610890565b906109a6825490565b8310156109c15750610754916109bb9161093d565b90610984565b9250505080fd5b6001600160a01b03909116815260408101929161073e9160200152565b919061075490604084820312610a09575b610a008185610824565b93602001610783565b610a11610717565b6109f6565b608081830312610a53575b610a2b8282610783565b92610754610a3c8460208501610824565b93610a4a8160408601610824565b93606001610783565b610a5b610717565b610a21565b6000910312610a6b57565b61073e610717565b610754600060026107fc565b9081610140910312610a8e5790565b610754610717565b9061075491602081830312610acc575b80359067ffffffffffffffff8211610abf575b01610a7f565b610ac7610717565b610ab9565b610ad4610717565b610aa6565b6107546e22d473030f116ddee9f6b43ac78ba36107ce565b610754610ad9565b610764906107ce565b60208101929161073e9190610af9565b919061075490604084820312610b2d575b6109108185610783565b610b35610717565b610b23565b6107546107546107549290565b610754620f4240610b3a565b610754610b47565b6107546000610b3a565b610754610b5b565b909182601f83011215610bac575b602082359267ffffffffffffffff8411610b9f575b019260208302840111610a6b57565b610ba7610717565b610b90565b610bb4610717565b610b7b565b90610be291602081830312610bf3575b80359067ffffffffffffffff8211610be6575b01610b6d565b9091565b610bee610717565b610bdc565b610bfb610717565b610bc9565b610754600060036107fc565b0190565b90610c30610c29610c1f845190565b8084529260200190565b9260200190565b9060005b818110610c415750505090565b909192610c5e610c576001928651815260200190565b9460200190565b929101610c34565b602080825261075492910190610c10565b61075460006001610984565b61075490610768565b6107549054610c83565b610ca1906004610890565b9061075460016108cd84610c8c565b637965db0b60e01b6001600160e01b0319821614908115610ccf575090565b61075491506001600160e01b0319166301ffc9a760e01b1490565b610754905b60ff1690565b6107549054610cea565b61075491610d1991610d1360009182610890565b016107d7565b610cf5565b6001610d3761075492610d2f600090565b506000610890565b0161089d565b9061073e91610d53610d4e82610d1e565b610d67565b9061073e91611020565b9061073e91610d3d565b61073e903390610eb7565b61075490610b3a565b918091926000905b828210610d9b575011610d94575050565b6000910152565b91508060209183015181860152018291610d83565b610c0c610dc892602092610dc2815190565b94859290565b93849101610d7b565b610e0f6107549392610e09610e09937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90610db0565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610e6f57604052565b610e77610e36565b604052565b610e9d610e2c602093610c0c93610e91815190565b80835293849260200190565b95869101610d7b565b602080825261075492910190610e7c565b90610ec9610ec58284610cff565b1590565b610ed1575050565b610f42925090610754610eef610ee9610f29946113d5565b92610d72565b610f04602091610efe83610b3a565b90611275565b92610f1d610f1160405190565b94859384019283610dd1565b90810382520382610e4d565b6040515b62461bcd60e51b815291829160048301610ea6565b0390fd5b9061073e91610f57610d4e82610d1e565b9061073e91611096565b9061073e91610f46565b15610f7257565b5060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b61073e9190610ff1610fe133610768565b6001600160a01b03841614610f6b565b611096565b9060ff905b9181191691161790565b9061101561075461101c92151590565b8254610ff6565b9055565b9061102e610ec58284610cff565b611036575050565b611050600161104b836000610d138782610890565b611005565b33906110866110806110807f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b926107ce565b9261109060405190565b600090a4565b906110a18183610cff565b6110a9575050565b6110bd600061104b8382610d138782610890565b33906110866110806110807ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b50634e487b7160e01b600052601160045260246000fd5b9061110e565b9190565b908060001904821181151516611122570290565b61112a6110ed565b0290565b8119811161113a570190565b610c0c6110ed565b9061073e61114f60405190565b9283610e4d565b610c0c60209167ffffffffffffffff811161117557601f01601f191690565b610e2c610e36565b9061118f61118a83611156565b611142565b918252565b369037565b9061073e6111af6111a98461117d565b93611156565b601f190160208401611194565b9060016020916111ca845190565b8110156111d8575b02010190565b6111e0610926565b6111d2565b60019080156111f2570390565b6111fa6110ed565b0390565b610cef6107546107549290565b6107549061121f61110a6107549460ff1690565b901c90565b1561122b57565b5060405162461bcd60e51b815280610f42600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b91906002906112a66112a16112928361128d86610b3a565b611104565b61129b85610b3a565b9061112e565b611199565b9160009160306112be6112b885610b3a565b866111bc565b536112f66112ed600f60fb1b9261128d6001958695881a6112e76112e188610b3a565b8b6111bc565b53610b3a565b61129b83610b3a565b915b611319575b5050610754929361131361110a61075493610b3a565b14611224565b909461132482610b3a565b8611156113a35761139061138a839261136d6113506f181899199a1a9b1b9c1cb0b131b232b360811b90565b61135a600f610b3a565b83166010811015611396575b1a60f81b90565b861a6113798a896111bc565b5361138460046111fe565b9061120b565b966111e5565b916112f8565b61139e610926565b611366565b946112fd565b6107549081906001600160a01b031681565b61075460146111fe565b6107546107546107549260ff1690565b6113f26113ed610754926113e7606090565b506107c5565b6113a9565b610efe6113fd6113bb565b6113c5565b61073e90611411610d4e610b5b565b61142c565b6107686107546107549290565b61075490611416565b6114396107686000611423565b6001600160a01b038216146114605761073e90600080516020612c48833981519152611020565b505060405163e6c4247b60e01b8152600490fd5b61073e90611402565b61073e9061148c610d4e610b5b565b600080516020612c48833981519152906114a9610ec58284610cff565b6114b65761073e91611096565b5050506114c260405190565b633cc50b4560e01b8152600490fd5b61073e9061147d565b61073e906114e9610d4e610b5b565b61150f565b9060001990610ffb565b9061150861075461101c92610b3a565b82546114ee565b7f00000000000000000000000000000000000000000000000000000000000000008111611573576115418160016114f8565b61156e7e172ddfc5ae88d08b3de01a5a187667c37a5a53989e8c175055cb6c993792a79161024d60405190565b0390a1565b50506040516358d620b360e01b8152600490fd5b61073e906114da565b61073e9061159f610d4e610b5b565b6115ca565b906001600160a01b0390610ffb565b906115c361075461101c926107ce565b82546115a4565b6115d76107686000611423565b6001600160a01b0382161461161f576115f18160026115b3565b61156e7f2e979f80fe4d43055c584cf4a8467c55875ea36728fc37176c05acd784eb7a739161032e60405190565b5050604051630ed1b8b360e31b8152600490fd5b61073e90611590565b61073e9061164b610d4e610b5b565b6116586107686000611423565b6001600160a01b038216146116a0576116728160036115b3565b61156e7ff52f1295a5bd82818185311d8284477532c0eba12fd2ba17314486d3a8f6810d9161032e60405190565b5050604051635c187b8d60e01b8152600490fd5b61073e9061163c565b610764906001600160a01b031660601b90565b926116f36020610c0c946116ed6014886116ed829b9a86996116bd565b01918252565b0180926116bd565b610f1d61171d939461170b600090565b506040519586946020860194856116d0565b61172f611728825190565b9160200190565b2090565b601493926116f385836116ed602095610c0c976116bd565b909161171d91610f1d61175d60405190565b948593602085019384611733565b6107546040611142565b9061073e6117a0600161178661176b565b94610d3761179382610c8c565b6001600160a01b03168752565b6020840152565b61075490611775565b6117c76117cc916117bf600090565b506004610890565b6117a7565b9061075460206117e384516001600160a01b031690565b93015190565b906118046117f8610c1f845490565b92600052602060002090565b9060005b8181106118155750505090565b90919261183961183260019261182a8761089d565b815260200190565b9460010190565b929101611808565b90610754916117e9565b9061073e6118659261185c60405190565b93848092611841565b0383610e4d565b6107549061184b565b61188c61075491611884606090565b506005610890565b61186c565b61073e906118ac600080516020612c48833981519152610d67565b611a5d565b3561075481610774565b356107548161081e565b9050519061073e8261081e565b90610754916020818303126118e6576118c5565b6118ee610717565b6118c5565b506040513d6000823e3d90fd5b903590601e193682900301821215611944575b01602081359167ffffffffffffffff8311611937575b0191368290038313610a6b57565b61193f610717565b611929565b61194c610717565b611913565b8181106111f2570390565b50634e487b7160e01b600052601260045260246000fd5b811561197d570490565b61198561195c565b0490565b8115611993570690565b61199b61195c565b0690565b9160001960089290920291821b911b610ffb565b91906119c261075461101c9390565b90835461199f565b906119f261073e92805490680100000000000000008210156119f8575b60018201815561093d565b906119b3565b611a00610e36565b6119e7565b9194611a566108f192989795611a4f60a096611a4861073e9a611a3860c08a019e60008b01906001600160a01b03169052565b6001600160a01b03166020890152565b6040870152565b6060850152565b6080830152565b906020820191611a6c836118b1565b90611a776000611423565b91611a936001600160a01b0384165b916001600160a01b031690565b14611e9f576060810193611aa6856118bb565b611ab361110a6000610b3a565b14611e82576040820194611ac6866118b1565b611ad86001600160a01b038616611a86565b14611e6457611be390611af5611af0611af0856118b1565b6107ce565b906370a082318489611b06306107ce565b936020611b1260405190565b8097611b1e8760e01b90565b82526001600160a01b038816600483015260249082905afa958615611e57575b600096611e2f575b50916020939185611bc99694611b69611b648d610120810190611900565b905090565b611b7661110a6000610b3a565b1115611e095750505050611b898861242f565b611bb2611b9b611af0611af08a6118b1565b91611ba560405190565b9586948593849360e01b90565b83526001600160a01b031660048301526024820190565b03915afa908115611dfc575b600091611dde575b50611951565b9160009460015b15611dba575b611d6560009686611c1b611c0660e087016118bb565b61129b611c1560c089016118bb565b85611104565b858b611cde828a8c611c93611c43611c32856118bb565b89611c3c866118b1565b91336116fb565b9160a0611c54610754856004610890565b9801611c68611c62826118bb565b83611973565b918c611c7761110a6000610b3a565b6000911415611dae5750611c8d61129b926118bb565b90611989565b97611cb5611cac8a611ca760018b0161089d565b61112e565b600189016114f8565b611cd1611a86611cc489610c8c565b926001600160a01b031690565b14611d6b575b50506118bb565b91611cfd6001611cf6611cf08d6118b1565b946118b1565b920161089d565b91611d5c87611d0e60808d016118bb565b7f9350247ae5f8389ed8487daba15bc7f2173887676a95759508e1844aae0dfdc795611d49611d43611d3f336107ce565b9990565b99610b3a565b99611d5360405190565b96879687611a05565b0390a460010190565b95611bea565b611da261075483611d87611d81611da7966118b1565b8a6115b3565b611d9c8a611d966005936118b1565b3361174b565b90610890565b6119ca565b8a38611cd7565b905061129b9150610b3a565b611dc961075460a084016118bb565b861015611dd557611bf0565b95505050505050565b611df69150611ded3d82610e4d565b3d8101906118d2565b38611bdd565b611e046118f3565b611bd5565b611e24611e1e611cf0611af0611e2a976118b1565b916118bb565b92611f1b565b611b89565b85611bc99694929750611e4a6020969492611ded3d82610e4d565b9792945095509193611b46565b611e5f6118f3565b611b3e565b505050505050611e7360405190565b637bc101ab60e11b8152600490fd5b5050505050611e9060405190565b63162908e360e11b8152600490fd5b50505050611eac60405190565b63c1ab6dc160e01b8152600490fd5b61073e90611891565b611edd611ed76107549263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b03909116815260608101939261073e9290916040916108f1905b6001600160a01b03166020830152565b90611f6090611f5161073e95600495611f376323b872dd611ec4565b93611f4160405190565b9788956020870190815201611eea565b60208201810382520383610e4d565b612036565b611f6f602061117d565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b610754611f65565b801515610729565b9050519061073e82611fa0565b9061075491602081830312611fc957611fa8565b611fd1610717565b611fa8565b15611fdd57565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b61073e91612046612055926107ce565b9061204f611f98565b91612093565b805161206461110a6000610b3a565b14908115612073575b50611fd6565b61208d91506020612082825190565b818301019101611fb5565b3861206d565b61075492916120a26000610b3a565b91612123565b156120af57565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d1561211e576121133d61117d565b903d6000602084013e565b606090565b90600061075494938192612135606090565b5061214c612142306107ce565b83903110156120a8565b60208101905191855af161215e612104565b916121b1565b1561216b57565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9192606091156121e657505081516121cc61110a6000610b3a565b146121d5575090565b6121e1610754916121f3565b612164565b90939261073e9250612205565b3b61220161110a6000610b3a565b1190565b915061220f825190565b61221c61110a6000610b3a565b111561222b5750805190602001fd5b604051610f429250610f2d565b9050519061073e82610774565b65ffffffffffff8116610729565b9050519061073e82612245565b9091606082840312612291575b61075461227a8484612238565b936122888160208601612253565b93604001612253565b612299610717565b61226d565b6001600160a01b03909116815260608101939261073e9290916040916122c390611f0b565b01906001600160a01b03169052565b6107546080611142565b6122e96107546107549290565b65ffffffffffff1690565b6107546060611142565b80516001600160a01b0316825261073e919060609081906020818101516001600160a01b03169085015260408181015165ffffffffffff1690850152015165ffffffffffff16910152565b9060a0604061073e93612364600082015160008601906122fe565b60208101516001600160a01b031660808501520151910152565b90826000939282370152565b9190610e2c816123a181610c0c9560209181520190565b809561237e565b6123d861075495939492946123ce61010084019660008501906001600160a01b03169052565b6020830190612349565b60e081850391015261238a565b6122c361073e9461241f60609498979561240f608086019a60008701906001600160a01b03169052565b6001600160a01b03166020850152565b6001600160a01b03166040830152565b61243a611af0610ad9565b63927da10591604081019161244e836118b1565b9160208101906060612485612462846118b1565b9761249061246f306107ce565b809a61247a60405190565b998a95869560e01b90565b85526004850161229e565b0381865afa938415612689575b600094612668575b50632b67b570946124b5816118b1565b916124bf846118b1565b9060608101966124ce886118bb565b6124d7906126f3565b65ffffffffffff906124e76122d2565b6001600160a01b0390951685526001600160a01b0316602085015261250b906122dc565b65ffffffffffff16604084015265ffffffffffff16606083015261253261010082016118bb565b61253a6122f4565b9283526001600160a01b038a1660208401526040830152610120810161255f91611900565b949093863b1561258d60009a6125986125ec998d996125f7988b9661265b575b604051978896879660e01b90565b8652600486016123a8565b0381838b5af1801561264e575b61263a575b506125d36125cd6125c86125c26336c78516966118b1565b996118bb565b6126f3565b916118b1565b90863b1561262d575b604051998a988997889660e01b90565b8652600486016123e5565b03925af18015612620575b6126095750565b61073e906126173d82610e4d565b3d810190610a60565b6126286118f3565b612602565b612635610717565b6125dc565b612648906126173d82610e4d565b386125aa565b6126566118f3565b6125a5565b612663610717565b61257f565b6126819194506126783d82610e4d565b3d810190612260565b9491506124a5565b6126916118f3565b61249d565b1561269d57565b5060405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b6064820152608490fd5b6107549061271261270a6001600160a01b036113a9565b821115612696565b611416565b6001600160a01b03909116815260408101929161073e916020906122c3565b339061274c816127478460076107d7565b6115b3565b7fbbd6eb1e2586cc8ea8e80aa1ccf25590beffdd2cb73367b5ac49214505bb48c49161156e61277a60405190565b92839283612717565b9061073e91612793610d4e610b5b565b6127c8565b916020918110156127a857020190565b6127b0610926565b020190565b90815260408101929161073e9160200152565b9080916000936127d785610b3a565b8414612a925760005b845b811015612a8a576127fc6127f7828686612798565b6118bb565b60059061281061280c8284610890565b5490565b61281c61110a8a610b3a565b14612a6a5761282f610754826006610890565b9061285b8961285561284f6109bb8361284a8760049a610890565b61093d565b86610890565b01610c8c565b9161286582612afa565b909460018301916128758361089d565b8114612a3e57600261299f888f612a049a989688966128d16129b4976127e29f9d9b9461291f9501936128cc6128b36128ad8761089d565b89611951565b976128c66128c08461089d565b85611951565b966114f8565b6114f8565b6128da8a6107ce565b916128e4836107ce565b906370a082319360206128f76003610c8c565b604051809881926129088a60e01b90565b83526001600160a01b031688830190815260200190565b0381865afa958615612a31575b600096612a0b575b509061296191612951602096979861294b8c610c8c565b83612ab9565b61295b6003610c8c565b90612ab9565b61298861296e6003610c8c565b94611bc961297b60405190565b9687958694859460e01b90565b845283016001600160a01b03909116815260200190565b92016129ae83611ca78361089d565b906114f8565b6129e56129df7fb14baddc4b3d8807f1d5dfe595f14ed9e87fcdb8d45909968b5a64f952e399fd9390565b936107ce565b936129fb6129f260405190565b928392836127b5565b0390a360010190565b90506127e0565b602095965090612951612a266129619493611ded3d82610e4d565b979650509091612934565b612a396118f3565b61292c565b509950505050505050505050610f429150612a5860405190565b636e997d6760e11b8152918291820190565b5050505050505050612a7b60405190565b6307e1fae360e31b8152600490fd5b509350505050565b5050505050612aa060405190565b631ec5aa5160e01b8152600490fd5b9061073e91612783565b611f60600492611f5161073e95612ad363a9059cbb611ec4565b92612add60405190565b96879460208601908152016109c8565b90602080916111ca845190565b612b0a61188c6000926005610890565b8192612b14825190565b92935b835b851015612b5457612b4c612b45612b199261129b6001610d376004611d9c612b418d8c612aed565b5190565b9560010190565b949050612b17565b9350915050610754612b7a612b6c611c15600161089d565b612b74610b47565b90611973565b8093611951565b9061073e91612b91610d4e610b5b565b612bab565b90815260408101929161073e916020906122c3565b6000612bb961076882611423565b6001600160a01b03831614611e9f57612bd190610b3a565b8214612c3157612be0816107ce565b612bec83338093612ab9565b612c167f3ab9db27a4cdd8c603a752b62d5fbd93b4b3509fe2596708e9688e42bbac3576926107ce565b92612c2c612c2360405190565b92839283612b96565b0390a2565b505050611e9060405190565b9061073e91612b8156fe8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9a36469706673582212201ce318eaccfa6af2bed5640c13f2afb68735377e329b38ab9d38bd1beadc29ef6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x7CD2FFE EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0x172BECFF EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0x1AEA69CA EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x1DA08B87 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x28B16A3F EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x2C4EF0D5 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x429C8910 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x5C2A802B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x6AFDD850 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x75619AB5 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x9E93AD8E EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xB2D7EDB2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xBFE10928 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xC2624E1E EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xCC6C9388 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xE8FA2948 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xEDCDAB77 EQ PUSH2 0x1A1 JUMPI PUSH4 0xF96258C4 EQ PUSH2 0x177 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x194 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x2736 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH2 0x717 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST POP CALLVALUE PUSH2 0x1D1 JUMPI JUMPDEST PUSH2 0x1BB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC96 JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x1C8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1F8 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x21F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST POP CALLVALUE PUSH2 0x25A JUMPI JUMPDEST PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST POP CALLVALUE PUSH2 0x282 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x717 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST POP CALLVALUE PUSH2 0x2B8 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST POP CALLVALUE PUSH2 0x300 JUMPI JUMPDEST PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH32 0x0 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI JUMPDEST PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x32A PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x34D PUSH2 0x717 JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST POP CALLVALUE PUSH2 0x36D JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x375 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3A3 JUMPI JUMPDEST PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x249 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x717 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3CD JUMPI JUMPDEST PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3F7 JUMPI JUMPDEST PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x717 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x41F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0xB12 JUMP JUMPDEST SWAP1 PUSH2 0x2C3D JUMP JUMPDEST PUSH2 0x427 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST POP CALLVALUE PUSH2 0x45C JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x44A PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST POP CALLVALUE PUSH2 0x483 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x48B PUSH2 0x717 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4B9 JUMPI JUMPDEST PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x4AD PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4E0 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x507 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x50F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x531 JUMPI JUMPDEST PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x32A PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x539 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST POP CALLVALUE PUSH2 0x55F JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x567 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST POP CALLVALUE PUSH2 0x587 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x58F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5AF JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST POP CALLVALUE PUSH2 0x5D6 JUMPI JUMPDEST PUSH2 0x1BB PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x717 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x601 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x5FB CALLDATASIZE PUSH1 0x4 PUSH2 0x8F5 JUMP JUMPDEST SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x609 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST POP CALLVALUE PUSH2 0x62B JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x633 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST POP CALLVALUE PUSH2 0x664 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x655 PUSH2 0x650 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP4 SWAP2 SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x66C PUSH2 0x717 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST POP CALLVALUE PUSH2 0x68F JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x249 PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x831 JUMP JUMPDEST SWAP2 PUSH2 0x174B JUMP JUMPDEST PUSH2 0x697 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6B6 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x717 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x6E0 JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x32A PUSH2 0x6DB CALLDATASIZE PUSH1 0x4 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST POP CALLVALUE PUSH2 0x70A JUMPI JUMPDEST PUSH2 0x190 PUSH2 0x44A PUSH2 0x705 CALLDATASIZE PUSH1 0x4 PUSH2 0x740 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x717 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x71D JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x757 JUMPI PUSH2 0x731 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x75F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x729 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x774 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x7A4 JUMPI PUSH2 0x783 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x717 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x768 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 PUSH2 0x7E1 SWAP1 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 SLOAD PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x819 PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST DUP1 PUSH2 0x729 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x81E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x862 JUMPI JUMPDEST PUSH2 0x754 PUSH2 0x84B DUP5 DUP5 PUSH2 0x783 JUMP JUMPDEST SWAP4 PUSH2 0x859 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x783 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x824 JUMP JUMPDEST PUSH2 0x86A PUSH2 0x717 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x883 JUMPI PUSH2 0x824 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x717 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x754 SWAP1 SLOAD PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8B2 SWAP1 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x8BB DUP2 PUSH2 0x89D JUMP JUMPDEST SWAP2 PUSH2 0x754 PUSH1 0x2 PUSH2 0x8CD PUSH1 0x1 DUP6 ADD PUSH2 0x89D JUMP JUMPDEST SWAP4 ADD PUSH2 0x89D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x73E SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x8F1 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x919 JUMPI JUMPDEST PUSH2 0x910 DUP2 DUP6 PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x824 JUMP JUMPDEST PUSH2 0x921 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x95D PUSH1 0x1 SWAP2 PUSH2 0x94B DUP2 SLOAD SWAP1 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x926 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 SLOAD PUSH2 0x979 JUMP JUMPDEST PUSH2 0x99D PUSH1 0x5 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x890 JUMP JUMPDEST SWAP1 PUSH2 0x9A6 DUP3 SLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x9C1 JUMPI POP PUSH2 0x754 SWAP2 PUSH2 0x9BB SWAP2 PUSH2 0x93D JUMP JUMPDEST SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP3 POP POP POP DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0xA09 JUMPI JUMPDEST PUSH2 0xA00 DUP2 DUP6 PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xA11 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0xA53 JUMPI JUMPDEST PUSH2 0xA2B DUP3 DUP3 PUSH2 0x783 JUMP JUMPDEST SWAP3 PUSH2 0x754 PUSH2 0xA3C DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH2 0xA4A DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x824 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x717 JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xA6B JUMPI JUMP JUMPDEST PUSH2 0x73E PUSH2 0x717 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH1 0x2 PUSH2 0x7FC JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x140 SWAP2 SUB SLT PUSH2 0xA8E JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x717 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xACC JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xABF JUMPI JUMPDEST ADD PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x754 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x754 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x764 SWAP1 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0xB2D JUMPI JUMPDEST PUSH2 0x910 DUP2 DUP6 PUSH2 0x783 JUMP JUMPDEST PUSH2 0xB35 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH3 0xF4240 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x754 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x754 PUSH2 0xB5B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xBAC JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0xB9F JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0xA6B JUMPI JUMP JUMPDEST PUSH2 0xBA7 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0x717 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST SWAP1 PUSH2 0xBE2 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xBF3 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xBE6 JUMPI JUMPDEST ADD PUSH2 0xB6D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0xBEE PUSH2 0x717 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0xBFB PUSH2 0x717 JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH1 0x3 PUSH2 0x7FC JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC30 PUSH2 0xC29 PUSH2 0xC1F DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC41 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xC5E PUSH2 0xC57 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x754 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH1 0x1 PUSH2 0x984 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x754 SWAP1 SLOAD PUSH2 0xC83 JUMP JUMPDEST PUSH2 0xCA1 SWAP1 PUSH1 0x4 PUSH2 0x890 JUMP JUMPDEST SWAP1 PUSH2 0x754 PUSH1 0x1 PUSH2 0x8CD DUP5 PUSH2 0xC8C JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xCCF JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 SLOAD PUSH2 0xCEA JUMP JUMPDEST PUSH2 0x754 SWAP2 PUSH2 0xD19 SWAP2 PUSH2 0xD13 PUSH1 0x0 SWAP2 DUP3 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD37 PUSH2 0x754 SWAP3 PUSH2 0xD2F PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0x89D JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xD53 PUSH2 0xD4E DUP3 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x1020 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x73E SWAP1 CALLER SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0xB3A JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD9B JUMPI POP GT PUSH2 0xD94 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xC0C PUSH2 0xDC8 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xDC2 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xE0F PUSH2 0x754 SWAP4 SWAP3 PUSH2 0xE09 PUSH2 0xE09 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE6F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE77 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE9D PUSH2 0xE2C PUSH1 0x20 SWAP4 PUSH2 0xC0C SWAP4 PUSH2 0xE91 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x754 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 PUSH2 0xEC9 PUSH2 0xEC5 DUP3 DUP5 PUSH2 0xCFF JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xED1 JUMPI POP POP JUMP JUMPDEST PUSH2 0xF42 SWAP3 POP SWAP1 PUSH2 0x754 PUSH2 0xEEF PUSH2 0xEE9 PUSH2 0xF29 SWAP5 PUSH2 0x13D5 JUMP JUMPDEST SWAP3 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xF04 PUSH1 0x20 SWAP2 PUSH2 0xEFE DUP4 PUSH2 0xB3A JUMP JUMPDEST SWAP1 PUSH2 0x1275 JUMP JUMPDEST SWAP3 PUSH2 0xF1D PUSH2 0xF11 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 ADD SWAP3 DUP4 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0xEA6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xF57 PUSH2 0xD4E DUP3 PUSH2 0xD1E JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x1096 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0xF46 JUMP JUMPDEST ISZERO PUSH2 0xF72 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP2 SWAP1 PUSH2 0xFF1 PUSH2 0xFE1 CALLER PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1015 PUSH2 0x754 PUSH2 0x101C SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFF6 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x102E PUSH2 0xEC5 DUP3 DUP5 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x1036 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1050 PUSH1 0x1 PUSH2 0x104B DUP4 PUSH1 0x0 PUSH2 0xD13 DUP8 DUP3 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1086 PUSH2 0x1080 PUSH2 0x1080 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x7CE JUMP JUMPDEST SWAP3 PUSH2 0x1090 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST SWAP1 PUSH2 0x10A1 DUP2 DUP4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x10A9 JUMPI POP POP JUMP JUMPDEST PUSH2 0x10BD PUSH1 0x0 PUSH2 0x104B DUP4 DUP3 PUSH2 0xD13 DUP8 DUP3 PUSH2 0x890 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1086 PUSH2 0x1080 PUSH2 0x1080 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP6 SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x110E JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0x1122 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0x112A PUSH2 0x10ED JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x113A JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xC0C PUSH2 0x10ED JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x114F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xC0C PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1175 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0xE2C PUSH2 0xE36 JUMP JUMPDEST SWAP1 PUSH2 0x118F PUSH2 0x118A DUP4 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x11AF PUSH2 0x11A9 DUP5 PUSH2 0x117D JUMP JUMPDEST SWAP4 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 SWAP2 PUSH2 0x11CA DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x11D8 JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x11E0 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP1 ISZERO PUSH2 0x11F2 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0x11FA PUSH2 0x10ED JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0xCEF PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x121F PUSH2 0x110A PUSH2 0x754 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x122B JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xF42 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x12A6 PUSH2 0x12A1 PUSH2 0x1292 DUP4 PUSH2 0x128D DUP7 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x129B DUP6 PUSH2 0xB3A JUMP JUMPDEST SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x1199 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x30 PUSH2 0x12BE PUSH2 0x12B8 DUP6 PUSH2 0xB3A JUMP JUMPDEST DUP7 PUSH2 0x11BC JUMP JUMPDEST MSTORE8 PUSH2 0x12F6 PUSH2 0x12ED PUSH1 0xF PUSH1 0xFB SHL SWAP3 PUSH2 0x128D PUSH1 0x1 SWAP6 DUP7 SWAP6 DUP9 BYTE PUSH2 0x12E7 PUSH2 0x12E1 DUP9 PUSH2 0xB3A JUMP JUMPDEST DUP12 PUSH2 0x11BC JUMP JUMPDEST MSTORE8 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x129B DUP4 PUSH2 0xB3A JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x1319 JUMPI JUMPDEST POP POP PUSH2 0x754 SWAP3 SWAP4 PUSH2 0x1313 PUSH2 0x110A PUSH2 0x754 SWAP4 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x1224 JUMP JUMPDEST SWAP1 SWAP5 PUSH2 0x1324 DUP3 PUSH2 0xB3A JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0x13A3 JUMPI PUSH2 0x1390 PUSH2 0x138A DUP4 SWAP3 PUSH2 0x136D PUSH2 0x1350 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 JUMP JUMPDEST PUSH2 0x135A PUSH1 0xF PUSH2 0xB3A JUMP JUMPDEST DUP4 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1396 JUMPI JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST DUP7 BYTE PUSH2 0x1379 DUP11 DUP10 PUSH2 0x11BC JUMP JUMPDEST MSTORE8 PUSH2 0x1384 PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST SWAP1 PUSH2 0x120B JUMP JUMPDEST SWAP7 PUSH2 0x11E5 JUMP JUMPDEST SWAP2 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x139E PUSH2 0x926 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST SWAP5 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x14 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0x754 PUSH2 0x754 PUSH2 0x754 SWAP3 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13F2 PUSH2 0x13ED PUSH2 0x754 SWAP3 PUSH2 0x13E7 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x13FD PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1411 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST PUSH2 0x768 PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x1439 PUSH2 0x768 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1460 JUMPI PUSH2 0x73E SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1020 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x148C PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x14A9 PUSH2 0xEC5 DUP3 DUP5 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x14B6 JUMPI PUSH2 0x73E SWAP2 PUSH2 0x1096 JUMP JUMPDEST POP POP POP PUSH2 0x14C2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3CC50B45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x14E9 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x150F JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xFFB JUMP JUMPDEST SWAP1 PUSH2 0x1508 PUSH2 0x754 PUSH2 0x101C SWAP3 PUSH2 0xB3A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x14EE JUMP JUMPDEST PUSH32 0x0 DUP2 GT PUSH2 0x1573 JUMPI PUSH2 0x1541 DUP2 PUSH1 0x1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x156E PUSH31 0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7 SWAP2 PUSH2 0x24D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x159F PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xFFB JUMP JUMPDEST SWAP1 PUSH2 0x15C3 PUSH2 0x754 PUSH2 0x101C SWAP3 PUSH2 0x7CE JUMP JUMPDEST DUP3 SLOAD PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x768 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x161F JUMPI PUSH2 0x15F1 DUP2 PUSH1 0x2 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x156E PUSH32 0x2E979F80FE4D43055C584CF4A8467C55875EA36728FC37176C05ACD784EB7A73 SWAP2 PUSH2 0x32E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xED1B8B3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x164B PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1658 PUSH2 0x768 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x16A0 JUMPI PUSH2 0x1672 DUP2 PUSH1 0x3 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x156E PUSH32 0xF52F1295A5BD82818185311D8284477532C0EBA12FD2BA17314486D3A8F6810D SWAP2 PUSH2 0x32E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x5C187B8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x764 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x16F3 PUSH1 0x20 PUSH2 0xC0C SWAP5 PUSH2 0x16ED PUSH1 0x14 DUP9 PUSH2 0x16ED DUP3 SWAP12 SWAP11 DUP7 SWAP10 PUSH2 0x16BD JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xF1D PUSH2 0x171D SWAP4 SWAP5 PUSH2 0x170B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x172F PUSH2 0x1728 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x14 SWAP4 SWAP3 PUSH2 0x16F3 DUP6 DUP4 PUSH2 0x16ED PUSH1 0x20 SWAP6 PUSH2 0xC0C SWAP8 PUSH2 0x16BD JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x171D SWAP2 PUSH2 0xF1D PUSH2 0x175D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x40 PUSH2 0x1142 JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x17A0 PUSH1 0x1 PUSH2 0x1786 PUSH2 0x176B JUMP JUMPDEST SWAP5 PUSH2 0xD37 PUSH2 0x1793 DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x17C7 PUSH2 0x17CC SWAP2 PUSH2 0x17BF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x17A7 JUMP JUMPDEST SWAP1 PUSH2 0x754 PUSH1 0x20 PUSH2 0x17E3 DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1804 PUSH2 0x17F8 PUSH2 0xC1F DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1815 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1839 PUSH2 0x1832 PUSH1 0x1 SWAP3 PUSH2 0x182A DUP8 PUSH2 0x89D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x1808 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 PUSH2 0x73E PUSH2 0x1865 SWAP3 PUSH2 0x185C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1841 JUMP JUMPDEST SUB DUP4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH2 0x188C PUSH2 0x754 SWAP2 PUSH2 0x1884 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x186C JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x18AC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C48 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x1A5D JUMP JUMPDEST CALLDATALOAD PUSH2 0x754 DUP2 PUSH2 0x774 JUMP JUMPDEST CALLDATALOAD PUSH2 0x754 DUP2 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x81E JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x18E6 JUMPI PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x18EE PUSH2 0x717 JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x1944 JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1937 JUMPI JUMPDEST ADD SWAP2 CALLDATASIZE DUP3 SWAP1 SUB DUP4 SGT PUSH2 0xA6B JUMPI JUMP JUMPDEST PUSH2 0x193F PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH2 0x194C PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1913 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x11F2 JUMPI SUB SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x197D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x1985 PUSH2 0x195C JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1993 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x199B PUSH2 0x195C JUMP JUMPDEST MOD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xFFB JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x19C2 PUSH2 0x754 PUSH2 0x101C SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x199F JUMP JUMPDEST SWAP1 PUSH2 0x19F2 PUSH2 0x73E SWAP3 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x19F8 JUMPI JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x93D JUMP JUMPDEST SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x1A00 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x19E7 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1A56 PUSH2 0x8F1 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1A4F PUSH1 0xA0 SWAP7 PUSH2 0x1A48 PUSH2 0x73E SWAP11 PUSH2 0x1A38 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD SWAP2 PUSH2 0x1A6C DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 PUSH2 0x1A77 PUSH1 0x0 PUSH2 0x1423 JUMP JUMPDEST SWAP2 PUSH2 0x1A93 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1E9F JUMPI PUSH1 0x60 DUP2 ADD SWAP4 PUSH2 0x1AA6 DUP6 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x1AB3 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x1E82 JUMPI PUSH1 0x40 DUP3 ADD SWAP5 PUSH2 0x1AC6 DUP7 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x1AD8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x1A86 JUMP JUMPDEST EQ PUSH2 0x1E64 JUMPI PUSH2 0x1BE3 SWAP1 PUSH2 0x1AF5 PUSH2 0x1AF0 PUSH2 0x1AF0 DUP6 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST SWAP1 PUSH4 0x70A08231 DUP5 DUP10 PUSH2 0x1B06 ADDRESS PUSH2 0x7CE JUMP JUMPDEST SWAP4 PUSH1 0x20 PUSH2 0x1B12 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x1B1E DUP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1E57 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x1E2F JUMPI JUMPDEST POP SWAP2 PUSH1 0x20 SWAP4 SWAP2 DUP6 PUSH2 0x1BC9 SWAP7 SWAP5 PUSH2 0x1B69 PUSH2 0x1B64 DUP14 PUSH2 0x120 DUP2 ADD SWAP1 PUSH2 0x1900 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B76 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST GT ISZERO PUSH2 0x1E09 JUMPI POP POP POP POP PUSH2 0x1B89 DUP9 PUSH2 0x242F JUMP JUMPDEST PUSH2 0x1BB2 PUSH2 0x1B9B PUSH2 0x1AF0 PUSH2 0x1AF0 DUP11 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH2 0x1BA5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DFC JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x1DDE JUMPI JUMPDEST POP PUSH2 0x1951 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP5 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x1DBA JUMPI JUMPDEST PUSH2 0x1D65 PUSH1 0x0 SWAP7 DUP7 PUSH2 0x1C1B PUSH2 0x1C06 PUSH1 0xE0 DUP8 ADD PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x129B PUSH2 0x1C15 PUSH1 0xC0 DUP10 ADD PUSH2 0x18BB JUMP JUMPDEST DUP6 PUSH2 0x1104 JUMP JUMPDEST DUP6 DUP12 PUSH2 0x1CDE DUP3 DUP11 DUP13 PUSH2 0x1C93 PUSH2 0x1C43 PUSH2 0x1C32 DUP6 PUSH2 0x18BB JUMP JUMPDEST DUP10 PUSH2 0x1C3C DUP7 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 CALLER PUSH2 0x16FB JUMP JUMPDEST SWAP2 PUSH1 0xA0 PUSH2 0x1C54 PUSH2 0x754 DUP6 PUSH1 0x4 PUSH2 0x890 JUMP JUMPDEST SWAP9 ADD PUSH2 0x1C68 PUSH2 0x1C62 DUP3 PUSH2 0x18BB JUMP JUMPDEST DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 DUP13 PUSH2 0x1C77 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x0 SWAP2 EQ ISZERO PUSH2 0x1DAE JUMPI POP PUSH2 0x1C8D PUSH2 0x129B SWAP3 PUSH2 0x18BB JUMP JUMPDEST SWAP1 PUSH2 0x1989 JUMP JUMPDEST SWAP8 PUSH2 0x1CB5 PUSH2 0x1CAC DUP11 PUSH2 0x1CA7 PUSH1 0x1 DUP12 ADD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH1 0x1 DUP10 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x1CD1 PUSH2 0x1A86 PUSH2 0x1CC4 DUP10 PUSH2 0xC8C JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1D6B JUMPI JUMPDEST POP POP PUSH2 0x18BB JUMP JUMPDEST SWAP2 PUSH2 0x1CFD PUSH1 0x1 PUSH2 0x1CF6 PUSH2 0x1CF0 DUP14 PUSH2 0x18B1 JUMP JUMPDEST SWAP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 ADD PUSH2 0x89D JUMP JUMPDEST SWAP2 PUSH2 0x1D5C DUP8 PUSH2 0x1D0E PUSH1 0x80 DUP14 ADD PUSH2 0x18BB JUMP JUMPDEST PUSH32 0x9350247AE5F8389ED8487DABA15BC7F2173887676A95759508E1844AAE0DFDC7 SWAP6 PUSH2 0x1D49 PUSH2 0x1D43 PUSH2 0x1D3F CALLER PUSH2 0x7CE JUMP JUMPDEST SWAP10 SWAP1 JUMP JUMPDEST SWAP10 PUSH2 0xB3A JUMP JUMPDEST SWAP10 PUSH2 0x1D53 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1A05 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1DA2 PUSH2 0x754 DUP4 PUSH2 0x1D87 PUSH2 0x1D81 PUSH2 0x1DA7 SWAP7 PUSH2 0x18B1 JUMP JUMPDEST DUP11 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x1D9C DUP11 PUSH2 0x1D96 PUSH1 0x5 SWAP4 PUSH2 0x18B1 JUMP JUMPDEST CALLER PUSH2 0x174B JUMP JUMPDEST SWAP1 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x19CA JUMP JUMPDEST DUP11 CODESIZE PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x129B SWAP2 POP PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x1DC9 PUSH2 0x754 PUSH1 0xA0 DUP5 ADD PUSH2 0x18BB JUMP JUMPDEST DUP7 LT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1BF0 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DF6 SWAP2 POP PUSH2 0x1DED RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x18D2 JUMP JUMPDEST CODESIZE PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0x1E04 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0x1E24 PUSH2 0x1E1E PUSH2 0x1CF0 PUSH2 0x1AF0 PUSH2 0x1E2A SWAP8 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH2 0x18BB JUMP JUMPDEST SWAP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1B89 JUMP JUMPDEST DUP6 PUSH2 0x1BC9 SWAP7 SWAP5 SWAP3 SWAP8 POP PUSH2 0x1E4A PUSH1 0x20 SWAP7 SWAP5 SWAP3 PUSH2 0x1DED RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST SWAP8 SWAP3 SWAP5 POP SWAP6 POP SWAP2 SWAP4 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1E5F PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x1E73 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7BC101AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1E90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP PUSH2 0x1EAC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x1EDD PUSH2 0x1ED7 PUSH2 0x754 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x73E SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x8F1 SWAP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F60 SWAP1 PUSH2 0x1F51 PUSH2 0x73E SWAP6 PUSH1 0x4 SWAP6 PUSH2 0x1F37 PUSH4 0x23B872DD PUSH2 0x1EC4 JUMP JUMPDEST SWAP4 PUSH2 0x1F41 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xE4D JUMP JUMPDEST PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x1F6F PUSH1 0x20 PUSH2 0x117D JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x1F65 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x729 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x1FA0 JUMP JUMPDEST SWAP1 PUSH2 0x754 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1FC9 JUMPI PUSH2 0x1FA8 JUMP JUMPDEST PUSH2 0x1FD1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x1FA8 JUMP JUMPDEST ISZERO PUSH2 0x1FDD JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x73E SWAP2 PUSH2 0x2046 PUSH2 0x2055 SWAP3 PUSH2 0x7CE JUMP JUMPDEST SWAP1 PUSH2 0x204F PUSH2 0x1F98 JUMP JUMPDEST SWAP2 PUSH2 0x2093 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2064 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x2073 JUMPI JUMPDEST POP PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x208D SWAP2 POP PUSH1 0x20 PUSH2 0x2082 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x1FB5 JUMP JUMPDEST CODESIZE PUSH2 0x206D JUMP JUMPDEST PUSH2 0x754 SWAP3 SWAP2 PUSH2 0x20A2 PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST SWAP2 PUSH2 0x2123 JUMP JUMPDEST ISZERO PUSH2 0x20AF JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x211E JUMPI PUSH2 0x2113 RETURNDATASIZE PUSH2 0x117D JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x754 SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x2135 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x214C PUSH2 0x2142 ADDRESS PUSH2 0x7CE JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x215E PUSH2 0x2104 JUMP JUMPDEST SWAP2 PUSH2 0x21B1 JUMP JUMPDEST ISZERO PUSH2 0x216B JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x21E6 JUMPI POP POP DUP2 MLOAD PUSH2 0x21CC PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x21D5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x21E1 PUSH2 0x754 SWAP2 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2164 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x73E SWAP3 POP PUSH2 0x2205 JUMP JUMPDEST EXTCODESIZE PUSH2 0x2201 PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 POP PUSH2 0x220F DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x221C PUSH2 0x110A PUSH1 0x0 PUSH2 0xB3A JUMP JUMPDEST GT ISZERO PUSH2 0x222B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF42 SWAP3 POP PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x774 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP2 AND PUSH2 0x729 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x73E DUP3 PUSH2 0x2245 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x2291 JUMPI JUMPDEST PUSH2 0x754 PUSH2 0x227A DUP5 DUP5 PUSH2 0x2238 JUMP JUMPDEST SWAP4 PUSH2 0x2288 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x2299 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x226D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x73E SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x22C3 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x754 PUSH1 0x80 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x22E9 PUSH2 0x754 PUSH2 0x754 SWAP3 SWAP1 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x60 PUSH2 0x1142 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0x73E SWAP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE PUSH1 0x40 DUP2 DUP2 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP6 ADD MSTORE ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x40 PUSH2 0x73E SWAP4 PUSH2 0x2364 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xE2C DUP2 PUSH2 0x23A1 DUP2 PUSH2 0xC0C SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x23D8 PUSH2 0x754 SWAP6 SWAP4 SWAP5 SWAP3 SWAP5 PUSH2 0x23CE PUSH2 0x100 DUP5 ADD SWAP7 PUSH1 0x0 DUP6 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x238A JUMP JUMPDEST PUSH2 0x22C3 PUSH2 0x73E SWAP5 PUSH2 0x241F PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x240F PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x243A PUSH2 0x1AF0 PUSH2 0xAD9 JUMP JUMPDEST PUSH4 0x927DA105 SWAP2 PUSH1 0x40 DUP2 ADD SWAP2 PUSH2 0x244E DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x60 PUSH2 0x2485 PUSH2 0x2462 DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP8 PUSH2 0x2490 PUSH2 0x246F ADDRESS PUSH2 0x7CE JUMP JUMPDEST DUP1 SWAP11 PUSH2 0x247A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP10 DUP11 SWAP6 DUP7 SWAP6 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x229E JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2689 JUMPI JUMPDEST PUSH1 0x0 SWAP5 PUSH2 0x2668 JUMPI JUMPDEST POP PUSH4 0x2B67B570 SWAP5 PUSH2 0x24B5 DUP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 PUSH2 0x24BF DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP2 ADD SWAP7 PUSH2 0x24CE DUP9 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x24D7 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 PUSH2 0x24E7 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x250B SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x40 DUP5 ADD MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2532 PUSH2 0x100 DUP3 ADD PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x253A PUSH2 0x22F4 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD PUSH2 0x255F SWAP2 PUSH2 0x1900 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 DUP7 EXTCODESIZE ISZERO PUSH2 0x258D PUSH1 0x0 SWAP11 PUSH2 0x2598 PUSH2 0x25EC SWAP10 DUP14 SWAP10 PUSH2 0x25F7 SWAP9 DUP12 SWAP7 PUSH2 0x265B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x23A8 JUMP JUMPDEST SUB DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x264E JUMPI JUMPDEST PUSH2 0x263A JUMPI JUMPDEST POP PUSH2 0x25D3 PUSH2 0x25CD PUSH2 0x25C8 PUSH2 0x25C2 PUSH4 0x36C78516 SWAP7 PUSH2 0x18B1 JUMP JUMPDEST SWAP10 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x26F3 JUMP JUMPDEST SWAP2 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 DUP7 EXTCODESIZE ISZERO PUSH2 0x262D JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x23E5 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2620 JUMPI JUMPDEST PUSH2 0x2609 JUMPI POP JUMP JUMPDEST PUSH2 0x73E SWAP1 PUSH2 0x2617 RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x2628 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2635 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x25DC JUMP JUMPDEST PUSH2 0x2648 SWAP1 PUSH2 0x2617 RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST CODESIZE PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x2656 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x25A5 JUMP JUMPDEST PUSH2 0x2663 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x257F JUMP JUMPDEST PUSH2 0x2681 SWAP2 SWAP5 POP PUSH2 0x2678 RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2260 JUMP JUMPDEST SWAP5 SWAP2 POP PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x2691 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x249D JUMP JUMPDEST ISZERO PUSH2 0x269D JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x36302062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x754 SWAP1 PUSH2 0x2712 PUSH2 0x270A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13A9 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x2696 JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x274C DUP2 PUSH2 0x2747 DUP5 PUSH1 0x7 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x15B3 JUMP JUMPDEST PUSH32 0xBBD6EB1E2586CC8EA8E80AA1CCF25590BEFFDD2CB73367B5AC49214505BB48C4 SWAP2 PUSH2 0x156E PUSH2 0x277A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2717 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2793 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x27C8 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x27A8 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x27B0 PUSH2 0x926 JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 SWAP2 PUSH1 0x0 SWAP4 PUSH2 0x27D7 DUP6 PUSH2 0xB3A JUMP JUMPDEST DUP5 EQ PUSH2 0x2A92 JUMPI PUSH1 0x0 JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x2A8A JUMPI PUSH2 0x27FC PUSH2 0x27F7 DUP3 DUP7 DUP7 PUSH2 0x2798 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH2 0x2810 PUSH2 0x280C DUP3 DUP5 PUSH2 0x890 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x281C PUSH2 0x110A DUP11 PUSH2 0xB3A JUMP JUMPDEST EQ PUSH2 0x2A6A JUMPI PUSH2 0x282F PUSH2 0x754 DUP3 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST SWAP1 PUSH2 0x285B DUP10 PUSH2 0x2855 PUSH2 0x284F PUSH2 0x9BB DUP4 PUSH2 0x284A DUP8 PUSH1 0x4 SWAP11 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST DUP7 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0xC8C JUMP JUMPDEST SWAP2 PUSH2 0x2865 DUP3 PUSH2 0x2AFA JUMP JUMPDEST SWAP1 SWAP5 PUSH1 0x1 DUP4 ADD SWAP2 PUSH2 0x2875 DUP4 PUSH2 0x89D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3E JUMPI PUSH1 0x2 PUSH2 0x299F DUP9 DUP16 PUSH2 0x2A04 SWAP11 SWAP9 SWAP7 DUP9 SWAP7 PUSH2 0x28D1 PUSH2 0x29B4 SWAP8 PUSH2 0x27E2 SWAP16 SWAP14 SWAP12 SWAP5 PUSH2 0x291F SWAP6 ADD SWAP4 PUSH2 0x28CC PUSH2 0x28B3 PUSH2 0x28AD DUP8 PUSH2 0x89D JUMP JUMPDEST DUP10 PUSH2 0x1951 JUMP JUMPDEST SWAP8 PUSH2 0x28C6 PUSH2 0x28C0 DUP5 PUSH2 0x89D JUMP JUMPDEST DUP6 PUSH2 0x1951 JUMP JUMPDEST SWAP7 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x28DA DUP11 PUSH2 0x7CE JUMP JUMPDEST SWAP2 PUSH2 0x28E4 DUP4 PUSH2 0x7CE JUMP JUMPDEST SWAP1 PUSH4 0x70A08231 SWAP4 PUSH1 0x20 PUSH2 0x28F7 PUSH1 0x3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP3 PUSH2 0x2908 DUP11 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x2A31 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x2A0B JUMPI JUMPDEST POP SWAP1 PUSH2 0x2961 SWAP2 PUSH2 0x2951 PUSH1 0x20 SWAP7 SWAP8 SWAP9 PUSH2 0x294B DUP13 PUSH2 0xC8C JUMP JUMPDEST DUP4 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x295B PUSH1 0x3 PUSH2 0xC8C JUMP JUMPDEST SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x2988 PUSH2 0x296E PUSH1 0x3 PUSH2 0xC8C JUMP JUMPDEST SWAP5 PUSH2 0x1BC9 PUSH2 0x297B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ADD PUSH2 0x29AE DUP4 PUSH2 0x1CA7 DUP4 PUSH2 0x89D JUMP JUMPDEST SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x29E5 PUSH2 0x29DF PUSH32 0xB14BADDC4B3D8807F1D5DFE595F14ED9E87FCDB8D45909968B5A64F952E399FD SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x7CE JUMP JUMPDEST SWAP4 PUSH2 0x29FB PUSH2 0x29F2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x27B5 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x20 SWAP6 SWAP7 POP SWAP1 PUSH2 0x2951 PUSH2 0x2A26 PUSH2 0x2961 SWAP5 SWAP4 PUSH2 0x1DED RETURNDATASIZE DUP3 PUSH2 0xE4D JUMP JUMPDEST SWAP8 SWAP7 POP POP SWAP1 SWAP2 PUSH2 0x2934 JUMP JUMPDEST PUSH2 0x2A39 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x292C JUMP JUMPDEST POP SWAP10 POP POP POP POP POP POP POP POP POP POP PUSH2 0xF42 SWAP2 POP PUSH2 0x2A58 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6E997D67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x2A7B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7E1FAE3 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP POP POP PUSH2 0x2AA0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1EC5AA51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1F60 PUSH1 0x4 SWAP3 PUSH2 0x1F51 PUSH2 0x73E SWAP6 PUSH2 0x2AD3 PUSH4 0xA9059CBB PUSH2 0x1EC4 JUMP JUMPDEST SWAP3 PUSH2 0x2ADD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0x11CA DUP5 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B0A PUSH2 0x188C PUSH1 0x0 SWAP3 PUSH1 0x5 PUSH2 0x890 JUMP JUMPDEST DUP2 SWAP3 PUSH2 0x2B14 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP4 JUMPDEST DUP4 JUMPDEST DUP6 LT ISZERO PUSH2 0x2B54 JUMPI PUSH2 0x2B4C PUSH2 0x2B45 PUSH2 0x2B19 SWAP3 PUSH2 0x129B PUSH1 0x1 PUSH2 0xD37 PUSH1 0x4 PUSH2 0x1D9C PUSH2 0x2B41 DUP14 DUP13 PUSH2 0x2AED JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP6 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2B17 JUMP JUMPDEST SWAP4 POP SWAP2 POP POP PUSH2 0x754 PUSH2 0x2B7A PUSH2 0x2B6C PUSH2 0x1C15 PUSH1 0x1 PUSH2 0x89D JUMP JUMPDEST PUSH2 0x2B74 PUSH2 0xB47 JUMP JUMPDEST SWAP1 PUSH2 0x1973 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x1951 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2B91 PUSH2 0xD4E PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x2BAB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x73E SWAP2 PUSH1 0x20 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB9 PUSH2 0x768 DUP3 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x1E9F JUMPI PUSH2 0x2BD1 SWAP1 PUSH2 0xB3A JUMP JUMPDEST DUP3 EQ PUSH2 0x2C31 JUMPI PUSH2 0x2BE0 DUP2 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x2BEC DUP4 CALLER DUP1 SWAP4 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x2C16 PUSH32 0x3AB9DB27A4CDD8C603A752B62D5FBD93B4B3509FE2596708E9688E42BBAC3576 SWAP3 PUSH2 0x7CE JUMP JUMPDEST SWAP3 PUSH2 0x2C2C PUSH2 0x2C23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2B96 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP POP POP PUSH2 0x1E90 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x73E SWAP2 PUSH2 0x2B81 JUMP INVALID DUP16 0x4F 0x2D LOG2 0x2E DUP11 0xC8 CALL 0x1E ISZERO 0xF9 0xFC EQ SHR 0xDD 0xBB 0x5D 0xEE 0xA8 DUP1 ADD DUP7 JUMP EXP 0xBB PUSH15 0x68C5496619A9A36469706673582212 KECCAK256 SHR 0xE3 XOR 0xEA 0xCC STATICCALL PUSH11 0xF2BED5640C13F2AFB68735 CALLDATACOPY PUSH31 0x329B38AB9D38BD1BEADC29EF6C6578706572696D656E74616CF564736F6C63 NUMBER STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"584:14918:21:-:0;;;;;;;;;-1:-1:-1;584:14918:21;;:::i;:::-;-1:-1:-1;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;1064:32;584:14918;1064:32;584:14918;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;584:14918:21;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;584:14918:21;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;-1:-1:-1;;;;;584:14918:21;;:::o;:::-;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;1927:51::-;;;;;;;;;:::i;:::-;;:::i;584:14918::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;1785:51::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;584:14918::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;1685:51::-;;;;;;;:::i;:::-;;;;584:14918;;;1685:51;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;584:14918;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;1216:27::-;;;;;:::i;584:14918::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;910:95;953:52;962:42;953:52;:::i;910:95::-;;;:::i;584:14918::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;1011:47;1049:9;;;:::i;1011:47::-;;;:::i;2153:49:0:-;2198:4;;;:::i;2153:49::-;;;:::i;584:14918:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;1270:26;;;;;:::i;584:14918::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1177:18::-;;;;;:::i;584:14918::-;;;;;;;;;;:::i;1474:39::-;;;;;:::i;:::-;;;;;;;:::i;2732:202:0:-;-1:-1:-1;;;;;;;;;584:14918:21;;2840:47:0;:87;;;;;2833:94;2732:202;:::o;2840:87::-;2891:36;;;-1:-1:-1;;;;;;584:14918:21;-1:-1:-1;;;937:40:14;;829:155;584:14918:21;;;;;;;;;;;;;:::i;3021:145:0:-;3130:29;;;;:12;:6;:12;;;:::i;:::-;:20;:29;:::i;:::-;;:::i;4504:129::-;4604:22;:12;:22;4504:129;4578:7;584:14918:21;;;4578:7:0;4604:6;;:12;:::i;:::-;:22;;:::i;2589:76::-;;2657:1;2589:76;2642:4;5012:18;;;:::i;:::-;2642:4;:::i;:::-;4929:145;5059:7;4929:145;5059:7;:::i;4929:145::-;;;;;:::i;3460:103::-;3543:12;;734:10:11;3543:12:0;;:::i;584:14918:21:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;584:14918:21;;;;;;;;;-1:-1:-1;;584:14918:21;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;584:14918:21;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;3844:479:0:-;;3931:23;3932:22;;;;:::i;:::-;3931:23;;584:14918:21;3931:23:0;3927:390;;3844:479;;:::o;3927:390::-;3970:336;4115:28;;;4022:252;4234:13;4115:28;3994:298;4115:28;;:::i;:::-;4234:13;;:::i;:::-;4214:38;4249:2;4214:38;;;;:::i;:::-;;;:::i;:::-;4022:252;;;584:14918:21;;;;4022:252:0;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3994:298::-;584:14918:21;;3970:336:0;-1:-1:-1;;;3970:336:0;;;;;;;;;:::i;:::-;;;;2589:76;;2657:1;2589:76;2642:4;5438:18;;;:::i;2642:4::-;5354:147;5486:7;5354:147;5486:7;:::i;5354:147::-;;;;;:::i;584:14918:21:-;;;;:::o;:::-;-1:-1:-1;584:14918:21;;-1:-1:-1;;;584:14918:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;584:14918:21;;;;;;3970:336:0;6038:214;6237:7;;6038:214;6125:83;6133:23;734:10:11;6144:12:0;655:96:11;6133:23:0;-1:-1:-1;;;;;584:14918:21;;6133:23:0;6125:83;:::i;:::-;6237:7;:::i;584:14918:21:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;7587:233:0:-;;7669:23;7670:22;;;;:::i;7669:23::-;7665:149;;7587:233;;:::o;7665:149::-;7708:36;7740:4;7708:29;:6;;:12;;;;:::i;:29::-;:36;:::i;:::-;734:10:11;7763:40:0;;;;;;584:14918:21;;7763:40:0;;;:::i;:::-;;;584:14918:21;;;;7763:40:0;;;;7587:233::o;7991:234::-;;8074:22;;;;:::i;:::-;8070:149;;7991:234;;:::o;8070:149::-;8112:37;8144:5;8112:29;:12;;;;;;:::i;:37::-;734:10:11;8168:40:0;;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;584:14918:21;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;584:14918:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;278:18:12:-;;;;;;;;;;;;;;;;;;;;584:14918:21;;;278:18:12;;;;:::o;:::-;-1:-1:-1;584:14918:21;;-1:-1:-1;;;278:18:12;;;;;;;;;;;;;;584:14918:21;278:18:12;584:14918:21;;;278:18:12;584:14918:21;;;;1818:437:12;;;1950:1;:10;1940:25;1950:14;:10;;;;;:::i;:::-;;:::i;:::-;:14;;;:::i;:::-;;;:::i;:::-;1940:25;:::i;:::-;1975:15;1982:1;;1975:15;;;1982:1;1975:15;:::i;:::-;;;:::i;:::-;;2042:14;:10;-1:-1:-1;;;2007:1:12;2042:10;2007:1;2000:15;;;;;;;;;:::i;:::-;;;:::i;:::-;;2042:10;:::i;:::-;:14;;;:::i;:::-;2025:128;2007:1;;;2025:128;2170:10;;2234:14;2170:10;;;;2162:55;2170:10;;:::i;:::-;;2162:55;:::i;2065:3::-;2058:5;;;;;:::i;:::-;;;;;;2065:3;2131:11;2096:8;;:21;:8;-1:-1:-1;;;584:14918:21;;2096:8:12;2105:11;2113:3;2105:11;:::i;:::-;;;2096:21;;;;;;2065:3;2096:21;278:18;;;;2096:21;2084:33;;;;;;:::i;:::-;;2131:11;2141:1;2131:11;:::i;:::-;;;:::i;:::-;2065:3;;:::i;:::-;2030:26;;;2096:21;;;:::i;:::-;;;2058:5;;;;584:14918:21;;;;;-1:-1:-1;;;;;584:14918:21;;;302:43:12;343:2;;;:::i;:::-;;;;;278:18;;;;2407:149;2509:22;2517:13;2497:52;2407:149;2465:13;584:14918:21;;;2465:13:12;2517;;:::i;:::-;2509:22;:::i;:::-;2497:52;2533:15;;:::i;:::-;2497:52;:::i;2589:76:0:-;2657:1;2589:76;2642:4;3837:18:21;;:::i;2642:4:0:-;2657:1;:::i;584:14918:21:-;;;;;;;;;;;:::i;3758:223::-;3871:23;3884:10;3892:1;3884:10;:::i;3871:23::-;-1:-1:-1;;;;;584:14918:21;;3871:23;3867:59;;3964:9;;-1:-1:-1;;;;;;;;;;;3964:9:21;:::i;3867:59::-;-1:-1:-1;;584:14918:21;;-1:-1:-1;;;3903:23:21;;;;3970:336:0;3758:223:21;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;4214:18:21;;:::i;2642:4:0:-;-1:-1:-1;;;;;;;;;;;4338:34:21;4337:35;4338:34;;;;:::i;4337:35::-;4333:69;;4441:9;;;:::i;4333:69::-;4381:21;;;;584:14918;;;;4381:21;-1:-1:-1;;;4381:21:21;;;;3970:336:0;4134:324:21;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;4617:18:21;;:::i;2642:4:0:-;2657:1;:::i;584:14918:21:-;;-1:-1:-1;;584:14918:21;;;;;;;;;;:::i;:::-;;;;:::i;4569:180::-;4658:7;4651:14;;4647:46;;4704:10;;;;:::i;:::-;4730:12;;;;584:14918;;;;4730:12;;;;4569:180::o;4647:46::-;-1:-1:-1;;584:14918:21;;-1:-1:-1;;;4674:19:21;;;;3970:336:0;4569:180:21;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;4977:18:21;;:::i;2642:4:0:-;2657:1;:::i;584:14918:21:-;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;:::i;:::-;;;;:::i;4897:270::-;5011:27;5028:10;5036:1;5028:10;:::i;5011:27::-;-1:-1:-1;;;;;584:14918:21;;5011:27;5007:68;;5086:28;;;;:::i;:::-;5130:30;;;;584:14918;;;;5007:68;-1:-1:-1;;584:14918:21;;-1:-1:-1;;;5047:28:21;;;;3970:336:0;4897:270:21;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;5377:18:21;;:::i;2642:4:0:-;5411:26:21;5427:10;5435:1;5427:10;:::i;5411:26::-;-1:-1:-1;;;;;584:14918:21;;5411:26;5407:66;;5484:26;;;;:::i;:::-;5526:28;;;;584:14918;;;;5407:66;-1:-1:-1;;584:14918:21;;-1:-1:-1;;;5446:27:21;;;;3970:336:0;5299:262:21;;;;:::i;584:14918::-;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;:::i;5955:306::-;6181:63;;5955:306;;6131:10;584:14918;;;6131:10;-1:-1:-1;584:14918:21;;6181:63;;;;;;;;;:::i;:::-;6158:96;;;584:14918;;;6158:96;;584:14918;;;;6158:96;;5955:306;:::o;584:14918::-;;;;;;;;;;;;;:::i;6600:242::-;;;6782:52;;;;584:14918;;;;6782:52;;;;;;;;;;:::i;584:14918::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;:::i;7009:204::-;7147:23;7130:40;7009:204;7089:13;584:14918;;;7089:13;-1:-1:-1;7147:6:21;:23;:::i;:::-;7130:40;:::i;:::-;7188:7;7197:8;;7188:7;;584:14918;-1:-1:-1;;;;;584:14918:21;;;7188:7;7197:8;;584:14918;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;7328:184::-;7473:32;7466:39;7328:184;7438:16;584:14918;;;7438:16;7473:14;;:32;:::i;:::-;7466:39;:::i;2589:76:0:-;2657:1;;2642:4;-1:-1:-1;;;;;;;;;;;2642:4:0;:::i;:::-;2657:1;:::i;584:14918:21:-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;-1:-1:-1;584:14918:21;;;;;;;;;;;;;-1:-1:-1;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;8698:2603;;8822:9;;;;;;;:::i;:::-;8835:10;;8843:1;8835:10;:::i;:::-;8822:23;;-1:-1:-1;;;;;584:14918:21;;8822:23;;-1:-1:-1;;;;;584:14918:21;;;8822:23;;8818:57;;8889:10;;;;;;;:::i;:::-;:15;;8843:1;8889:15;:::i;:::-;;8885:50;;8949:10;;;;;;;:::i;:::-;:24;-1:-1:-1;;;;;584:14918:21;;8949:24;584:14918;8949:24;;8945:59;;9675:78;9128:9;9121:27;:17;9128:9;;;:::i;:::-;9121:17;:::i;:27::-;;;9170:4;;9162:13;9170:4;9162:13;:::i;:::-;9121:64;;;584:14918;;;;9121:64;;;;;584:14918;;;;9121:64;;;-1:-1:-1;;;;;584:14918:21;;9121:64;;;584:14918;;;9121:64;;;;;;;;;8698:2603;9121:64;;;;8698:2603;9297:13;;9675:42;9297:13;;;9675:42;9297:13;;:20;:13;;;;;;;:::i;:::-;:20;584:14918;;;9297:20;:24;;8843:1;9297:24;:::i;:::-;;9293:245;;;9357:3;;;;;;;:::i;:::-;9675:42;:27;:17;9682:9;;;:::i;9675:27::-;:42;;584:14918;;;;9675:42;;;;;;;;584:14918;;;;9675:42;;;-1:-1:-1;;;;;584:14918:21;9675:42;;;584:14918;;;;;;9675:42;;;;;;;;;;9293:245;9675:42;;;;9293:245;9675:78;;:::i;:::-;9794:23;584:14918;9948:1347;;;;;;;11242:3;8843:1;9976:20;;:47;:20;;;;;:::i;:::-;10000:22;10004:18;;;;;:::i;:::-;10000:22;;:::i;9976:47::-;10175:12;;10980;10175;;;10428:96;10101:153;10175:12;;;:::i;:::-;10231:9;;;;:::i;:::-;10147:10;;10101:153;:::i;:::-;10083:171;10448:11;10269:41;10287:23;:6;;:23;:::i;10269:41::-;10448:11;;10429:30;10448:11;;;:::i;:::-;10429:30;;:::i;:::-;10480:6;;;;8843:1;10480:6;:::i;:::-;:43;;:6;:43;;;10508:11;;10489:30;10508:11;;:::i;:::-;10489:30;;:::i;10428:96::-;10398:126;10539:23;;:8;:23;:8;;;:23;:::i;:::-;;:::i;:::-;:8;;;:23;:::i;:::-;10677:21;;:7;;;:::i;:::-;:21;-1:-1:-1;;;;;584:14918:21;;;10677:21;;10673:230;;10480:43;10980:12;;;:::i;:::-;11036:9;11120:8;10539;11063:10;11036:9;;;:::i;:::-;11063:10;;:::i;:::-;10539:8;;11120;:::i;:::-;11146:20;10922:277;11146:20;;;;;;:::i;:::-;10922:277;10147:10;10922:277;;;10147:10;10922:277;:::i;:::-;;584:14918;;10922:277;;;:::i;:::-;;;584:14918;;;;10922:277;;;;;;:::i;:::-;;;;584:14918;;;;11242:3;9948:1347;;;10673:230;10755:116;:111;10728:9;10718:19;10728:9;10755:133;10728:9;;:::i;:::-;10677:7;10718:19;:::i;:::-;10791:57;10755:14;10828:9;10755:14;10828:9;;:::i;:::-;10147:10;10791:57;:::i;:::-;10755:111;;:::i;:116::-;:133;:::i;:::-;10673:230;;;;10480:43;;;;;;;:::i;9948:1347::-;11278:15;11282:11;;;;;:::i;11278:15::-;;;;;;9948:1347;;11278:15;;;;;;;;8698:2603::o;9675:42::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;9293:245;9503:10;9444;9392:17;9399:9;9503:10;9399:9;;:::i;9444:10::-;9503;;:::i;:::-;;;:::i;:::-;9293:245;;9121:64;;9675:42;9121:64;;;;;;9675:42;9121:64;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;8945:59;8982:22;;;;;;;584:14918;;;;8982:22;-1:-1:-1;;;8982:22:21;;;;3970:336:0;8885:50:21;8913:22;;;;;;584:14918;;;;8913:22;-1:-1:-1;;;8913:22:21;;;;3970:336:0;8818:57:21;8854:21;;;;;584:14918;;;;8854:21;-1:-1:-1;;;8854:21:21;;;;3970:336:0;8698:2603:21;;;;:::i;584:14918::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;584:14918:21;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;1355:203:9;;1482:68;1355:203;1482:68;;1355:203;1482:68;1355:203;1505:27;:18;:27;:::i;:::-;1482:68;;584:14918:21;;;;1482:68:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;584:14918:21:-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;584:14918:21;;-1:-1:-1;;;584:14918:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;584:14918:21;;;;;;3970:336:0;5196:642:9;5720:111;5196:642;5641:14;:69;5196:642;5641:14;:::i;:::-;:69;;;:::i;:::-;;;:::i;:::-;584:14918:21;;5728:22:9;;5749:1;5728:22;:::i;:::-;;:56;;;;;5196:642;5720:111;;:::i;5728:56::-;5754:30;;;;;;584:14918:21;;;5754:30:9;;;;;;;;:::i;:::-;5728:56;;;4108:223:10;4272:52;;4108:223;4272:52;4308:1;4272:52;:::i;:::-;;;:::i;584:14918:21:-;;;;:::o;:::-;-1:-1:-1;584:14918:21;;-1:-1:-1;;;584:14918:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;584:14918:21;;;;;;3970:336:0;584:14918:21;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;5165:446:10:-;;5487:31;5535:69;5165:446;;;;5330:12;584:14918:21;;;5330:12:10;5370:4;5354:81;5362:13;5370:4;5362:13;:::i;:::-;:30;;:21;:30;;5354:81;:::i;:::-;5487:31;;;;;;;;;;;:::i;:::-;5535:69;;:::i;584:14918:21:-;;;;:::o;:::-;-1:-1:-1;584:14918:21;;-1:-1:-1;;;584:14918:21;;;;;;;;;;;;;;;;;;;3970:336:0;7671:628:10;;;584:14918:21;7875:418:10;;;;-1:-1:-1;;584:14918:21;;7906:22:10;;7927:1;7906:22;:::i;:::-;;7902:286;;8201:17;;:::o;7902:286::-;8121:18;8113:60;8121:18;;:::i;:::-;8113:60;:::i;7875:418::-;8269:12;;;;;;;:::i;1412:320::-;1702:19;:23;;1724:1;1702:23;:::i;:::-;;1412:320;:::o;8821:540::-;;;8980:17;;584:14918:21;;;8980:17:10;:21;;9000:1;8980:21;:::i;:::-;;8976:379;;;9152:142;;;;;;;8976:379;584:14918:21;;9324:20:10;;-1:-1:-1;9324:20:10;584:14918:21;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;7641:938;7793:17;:7;;:::i;:17::-;;7824:10;;;;;;;;:::i;:::-;7848:9;;;;;7793:101;;7848:9;;;:::i;:::-;7879:4;7793:101;7871:13;7879:4;7871:13;:::i;:::-;7793:101;;;584:14918;;;;7793:101;;;;;;584:14918;;;;7793:101;;;;;;;:::i;:::-;;;;;;;;;;;7641:938;7793:101;;;;7641:938;7937:14;;7965:10;;;;:::i;:::-;8090:9;;;;:::i;:::-;8129:10;;;;;;;;:::i;:::-;:22;;;:::i;:::-;8185:11;8038:211;;;:::i;:::-;-1:-1:-1;;;;;584:14918:21;;;;;-1:-1:-1;;;;;584:14918:21;8038:211;;;584:14918;8038:211;;;:::i;:::-;584:14918;;8038:211;;;584:14918;;;8038:211;;;584:14918;8320:18;;;;;:::i;:::-;7989:364;;:::i;:::-;584:14918;;;-1:-1:-1;;;;;584:14918:21;;7989:364;;;584:14918;7989:364;;;584:14918;8367:13;;;;;;:::i;:::-;7937:453;;;;;;;8432:140;7937:453;;8432:140;7937:453;;;8432:140;7937:453;;;;;7641:938;584:14918;;7937:453;;;;;584:14918;;;;7937:453;;;;;;;:::i;:::-;;;;;;;;;;;7641:938;7937:453;;7641:938;8432:20;8553:9;8517:22;:10;8466;8432:20;8466:10;;:::i;:::-;8517;;:::i;:::-;:22;:::i;:::-;8553:9;;:::i;:::-;8432:140;;;;;;7641:938;584:14918;;8432:140;;;;;;;584:14918;;;;8432:140;;;;;;;:::i;:::-;;;;;;;;;7641:938;8432:140;;7641:938;:::o;8432:140::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;7937:453;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;7793:101;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;584:14918;;;;:::o;:::-;-1:-1:-1;584:14918:21;;-1:-1:-1;;;584:14918:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;584:14918:21;;;;;;3970:336:0;7004:192:17;7175:14;;7080:78;7088:26;-1:-1:-1;;;;;7088:26:17;:::i;:::-;;;;7080:78;:::i;:::-;7175:14;:::i;584:14918:21:-;-1:-1:-1;;;;;584:14918:21;;;;;;;;;;;;;;;;11602:151;11679:10;;11662:33;11679:10;11662:28;11679:10;11662:16;:28;:::i;:::-;:33;:::i;:::-;11711:35;;;;584:14918;;;;11711:35;;;;;;:::i;2589:76:0:-;;2657:1;2589:76;2642:4;12934:18:21;;:::i;2642:4:0:-;2657:1;:::i;584:14918:21:-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;12840:2123;;;13026:1;;13018:9;;;;:::i;:::-;;;13014:43;;584:14918;13149:9;13160:8;;;;;;;13213:20;;;;;;:::i;:::-;;:::i;:::-;13251:14;:32;:39;:32;;;;:::i;:::-;584:14918;;;13251:39;:44;;;;:::i;:::-;;13247:105;;13367:54;13388:33;:15;;:33;:::i;13367:54::-;13452:6;:49;:6;:43;13459:35;;13452:6;13459:32;13452:6;;13459:32;;:::i;:::-;:35;:::i;:::-;13452:43;;:::i;:::-;:49;;:::i;:::-;13610:42;;;;:::i;:::-;13671:30;;;;;;;;;:::i;:::-;:51;;13667:112;;14668:27;14593:61;13830:11;;14929:3;13830:11;;;;;14082:50;14668;13830:11;13160:8;13830:11;;;;14302:24;13830:11;;;14045:23;13818;13830:11;;;:::i;:::-;13818:23;;:::i;:::-;13929:30;13893:66;13929:30;;;:::i;:::-;13893:66;;:::i;:::-;14045:23;;:::i;:::-;14082:50;:::i;:::-;14158:13;;;:::i;:::-;14302:11;;;;:::i;:::-;;;14314;14302:24;14314:11;;;:::i;:::-;584:14918;;14302:24;;;;;;584:14918;;;;14302:24;;;-1:-1:-1;;;;;584:14918:21;14302:24;;;584:14918;;;;;;;14302:24;;;;;;;;;;;13149:9;14302:24;;;;13149:9;14356:12;;14426:27;14356:12;14370:13;14593:24;14356:12;;;;;;:::i;:::-;14370:13;;:::i;:::-;14413:11;;;:::i;:::-;14426:27;;:::i;:::-;14593:24;14605:11;;;:::i;:::-;14593:24;;;584:14918;;;;14593:24;;;;;;;;584:14918;;;;14593:24;;;;;-1:-1:-1;;;;;584:14918:21;;;;;;;;;14593:61;14668:27;;:50;;;;;:::i;:::-;;;:::i;:::-;14738:148;;;;584:14918;;14738:148;;;:::i;:::-;;;;584:14918;;;;14738:148;;;;;;:::i;:::-;;;;584:14918;;;;14929:3;13149:9;;;;14302:24;14593;14302;;;;14370:13;14302:24;14426:27;14302:24;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;13667:112;13747:32;;;;;;;;;;;;;;;;584:14918;;;;13747:32;-1:-1:-1;;;13747:32:21;;;;;;;;584:14918;13247:105;13320:32;;;;;;;;;584:14918;;;;13320:32;-1:-1:-1;;;13320:32:21;;;;3970:336:0;13160:8:21;;;;;;;12840:2123::o;13014:43::-;13036:21;;;;;;584:14918;;;;13036:21;-1:-1:-1;;;13036:21:21;;;;3970:336:0;12840:2123:21;;;;;:::i;941:175:9:-;1050:58;;941:175;1050:58;;941:175;1073:23;:14;:23;:::i;:::-;1050:58;;584:14918:21;;;;1050:58:9;;;;;;;;;;;;:::i;584:14918:21:-;;;;;;;;;;12060:585;12212:68;12248:32;584:14918;12156:17;12248:14;:32;:::i;12212:68::-;12290:19;12334:23;;;584:14918;;;12334:23;12373:9;12368:162;12373:9;12384:8;;;;;;;12502:3;12410:49;12384:8;12425:6;:34;;:27;:6;12432:19;;;;;:::i;:::-;584:14918;;;12410:49;12502:3;584:14918;;;;12502:3;12373:9;;;;;12384:8;;;;;;12615:23;12552:33;12553:17;12567:3;;;:::i;12553:17::-;12574:11;;:::i;:::-;12552:33;;:::i;:::-;12540:45;12615:23;;:::i;2589:76:0:-;;2657:1;2589:76;2642:4;15235:18:21;;:::i;2642:4:0:-;2657:1;:::i;584:14918:21:-;;;;;;;;;;;;;;;15137:363;15286:1;15269:19;15278:10;;;:::i;15269:19::-;-1:-1:-1;;;;;584:14918:21;;15269:19;15265:53;;15332:11;;;:::i;:::-;;;15328:46;;15385:13;;;:::i;:::-;15424:6;15412:10;;15424:6;;;:::i;:::-;15447:46;;;;:::i;:::-;;;;584:14918;;;;15447:46;;;;;;:::i;:::-;;;;15137:363::o;15328:46::-;15352:22;;;;584:14918;;;;15137:363;;;;;:::i"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DEPOSITOR_ROLE()":"a3b0b5a3","FEE_DIVISOR()":"9e93ad8e","FEE_MAX()":"c2624e1e","PERMIT2()":"6afdd850","bribes(bytes32)":"edcdab77","depositBribe((bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes))":"5c2a802b","distributor()":"bfe10928","emergencyWithdraw(address,uint256)":"95ccea67","fee()":"ddca3f43","feeRecipient()":"46904840","generateBribeVaultIdentifier(address,bytes32,uint256,address)":"429c8910","generateRewardIdentifier(address,address,uint256)":"1aea69ca","getBribe(bytes32)":"2c4ef0d5","getBribeIdentifiersByRewardIdentifier(bytes32)":"cc6c9388","getRoleAdmin(bytes32)":"248a9ca3","grantDepositorRole(address)":"172becff","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeDepositorRole(address)":"e8fa2948","revokeRole(bytes32,address)":"d547741f","rewardForwarding(address)":"07cd2ffe","rewardToBribes(bytes32,uint256)":"28b16a3f","rewardTransfers(bytes32)":"1da08b87","setDistributor(address)":"75619ab5","setFee(uint256)":"69fe0e2d","setFeeRecipient(address)":"e74b981b","setRewardForwarding(address)":"f96258c4","supportsInterface(bytes4)":"01ffc9a7","transferBribes(bytes32[])":"b2d7edb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeMax\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BribeAlreadyTransferred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBriber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardIdentifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDepositor\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTokensPerVote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"}],\"name\":\"DepositBribe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"SetDistributor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"SetFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SetRewardForwarding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rewardIdentifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distributorAmount\",\"type\":\"uint256\"}],\"name\":\"TransferBribe\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"bribes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Common.DepositBribeParams\",\"name\":\"_dp\",\"type\":\"tuple\"}],\"name\":\"depositBribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_proposal\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"generateBribeVaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_proposalDeadline\",\"type\":\"uint256\"}],\"name\":\"generateRewardIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bribeIdentifier\",\"type\":\"bytes32\"}],\"name\":\"getBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardIdentifier\",\"type\":\"bytes32\"}],\"name\":\"getBribeIdentifiersByRewardIdentifier\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"grantDepositorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"revokeDepositorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardForwarding\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardToBribes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"rewardTransfers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distributorAmountTransferred\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distributorAmountReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"setDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setRewardForwarding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"rewardIdentifiers\",\"type\":\"bytes32[]\"}],\"name\":\"transferBribes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_distributor\":\"address  Reward distributor address\",\"_fee\":\"uint256  Fee\",\"_feeMax\":\"unt256   Maximum fee\",\"_feeRecipient\":\"address  Fee recipient\"}},\"depositBribe((bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes))\":{\"params\":{\"_dp\":\"DepositBribeParams  Deposit data\"}},\"emergencyWithdraw(address,uint256)\":{\"params\":{\"amount\":\"uint256  Token amount\",\"token\":\"address  Token address\"}},\"generateBribeVaultIdentifier(address,bytes32,uint256,address)\":{\"params\":{\"_market\":\"address  Market that originated the bribe\",\"_proposal\":\"bytes32  Proposal\",\"_proposalDeadline\":\"uint256  Proposal deadline\",\"_token\":\"address  Token\"},\"returns\":{\"id\":\"               bytes32  BribeVault identifier\"}},\"generateRewardIdentifier(address,address,uint256)\":{\"params\":{\"_market\":\"address  Market that originated the reward\",\"_proposalDeadline\":\"uint256  Proposal deadline\",\"_token\":\"address  Token\"},\"returns\":{\"id\":\"                bytes32  Reward identifier\"}},\"getBribe(bytes32)\":{\"params\":{\"bribeIdentifier\":\"bytes32  The specified bribe identifier\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantDepositorRole(address)\":{\"params\":{\"depositor\":\"address  Address to grant the depositor role\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeDepositorRole(address)\":{\"params\":{\"depositor\":\"address  Address to revoke the depositor role\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDistributor(address)\":{\"params\":{\"_distributor\":\"address  Distributor\"}},\"setFee(uint256)\":{\"params\":{\"_fee\":\"uint256  Fee\"}},\"setFeeRecipient(address)\":{\"params\":{\"_feeRecipient\":\"address  Fee recipient\"}},\"setRewardForwarding(address)\":{\"params\":{\"to\":\"address  Account that rewards will be sent to\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferBribes(bytes32[])\":{\"params\":{\"rewardIdentifiers\":\"bytes32[]  List of rewardIdentifiers\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BribeAlreadyTransferred()\":[{\"notice\":\"bribe has already been transferred\"}],\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"InvalidAmount()\":[{\"notice\":\"invalid input amount\"}],\"InvalidArray()\":[{\"notice\":\"no array given\"}],\"InvalidBriber()\":[{\"notice\":\"invalid briber\"}],\"InvalidDistributor()\":[{\"notice\":\"invalid distributor\"}],\"InvalidFee()\":[{\"notice\":\"invalid fee\"}],\"InvalidFeeRecipient()\":[{\"notice\":\"invalid fee recipient\"}],\"InvalidMaxFee()\":[{\"notice\":\"invalid max fee\"}],\"InvalidRewardIdentifier()\":[{\"notice\":\"invalid reward identifier\"}],\"InvalidToken()\":[{\"notice\":\"token is address(0)\"}],\"NotDepositor()\":[{\"notice\":\"address does not have DEPOSITOR_ROLE\"}]},\"kind\":\"user\",\"methods\":{\"depositBribe((bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes))\":{\"notice\":\"Deposit bribe (ERC20 only)\"},\"emergencyWithdraw(address,uint256)\":{\"notice\":\"Withdraw ERC20 tokens to the admin address\"},\"generateBribeVaultIdentifier(address,bytes32,uint256,address)\":{\"notice\":\"Generate the BribeVault identifier based on a scheme\"},\"generateRewardIdentifier(address,address,uint256)\":{\"notice\":\"Generate the reward identifier based on a scheme\"},\"getBribe(bytes32)\":{\"notice\":\"Get bribe information based on the specified identifier\"},\"getBribeIdentifiersByRewardIdentifier(bytes32)\":{\"notice\":\"Return the list of bribe identifiers tied to the specified reward identifier\"},\"grantDepositorRole(address)\":{\"notice\":\"Grant the depositor role to an address\"},\"revokeDepositorRole(address)\":{\"notice\":\"Revoke the depositor role from an address\"},\"setDistributor(address)\":{\"notice\":\"Set the RewardDistributor contract address\"},\"setFee(uint256)\":{\"notice\":\"Set the fee collected by the protocol\"},\"setFeeRecipient(address)\":{\"notice\":\"Set the protocol address where fees will be transferred\"},\"setRewardForwarding(address)\":{\"notice\":\"Voters can opt in or out of reward-forwardingOpt-in: A voter sets another address to forward rewards toOpt-out: A voter sets their own address or the zero address\"},\"transferBribes(bytes32[])\":{\"notice\":\"Transfer fees to fee recipient and bribes to distributor and update rewards metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BribeVault.sol\":\"BribeVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/BribeVault.sol\":{\"keccak256\":\"0x687c71250542ce6d8a64258d1dd245cd5c3cf265ade690753e4fdb476c1510b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e15a6e8499e38fb288850ab4287791202fc6ea1fc9ad01af5caf9a150e9585\",\"dweb:/ipfs/QmencsUYFTBdCzspQoY6yLZ8yfenVh2z5p3qL2ZvsodSHg\"]},\"contracts/interfaces/IPermit2.sol\":{\"keccak256\":\"0x39f0de68f34581fecd80de920f70a613214822bdd1d5b30c2f9427efa4181c08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83928510bd281517757cd9ff7f1fd45079eeba6d80e62b079badb3090f57cf65\",\"dweb:/ipfs/QmPVRh1G1cpaY8yhhogTPRw1LLcjFZ1FWnN7cb1zvvkJdh\"]},\"contracts/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x19cf8b1c3257a2aa6844a67c2c0ac3f2a41a78abfca29fc3203918e9e315e9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7326fa3edfafe5ddd68c5a3f0c878e872785ed72471e51d49666dc7a879fc634\",\"dweb:/ipfs/QmQnTuyTrzLMapEgqSErHvPtWob1gjrSHMydqCRugvay9R\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/RewardDistributor.sol":{"RewardDistributor":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidArray","type":"error"},{"inputs":[],"name":"InvalidDistribution","type":"error"},{"inputs":[],"name":"InvalidMerkleRoot","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidTimerDuration","type":"error"},{"inputs":[],"name":"RewardInactive","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"proof","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"activeAt","type":"uint256"}],"name":"RewardMetadataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"duration","type":"uint256"}],"name":"SetActiveTimerDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_ACTIVE_TIMER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activeTimerDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"changeActiveTimerDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"internalType":"struct RewardDistributor.Claim[]","name":"_claims","type":"tuple[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"rewards","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"proof","type":"bytes32"},{"internalType":"uint256","name":"activeAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"setPauseState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"proof","type":"bytes32"}],"internalType":"struct Common.Distribution[]","name":"_distributions","type":"tuple[]"}],"name":"updateRewardsMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":80,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MINIMUM_ACTIVE_TIMER":{"entryPoint":92,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":235,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_Pausable":{"entryPoint":211,"id":691,"parameterSlots":0,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":286,"id":791,"parameterSlots":0,"returnSlots":0},"constructor_RewardDistributor":{"entryPoint":105,"id":7632,"parameterSlots":0,"returnSlots":0},"convert_address_to_address":{"entryPoint":379,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":174,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":61,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":368,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":402,"id":283,"parameterSlots":2,"returnSlots":0},"fun_hasRole":{"entryPoint":566,"id":79,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_setActiveTimerDuration":{"entryPoint":596,"id":7958,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":390,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":308,"id":null,"parameterSlots":2,"returnSlots":1},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":554,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":55,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":247,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":159,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":179,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":258,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000027575b6200001562000069565b604051611bc9620002cd8239611bc990f35b6200003162000037565b6200000b565b50600080fd5b6200004d6200004d6200004d9290565b90565b6200004d60006200003d565b6200004d612a306200003d565b62000073620000d3565b620000896200008162000050565b339062000192565b6200009d620000976200005c565b62000254565b565b9060ff905b9181191691161790565b151590565b90620000c76200004d620000cf92620000ae565b82546200009f565b9055565b620000dd6200011e565b6200009d60006002620000b3565b6200004d60016200003d565b9060001990620000a4565b90620001166200004d620000cf926200003d565b8254620000f7565b6200009d6200012c620000eb565b600162000102565b9062000140906200004d565b600052602052604060002090565b6200004d9062000164906001600160a01b031682565b6001600160a01b031690565b6200004d906200014e565b6200004d9062000170565b9062000140906200017b565b90620001a7620001a3828462000236565b1590565b620001b0575050565b620001d66001620001d0836000620001c9878262000134565b0162000186565b620000b3565b3390620002136200020c6200020c7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d956200004d565b926200017b565b926200021e60405190565b600090a4565b60ff1690565b6200004d905462000224565b6200004d916200024e91620001c96000918262000134565b6200022a565b620002626200004d6200005c565b8110620002b8576200027681600562000102565b620002b37f676dc704f22ddab12a141690a96616ef0128413803c63394aba7ffe658681a1691620002a660405190565b9182918290815260200190565b0390a1565b50506040516367e00a0760e01b8152600490fdfe60806040526004361015610018575b6100166103a0565b005b60003560e01c806301ffc9a714610376578063248a9ca31461034c5780632f2ff15d1461032457806333f642f6146102fa57806336568abe146102d257806356853398146102aa5780635c975abb146102805780637fdba5f61461025657806391d1485414610219578063938d967a146101d9578063960d264d146101b2578063a217fddf14610188578063cdb88ad114610161578063d547741f14610139578063df45c752146101115763dfcae622146100d25761000e565b34610104575b6101006100ef6100e936600461044d565b9061070d565b6040515b9182918290815260200190565b0390f35b61010c6103a0565b6100d8565b503461012c575b61001661012636600461069a565b9061137a565b6101346103a0565b610118565b5034610154575b61001661014e36600461044d565b906109e1565b61015c6103a0565b610140565b503461017b575b61001661017636600461062d565b6113a8565b6101836103a0565b610168565b50346101a5575b61019a36600461047e565b6101006100ef610610565b6101ad6103a0565b61018f565b50346101cc575b6100166101c7366004610404565b6114d5565b6101d46103a0565b6101b9565b503461020c575b6101006101f66101f1366004610404565b610587565b9061020394929460405190565b948594856105ca565b6102146103a0565b6101e0565b5034610249575b61010061023761023136600461044d565b9061077b565b60405191829182901515815260200190565b6102516103a0565b610220565b5034610273575b61026836600461047e565b6101006100ef61055e565b61027b6103a0565b61025d565b503461029d575b61029236600461047e565b610100610237610b6f565b6102a56103a0565b610287565b50346102c5575b6100166102bf3660046104ff565b90611040565b6102cd6103a0565b6102b1565b50346102ed575b6100166102e736600461044d565b90610a50565b6102f56103a0565b6102d9565b5034610317575b61030c36600461047e565b6101006100ef6104a7565b61031f6103a0565b610301565b503461033f575b61001661033936600461044d565b906107d9565b6103476103a0565b61032b565b5034610369575b6101006100ef610364366004610404565b61079a565b6103716103a0565b610353565b5034610393575b61010061023761038e3660046103c9565b61072c565b61039b6103a0565b61037d565b50600080fd5b6001600160e01b031981165b14156103a057565b905035906103c7826103a6565b565b906103dd916020818303126103e0576103ba565b90565b6103e86103a0565b6103ba565b9052565b806103b2565b905035906103c7826103f1565b906103dd91602081830312610418576103f7565b6104206103a0565b6103f7565b6001600160a01b031690565b6001600160a01b0381166103b2565b905035906103c782610431565b91906103dd90604084820312610471575b61046881856103f7565b93602001610440565b6104796103a0565b61045e565b600091031261048957565b6103c76103a0565b6103dd916008021c81565b906103dd9154610491565b6103dd6000600561049c565b909182601f830112156104f2575b602082359267ffffffffffffffff84116104e5575b01926020830284011161048957565b6104ed6103a0565b6104d6565b6104fa6103a0565b6104c1565b9061052891602081830312610539575b80359067ffffffffffffffff821161052c575b016104b3565b9091565b6105346103a0565b610522565b6105416103a0565b61050f565b6103dd6103dd6103dd9290565b6103dd612a30610546565b6103dd610553565b905b600052602052604060002090565b6103dd9081565b6103dd9054610576565b610592906003610566565b906105a482546001600160a01b031690565b916105b16001820161057d565b916103dd60036105c36002850161057d565b930161057d565b6106026103c7946105fb6060949897956105f4608086019a60008701906001600160a01b03169052565b6020850152565b6040830152565b0152565b6103dd6000610546565b6103dd610606565b8015156103b2565b905035906103c782610618565b906103dd9160208183031261064157610620565b6106496103a0565b610620565b909182601f8301121561068d575b602082359267ffffffffffffffff8411610680575b01926080830284011161048957565b6106886103a0565b610671565b6106956103a0565b61065c565b90610528916020818303126106d0575b80359067ffffffffffffffff82116106c3575b0161064e565b6106cb6103a0565b6106bd565b6106d86103a0565b6106aa565b6103dd90610425906001600160a01b031682565b6103dd906106dd565b6103dd906106f1565b90610568906106fa565b6107276103dd92610722600493600094610566565b610703565b61049c565b637965db0b60e01b6001600160e01b031982161490811561074b575090565b6103dd91506001600160e01b0319166301ffc9a760e01b1490565b6103dd905b60ff1690565b6103dd9054610766565b6103dd916107959161078f60009182610566565b01610703565b610771565b60016107b36103dd926107ab600090565b506000610566565b0161057d565b906103c7916107cf6107ca8261079a565b6107e3565b906103c791610aa0565b906103c7916107b9565b6103c7903390610937565b6103dd90610546565b0190565b918091926000905b82821061081b575011610814575050565b6000910152565b91508060209183015181860152018291610803565b6107f761084892602092610842815190565b94859290565b938491016107fb565b61088f6103dd9392610889610889937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90610830565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108ef57604052565b6108f76108b6565b604052565b61091d6108ac6020936107f793610911815190565b80835293849260200190565b958691016107fb565b60208082526103dd929101906108fc565b90610949610945828461077b565b1590565b610951575050565b6109c29250906103dd61096f6109696109a994610e78565b926107ee565b61098460209161097e83610546565b90610d18565b9261099d61099160405190565b94859384019283610851565b908103825203826108cd565b6040515b62461bcd60e51b815291829160048301610926565b0390fd5b906103c7916109d76107ca8261079a565b906103c791610b18565b906103c7916109c6565b156109f257565b5060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b6103c79190610a71610a6133610425565b6001600160a01b038416146109eb565b610b18565b9060ff905b9181191691161790565b90610a956103dd610a9c92151590565b8254610a76565b9055565b90610aae610945828461077b565b610ab6575050565b610ad06001610acb83600061078f8782610566565b610a85565b3390610b06610b00610b007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b926106fa565b92610b1060405190565b80805b0390a4565b90610b23818361077b565b610b2b575050565b610b3f6000610acb838261078f8782610566565b3390610b06610b00610b007ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b6103dd6002610771565b50634e487b7160e01b600052601160045260246000fd5b90610b9a565b9190565b908060001904821181151516610bae570290565b610bb6610b79565b0290565b81198111610bc6570190565b6107f7610b79565b906103c7610bdb60405190565b92836108cd565b6107f760209167ffffffffffffffff8111610c0157601f01601f191690565b6108ac6108b6565b90610c1b610c1683610be2565b610bce565b918252565b369037565b906103c7610c3b610c3584610c09565b93610be2565b601f190160208401610c20565b50634e487b7160e01b600052603260045260246000fd5b906001602091610c6d845190565b811015610c7b575b02010190565b610c83610c48565b610c75565b6001908015610c95570390565b610c9d610b79565b0390565b61076b6103dd6103dd9290565b6103dd90610cc2610b966103dd9460ff1690565b901c90565b15610cce57565b5060405162461bcd60e51b8152806109c2600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b9190600290610d49610d44610d3583610d3086610546565b610b90565b610d3e85610546565b90610bba565b610c25565b916000916030610d61610d5b85610546565b86610c5f565b53610d99610d90600f60fb1b92610d306001958695881a610d8a610d8488610546565b8b610c5f565b53610546565b610d3e83610546565b915b610dbc575b50506103dd9293610db6610b966103dd93610546565b14610cc7565b9094610dc782610546565b861115610e4657610e33610e2d8392610e10610df36f181899199a1a9b1b9c1cb0b131b232b360811b90565b610dfd600f610546565b83166010811015610e39575b1a60f81b90565b861a610e1c8a89610c5f565b53610e276004610ca1565b90610cae565b96610c88565b91610d9b565b610e41610c48565b610e09565b94610da0565b6103dd9081906001600160a01b031681565b6103dd6014610ca1565b6103dd6103dd6103dd9260ff1690565b610e95610e906103dd92610e8a606090565b506106f1565b610e4c565b61097e610ea0610e5e565b610e68565b1490565b90610ebb91610eb6611115565b610ec3565b6103c7611147565b906103c791610ed061108a565b610f80565b903590607e193682900301821215610eeb570190565b6107f76103a0565b906103dd92602091811015610f0c575b02810190610ed5565b610f14610c48565b610f03565b356103dd816103f1565b356103dd81610431565b903590601e193682900301821215610f73575b01602081359167ffffffffffffffff8311610f66575b0191602082023603831361048957565b610f6e6103a0565b610f56565b610f7b6103a0565b610f40565b9091908291600090610f9182610546565b84146110235760005b845b81101561101b576110148161100e86808a611006610ffc86610ff56040610fdd838f610fef610f9c9f610fe9818c610fe38f96610fdd60209684809a610ef3565b01610f19565b9e610ef3565b01610f23565b9a610ef3565b938d610ef3565b6060810190610f2d565b939092611583565b60010190565b9050610f9a565b509350505050565b505050505061103160405190565b631ec5aa5160e01b8152600490fd5b906103c791610ea9565b1561105157565b5060405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6103c7611098610945610b6f565b61104a565b6103dd6002610546565b156110ae57565b5060405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9060001990610a7b565b9061110e6103dd610a9c92610546565b82546110f4565b6103c7611122600161057d565b61113661112d61109d565b918214156110a7565b60016110fe565b6103dd6001610546565b6103c761113661113d565b906103c7916111626107ca610606565b6111eb565b9160809181101561117757020190565b61117f610c48565b020190565b9061110e6103dd610a9c9290565b6104256103dd6103dd9290565b6103dd90611192565b906001600160a01b0390610a7b565b906111c76103dd610a9c926106fa565b82546111a8565b9081526060810193926103c7929091604091610602906020830152565b91816000936111f985610546565b841461135d5761120d42610d3e600561057d565b9260005b855b81101561135457611225818585611167565b80880191600361123484610f19565b61123e9082610566565b8a604085019161124d83610f19565b61125a9060018301611184565b8a606087019461126986610f19565b6112769060028501611184565b820190611282916110fe565b019361129585546001600160a01b031690565b61129e8d61119f565b6001600160a01b0316906001600160a01b0316146112db6112db60206112d46112139a6113329a6112e196611339575b50610f19565b9401610f23565b93610f19565b61131261130c7f1d0b6716ec306cca1346fdec2c918d00831bd1239f2d28acf62e94f2373355fc9390565b936106fa565b936113298c61132060405190565b938493846111ce565b0390a360010190565b9050611211565b61134e90611348858a01610f23565b906111b7565b386112ce565b50945050505050565b505050505061136b60405190565b630d16b83360e31b8152600490fd5b906103c791611152565b6103c7906113936107ca610606565b156113a0576103c7611413565b6103c7611461565b6103c790611384565b6113b961108a565b6103c76113c860016002610a85565b3361140e7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916113f760405190565b918291826001600160a01b03909116815260200190565b0390a1565b6103c76113b1565b6114236114ad565b6103c761143260006002610a85565b3361140e7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916113f760405190565b6103c761141b565b1561147057565b5060405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b6103c76114b8610b6f565b611469565b6103c7906114cc6107ca610606565b6103c790611b27565b6103c7906114bd565b6103dd6080610bce565b906103c761154760036114f96114de565b9461151b61150e82546001600160a01b031690565b6001600160a01b03168752565b61153161152a6001830161057d565b6020880152565b6107b36115406002830161057d565b6040880152565b6060840152565b6103dd906114e8565b6103ed906001600160a01b031660601b90565b60148161157d6107f79360209695611557565b01918252565b919392909261159b611596846003610566565b61154e565b9060208201906115a9825190565b936000946115b9610b9687610546565b146116fd57606084015142106116dc576109456116329187936115fb6115f68c6115f16115ec8e61072260049b8c610566565b61057d565b610bba565b965190565b9061160560405190565b611619818d61099d8b60208401928361156a565b61162b611624825190565b9160200190565b2092611a74565b6116b55761166093929161164d876107228861165295610566565b6110fe565b01516001600160a01b031690565b90611674848461166f856106fa565b611761565b610b136116ab6116a56116a57f5eb306c17229e0da0cbf33aae2020ca276e63db4818b8060786e49ae516231109490565b946106fa565b946100f360405190565b955050505050506109c291506116ca60405190565b6309bde33960e01b8152918291820190565b5050505050505050506116ee60405190565b630995309b60e01b8152600490fd5b50505050505050505061170f60405190565b639dd854d360e01b8152600490fd5b6117376117316103dd9263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b0390911681526040810192916103c79160200152565b6117a46004926117956103c79561177b63a9059cbb61171e565b9261178560405190565b9687946020860190815201611744565b602082018103825203836108cd565b611872565b6117b36020610c09565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b6103dd6117a9565b905051906103c782610618565b906103dd91602081830312611805576117e4565b61180d6103a0565b6117e4565b1561181957565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6103c791611882611891926106fa565b9061188b6117dc565b916118cf565b80516118a0610b966000610546565b149081156118af575b50611812565b6118c9915060206118be825190565b8183010191016117f1565b386118a9565b6103dd92916118de6000610546565b9161195f565b156118eb57565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d1561195a5761194f3d610c09565b903d6000602084013e565b606090565b9060006103dd94938192611971606090565b5061198861197e306106fa565b83903110156118e4565b60208101905191855af161199a611940565b916119ed565b156119a757565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919260609115611a225750508151611a08610b966000610546565b14611a11575090565b611a1d6103dd91611a2f565b6119a0565b9093926103c79250611a41565b3b611a3d610b966000610546565b1190565b9150611a4b825190565b611a58610b966000610546565b1115611a675750805190602001fd5b6040516109c292506109ad565b610ea59293610b9692611a8f92611a89600090565b50611ab3565b9290565b6001906000198114610bc6570190565b9160209181101561117757020190565b611abd6000610546565b925b82841015611af357611ae7611aed91611ae1611adc878787611aa3565b610f19565b90611afa565b93611a93565b92611abf565b9250505090565b81811015611b1557906103dd91600052602052604060002090565b6103dd91600052602052604060002090565b611b326103dd610553565b8110611b7157611b438160056110fe565b61140e7f676dc704f22ddab12a141690a96616ef0128413803c63394aba7ffe658681a16916100f360405190565b50506040516367e00a0760e01b8152600490fdfea364697066735822122098163cbcc7b95e7e33dc5b56853bde84c8b36b03ac696c29a4ddd82b8dbfb1fa6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x27 JUMPI JUMPDEST PUSH3 0x15 PUSH3 0x69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC9 PUSH3 0x2CD DUP3 CODECOPY PUSH2 0x1BC9 SWAP1 RETURN JUMPDEST PUSH3 0x31 PUSH3 0x37 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4D PUSH3 0x4D PUSH3 0x4D SWAP3 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x4D PUSH1 0x0 PUSH3 0x3D JUMP JUMPDEST PUSH3 0x4D PUSH2 0x2A30 PUSH3 0x3D JUMP JUMPDEST PUSH3 0x73 PUSH3 0xD3 JUMP JUMPDEST PUSH3 0x89 PUSH3 0x81 PUSH3 0x50 JUMP JUMPDEST CALLER SWAP1 PUSH3 0x192 JUMP JUMPDEST PUSH3 0x9D PUSH3 0x97 PUSH3 0x5C JUMP JUMPDEST PUSH3 0x254 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0xC7 PUSH3 0x4D PUSH3 0xCF SWAP3 PUSH3 0xAE JUMP JUMPDEST DUP3 SLOAD PUSH3 0x9F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xDD PUSH3 0x11E JUMP JUMPDEST PUSH3 0x9D PUSH1 0x0 PUSH1 0x2 PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x4D PUSH1 0x1 PUSH3 0x3D JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0xA4 JUMP JUMPDEST SWAP1 PUSH3 0x116 PUSH3 0x4D PUSH3 0xCF SWAP3 PUSH3 0x3D JUMP JUMPDEST DUP3 SLOAD PUSH3 0xF7 JUMP JUMPDEST PUSH3 0x9D PUSH3 0x12C PUSH3 0xEB JUMP JUMPDEST PUSH1 0x1 PUSH3 0x102 JUMP JUMPDEST SWAP1 PUSH3 0x140 SWAP1 PUSH3 0x4D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH3 0x4D SWAP1 PUSH3 0x164 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x4D SWAP1 PUSH3 0x14E JUMP JUMPDEST PUSH3 0x4D SWAP1 PUSH3 0x170 JUMP JUMPDEST SWAP1 PUSH3 0x140 SWAP1 PUSH3 0x17B JUMP JUMPDEST SWAP1 PUSH3 0x1A7 PUSH3 0x1A3 DUP3 DUP5 PUSH3 0x236 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH3 0x1B0 JUMPI POP POP JUMP JUMPDEST PUSH3 0x1D6 PUSH1 0x1 PUSH3 0x1D0 DUP4 PUSH1 0x0 PUSH3 0x1C9 DUP8 DUP3 PUSH3 0x134 JUMP JUMPDEST ADD PUSH3 0x186 JUMP JUMPDEST PUSH3 0xB3 JUMP JUMPDEST CALLER SWAP1 PUSH3 0x213 PUSH3 0x20C PUSH3 0x20C PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 PUSH3 0x4D JUMP JUMPDEST SWAP3 PUSH3 0x17B JUMP JUMPDEST SWAP3 PUSH3 0x21E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x4D SWAP1 SLOAD PUSH3 0x224 JUMP JUMPDEST PUSH3 0x4D SWAP2 PUSH3 0x24E SWAP2 PUSH3 0x1C9 PUSH1 0x0 SWAP2 DUP3 PUSH3 0x134 JUMP JUMPDEST PUSH3 0x22A JUMP JUMPDEST PUSH3 0x262 PUSH3 0x4D PUSH3 0x5C JUMP JUMPDEST DUP2 LT PUSH3 0x2B8 JUMPI PUSH3 0x276 DUP2 PUSH1 0x5 PUSH3 0x102 JUMP JUMPDEST PUSH3 0x2B3 PUSH32 0x676DC704F22DDAB12A141690A96616EF0128413803C63394ABA7FFE658681A16 SWAP2 PUSH3 0x2A6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x67E00A07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x33F642F6 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x56853398 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x7FDBA5F6 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x938D967A EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x960D264D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDF45C752 EQ PUSH2 0x111 JUMPI PUSH4 0xDFCAE622 EQ PUSH2 0xD2 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x104 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x12C JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x134 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST POP CALLVALUE PUSH2 0x154 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST POP CALLVALUE PUSH2 0x17B JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A5 JUMPI JUMPDEST PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x610 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1CC JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x20C JUMPI JUMPDEST PUSH2 0x100 PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST SWAP1 PUSH2 0x203 SWAP5 SWAP3 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x214 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x249 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0x237 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI JUMPDEST PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x55E JUMP JUMPDEST PUSH2 0x27B PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST POP CALLVALUE PUSH2 0x29D JUMPI JUMPDEST PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0x237 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2C5 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4FF JUMP JUMPDEST SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2ED JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x317 JUMPI JUMPDEST PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST POP CALLVALUE PUSH2 0x33F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST POP CALLVALUE PUSH2 0x369 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH2 0x371 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST POP CALLVALUE PUSH2 0x393 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0x237 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH2 0x39B PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x3A0 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x3A6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x3E0 JUMPI PUSH2 0x3BA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 PUSH2 0x3B2 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x3F1 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x418 JUMPI PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x420 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3B2 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3DD SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x471 JUMPI JUMPDEST PUSH2 0x468 DUP2 DUP6 PUSH2 0x3F7 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3DD SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 SLOAD PUSH2 0x491 JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x0 PUSH1 0x5 PUSH2 0x49C JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x4E5 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST SWAP1 PUSH2 0x528 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x539 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x52C JUMPI JUMPDEST ADD PUSH2 0x4B3 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x541 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3DD PUSH2 0x3DD SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x2A30 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x553 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3DD SWAP1 SLOAD PUSH2 0x576 JUMP JUMPDEST PUSH2 0x592 SWAP1 PUSH1 0x3 PUSH2 0x566 JUMP JUMPDEST SWAP1 PUSH2 0x5A4 DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5B1 PUSH1 0x1 DUP3 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 PUSH2 0x3DD PUSH1 0x3 PUSH2 0x5C3 PUSH1 0x2 DUP6 ADD PUSH2 0x57D JUMP JUMPDEST SWAP4 ADD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x602 PUSH2 0x3C7 SWAP5 PUSH2 0x5FB PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x5F4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x606 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x3B2 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x641 JUMPI PUSH2 0x620 JUMP JUMPDEST PUSH2 0x649 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x68D JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x680 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x80 DUP4 MUL DUP5 ADD GT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0x688 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH2 0x695 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST SWAP1 PUSH2 0x528 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x6D0 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6C3 JUMPI JUMPDEST ADD PUSH2 0x64E JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x6D8 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x425 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 PUSH2 0x568 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x727 PUSH2 0x3DD SWAP3 PUSH2 0x722 PUSH1 0x4 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x74B JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 SLOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0x3DD SWAP2 PUSH2 0x795 SWAP2 PUSH2 0x78F PUSH1 0x0 SWAP2 DUP3 PUSH2 0x566 JUMP JUMPDEST ADD PUSH2 0x703 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7B3 PUSH2 0x3DD SWAP3 PUSH2 0x7AB PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x566 JUMP JUMPDEST ADD PUSH2 0x57D JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x7CF PUSH2 0x7CA DUP3 PUSH2 0x79A JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xAA0 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 CALLER SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x546 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x81B JUMPI POP GT PUSH2 0x814 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x848 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x842 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x88F PUSH2 0x3DD SWAP4 SWAP3 PUSH2 0x889 PUSH2 0x889 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x91D PUSH2 0x8AC PUSH1 0x20 SWAP4 PUSH2 0x7F7 SWAP4 PUSH2 0x911 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3DD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x8FC JUMP JUMPDEST SWAP1 PUSH2 0x949 PUSH2 0x945 DUP3 DUP5 PUSH2 0x77B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x951 JUMPI POP POP JUMP JUMPDEST PUSH2 0x9C2 SWAP3 POP SWAP1 PUSH2 0x3DD PUSH2 0x96F PUSH2 0x969 PUSH2 0x9A9 SWAP5 PUSH2 0xE78 JUMP JUMPDEST SWAP3 PUSH2 0x7EE JUMP JUMPDEST PUSH2 0x984 PUSH1 0x20 SWAP2 PUSH2 0x97E DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP1 PUSH2 0xD18 JUMP JUMPDEST SWAP3 PUSH2 0x99D PUSH2 0x991 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 ADD SWAP3 DUP4 PUSH2 0x851 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x926 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x9D7 PUSH2 0x7CA DUP3 PUSH2 0x79A JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xB18 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x9C6 JUMP JUMPDEST ISZERO PUSH2 0x9F2 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xA71 PUSH2 0xA61 CALLER PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x9EB JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA95 PUSH2 0x3DD PUSH2 0xA9C SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xA76 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xAAE PUSH2 0x945 DUP3 DUP5 PUSH2 0x77B JUMP JUMPDEST PUSH2 0xAB6 JUMPI POP POP JUMP JUMPDEST PUSH2 0xAD0 PUSH1 0x1 PUSH2 0xACB DUP4 PUSH1 0x0 PUSH2 0x78F DUP8 DUP3 PUSH2 0x566 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xB06 PUSH2 0xB00 PUSH2 0xB00 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x6FA JUMP JUMPDEST SWAP3 PUSH2 0xB10 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 PUSH2 0xB23 DUP2 DUP4 PUSH2 0x77B JUMP JUMPDEST PUSH2 0xB2B JUMPI POP POP JUMP JUMPDEST PUSH2 0xB3F PUSH1 0x0 PUSH2 0xACB DUP4 DUP3 PUSH2 0x78F DUP8 DUP3 PUSH2 0x566 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xB06 PUSH2 0xB00 PUSH2 0xB00 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP6 SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x2 PUSH2 0x771 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xB9A JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0xBAE JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xB79 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0xBC6 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0xB79 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 PUSH2 0xBDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x7F7 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC01 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x8AC PUSH2 0x8B6 JUMP JUMPDEST SWAP1 PUSH2 0xC1B PUSH2 0xC16 DUP4 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x3C7 PUSH2 0xC3B PUSH2 0xC35 DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP4 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0xC20 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 SWAP2 PUSH2 0xC6D DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC7B JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xC83 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP1 ISZERO PUSH2 0xC95 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xC9D PUSH2 0xB79 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x76B PUSH2 0x3DD PUSH2 0x3DD SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0xCC2 PUSH2 0xB96 PUSH2 0x3DD SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xCCE JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x9C2 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xD49 PUSH2 0xD44 PUSH2 0xD35 DUP4 PUSH2 0xD30 DUP7 PUSH2 0x546 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD3E DUP6 PUSH2 0x546 JUMP JUMPDEST SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x30 PUSH2 0xD61 PUSH2 0xD5B DUP6 PUSH2 0x546 JUMP JUMPDEST DUP7 PUSH2 0xC5F JUMP JUMPDEST MSTORE8 PUSH2 0xD99 PUSH2 0xD90 PUSH1 0xF PUSH1 0xFB SHL SWAP3 PUSH2 0xD30 PUSH1 0x1 SWAP6 DUP7 SWAP6 DUP9 BYTE PUSH2 0xD8A PUSH2 0xD84 DUP9 PUSH2 0x546 JUMP JUMPDEST DUP12 PUSH2 0xC5F JUMP JUMPDEST MSTORE8 PUSH2 0x546 JUMP JUMPDEST PUSH2 0xD3E DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0xDBC JUMPI JUMPDEST POP POP PUSH2 0x3DD SWAP3 SWAP4 PUSH2 0xDB6 PUSH2 0xB96 PUSH2 0x3DD SWAP4 PUSH2 0x546 JUMP JUMPDEST EQ PUSH2 0xCC7 JUMP JUMPDEST SWAP1 SWAP5 PUSH2 0xDC7 DUP3 PUSH2 0x546 JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE33 PUSH2 0xE2D DUP4 SWAP3 PUSH2 0xE10 PUSH2 0xDF3 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 JUMP JUMPDEST PUSH2 0xDFD PUSH1 0xF PUSH2 0x546 JUMP JUMPDEST DUP4 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0xE39 JUMPI JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST DUP7 BYTE PUSH2 0xE1C DUP11 DUP10 PUSH2 0xC5F JUMP JUMPDEST MSTORE8 PUSH2 0xE27 PUSH1 0x4 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 PUSH2 0xCAE JUMP JUMPDEST SWAP7 PUSH2 0xC88 JUMP JUMPDEST SWAP2 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0xE41 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST SWAP5 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x3DD SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x14 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3DD PUSH2 0x3DD SWAP3 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE95 PUSH2 0xE90 PUSH2 0x3DD SWAP3 PUSH2 0xE8A PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x97E PUSH2 0xEA0 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xEBB SWAP2 PUSH2 0xEB6 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1147 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xED0 PUSH2 0x108A JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x7E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0xEEB JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP3 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0xF0C JUMPI JUMPDEST MUL DUP2 ADD SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH2 0xF14 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3DD DUP2 PUSH2 0x3F1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3DD DUP2 PUSH2 0x431 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0xF73 JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xF66 JUMPI JUMPDEST ADD SWAP2 PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0xF6E PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST PUSH2 0xF7B PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0xF91 DUP3 PUSH2 0x546 JUMP JUMPDEST DUP5 EQ PUSH2 0x1023 JUMPI PUSH1 0x0 JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x101B JUMPI PUSH2 0x1014 DUP2 PUSH2 0x100E DUP7 DUP1 DUP11 PUSH2 0x1006 PUSH2 0xFFC DUP7 PUSH2 0xFF5 PUSH1 0x40 PUSH2 0xFDD DUP4 DUP16 PUSH2 0xFEF PUSH2 0xF9C SWAP16 PUSH2 0xFE9 DUP2 DUP13 PUSH2 0xFE3 DUP16 SWAP7 PUSH2 0xFDD PUSH1 0x20 SWAP7 DUP5 DUP1 SWAP11 PUSH2 0xEF3 JUMP JUMPDEST ADD PUSH2 0xF19 JUMP JUMPDEST SWAP15 PUSH2 0xEF3 JUMP JUMPDEST ADD PUSH2 0xF23 JUMP JUMPDEST SWAP11 PUSH2 0xEF3 JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xF9A JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1031 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1EC5AA51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xEA9 JUMP JUMPDEST ISZERO PUSH2 0x1051 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 PUSH2 0x1098 PUSH2 0x945 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x2 PUSH2 0x546 JUMP JUMPDEST ISZERO PUSH2 0x10AE JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xA7B JUMP JUMPDEST SWAP1 PUSH2 0x110E PUSH2 0x3DD PUSH2 0xA9C SWAP3 PUSH2 0x546 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1122 PUSH1 0x1 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x1136 PUSH2 0x112D PUSH2 0x109D JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x1 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1136 PUSH2 0x113D JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x1162 PUSH2 0x7CA PUSH2 0x606 JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST SWAP2 PUSH1 0x80 SWAP2 DUP2 LT ISZERO PUSH2 0x1177 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x117F PUSH2 0xC48 JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x110E PUSH2 0x3DD PUSH2 0xA9C SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x3DD PUSH2 0x3DD SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x1192 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xA7B JUMP JUMPDEST SWAP1 PUSH2 0x11C7 PUSH2 0x3DD PUSH2 0xA9C SWAP3 PUSH2 0x6FA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x11A8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x3C7 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x602 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x0 SWAP4 PUSH2 0x11F9 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP5 EQ PUSH2 0x135D JUMPI PUSH2 0x120D TIMESTAMP PUSH2 0xD3E PUSH1 0x5 PUSH2 0x57D JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x1354 JUMPI PUSH2 0x1225 DUP2 DUP6 DUP6 PUSH2 0x1167 JUMP JUMPDEST DUP1 DUP9 ADD SWAP2 PUSH1 0x3 PUSH2 0x1234 DUP5 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x123E SWAP1 DUP3 PUSH2 0x566 JUMP JUMPDEST DUP11 PUSH1 0x40 DUP6 ADD SWAP2 PUSH2 0x124D DUP4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x125A SWAP1 PUSH1 0x1 DUP4 ADD PUSH2 0x1184 JUMP JUMPDEST DUP11 PUSH1 0x60 DUP8 ADD SWAP5 PUSH2 0x1269 DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x1276 SWAP1 PUSH1 0x2 DUP6 ADD PUSH2 0x1184 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH2 0x1282 SWAP2 PUSH2 0x10FE JUMP JUMPDEST ADD SWAP4 PUSH2 0x1295 DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x129E DUP14 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12DB PUSH2 0x12DB PUSH1 0x20 PUSH2 0x12D4 PUSH2 0x1213 SWAP11 PUSH2 0x1332 SWAP11 PUSH2 0x12E1 SWAP7 PUSH2 0x1339 JUMPI JUMPDEST POP PUSH2 0xF19 JUMP JUMPDEST SWAP5 ADD PUSH2 0xF23 JUMP JUMPDEST SWAP4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x1312 PUSH2 0x130C PUSH32 0x1D0B6716EC306CCA1346FDEC2C918D00831BD1239F2D28ACF62E94F2373355FC SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x6FA JUMP JUMPDEST SWAP4 PUSH2 0x1329 DUP13 PUSH2 0x1320 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x11CE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x134E SWAP1 PUSH2 0x1348 DUP6 DUP11 ADD PUSH2 0xF23 JUMP JUMPDEST SWAP1 PUSH2 0x11B7 JUMP JUMPDEST CODESIZE PUSH2 0x12CE JUMP JUMPDEST POP SWAP5 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP PUSH2 0x136B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xD16B833 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x1393 PUSH2 0x7CA PUSH2 0x606 JUMP JUMPDEST ISZERO PUSH2 0x13A0 JUMPI PUSH2 0x3C7 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x13B9 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x13C8 PUSH1 0x1 PUSH1 0x2 PUSH2 0xA85 JUMP JUMPDEST CALLER PUSH2 0x140E PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x13F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1423 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1432 PUSH1 0x0 PUSH1 0x2 PUSH2 0xA85 JUMP JUMPDEST CALLER PUSH2 0x140E PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x13F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x141B JUMP JUMPDEST ISZERO PUSH2 0x1470 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 PUSH2 0x14B8 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x14CC PUSH2 0x7CA PUSH2 0x606 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x80 PUSH2 0xBCE JUMP JUMPDEST SWAP1 PUSH2 0x3C7 PUSH2 0x1547 PUSH1 0x3 PUSH2 0x14F9 PUSH2 0x14DE JUMP JUMPDEST SWAP5 PUSH2 0x151B PUSH2 0x150E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1531 PUSH2 0x152A PUSH1 0x1 DUP4 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x7B3 PUSH2 0x1540 PUSH1 0x2 DUP4 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x3ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x157D PUSH2 0x7F7 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x1557 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x159B PUSH2 0x1596 DUP5 PUSH1 0x3 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0x15A9 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x15B9 PUSH2 0xB96 DUP8 PUSH2 0x546 JUMP JUMPDEST EQ PUSH2 0x16FD JUMPI PUSH1 0x60 DUP5 ADD MLOAD TIMESTAMP LT PUSH2 0x16DC JUMPI PUSH2 0x945 PUSH2 0x1632 SWAP2 DUP8 SWAP4 PUSH2 0x15FB PUSH2 0x15F6 DUP13 PUSH2 0x15F1 PUSH2 0x15EC DUP15 PUSH2 0x722 PUSH1 0x4 SWAP12 DUP13 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST SWAP7 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1605 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1619 DUP2 DUP14 PUSH2 0x99D DUP12 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x162B PUSH2 0x1624 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x16B5 JUMPI PUSH2 0x1660 SWAP4 SWAP3 SWAP2 PUSH2 0x164D DUP8 PUSH2 0x722 DUP9 PUSH2 0x1652 SWAP6 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x10FE JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1674 DUP5 DUP5 PUSH2 0x166F DUP6 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x16AB PUSH2 0x16A5 PUSH2 0x16A5 PUSH32 0x5EB306C17229E0DA0CBF33AAE2020CA276E63DB4818B8060786E49AE51623110 SWAP5 SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x6FA JUMP JUMPDEST SWAP5 PUSH2 0xF3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x9C2 SWAP2 POP PUSH2 0x16CA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x16EE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x995309B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x170F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9DD854D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1737 PUSH2 0x1731 PUSH2 0x3DD SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3C7 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x17A4 PUSH1 0x4 SWAP3 PUSH2 0x1795 PUSH2 0x3C7 SWAP6 PUSH2 0x177B PUSH4 0xA9059CBB PUSH2 0x171E JUMP JUMPDEST SWAP3 PUSH2 0x1785 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x17B3 PUSH1 0x20 PUSH2 0xC09 JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1805 JUMPI PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x180D PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST ISZERO PUSH2 0x1819 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 SWAP2 PUSH2 0x1882 PUSH2 0x1891 SWAP3 PUSH2 0x6FA JUMP JUMPDEST SWAP1 PUSH2 0x188B PUSH2 0x17DC JUMP JUMPDEST SWAP2 PUSH2 0x18CF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x18A0 PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x18AF JUMPI JUMPDEST POP PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x18C9 SWAP2 POP PUSH1 0x20 PUSH2 0x18BE DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x17F1 JUMP JUMPDEST CODESIZE PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x3DD SWAP3 SWAP2 PUSH2 0x18DE PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST SWAP2 PUSH2 0x195F JUMP JUMPDEST ISZERO PUSH2 0x18EB JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x195A JUMPI PUSH2 0x194F RETURNDATASIZE PUSH2 0xC09 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x3DD SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x1971 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x1988 PUSH2 0x197E ADDRESS PUSH2 0x6FA JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x199A PUSH2 0x1940 JUMP JUMPDEST SWAP2 PUSH2 0x19ED JUMP JUMPDEST ISZERO PUSH2 0x19A7 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x1A22 JUMPI POP POP DUP2 MLOAD PUSH2 0x1A08 PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST EQ PUSH2 0x1A11 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1D PUSH2 0x3DD SWAP2 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x3C7 SWAP3 POP PUSH2 0x1A41 JUMP JUMPDEST EXTCODESIZE PUSH2 0x1A3D PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A58 PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST GT ISZERO PUSH2 0x1A67 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C2 SWAP3 POP PUSH2 0x9AD JUMP JUMPDEST PUSH2 0xEA5 SWAP3 SWAP4 PUSH2 0xB96 SWAP3 PUSH2 0x1A8F SWAP3 PUSH2 0x1A89 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1AB3 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0xBC6 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x1177 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1ABD PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AF3 JUMPI PUSH2 0x1AE7 PUSH2 0x1AED SWAP2 PUSH2 0x1AE1 PUSH2 0x1ADC DUP8 DUP8 DUP8 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST SWAP1 PUSH2 0x1AFA JUMP JUMPDEST SWAP4 PUSH2 0x1A93 JUMP JUMPDEST SWAP3 PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B15 JUMPI SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B32 PUSH2 0x3DD PUSH2 0x553 JUMP JUMPDEST DUP2 LT PUSH2 0x1B71 JUMPI PUSH2 0x1B43 DUP2 PUSH1 0x5 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x140E PUSH32 0x676DC704F22DDAB12A141690A96616EF0128413803C63394ABA7FFE658681A16 SWAP2 PUSH2 0xF3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x67E00A07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 AND EXTCODECOPY 0xBC 0xC7 0xB9 0x5E PUSH31 0x33DC5B56853BDE84C8B36B03AC696C29A4DDD82B8DBFB1FA6C657870657269 PUSH14 0x656E74616CF564736F6C63430008 0xC STOP COINBASE ","sourceMap":"632:5688:22:-:0;;;;;;-1:-1:-1;632:5688:22;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2153:49:0;2198:4;;;:::i;1003:54:22:-;1050:7;;;:::i;1840:128::-;;;:::i;:::-;1895:10;1875:18;;:::i;:::-;1895:10;;;:::i;:::-;1940:20;;;:::i;:::-;;:::i;:::-;1840:128::o;632:5688::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;972:46:5:-;;;:::i;:::-;996:15;1006:5;996:15;;:::i;1676:41:6:-;1716:1;;;:::i;:::-;;-1:-1:-1;;1716:1:6;;632:5688:22;1716:1:6;;;;;;;:::i;:::-;;;;:::i;1797:53::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i;632:5688:22:-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;632:5688:22;;;;-1:-1:-1;;;;;632:5688:22;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;7587:233:0:-;;7669:23;7670:22;;;;:::i;:::-;7669:23;;632:5688:22;7669:23:0;7665:149;;7587:233;;:::o;7665:149::-;7708:36;7740:4;7708:29;:6;;:12;;;;:::i;:::-;:20;:29;:::i;:::-;:36;:::i;:::-;734:10:11;7763:40:0;;;;;;;:::i;:::-;;;:::i;:::-;;;632:5688:22;;;;7763:40:0;;;;7587:233::o;632:5688:22:-;;;;;;;;;;:::i;3021:145:0:-;3130:29;;;;:12;:6;:12;;;:::i;:29::-;;:::i;6063:255:22:-;6138:32;6150:20;;:::i;6138:32::-;;;6134:86;;6231:31;;;;:::i;:::-;6278:33;;;;632:5688;;;;6278:33;;;;;632:5688;;;;;;1840:128;6278:33;;;;6063:255::o;6134:86::-;-1:-1:-1;;632:5688:22;;-1:-1:-1;;;6191:29:22;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1150,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_struct_Claim_calldata_dyn_calldata":{"entryPoint":1279,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_struct_Claim_calldata_ptr_dyn_calldata_ptr":{"entryPoint":1203,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_struct_Distribution_calldata_dyn_calldata":{"entryPoint":1690,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_struct_Distribution_calldata_ptr_dyn_calldata_ptr":{"entryPoint":1614,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool":{"entryPoint":1581,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":6129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_address":{"entryPoint":1101,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes4":{"entryPoint":969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":1568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_bytes32_bytes32_uint256":{"entryPoint":1482,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":5463,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256":{"entryPoint":5956,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_bytes32_uint256":{"entryPoint":4558,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_address_uint256":{"entryPoint":5482,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_stringliteral_da0d_string_stringliteral_f986_string":{"entryPoint":2129,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":2342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":2300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_04fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0d1d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6857":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_da0d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f986":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fb06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_04fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_fb06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_array_bytes32_dyn_calldata":{"entryPoint":3885,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_struct_Claim_calldata":{"entryPoint":3797,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":3109,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":3022,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":3081,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Reward":{"entryPoint":5342,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":3042,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_array_struct_Claim_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_array_struct_Distribution_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes32_dyn_calldata":{"entryPoint":6819,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_struct_Claim_calldata_dyn_calldata":{"entryPoint":3827,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_struct_Distribution_calldata_dyn_calldata":{"entryPoint":4455,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":3002,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":2960,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1061,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_0_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_10800_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_15_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_2_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_ADDRESS_LENGTH":{"entryPoint":3678,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":1542,"id":null,"parameterSlots":0,"returnSlots":1},"constant_ENTERED":{"entryPoint":4253,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MINIMUM_ACTIVE_TIMER":{"entryPoint":1363,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":4413,"id":null,"parameterSlots":0,"returnSlots":1},"constant_SYMBOLS":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":1786,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_bytes_to_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":2030,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_Address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IERC20_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":4511,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":4498,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":3233,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_0448_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_47fb_to_string":{"entryPoint":6108,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_cb29_to_bytes16":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_Reward_storage_to_struct_Reward":{"entryPoint":5454,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Reward_storage_to_struct_Reward_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":1350,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1777,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1757,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":3660,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":5918,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint8_to_uint256":{"entryPoint":3688,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":6057,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2043,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":3208,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":1169,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":1894,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bytes32":{"entryPoint":1398,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":6464,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2253,"id":null,"parameterSlots":2,"returnSlots":0},"fun__checkRole":{"entryPoint":2019,"id":92,"parameterSlots":1,"returnSlots":0},"fun__claim":{"entryPoint":5507,"id":7934,"parameterSlots":5,"returnSlots":0},"fun__revokeRole":{"entryPoint":2840,"id":314,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":6258,"id":1278,"parameterSlots":2,"returnSlots":0},"fun_changeActiveTimerDuration":{"entryPoint":5333,"id":7834,"parameterSlots":1,"returnSlots":0},"fun_changeActiveTimerDuration_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkRole":{"entryPoint":2359,"id":131,"parameterSlots":2,"returnSlots":0},"fun_claim":{"entryPoint":4160,"id":7690,"parameterSlots":2,"returnSlots":0},"fun_claim_inner":{"entryPoint":3968,"id":null,"parameterSlots":2,"returnSlots":0},"fun_efficientHash":{"entryPoint":null,"id":2443,"parameterSlots":2,"returnSlots":1},"fun_functionCall":{"entryPoint":6351,"id":1417,"parameterSlots":3,"returnSlots":1},"fun_functionCallWithValue":{"entryPoint":6495,"id":1481,"parameterSlots":4,"returnSlots":1},"fun_getRoleAdmin":{"entryPoint":1946,"id":146,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":2720,"id":283,"parameterSlots":2,"returnSlots":0},"fun_grantRole_166":{"entryPoint":2009,"id":166,"parameterSlots":2,"returnSlots":0},"fun_grantRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_hasRole":{"entryPoint":1915,"id":79,"parameterSlots":2,"returnSlots":1},"fun_hashPair":{"entryPoint":6906,"id":2432,"parameterSlots":2,"returnSlots":1},"fun_isContract":{"entryPoint":6703,"id":1345,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":4423,"id":825,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":4373,"id":817,"parameterSlots":0,"returnSlots":0},"fun_pause":{"entryPoint":5139,"id":755,"parameterSlots":0,"returnSlots":0},"fun_pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_paused":{"entryPoint":2927,"id":716,"parameterSlots":0,"returnSlots":1},"fun_processProofCalldata":{"entryPoint":6835,"id":2041,"parameterSlots":3,"returnSlots":1},"fun_renounceRole":{"entryPoint":2640,"id":209,"parameterSlots":2,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":4234,"id":728,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":5293,"id":739,"parameterSlots":0,"returnSlots":0},"fun_revert":{"entryPoint":6721,"id":1656,"parameterSlots":2,"returnSlots":0},"fun_revokeRole":{"entryPoint":2529,"id":186,"parameterSlots":2,"returnSlots":0},"fun_revokeRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_safeTransfer":{"entryPoint":5985,"id":984,"parameterSlots":3,"returnSlots":0},"fun_setActiveTimerDuration":{"entryPoint":6951,"id":7958,"parameterSlots":1,"returnSlots":0},"fun_setPauseState":{"entryPoint":5032,"id":7820,"parameterSlots":1,"returnSlots":0},"fun_setPauseState_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_supportsInterface":{"entryPoint":1836,"id":60,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_2467":{"entryPoint":null,"id":2467,"parameterSlots":1,"returnSlots":1},"fun_toHexString":{"entryPoint":3704,"id":1890,"parameterSlots":1,"returnSlots":1},"fun_toHexString_1870":{"entryPoint":3352,"id":1870,"parameterSlots":2,"returnSlots":1},"fun_unpause":{"entryPoint":5217,"id":771,"parameterSlots":0,"returnSlots":0},"fun_unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_updateRewardsMetadata":{"entryPoint":4986,"id":7800,"parameterSlots":2,"returnSlots":0},"fun_updateRewardsMetadata_inner":{"entryPoint":4587,"id":null,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":6637,"id":1612,"parameterSlots":4,"returnSlots":1},"fun_verifyCalldata":{"entryPoint":6772,"id":1961,"parameterSlots":4,"returnSlots":1},"getter_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":1552,"id":27,"parameterSlots":0,"returnSlots":1},"getter_fun_MINIMUM_ACTIVE_TIMER":{"entryPoint":1374,"id":7579,"parameterSlots":0,"returnSlots":1},"getter_fun_activeTimerDuration":{"entryPoint":1191,"id":7592,"parameterSlots":0,"returnSlots":1},"getter_fun_claimed":{"entryPoint":1805,"id":7590,"parameterSlots":2,"returnSlots":1},"getter_fun_rewards":{"entryPoint":1415,"id":7584,"parameterSlots":1,"returnSlots":4},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":6803,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":1795,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_mapping_address_uint256_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_Reward_storage_of_bytes32":{"entryPoint":1382,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":3167,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":3753,"id":802,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole":{"entryPoint":1977,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_178":{"entryPoint":2502,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_7699":{"entryPoint":4434,"id":38,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_7807":{"entryPoint":4996,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_7827":{"entryPoint":5309,"id":38,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused":{"entryPoint":3779,"id":699,"parameterSlots":2,"returnSlots":0},"modifier_whenNotPaused_743":{"entryPoint":5041,"id":699,"parameterSlots":0,"returnSlots":0},"modifier_whenPaused":{"entryPoint":5147,"id":707,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":2937,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3144,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2230,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":3875,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes32":{"entryPoint":3865,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Reward":{"entryPoint":5352,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":1180,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":1905,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":4170,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_04fc":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0d1d":{"entryPoint":5225,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_565f":{"entryPoint":6372,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc2e":{"entryPoint":6560,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e11a":{"entryPoint":6162,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ebf7":{"entryPoint":4263,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fb06":{"entryPoint":2539,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":928,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":2220,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint8":{"entryPoint":3246,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":4520,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":4340,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2678,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":4535,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":2693,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":4484,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":4350,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":1073,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1560,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":1009,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_bytes1":{"entryPoint":3104,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes32":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610018575b6100166103a0565b005b60003560e01c806301ffc9a714610376578063248a9ca31461034c5780632f2ff15d1461032457806333f642f6146102fa57806336568abe146102d257806356853398146102aa5780635c975abb146102805780637fdba5f61461025657806391d1485414610219578063938d967a146101d9578063960d264d146101b2578063a217fddf14610188578063cdb88ad114610161578063d547741f14610139578063df45c752146101115763dfcae622146100d25761000e565b34610104575b6101006100ef6100e936600461044d565b9061070d565b6040515b9182918290815260200190565b0390f35b61010c6103a0565b6100d8565b503461012c575b61001661012636600461069a565b9061137a565b6101346103a0565b610118565b5034610154575b61001661014e36600461044d565b906109e1565b61015c6103a0565b610140565b503461017b575b61001661017636600461062d565b6113a8565b6101836103a0565b610168565b50346101a5575b61019a36600461047e565b6101006100ef610610565b6101ad6103a0565b61018f565b50346101cc575b6100166101c7366004610404565b6114d5565b6101d46103a0565b6101b9565b503461020c575b6101006101f66101f1366004610404565b610587565b9061020394929460405190565b948594856105ca565b6102146103a0565b6101e0565b5034610249575b61010061023761023136600461044d565b9061077b565b60405191829182901515815260200190565b6102516103a0565b610220565b5034610273575b61026836600461047e565b6101006100ef61055e565b61027b6103a0565b61025d565b503461029d575b61029236600461047e565b610100610237610b6f565b6102a56103a0565b610287565b50346102c5575b6100166102bf3660046104ff565b90611040565b6102cd6103a0565b6102b1565b50346102ed575b6100166102e736600461044d565b90610a50565b6102f56103a0565b6102d9565b5034610317575b61030c36600461047e565b6101006100ef6104a7565b61031f6103a0565b610301565b503461033f575b61001661033936600461044d565b906107d9565b6103476103a0565b61032b565b5034610369575b6101006100ef610364366004610404565b61079a565b6103716103a0565b610353565b5034610393575b61010061023761038e3660046103c9565b61072c565b61039b6103a0565b61037d565b50600080fd5b6001600160e01b031981165b14156103a057565b905035906103c7826103a6565b565b906103dd916020818303126103e0576103ba565b90565b6103e86103a0565b6103ba565b9052565b806103b2565b905035906103c7826103f1565b906103dd91602081830312610418576103f7565b6104206103a0565b6103f7565b6001600160a01b031690565b6001600160a01b0381166103b2565b905035906103c782610431565b91906103dd90604084820312610471575b61046881856103f7565b93602001610440565b6104796103a0565b61045e565b600091031261048957565b6103c76103a0565b6103dd916008021c81565b906103dd9154610491565b6103dd6000600561049c565b909182601f830112156104f2575b602082359267ffffffffffffffff84116104e5575b01926020830284011161048957565b6104ed6103a0565b6104d6565b6104fa6103a0565b6104c1565b9061052891602081830312610539575b80359067ffffffffffffffff821161052c575b016104b3565b9091565b6105346103a0565b610522565b6105416103a0565b61050f565b6103dd6103dd6103dd9290565b6103dd612a30610546565b6103dd610553565b905b600052602052604060002090565b6103dd9081565b6103dd9054610576565b610592906003610566565b906105a482546001600160a01b031690565b916105b16001820161057d565b916103dd60036105c36002850161057d565b930161057d565b6106026103c7946105fb6060949897956105f4608086019a60008701906001600160a01b03169052565b6020850152565b6040830152565b0152565b6103dd6000610546565b6103dd610606565b8015156103b2565b905035906103c782610618565b906103dd9160208183031261064157610620565b6106496103a0565b610620565b909182601f8301121561068d575b602082359267ffffffffffffffff8411610680575b01926080830284011161048957565b6106886103a0565b610671565b6106956103a0565b61065c565b90610528916020818303126106d0575b80359067ffffffffffffffff82116106c3575b0161064e565b6106cb6103a0565b6106bd565b6106d86103a0565b6106aa565b6103dd90610425906001600160a01b031682565b6103dd906106dd565b6103dd906106f1565b90610568906106fa565b6107276103dd92610722600493600094610566565b610703565b61049c565b637965db0b60e01b6001600160e01b031982161490811561074b575090565b6103dd91506001600160e01b0319166301ffc9a760e01b1490565b6103dd905b60ff1690565b6103dd9054610766565b6103dd916107959161078f60009182610566565b01610703565b610771565b60016107b36103dd926107ab600090565b506000610566565b0161057d565b906103c7916107cf6107ca8261079a565b6107e3565b906103c791610aa0565b906103c7916107b9565b6103c7903390610937565b6103dd90610546565b0190565b918091926000905b82821061081b575011610814575050565b6000910152565b91508060209183015181860152018291610803565b6107f761084892602092610842815190565b94859290565b938491016107fb565b61088f6103dd9392610889610889937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90610830565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108ef57604052565b6108f76108b6565b604052565b61091d6108ac6020936107f793610911815190565b80835293849260200190565b958691016107fb565b60208082526103dd929101906108fc565b90610949610945828461077b565b1590565b610951575050565b6109c29250906103dd61096f6109696109a994610e78565b926107ee565b61098460209161097e83610546565b90610d18565b9261099d61099160405190565b94859384019283610851565b908103825203826108cd565b6040515b62461bcd60e51b815291829160048301610926565b0390fd5b906103c7916109d76107ca8261079a565b906103c791610b18565b906103c7916109c6565b156109f257565b5060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b6103c79190610a71610a6133610425565b6001600160a01b038416146109eb565b610b18565b9060ff905b9181191691161790565b90610a956103dd610a9c92151590565b8254610a76565b9055565b90610aae610945828461077b565b610ab6575050565b610ad06001610acb83600061078f8782610566565b610a85565b3390610b06610b00610b007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b926106fa565b92610b1060405190565b80805b0390a4565b90610b23818361077b565b610b2b575050565b610b3f6000610acb838261078f8782610566565b3390610b06610b00610b007ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b6103dd6002610771565b50634e487b7160e01b600052601160045260246000fd5b90610b9a565b9190565b908060001904821181151516610bae570290565b610bb6610b79565b0290565b81198111610bc6570190565b6107f7610b79565b906103c7610bdb60405190565b92836108cd565b6107f760209167ffffffffffffffff8111610c0157601f01601f191690565b6108ac6108b6565b90610c1b610c1683610be2565b610bce565b918252565b369037565b906103c7610c3b610c3584610c09565b93610be2565b601f190160208401610c20565b50634e487b7160e01b600052603260045260246000fd5b906001602091610c6d845190565b811015610c7b575b02010190565b610c83610c48565b610c75565b6001908015610c95570390565b610c9d610b79565b0390565b61076b6103dd6103dd9290565b6103dd90610cc2610b966103dd9460ff1690565b901c90565b15610cce57565b5060405162461bcd60e51b8152806109c2600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b9190600290610d49610d44610d3583610d3086610546565b610b90565b610d3e85610546565b90610bba565b610c25565b916000916030610d61610d5b85610546565b86610c5f565b53610d99610d90600f60fb1b92610d306001958695881a610d8a610d8488610546565b8b610c5f565b53610546565b610d3e83610546565b915b610dbc575b50506103dd9293610db6610b966103dd93610546565b14610cc7565b9094610dc782610546565b861115610e4657610e33610e2d8392610e10610df36f181899199a1a9b1b9c1cb0b131b232b360811b90565b610dfd600f610546565b83166010811015610e39575b1a60f81b90565b861a610e1c8a89610c5f565b53610e276004610ca1565b90610cae565b96610c88565b91610d9b565b610e41610c48565b610e09565b94610da0565b6103dd9081906001600160a01b031681565b6103dd6014610ca1565b6103dd6103dd6103dd9260ff1690565b610e95610e906103dd92610e8a606090565b506106f1565b610e4c565b61097e610ea0610e5e565b610e68565b1490565b90610ebb91610eb6611115565b610ec3565b6103c7611147565b906103c791610ed061108a565b610f80565b903590607e193682900301821215610eeb570190565b6107f76103a0565b906103dd92602091811015610f0c575b02810190610ed5565b610f14610c48565b610f03565b356103dd816103f1565b356103dd81610431565b903590601e193682900301821215610f73575b01602081359167ffffffffffffffff8311610f66575b0191602082023603831361048957565b610f6e6103a0565b610f56565b610f7b6103a0565b610f40565b9091908291600090610f9182610546565b84146110235760005b845b81101561101b576110148161100e86808a611006610ffc86610ff56040610fdd838f610fef610f9c9f610fe9818c610fe38f96610fdd60209684809a610ef3565b01610f19565b9e610ef3565b01610f23565b9a610ef3565b938d610ef3565b6060810190610f2d565b939092611583565b60010190565b9050610f9a565b509350505050565b505050505061103160405190565b631ec5aa5160e01b8152600490fd5b906103c791610ea9565b1561105157565b5060405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6103c7611098610945610b6f565b61104a565b6103dd6002610546565b156110ae57565b5060405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9060001990610a7b565b9061110e6103dd610a9c92610546565b82546110f4565b6103c7611122600161057d565b61113661112d61109d565b918214156110a7565b60016110fe565b6103dd6001610546565b6103c761113661113d565b906103c7916111626107ca610606565b6111eb565b9160809181101561117757020190565b61117f610c48565b020190565b9061110e6103dd610a9c9290565b6104256103dd6103dd9290565b6103dd90611192565b906001600160a01b0390610a7b565b906111c76103dd610a9c926106fa565b82546111a8565b9081526060810193926103c7929091604091610602906020830152565b91816000936111f985610546565b841461135d5761120d42610d3e600561057d565b9260005b855b81101561135457611225818585611167565b80880191600361123484610f19565b61123e9082610566565b8a604085019161124d83610f19565b61125a9060018301611184565b8a606087019461126986610f19565b6112769060028501611184565b820190611282916110fe565b019361129585546001600160a01b031690565b61129e8d61119f565b6001600160a01b0316906001600160a01b0316146112db6112db60206112d46112139a6113329a6112e196611339575b50610f19565b9401610f23565b93610f19565b61131261130c7f1d0b6716ec306cca1346fdec2c918d00831bd1239f2d28acf62e94f2373355fc9390565b936106fa565b936113298c61132060405190565b938493846111ce565b0390a360010190565b9050611211565b61134e90611348858a01610f23565b906111b7565b386112ce565b50945050505050565b505050505061136b60405190565b630d16b83360e31b8152600490fd5b906103c791611152565b6103c7906113936107ca610606565b156113a0576103c7611413565b6103c7611461565b6103c790611384565b6113b961108a565b6103c76113c860016002610a85565b3361140e7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916113f760405190565b918291826001600160a01b03909116815260200190565b0390a1565b6103c76113b1565b6114236114ad565b6103c761143260006002610a85565b3361140e7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916113f760405190565b6103c761141b565b1561147057565b5060405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b6103c76114b8610b6f565b611469565b6103c7906114cc6107ca610606565b6103c790611b27565b6103c7906114bd565b6103dd6080610bce565b906103c761154760036114f96114de565b9461151b61150e82546001600160a01b031690565b6001600160a01b03168752565b61153161152a6001830161057d565b6020880152565b6107b36115406002830161057d565b6040880152565b6060840152565b6103dd906114e8565b6103ed906001600160a01b031660601b90565b60148161157d6107f79360209695611557565b01918252565b919392909261159b611596846003610566565b61154e565b9060208201906115a9825190565b936000946115b9610b9687610546565b146116fd57606084015142106116dc576109456116329187936115fb6115f68c6115f16115ec8e61072260049b8c610566565b61057d565b610bba565b965190565b9061160560405190565b611619818d61099d8b60208401928361156a565b61162b611624825190565b9160200190565b2092611a74565b6116b55761166093929161164d876107228861165295610566565b6110fe565b01516001600160a01b031690565b90611674848461166f856106fa565b611761565b610b136116ab6116a56116a57f5eb306c17229e0da0cbf33aae2020ca276e63db4818b8060786e49ae516231109490565b946106fa565b946100f360405190565b955050505050506109c291506116ca60405190565b6309bde33960e01b8152918291820190565b5050505050505050506116ee60405190565b630995309b60e01b8152600490fd5b50505050505050505061170f60405190565b639dd854d360e01b8152600490fd5b6117376117316103dd9263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b0390911681526040810192916103c79160200152565b6117a46004926117956103c79561177b63a9059cbb61171e565b9261178560405190565b9687946020860190815201611744565b602082018103825203836108cd565b611872565b6117b36020610c09565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b6103dd6117a9565b905051906103c782610618565b906103dd91602081830312611805576117e4565b61180d6103a0565b6117e4565b1561181957565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6103c791611882611891926106fa565b9061188b6117dc565b916118cf565b80516118a0610b966000610546565b149081156118af575b50611812565b6118c9915060206118be825190565b8183010191016117f1565b386118a9565b6103dd92916118de6000610546565b9161195f565b156118eb57565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d1561195a5761194f3d610c09565b903d6000602084013e565b606090565b9060006103dd94938192611971606090565b5061198861197e306106fa565b83903110156118e4565b60208101905191855af161199a611940565b916119ed565b156119a757565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919260609115611a225750508151611a08610b966000610546565b14611a11575090565b611a1d6103dd91611a2f565b6119a0565b9093926103c79250611a41565b3b611a3d610b966000610546565b1190565b9150611a4b825190565b611a58610b966000610546565b1115611a675750805190602001fd5b6040516109c292506109ad565b610ea59293610b9692611a8f92611a89600090565b50611ab3565b9290565b6001906000198114610bc6570190565b9160209181101561117757020190565b611abd6000610546565b925b82841015611af357611ae7611aed91611ae1611adc878787611aa3565b610f19565b90611afa565b93611a93565b92611abf565b9250505090565b81811015611b1557906103dd91600052602052604060002090565b6103dd91600052602052604060002090565b611b326103dd610553565b8110611b7157611b438160056110fe565b61140e7f676dc704f22ddab12a141690a96616ef0128413803c63394aba7ffe658681a16916100f360405190565b50506040516367e00a0760e01b8152600490fdfea364697066735822122098163cbcc7b95e7e33dc5b56853bde84c8b36b03ac696c29a4ddd82b8dbfb1fa6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x33F642F6 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x56853398 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x7FDBA5F6 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x938D967A EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x960D264D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDF45C752 EQ PUSH2 0x111 JUMPI PUSH4 0xDFCAE622 EQ PUSH2 0xD2 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x104 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x12C JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x134 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST POP CALLVALUE PUSH2 0x154 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST POP CALLVALUE PUSH2 0x17B JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A5 JUMPI JUMPDEST PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x610 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1CC JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x20C JUMPI JUMPDEST PUSH2 0x100 PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST SWAP1 PUSH2 0x203 SWAP5 SWAP3 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x214 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x249 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0x237 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI JUMPDEST PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x55E JUMP JUMPDEST PUSH2 0x27B PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST POP CALLVALUE PUSH2 0x29D JUMPI JUMPDEST PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0x237 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2C5 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4FF JUMP JUMPDEST SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2ED JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x317 JUMPI JUMPDEST PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST POP CALLVALUE PUSH2 0x33F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x347 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST POP CALLVALUE PUSH2 0x369 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0xEF PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x404 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH2 0x371 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST POP CALLVALUE PUSH2 0x393 JUMPI JUMPDEST PUSH2 0x100 PUSH2 0x237 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH2 0x39B PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x3A0 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x3A6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x3E0 JUMPI PUSH2 0x3BA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 PUSH2 0x3B2 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x3F1 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x418 JUMPI PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x420 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3B2 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3DD SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x471 JUMPI JUMPDEST PUSH2 0x468 DUP2 DUP6 PUSH2 0x3F7 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x479 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3DD SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 SLOAD PUSH2 0x491 JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x0 PUSH1 0x5 PUSH2 0x49C JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F2 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x4E5 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST SWAP1 PUSH2 0x528 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x539 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x52C JUMPI JUMPDEST ADD PUSH2 0x4B3 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x541 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3DD PUSH2 0x3DD SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x2A30 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x553 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x3DD SWAP1 SLOAD PUSH2 0x576 JUMP JUMPDEST PUSH2 0x592 SWAP1 PUSH1 0x3 PUSH2 0x566 JUMP JUMPDEST SWAP1 PUSH2 0x5A4 DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x5B1 PUSH1 0x1 DUP3 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 PUSH2 0x3DD PUSH1 0x3 PUSH2 0x5C3 PUSH1 0x2 DUP6 ADD PUSH2 0x57D JUMP JUMPDEST SWAP4 ADD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x602 PUSH2 0x3C7 SWAP5 PUSH2 0x5FB PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x5F4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x606 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x3B2 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x641 JUMPI PUSH2 0x620 JUMP JUMPDEST PUSH2 0x649 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x68D JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x680 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x80 DUP4 MUL DUP5 ADD GT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0x688 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH2 0x695 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST SWAP1 PUSH2 0x528 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x6D0 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x6C3 JUMPI JUMPDEST ADD PUSH2 0x64E JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x6D8 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x425 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 PUSH2 0x568 SWAP1 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x727 PUSH2 0x3DD SWAP3 PUSH2 0x722 PUSH1 0x4 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x74B JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 SLOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0x3DD SWAP2 PUSH2 0x795 SWAP2 PUSH2 0x78F PUSH1 0x0 SWAP2 DUP3 PUSH2 0x566 JUMP JUMPDEST ADD PUSH2 0x703 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7B3 PUSH2 0x3DD SWAP3 PUSH2 0x7AB PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x566 JUMP JUMPDEST ADD PUSH2 0x57D JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x7CF PUSH2 0x7CA DUP3 PUSH2 0x79A JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xAA0 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 CALLER SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x546 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x81B JUMPI POP GT PUSH2 0x814 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x848 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x842 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x88F PUSH2 0x3DD SWAP4 SWAP3 PUSH2 0x889 PUSH2 0x889 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x830 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x8F7 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x91D PUSH2 0x8AC PUSH1 0x20 SWAP4 PUSH2 0x7F7 SWAP4 PUSH2 0x911 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x3DD SWAP3 SWAP2 ADD SWAP1 PUSH2 0x8FC JUMP JUMPDEST SWAP1 PUSH2 0x949 PUSH2 0x945 DUP3 DUP5 PUSH2 0x77B JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x951 JUMPI POP POP JUMP JUMPDEST PUSH2 0x9C2 SWAP3 POP SWAP1 PUSH2 0x3DD PUSH2 0x96F PUSH2 0x969 PUSH2 0x9A9 SWAP5 PUSH2 0xE78 JUMP JUMPDEST SWAP3 PUSH2 0x7EE JUMP JUMPDEST PUSH2 0x984 PUSH1 0x20 SWAP2 PUSH2 0x97E DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP1 PUSH2 0xD18 JUMP JUMPDEST SWAP3 PUSH2 0x99D PUSH2 0x991 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 ADD SWAP3 DUP4 PUSH2 0x851 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x926 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x9D7 PUSH2 0x7CA DUP3 PUSH2 0x79A JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xB18 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x9C6 JUMP JUMPDEST ISZERO PUSH2 0x9F2 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xA71 PUSH2 0xA61 CALLER PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x9EB JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA95 PUSH2 0x3DD PUSH2 0xA9C SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xA76 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xAAE PUSH2 0x945 DUP3 DUP5 PUSH2 0x77B JUMP JUMPDEST PUSH2 0xAB6 JUMPI POP POP JUMP JUMPDEST PUSH2 0xAD0 PUSH1 0x1 PUSH2 0xACB DUP4 PUSH1 0x0 PUSH2 0x78F DUP8 DUP3 PUSH2 0x566 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xB06 PUSH2 0xB00 PUSH2 0xB00 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP6 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x6FA JUMP JUMPDEST SWAP3 PUSH2 0xB10 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 PUSH2 0xB23 DUP2 DUP4 PUSH2 0x77B JUMP JUMPDEST PUSH2 0xB2B JUMPI POP POP JUMP JUMPDEST PUSH2 0xB3F PUSH1 0x0 PUSH2 0xACB DUP4 DUP3 PUSH2 0x78F DUP8 DUP3 PUSH2 0x566 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xB06 PUSH2 0xB00 PUSH2 0xB00 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP6 SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x2 PUSH2 0x771 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xB9A JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0xBAE JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xB79 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0xBC6 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0xB79 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 PUSH2 0xBDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x7F7 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC01 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x8AC PUSH2 0x8B6 JUMP JUMPDEST SWAP1 PUSH2 0xC1B PUSH2 0xC16 DUP4 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x3C7 PUSH2 0xC3B PUSH2 0xC35 DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP4 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0xC20 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 SWAP2 PUSH2 0xC6D DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC7B JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xC83 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP1 ISZERO PUSH2 0xC95 JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xC9D PUSH2 0xB79 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x76B PUSH2 0x3DD PUSH2 0x3DD SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0xCC2 PUSH2 0xB96 PUSH2 0x3DD SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xCCE JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x9C2 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0xD49 PUSH2 0xD44 PUSH2 0xD35 DUP4 PUSH2 0xD30 DUP7 PUSH2 0x546 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xD3E DUP6 PUSH2 0x546 JUMP JUMPDEST SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x30 PUSH2 0xD61 PUSH2 0xD5B DUP6 PUSH2 0x546 JUMP JUMPDEST DUP7 PUSH2 0xC5F JUMP JUMPDEST MSTORE8 PUSH2 0xD99 PUSH2 0xD90 PUSH1 0xF PUSH1 0xFB SHL SWAP3 PUSH2 0xD30 PUSH1 0x1 SWAP6 DUP7 SWAP6 DUP9 BYTE PUSH2 0xD8A PUSH2 0xD84 DUP9 PUSH2 0x546 JUMP JUMPDEST DUP12 PUSH2 0xC5F JUMP JUMPDEST MSTORE8 PUSH2 0x546 JUMP JUMPDEST PUSH2 0xD3E DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0xDBC JUMPI JUMPDEST POP POP PUSH2 0x3DD SWAP3 SWAP4 PUSH2 0xDB6 PUSH2 0xB96 PUSH2 0x3DD SWAP4 PUSH2 0x546 JUMP JUMPDEST EQ PUSH2 0xCC7 JUMP JUMPDEST SWAP1 SWAP5 PUSH2 0xDC7 DUP3 PUSH2 0x546 JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE33 PUSH2 0xE2D DUP4 SWAP3 PUSH2 0xE10 PUSH2 0xDF3 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 JUMP JUMPDEST PUSH2 0xDFD PUSH1 0xF PUSH2 0x546 JUMP JUMPDEST DUP4 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0xE39 JUMPI JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST DUP7 BYTE PUSH2 0xE1C DUP11 DUP10 PUSH2 0xC5F JUMP JUMPDEST MSTORE8 PUSH2 0xE27 PUSH1 0x4 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 PUSH2 0xCAE JUMP JUMPDEST SWAP7 PUSH2 0xC88 JUMP JUMPDEST SWAP2 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0xE41 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST SWAP5 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x3DD SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x14 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3DD PUSH2 0x3DD SWAP3 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE95 PUSH2 0xE90 PUSH2 0x3DD SWAP3 PUSH2 0xE8A PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x97E PUSH2 0xEA0 PUSH2 0xE5E JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xEBB SWAP2 PUSH2 0xEB6 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1147 JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xED0 PUSH2 0x108A JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x7E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0xEEB JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP3 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0xF0C JUMPI JUMPDEST MUL DUP2 ADD SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH2 0xF14 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3DD DUP2 PUSH2 0x3F1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3DD DUP2 PUSH2 0x431 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0xF73 JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xF66 JUMPI JUMPDEST ADD SWAP2 PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT PUSH2 0x489 JUMPI JUMP JUMPDEST PUSH2 0xF6E PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST PUSH2 0xF7B PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0xF91 DUP3 PUSH2 0x546 JUMP JUMPDEST DUP5 EQ PUSH2 0x1023 JUMPI PUSH1 0x0 JUMPDEST DUP5 JUMPDEST DUP2 LT ISZERO PUSH2 0x101B JUMPI PUSH2 0x1014 DUP2 PUSH2 0x100E DUP7 DUP1 DUP11 PUSH2 0x1006 PUSH2 0xFFC DUP7 PUSH2 0xFF5 PUSH1 0x40 PUSH2 0xFDD DUP4 DUP16 PUSH2 0xFEF PUSH2 0xF9C SWAP16 PUSH2 0xFE9 DUP2 DUP13 PUSH2 0xFE3 DUP16 SWAP7 PUSH2 0xFDD PUSH1 0x20 SWAP7 DUP5 DUP1 SWAP11 PUSH2 0xEF3 JUMP JUMPDEST ADD PUSH2 0xF19 JUMP JUMPDEST SWAP15 PUSH2 0xEF3 JUMP JUMPDEST ADD PUSH2 0xF23 JUMP JUMPDEST SWAP11 PUSH2 0xEF3 JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xF9A JUMP JUMPDEST POP SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1031 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1EC5AA51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0xEA9 JUMP JUMPDEST ISZERO PUSH2 0x1051 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 PUSH2 0x1098 PUSH2 0x945 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x2 PUSH2 0x546 JUMP JUMPDEST ISZERO PUSH2 0x10AE JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xA7B JUMP JUMPDEST SWAP1 PUSH2 0x110E PUSH2 0x3DD PUSH2 0xA9C SWAP3 PUSH2 0x546 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1122 PUSH1 0x1 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x1136 PUSH2 0x112D PUSH2 0x109D JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x1 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1136 PUSH2 0x113D JUMP JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x1162 PUSH2 0x7CA PUSH2 0x606 JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST SWAP2 PUSH1 0x80 SWAP2 DUP2 LT ISZERO PUSH2 0x1177 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x117F PUSH2 0xC48 JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x110E PUSH2 0x3DD PUSH2 0xA9C SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x3DD PUSH2 0x3DD SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x1192 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xA7B JUMP JUMPDEST SWAP1 PUSH2 0x11C7 PUSH2 0x3DD PUSH2 0xA9C SWAP3 PUSH2 0x6FA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x11A8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x3C7 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x602 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x0 SWAP4 PUSH2 0x11F9 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP5 EQ PUSH2 0x135D JUMPI PUSH2 0x120D TIMESTAMP PUSH2 0xD3E PUSH1 0x5 PUSH2 0x57D JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP6 JUMPDEST DUP2 LT ISZERO PUSH2 0x1354 JUMPI PUSH2 0x1225 DUP2 DUP6 DUP6 PUSH2 0x1167 JUMP JUMPDEST DUP1 DUP9 ADD SWAP2 PUSH1 0x3 PUSH2 0x1234 DUP5 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x123E SWAP1 DUP3 PUSH2 0x566 JUMP JUMPDEST DUP11 PUSH1 0x40 DUP6 ADD SWAP2 PUSH2 0x124D DUP4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x125A SWAP1 PUSH1 0x1 DUP4 ADD PUSH2 0x1184 JUMP JUMPDEST DUP11 PUSH1 0x60 DUP8 ADD SWAP5 PUSH2 0x1269 DUP7 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x1276 SWAP1 PUSH1 0x2 DUP6 ADD PUSH2 0x1184 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH2 0x1282 SWAP2 PUSH2 0x10FE JUMP JUMPDEST ADD SWAP4 PUSH2 0x1295 DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x129E DUP14 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12DB PUSH2 0x12DB PUSH1 0x20 PUSH2 0x12D4 PUSH2 0x1213 SWAP11 PUSH2 0x1332 SWAP11 PUSH2 0x12E1 SWAP7 PUSH2 0x1339 JUMPI JUMPDEST POP PUSH2 0xF19 JUMP JUMPDEST SWAP5 ADD PUSH2 0xF23 JUMP JUMPDEST SWAP4 PUSH2 0xF19 JUMP JUMPDEST PUSH2 0x1312 PUSH2 0x130C PUSH32 0x1D0B6716EC306CCA1346FDEC2C918D00831BD1239F2D28ACF62E94F2373355FC SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x6FA JUMP JUMPDEST SWAP4 PUSH2 0x1329 DUP13 PUSH2 0x1320 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x11CE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x134E SWAP1 PUSH2 0x1348 DUP6 DUP11 ADD PUSH2 0xF23 JUMP JUMPDEST SWAP1 PUSH2 0x11B7 JUMP JUMPDEST CODESIZE PUSH2 0x12CE JUMP JUMPDEST POP SWAP5 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP PUSH2 0x136B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xD16B833 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x3C7 SWAP2 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x1393 PUSH2 0x7CA PUSH2 0x606 JUMP JUMPDEST ISZERO PUSH2 0x13A0 JUMPI PUSH2 0x3C7 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x13B9 PUSH2 0x108A JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x13C8 PUSH1 0x1 PUSH1 0x2 PUSH2 0xA85 JUMP JUMPDEST CALLER PUSH2 0x140E PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x13F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x1423 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x1432 PUSH1 0x0 PUSH1 0x2 PUSH2 0xA85 JUMP JUMPDEST CALLER PUSH2 0x140E PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x13F7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x141B JUMP JUMPDEST ISZERO PUSH2 0x1470 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 PUSH2 0x14B8 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x14CC PUSH2 0x7CA PUSH2 0x606 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x3C7 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x80 PUSH2 0xBCE JUMP JUMPDEST SWAP1 PUSH2 0x3C7 PUSH2 0x1547 PUSH1 0x3 PUSH2 0x14F9 PUSH2 0x14DE JUMP JUMPDEST SWAP5 PUSH2 0x151B PUSH2 0x150E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1531 PUSH2 0x152A PUSH1 0x1 DUP4 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x7B3 PUSH2 0x1540 PUSH1 0x2 DUP4 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x3DD SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x3ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x157D PUSH2 0x7F7 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x1557 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x159B PUSH2 0x1596 DUP5 PUSH1 0x3 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0x15A9 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x15B9 PUSH2 0xB96 DUP8 PUSH2 0x546 JUMP JUMPDEST EQ PUSH2 0x16FD JUMPI PUSH1 0x60 DUP5 ADD MLOAD TIMESTAMP LT PUSH2 0x16DC JUMPI PUSH2 0x945 PUSH2 0x1632 SWAP2 DUP8 SWAP4 PUSH2 0x15FB PUSH2 0x15F6 DUP13 PUSH2 0x15F1 PUSH2 0x15EC DUP15 PUSH2 0x722 PUSH1 0x4 SWAP12 DUP13 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST SWAP7 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1605 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1619 DUP2 DUP14 PUSH2 0x99D DUP12 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x162B PUSH2 0x1624 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x16B5 JUMPI PUSH2 0x1660 SWAP4 SWAP3 SWAP2 PUSH2 0x164D DUP8 PUSH2 0x722 DUP9 PUSH2 0x1652 SWAP6 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x10FE JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1674 DUP5 DUP5 PUSH2 0x166F DUP6 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x16AB PUSH2 0x16A5 PUSH2 0x16A5 PUSH32 0x5EB306C17229E0DA0CBF33AAE2020CA276E63DB4818B8060786E49AE51623110 SWAP5 SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x6FA JUMP JUMPDEST SWAP5 PUSH2 0xF3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x9C2 SWAP2 POP PUSH2 0x16CA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x16EE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x995309B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x170F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9DD854D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1737 PUSH2 0x1731 PUSH2 0x3DD SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x3C7 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x17A4 PUSH1 0x4 SWAP3 PUSH2 0x1795 PUSH2 0x3C7 SWAP6 PUSH2 0x177B PUSH4 0xA9059CBB PUSH2 0x171E JUMP JUMPDEST SWAP3 PUSH2 0x1785 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x17B3 PUSH1 0x20 PUSH2 0xC09 JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x3C7 DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1805 JUMPI PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x180D PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST ISZERO PUSH2 0x1819 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x3C7 SWAP2 PUSH2 0x1882 PUSH2 0x1891 SWAP3 PUSH2 0x6FA JUMP JUMPDEST SWAP1 PUSH2 0x188B PUSH2 0x17DC JUMP JUMPDEST SWAP2 PUSH2 0x18CF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x18A0 PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x18AF JUMPI JUMPDEST POP PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x18C9 SWAP2 POP PUSH1 0x20 PUSH2 0x18BE DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x17F1 JUMP JUMPDEST CODESIZE PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x3DD SWAP3 SWAP2 PUSH2 0x18DE PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST SWAP2 PUSH2 0x195F JUMP JUMPDEST ISZERO PUSH2 0x18EB JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x195A JUMPI PUSH2 0x194F RETURNDATASIZE PUSH2 0xC09 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x3DD SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x1971 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x1988 PUSH2 0x197E ADDRESS PUSH2 0x6FA JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x199A PUSH2 0x1940 JUMP JUMPDEST SWAP2 PUSH2 0x19ED JUMP JUMPDEST ISZERO PUSH2 0x19A7 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x1A22 JUMPI POP POP DUP2 MLOAD PUSH2 0x1A08 PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST EQ PUSH2 0x1A11 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1D PUSH2 0x3DD SWAP2 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x3C7 SWAP3 POP PUSH2 0x1A41 JUMP JUMPDEST EXTCODESIZE PUSH2 0x1A3D PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A58 PUSH2 0xB96 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST GT ISZERO PUSH2 0x1A67 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C2 SWAP3 POP PUSH2 0x9AD JUMP JUMPDEST PUSH2 0xEA5 SWAP3 SWAP4 PUSH2 0xB96 SWAP3 PUSH2 0x1A8F SWAP3 PUSH2 0x1A89 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1AB3 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0xBC6 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x1177 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1ABD PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AF3 JUMPI PUSH2 0x1AE7 PUSH2 0x1AED SWAP2 PUSH2 0x1AE1 PUSH2 0x1ADC DUP8 DUP8 DUP8 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST SWAP1 PUSH2 0x1AFA JUMP JUMPDEST SWAP4 PUSH2 0x1A93 JUMP JUMPDEST SWAP3 PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B15 JUMPI SWAP1 PUSH2 0x3DD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3DD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B32 PUSH2 0x3DD PUSH2 0x553 JUMP JUMPDEST DUP2 LT PUSH2 0x1B71 JUMPI PUSH2 0x1B43 DUP2 PUSH1 0x5 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x140E PUSH32 0x676DC704F22DDAB12A141690A96616EF0128413803C63394ABA7FFE658681A16 SWAP2 PUSH2 0xF3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x67E00A07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 AND EXTCODECOPY 0xBC 0xC7 0xB9 0x5E PUSH31 0x33DC5B56853BDE84C8B36B03AC696C29A4DDD82B8DBFB1FA6C657870657269 PUSH14 0x656E74616CF564736F6C63430008 0xC STOP COINBASE ","sourceMap":"632:5688:22:-:0;;;;;;;;;-1:-1:-1;632:5688:22;;:::i;:::-;-1:-1:-1;632:5688:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;632:5688:22;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;632:5688:22;;:::o;:::-;-1:-1:-1;;;;;632:5688:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;1408:34::-;;;;;:::i;632:5688::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;1003:54;1050:7;;;:::i;1003:54::-;;;:::i;632:5688::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;1123:41::-;;;;;:::i;:::-;;;;632:5688;-1:-1:-1;;;;;632:5688:22;;;1123:41;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;632:5688::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;632:5688:22;;;;;;;;;;;;;;;;;;;;2153:49:0;2198:4;;;:::i;2153:49::-;;;:::i;632:5688:22:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;632:5688:22;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;1250:62::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;2732:202:0:-;-1:-1:-1;;;;;;;;;632:5688:22;;2840:47:0;:87;;;;;2833:94;2732:202;:::o;2840:87::-;2891:36;;;-1:-1:-1;;;;;;632:5688:22;-1:-1:-1;;;937:40:14;;829:155;632:5688:22;;;;;;;;;;;;;:::i;3021:145:0:-;3130:29;;;;:12;:6;:12;;;:::i;:::-;:20;:29;:::i;:::-;;:::i;4504:129::-;4604:22;:12;:22;4504:129;4578:7;632:5688:22;;;4578:7:0;4604:6;;:12;:::i;:::-;:22;;:::i;2589:76::-;;2657:1;2589:76;2642:4;5012:18;;;:::i;:::-;2642:4;:::i;:::-;4929:145;5059:7;4929:145;5059:7;:::i;4929:145::-;;;;;:::i;3460:103::-;3543:12;;734:10:11;3543:12:0;;:::i;632:5688:22:-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;632:5688:22;;;;;;;;;-1:-1:-1;;632:5688:22;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;632:5688:22;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;3844:479:0:-;;3931:23;3932:22;;;;:::i;:::-;3931:23;;632:5688:22;3931:23:0;3927:390;;3844:479;;:::o;3927:390::-;3970:336;4115:28;;;4022:252;4234:13;4115:28;3994:298;4115:28;;:::i;:::-;4234:13;;:::i;:::-;4214:38;4249:2;4214:38;;;;:::i;:::-;;;:::i;:::-;4022:252;;;632:5688:22;;;;4022:252:0;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3994:298::-;632:5688:22;;3970:336:0;-1:-1:-1;;;3970:336:0;;;;;;;;;:::i;:::-;;;;2589:76;;2657:1;2589:76;2642:4;5438:18;;;:::i;2642:4::-;5354:147;5486:7;5354:147;5486:7;:::i;5354:147::-;;;;;:::i;632:5688:22:-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;632:5688:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;632:5688:22;;;;;;3970:336:0;6038:214;6237:7;;6038:214;6125:83;6133:23;734:10:11;6144:12:0;655:96:11;6133:23:0;-1:-1:-1;;;;;632:5688:22;;6133:23:0;6125:83;:::i;:::-;6237:7;:::i;632:5688:22:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;7587:233:0:-;;7669:23;7670:22;;;;:::i;7669:23::-;7665:149;;7587:233;;:::o;7665:149::-;7708:36;7740:4;7708:29;:6;;:12;;;;:::i;:29::-;:36;:::i;:::-;734:10:11;7763:40:0;;;;;;632:5688:22;;7763:40:0;;;:::i;:::-;;;632:5688:22;;;;7763:40:0;;;;;;;7587:233::o;7991:234::-;;8074:22;;;;:::i;:::-;8070:149;;7991:234;;:::o;8070:149::-;8112:37;8144:5;8112:29;:12;;;;;;:::i;:37::-;734:10:11;8168:40:0;;;;;;632:5688:22;;1615:84:5;1685:7;;;:::i;632:5688:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;632:5688:22;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;632:5688:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;278:18:12:-;;;;;;;;;;;;;;;;;;;;632:5688:22;;;278:18:12;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;278:18:12;;;;;;;;;;;;;;632:5688:22;278:18:12;632:5688:22;;;278:18:12;632:5688:22;;;;1818:437:12;;;1950:1;:10;1940:25;1950:14;:10;;;;;:::i;:::-;;:::i;:::-;:14;;;:::i;:::-;;;:::i;:::-;1940:25;:::i;:::-;1975:15;1982:1;;1975:15;;;1982:1;1975:15;:::i;:::-;;;:::i;:::-;;2042:14;:10;-1:-1:-1;;;2007:1:12;2042:10;2007:1;2000:15;;;;;;;;;:::i;:::-;;;:::i;:::-;;2042:10;:::i;:::-;:14;;;:::i;:::-;2025:128;2007:1;;;2025:128;2170:10;;2234:14;2170:10;;;;2162:55;2170:10;;:::i;:::-;;2162:55;:::i;2065:3::-;2058:5;;;;;:::i;:::-;;;;;;2065:3;2131:11;2096:8;;:21;:8;-1:-1:-1;;;632:5688:22;;2096:8:12;2105:11;2113:3;2105:11;:::i;:::-;;;2096:21;;;;;;2065:3;2096:21;278:18;;;;2096:21;2084:33;;;;;;:::i;:::-;;2131:11;2141:1;2131:11;:::i;:::-;;;:::i;:::-;2065:3;;:::i;:::-;2030:26;;;2096:21;;;:::i;:::-;;;2058:5;;;;632:5688:22;;;;;-1:-1:-1;;;;;632:5688:22;;;302:43:12;343:2;;;:::i;:::-;;;;;278:18;;;;2407:149;2509:22;2517:13;2497:52;2407:149;2465:13;632:5688:22;;;2465:13:12;2517;;:::i;:::-;2509:22;:::i;:::-;2497:52;2533:15;;:::i;:::-;2497:52;:::i;937:40:14:-;;829:155;:::o;2227:103:6:-;;2292:1;2227:103;;;:::i;:::-;2292:1;:::i;:::-;;;:::i;1204:72:5:-;;1268:1;1204:72;;;:::i;:::-;1268:1;:::i;632:5688:22:-;;;;-1:-1:-1;;632:5688:22;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;;632:5688:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;2108:484;;;;;2261:1;;2253:9;;;;:::i;:::-;;;2249:43;;632:5688;2308:9;2319:8;;;;;;;2558:3;2369:10;2479:22;2369:10;;;2479:22;:10;2369;2444:17;;:10;2369;;2408:18;2319:8;2369:10;2408;2369;;:21;:10;;;2408:18;2369:10;;;;;:::i;:::-;:21;;:::i;:::-;2408:10;;:::i;:::-;:18;;:::i;:::-;2444:10;;:::i;:17::-;2479:10;;;:::i;:::-;:22;;;;;:::i;:::-;;;;;:::i;:::-;632:5688;;;;2558:3;2308:9;;;;2319:8;;;;;;;2108:484::o;2249:43::-;2271:21;;;;;;632:5688;;;;2271:21;-1:-1:-1;;;2271:21:22;;;;3970:336:0;2108:484:22;;;;;:::i;632:5688::-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;632:5688:22;;;;;;;;;;;;-1:-1:-1;;;632:5688:22;;;;;;3970:336:0;1767:106:5;1828:38;1836:9;1837:8;;:::i;1836:9::-;1828:38;:::i;1723:37:6:-;1759:1;;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;1759:1:6;;;;;;;;;;;632:5688:22;1759:1:6;632:5688:22;;;1759:1:6;632:5688:22;;3970:336:0;1759:1:6;;-1:-1:-1;;632:5688:22;1759:1:6;632:5688:22;1759:1:6;;;;;;;:::i;:::-;;;;:::i;2336:287::-;2598:18;2468:7;;;:::i;:::-;2460:63;2479:8;;:::i;:::-;2468:19;;;;2460:63;:::i;:::-;2598:18;;:::i;1676:41::-;1716:1;;;:::i;2629:209::-;2809:22;2819:12;;:::i;2589:76:0:-;;2657:1;2589:76;2642:4;2847:18:22;;:::i;2642:4:0:-;2657:1;:::i;632:5688:22:-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;632:5688:22;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2737:1208;;2892:21;2936:1;2928:9;;;;:::i;:::-;;;2924:50;;3004:37;:15;3022:19;;;:::i;3004:37::-;3057:9;632:5688;3057:9;3068:8;;;;;;;3236:17;;;;;:::i;:::-;3299:23;;;;3291:7;3299:23;;;:::i;:::-;3291:32;;;;:::i;:::-;3357:23;;;;;;;;:::i;:::-;3337:43;;:17;;;:43;:::i;:::-;3409:18;;;;;;;;:::i;:::-;3394:33;;:12;;;:33;:::i;:::-;3441:15;;:26;;;;:::i;:::-;3540:12;;;;632:5688;-1:-1:-1;;;;;632:5688:22;;;3540:12;3556:10;;;:::i;:::-;-1:-1:-1;;;;;632:5688:22;3540:26;-1:-1:-1;;;;;632:5688:22;3540:26;3769:23;3733:18;;3692:23;3068:8;3536:98;3911:3;3536:98;3810:18;3536:98;;;3057:9;3692:23;;:::i;:::-;3733:18;;;:::i;:::-;3769:23;;:::i;3810:18::-;3653:215;;;;632:5688;;3653:215;;;:::i;:::-;;;;;632:5688;;;;3653:215;;;;;;:::i;:::-;;;;632:5688;;;;3911:3;3057:9;;;;3536:98;3586:33;3601:18;;;;;;:::i;:::-;3586:33;;:::i;:::-;3536:98;;;3068:8;;;;;;;;2737:1208::o;2924:50::-;2946:28;;;;;;632:5688;;;;2946:28;-1:-1:-1;;;2946:28:22;;;;3970:336:0;2737:1208:22;;;;;:::i;2589:76:0:-;2657:1;2589:76;2642:4;4256:18:22;;:::i;2642:4:0:-;4286:85:22;;;;;:::i;:::-;;;:::i;4203:174::-;;;;:::i;1204:72:5:-;;;:::i;:::-;1268:1;2245:14;2255:4;2245:14;;:::i;:::-;734:10:11;2274:20:5;;;;632:5688:22;;;;2274:20:5;;;;;-1:-1:-1;;;;;632:5688:22;;;;;;;;;2274:20:5;;;;2186:115::o;:::-;;;:::i;1454:66::-;;;:::i;:::-;1512:1;2491:15;2501:5;2491:15;;:::i;:::-;734:10:11;2521:22:5;;;;632:5688:22;;;;2433:117:5;;;:::i;632:5688:22:-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;632:5688:22;;;;;;;;;;;;-1:-1:-1;;;632:5688:22;;;;;;3970:336:0;1945:106:5;2003:41;2011:8;;:::i;:::-;2003:41;:::i;2589:76:0:-;2657:1;2589:76;2642:4;4581:18:22;;:::i;2642:4:0:-;4635:9:22;4495:157;4635:9;:::i;4495:157::-;;;;:::i;632:5688::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;632:5688:22;;;;-1:-1:-1;;;;;632:5688:22;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;632:5688:22;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;4936:996::-;;;;;;5097:43;5120:20;:7;;:20;:::i;:::-;5097:43;:::i;:::-;5155:17;;;;;;;632:5688;;;5155:17;5176:1;;5155:22;;;;;:::i;:::-;;5151:61;;5226:15;;;632:5688;5244:15;-1:-1:-1;5222:69:22;;5431:176;5430:177;5327:7;;;5505:17;5327:40;:7;:30;;:7;:20;:7;:20;;;:::i;:30::-;;:::i;:::-;:40;:::i;:::-;5505:17;632:5688;;;5505:17;5550:42;;632:5688;;;;5550:42;;;;;;;;;;;;:::i;:::-;5540:53;;;632:5688;;;5540:53;;632:5688;;;;5540:53;;5431:176;;:::i;5430:177::-;5413:233;;5789:12;5715:20;;;:30;:20;;;:47;:20;;:::i;:30::-;:47;:::i;:::-;5789:12;632:5688;-1:-1:-1;;;;;632:5688:22;;;5789:12;5812:13;5849:7;5812:13;;;;;:::i;:::-;5849:7;:::i;:::-;5873:52;;;;;;632:5688;;5873:52;;;:::i;:::-;;;632:5688;;;;5413:233;5625:21;;;;;;;;;;;632:5688;;;;5625:21;-1:-1:-1;;;5625:21:22;;;;;;;;632:5688;5222:69;5268:23;;;;;;;;;;632:5688;;;;5268:23;-1:-1:-1;;;5268:23:22;;;;3970:336:0;5151:61:22;5186:26;;;;;;;;;;632:5688;;;;5186:26;-1:-1:-1;;;5186:26:22;;;;3970:336:0;632:5688:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;;632:5688:22;;;;-1:-1:-1;;;;;632:5688:22;;;;;;;;;;;;;;;;941:175:9;1050:58;;941:175;1050:58;;941:175;1073:23;:14;:23;:::i;:::-;1050:58;;632:5688:22;;;;1050:58:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;632:5688:22:-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;632:5688:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;632:5688:22;;;;;;3970:336:0;5196:642:9;5720:111;5196:642;5641:14;:69;5196:642;5641:14;:::i;:::-;:69;;;:::i;:::-;;;:::i;:::-;632:5688:22;;5728:22:9;;5749:1;5728:22;:::i;:::-;;:56;;;;;5196:642;5720:111;;:::i;5728:56::-;5754:30;;;;;;632:5688:22;;;5754:30:9;;;;;;;;:::i;:::-;5728:56;;;4108:223:10;4272:52;;4108:223;4272:52;4308:1;4272:52;:::i;:::-;;;:::i;632:5688:22:-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;632:5688:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;632:5688:22;;;;;;3970:336:0;632:5688:22;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;5165:446:10:-;;5487:31;5535:69;5165:446;;;;5330:12;632:5688:22;;;5330:12:10;5370:4;5354:81;5362:13;5370:4;5362:13;:::i;:::-;:30;;:21;:30;;5354:81;:::i;:::-;5487:31;;;;;;;;;;;:::i;:::-;5535:69;;:::i;632:5688:22:-;;;;:::o;:::-;-1:-1:-1;632:5688:22;;-1:-1:-1;;;632:5688:22;;;;;;;;;;;;;;;;;;;3970:336:0;7671:628:10;;;632:5688:22;7875:418:10;;;;-1:-1:-1;;632:5688:22;;7906:22:10;;7927:1;7906:22;:::i;:::-;;7902:286;;8201:17;;:::o;7902:286::-;8121:18;8113:60;8121:18;;:::i;:::-;8113:60;:::i;7875:418::-;8269:12;;;;;;;:::i;1412:320::-;1702:19;:23;;1724:1;1702:23;:::i;:::-;;1412:320;:::o;8821:540::-;;;8980:17;;632:5688:22;;;8980:17:10;:21;;9000:1;8980:21;:::i;:::-;;8976:379;;;9152:142;;;;;;;8976:379;632:5688:22;;9324:20:10;;-1:-1:-1;9324:20:10;632:5688:22;1411:172:13;1535:41;1411:172;;1535:41;1411:172;1535:33;1411:172;1512:4;632:5688:22;;;1512:4:13;1535:33;;:::i;:::-;:41;632:5688:22;;;;;-1:-1:-1;;632:5688:22;;;;;;:::o;:::-;;;;;;;;;;;;:::o;2331:300:13:-;2485:13;2497:1;2485:13;:::i;:::-;2480:116;2518:3;2504:12;2500:16;;;;;2552:33;2518:3;2576:8;;;;;;;:::i;:::-;;:::i;:::-;2552:33;;:::i;:::-;2518:3;;:::i;:::-;2485:13;;;2500:16;;;;;2331:300;:::o;9205:147::-;9294:5;;;:51;;;9302:20;;;632:5688:22;;;;;;;;;9294:51:13;9325:20;;9494:119;;;;;;;9358:261;:::o;6063:255:22:-;6138:32;6150:20;;:::i;6138:32::-;;;6134:86;;6231:31;;;;:::i;:::-;6278:33;;;;632:5688;;;;6134:86;-1:-1:-1;;632:5688:22;;-1:-1:-1;;;6191:29:22;;;;3970:336:0"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINIMUM_ACTIVE_TIMER()":"7fdba5f6","activeTimerDuration()":"33f642f6","changeActiveTimerDuration(uint256)":"960d264d","claim((bytes32,address,uint256,bytes32[])[])":"56853398","claimed(bytes32,address)":"dfcae622","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","rewards(bytes32)":"938d967a","setPauseState(bool)":"cdb88ad1","supportsInterface(bytes4)":"01ffc9a7","updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])":"df45c752"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimerDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardInactive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"}],\"name\":\"RewardMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SetActiveTimerDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_ACTIVE_TIMER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeTimerDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"changeActiveTimerDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct RewardDistributor.Claim[]\",\"name\":\"_claims\",\"type\":\"tuple[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"}],\"internalType\":\"struct Common.Distribution[]\",\"name\":\"_distributions\",\"type\":\"tuple[]\"}],\"name\":\"updateRewardsMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeActiveTimerDuration(uint256)\":{\"params\":{\"_duration\":\"uint256  Timer duration\"}},\"claim((bytes32,address,uint256,bytes32[])[])\":{\"params\":{\"_claims\":\"Claim[] List of claim metadata\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPauseState(bool)\":{\"details\":\"More efficient compared to setting the merkle proofs of all affected rewardIds to 0x\",\"params\":{\"state\":\"bool  Pause state\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])\":{\"params\":{\"_distributions\":\"Distribution[] List of reward distribution details\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidArray()\":[{\"notice\":\"no array given\"}],\"InvalidDistribution()\":[{\"notice\":\"distribution does not exist\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"invalid merkle root\"}],\"InvalidProof()\":[{\"notice\":\"merkle proof is invalid\"}],\"InvalidTimerDuration()\":[{\"notice\":\"timer duration is invalid\"}],\"RewardInactive()\":[{\"notice\":\"reward is not yet active for claiming\"}]},\"kind\":\"user\",\"methods\":{\"changeActiveTimerDuration(uint256)\":{\"notice\":\"Set the active timer duration\"},\"claim((bytes32,address,uint256,bytes32[])[])\":{\"notice\":\"Claim rewards based on the specified metadata\"},\"setPauseState(bool)\":{\"notice\":\"Set the contract's pause state (ie. before taking snapshot for the harvester)\"},\"updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])\":{\"notice\":\"Update rewards metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardDistributor.sol\":\"RewardDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/RewardDistributor.sol\":{\"keccak256\":\"0xd63eb2ab7d0cf2ce4df9cb4f78234776365fae1bd1c171ad56b1edbbab966c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2878cd10ac4fdb6b76aa846ccf99d2d582d6876dfa35478ad087e4ea0eff5c27\",\"dweb:/ipfs/QmPC4qiuJT76e3yUiBqwJEWGgoF21QSKZVuXkrpMeH16wx\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/RewardHarvester.sol":{"RewardHarvester":{"abi":[{"inputs":[{"internalType":"address","name":"_rewardSwapper","type":"address"},{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_defaultToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidClaim","type":"error"},{"inputs":[],"name":"InvalidDistribution","type":"error"},{"inputs":[],"name":"InvalidFee","type":"error"},{"inputs":[],"name":"InvalidMerkleRoot","type":"error"},{"inputs":[],"name":"InvalidOperator","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidTimerDuration","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"NotAuthorized","type":"error"},{"inputs":[],"name":"RewardInactive","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"BribeTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"}],"name":"DefaultTokenUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FeesCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"member","type":"address"}],"name":"MemberJoined","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"member","type":"address"}],"name":"MemberLeft","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"postFeeAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"proof","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"activeAt","type":"uint256"}],"name":"RewardMetadataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"duration","type":"uint256"}],"name":"SetActiveTimerDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimer","type":"address"}],"name":"SetClaimer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"SetOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"rewardSwapper","type":"address"}],"name":"SetRewardSwapper","type":"event"},{"inputs":[],"name":"FEE_BASIS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_ACTIVE_TIMER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"activeTimerDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"changeActiveTimerDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_claimer","type":"address"}],"name":"changeClaimer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newToken","type":"address"}],"name":"changeDefaultToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"name":"changeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newSwapper","type":"address"}],"name":"changeRewardSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32[]","name":"_merkleProof","type":"bytes32[]"},{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"collectFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"feesCollected","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"join","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"leave","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"operator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"hashedData","type":"bytes32"},{"internalType":"uint256","name":"activeAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"_hashedData","type":"bytes32"}],"name":"updateRewardsMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_address_fromMemory":{"entryPoint":218,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":144,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_MINIMUM_ACTIVE_TIMER":{"entryPoint":346,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_Ownable":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"constructor_Ownable2Step":{"entryPoint":422,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_RewardHarvester":{"entryPoint":359,"id":8153,"parameterSlots":3,"returnSlots":0},"convert_address_to_address":{"entryPoint":498,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":763,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":747,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":330,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":487,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":465,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_RewardHarvester":{"entryPoint":290,"id":null,"parameterSlots":0,"returnSlots":3},"extract_from_storage_value_offsett_address":{"entryPoint":582,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":95,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":649,"id":500,"parameterSlots":1,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_setActiveTimerDuration":{"entryPoint":1157,"id":8711,"parameterSlots":1,"returnSlots":0},"fun_setDefaultToken":{"entryPoint":774,"id":8633,"parameterSlots":1,"returnSlots":0},"fun_setOperator":{"entryPoint":1009,"id":8687,"parameterSlots":1,"returnSlots":0},"fun_setRewardSwapper":{"entryPoint":900,"id":8660,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":557,"id":561,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":72,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":593,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":66,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":543,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":434,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":1118,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":509,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":621,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":1129,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":184,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000032575b620000206200001962000122565b9162000167565b604051611dcf620004fe8239611dcf90f35b6200003c62000042565b6200000b565b50600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200008157604052565b6200008b62000048565b604052565b90620000a76200009f60405190565b92836200005f565b565b6001600160a01b031690565b90565b6001600160a01b03811614156200004257565b90505190620000a782620000b8565b909160608284031262000112575b620000b5620000f88484620000cb565b93620001088160208601620000cb565b93604001620000cb565b6200011c62000042565b620000e8565b62000145620022cd80380380620001398162000090565b928339810190620000da565b909192565b620000b5620000b5620000b59290565b620000b5612a306200014a565b906200018c9062000186620001929462000180620001a6565b62000306565b620003f1565b62000384565b620000a7620001a06200015a565b62000485565b620000a780336200022d565b916001600160a01b0360089290920291821b911b5b9181191691161790565b620000b590620000a9906001600160a01b031682565b620000b590620001d1565b620000b590620001e7565b919062000212620000b56200021b93620001f2565b908354620001b2565b9055565b620000a791600091620001fd565b620000a79062000240600060016200021f565b62000289565b620000b590620000a9565b620000b5905462000246565b906001600160a01b0390620001c7565b9062000281620000b56200021b92620001f2565b82546200025d565b62000295600062000251565b90620002a38160006200026d565b620002da620002d37f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093620001f2565b91620001f2565b91620002e560405190565b600090a3565b620000a9620000b5620000b59290565b620000b590620002eb565b62000316620000a96000620002fb565b6001600160a01b038216146200037057620003338160066200026d565b6200035f7f2ffae89a4970d1ff9bf1a765b00d7eee23cd328cdaaab85b7ce9e5379c1ece3291620001f2565b906200036a60405190565b600090a2565b505060405163c1ab6dc160e01b8152600490fd5b62000394620000a96000620002fb565b6001600160a01b03821614620003dd57620003b18160096200026d565b6200035f7f5326c5ebddd2feafb723c3b63cc83fb32a9c8dd7d05476832b798d9782bad87891620001f2565b505060405163e6c4247b60e01b8152600490fd5b62000401620000a96000620002fb565b6001600160a01b038216146200044a576200041e8160076200026d565b6200035f7fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91620001f2565b505060405163ccea9e6f60e01b8152600490fd5b9060001990620001c7565b906200047d620000b56200021b926200014a565b82546200045e565b62000493620000b56200015a565b8110620004e957620004a781600a62000469565b620004e47f676dc704f22ddab12a141690a96616ef0128413803c63394aba7ffe658681a1691620004d760405190565b9182918290815260200190565b0390a1565b50506040516367e00a0760e01b8152600490fdfe60806040526004361015610018575b61001661061e565b005b60003560e01c806303aaf08b146105f757806306394c9b146105d05780630700037d146105965780630c9cbf0e1461056b5780630cc630c714610543578063101cef481461051c5780631e2720ff146104f557806333f642f6146104cb57806348a61ff51461049d5780635512b81114610473578063570ca735146104495780635b2478ea1461041f578063715018a6146103f857806374c13fda146103ce57806379ba5097146103a75780637fdba5f61461037d5780638686ebcc146103535780638da5cb5b146103295780638e3fb0d314610302578063960d264d146102db578063a230c5241461029f578063a480ca7914610278578063b688a36314610251578063bc063e1a14610216578063d379be23146101ec578063d66d9e19146101c5578063e30c3978146101805763f2fde38b146101565761000e565b34610173575b61001661016a366004610655565b610b3b565b0390f35b61017b61061e565b61015c565b50346101b8575b6101923660046107f0565b61016f61019d610a97565b6040515b918291826001600160a01b03909116815260200190565b6101c061061e565b610187565b50346101df575b6101d73660046107f0565b610016610cc4565b6101e761061e565b6101cc565b5034610209575b6101fe3660046107f0565b61016f61019d6109ab565b61021161061e565b6101f3565b5034610244575b6102283660046107f0565b61016f6102336109a3565b6040515b9182918290815260200190565b61024c61061e565b61021d565b503461026b575b6102633660046107f0565b610016610c7b565b61027361061e565b610258565b5034610292575b61001661028d366004610655565b611b10565b61029a61061e565b61027f565b50346102ce575b61016f6102bc6102b7366004610655565b610980565b60405191829182901515815260200190565b6102d661061e565b6102a6565b50346102f5575b6100166102f03660046107cf565b611c13565b6102fd61061e565b6102e2565b503461031c575b610016610317366004610655565b611b4c565b61032461061e565b610309565b5034610346575b61033b3660046107f0565b61016f61019d6109ca565b61034e61061e565b610330565b5034610370575b6103653660046107f0565b61016f61023361095f565b61037861061e565b61035a565b503461039a575b61038f3660046107f0565b61016f61023361094b565b6103a261061e565b610384565b50346103c1575b6103b93660046107f0565b610016610c34565b6103c961061e565b6103ae565b50346103eb575b6103e03660046107f0565b61016f61019d610927565b6103f361061e565b6103d5565b5034610412575b61040a3660046107f0565b610016610a0c565b61041a61061e565b6103ff565b503461043c575b61016f610233610437366004610655565b610915565b61044461061e565b610426565b5034610466575b61045b3660046107f0565b61016f61019d610909565b61046e61061e565b610450565b5034610490575b6104853660046107f0565b61016f61019d6108fd565b61049861061e565b61047a565b50346104be575b6100166104b236600461085b565b95949094939193610ecf565b6104c661061e565b6104a4565b50346104e8575b6104dd3660046107f0565b61016f610233610803565b6104f061061e565b6104d2565b503461050f575b61001661050a3660046107cf565b6118c0565b61051761061e565b6104fc565b5034610536575b610016610531366004610655565b611bf5565b61053e61061e565b610523565b503461055e575b610016610558366004610791565b91611a71565b61056661061e565b61054a565b5034610589575b61016f610233610583366004610718565b9061075f565b61059161061e565b610572565b50346105c3575b61016f6105b36105ae366004610655565b6106c5565b6040519193915b938493846106f6565b6105cb61061e565b61059d565b50346105ea575b6100166105e5366004610655565b611b2e565b6105f261061e565b6105d7565b5034610611575b61001661060c366004610655565b611b6a565b61061961061e565b6105fe565b50600080fd5b6001600160a01b031690565b90565b6001600160a01b0381165b141561061e57565b9050359061065382610633565b565b906106309160208183031261066957610646565b61067161061e565b610646565b61063090610624906001600160a01b031682565b61063090610676565b6106309061068a565b906106a690610693565b600052602052604060002090565b6106309081565b61063090546106b4565b6106d090600461069c565b6106d9816106bb565b9161063060026106eb600185016106bb565b93016106bb565b9052565b908152606081019392610653929091604091610714905b6020830152565b0152565b91906106309060408482031261073c575b6107338185610646565b93602001610646565b61074461061e565b610729565b610630916008021c81565b906106309154610749565b6107796106309261077460059360009461069c565b61069c565b610754565b8061063e565b905035906106538261077e565b90916060828403126107c2575b6106306107ab8484610646565b936107b98160208601610784565b93604001610784565b6107ca61061e565b61079e565b90610630916020818303126107e357610784565b6107eb61061e565b610784565b60009103126107fb57565b61065361061e565b6106306000600a610754565b909182601f8301121561084e575b602082359267ffffffffffffffff8411610841575b0192602083028401116107fb57565b61084961061e565b610832565b61085661061e565b61081d565b909160c0828403126108d8575b6108728383610646565b926106306108838260208601610646565b936108918360408301610784565b936108b284606084013567ffffffffffffffff81116108cb575b840161080f565b9390946108c28160808601610784565b9360a001610646565b6108d361061e565b6108ab565b6108e061061e565b610868565b610630916008021c610624565b9061063091546108e5565b610630600060096108f2565b610630600060076108f2565b6106309061077960039160009261069c565b610630600060066108f2565b6106306106306106309290565b610630612a30610933565b610630610940565b610630620f4240610933565b610630610953565b610630916008021c60ff1690565b906106309154610967565b6106309061099260029160009261069c565b610975565b610630620186a0610933565b610630610997565b610630600060086108f2565b61063090610624565b61063090546109b7565b61063060006109c0565b6109dc610a6d565b6106536109fa565b6106246106306106309290565b610630906109e4565b610653610a0760006109f1565b610b82565b6106536109d4565b0190565b15610a1f57565b5060405162461bcd60e51b815280610a69600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b610653610a786109ca565b610a91610a8433610624565b916001600160a01b031690565b14610a18565b61063060016109c0565b61065390610aad610a6d565b610ae2565b906001600160a01b03905b9181191691161790565b90610ad7610630610ade92610693565b8254610ab2565b9055565b610aed816001610ac7565b610af56109ca565b90610b29610b237f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270093610693565b91610693565b91610b3360405190565b80805b0390a3565b61065390610aa1565b916001600160a01b0360089290920291821b911b610abd565b9190610b6e610630610ade93610693565b908354610b44565b61065391600091610b5d565b61065390610b9260006001610b76565b610b9c60006109c0565b90610ba8816000610ac7565b610b29610b237f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610693565b15610bdc57565b5060405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b61065333610a07610c43610a97565b610c556001600160a01b038416610a84565b14610bd5565b9060ff90610abd565b90610c74610630610ade92151590565b8254610c5b565b33610c916001610c8c83600261069c565b610c64565b610cbf7f0abf3b3f643594d958297062a019458e27d7766629590ac621aa1000fa1298ab916101a160405190565b0390a1565b33610cd56000610c8c83600261069c565b610cbf7fbea911b50ccdd2233b28faa49766c3cbd0631608f32e5a724d7b83b32b681ad0916101a160405190565b50634e487b7160e01b600052601160045260246000fd5b90610d24565b9190565b908060001904821181151516610d38570290565b610d40610d03565b0290565b50634e487b7160e01b600052601260045260246000fd5b8115610d65570490565b610d6d610d44565b0490565b818110610d7c570390565b610d84610d03565b0390565b81198111610d94570190565b610a14610d03565b9060001990610abd565b90610db6610630610ade92610933565b8254610d9c565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610e0057604052565b610e08610dc7565b604052565b90610653610e1a60405190565b9283610dde565b6106306060610e0d565b90610653610e696002610e3c610e21565b94610e4d610e49826106bb565b8752565b610e63610e5c600183016106bb565b6020880152565b016106bb565b6040840152565b61063090610e2b565b6106f2906001600160a01b031660601b90565b601481610e9f610a149360209695610e79565b01918252565b908152606081019392610653929091604091610ec09061070d565b01906001600160a01b03169052565b93909433610ee3610a8461062460086109c0565b141561118157600091610ef8610624846109f1565b6001600160a01b0388161461116057610f1083610933565b841461113f57610f21610630610997565b821161111e57610f43610f35879386610d1a565b610f3d610953565b90610d5b565b94610f75610f518787610d71565b96610f6f610f6086600361069c565b91610f6a836106bb565b610d88565b90610da6565b600491610f8a610f85858561069c565b610e70565b94610fa787610f6a610fa28d61077460059a8b61069c565b6106bb565b9581810191610fc0610d20610fba855190565b92610933565b146110f2576040015142106110c7579161102391610fdf611027945190565b908b61100a610fed60405190565b8092610ffe8c602084019283610e8c565b90810382520382610dde565b61101c611015825190565b9160200190565b20926115bd565b1590565b61109f57509061103e86610774876110439561069c565b610da6565b611056828661105186610693565b6111e4565b610b3661108c6110867f70fec9c7f21f70099818a4619c69af3a4677031e67acea18286c0eca3a754bce95610693565b95610693565b9561109660405190565b93849384610ea5565b9650505050505050610a6991506110b560405190565b6309bde33960e01b8152918291820190565b5050509650505050505050610a6991506110e060405190565b630995309b60e01b8152918291820190565b505050509650505050505050610a69915061110c60405190565b630d16b83360e31b8152918291820190565b50505050505050505061113060405190565b6358d620b360e01b8152600490fd5b50505050505050505061115160405190565b63162908e360e11b8152600490fd5b50505050505050505061117260405190565b633b4f091f60e21b8152600490fd5b505050505050505061119260405190565b63ea8e4eb560e01b8152600490fd5b6111ba6111b46106309263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b0390911681526040810192916106539160200152565b611227600492611218610653956111fe63a9059cbb6111a1565b9261120860405190565b96879460208601908152016111c7565b60208201810382520383610dde565b61133b565b610a1460209167ffffffffffffffff811161124b57601f01601f191690565b610dbd610dc7565b906112656112608361122c565b610e0d565b918252565b6112746020611253565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b61063061126a565b80151561063e565b90505190610653826112a5565b90610630916020818303126112ce576112ad565b6112d661061e565b6112ad565b156112e257565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6106539161134b61135a92610693565b9061135461129d565b91611398565b8051611369610d206000610933565b14908115611378575b506112db565b61139291506020611387825190565b8183010191016112ba565b38611372565b61063092916113a76000610933565b91611428565b156113b457565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d15611423576114183d611253565b903d6000602084013e565b606090565b9060006106309493819261143a606090565b5061145161144730610693565b83903110156113ad565b60208101905191855af1611463611409565b916114b6565b1561147057565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9192606091156114eb57505081516114d1610d206000610933565b146114da575090565b6114e6610630916114f8565b611469565b909392610653925061157a565b3b611506610d206000610933565b1190565b918091926000905b82821061152a575011611523575050565b6000910152565b91508060209183015181860152018291611512565b611560610dbd602093610a1493611554815190565b80835293849260200190565b9586910161150a565b60208082526106309291019061153f565b9150611584825190565b611591610d206000610933565b11156115a05750805190602001fd5b604051610a69925062461bcd60e51b815291829160048301611569565b6115dc9293610d20926115d8926115d2600090565b5061162e565b9290565b1490565b6001906000198114610d94570190565b50634e487b7160e01b600052603260045260246000fd5b9160209181101561161757020190565b61161f6115f0565b020190565b356106308161077e565b6116386000610933565b925b8284101561166e576116626116689161165c611657878787611607565b611624565b90611675565b936115e0565b9261163a565b9250505090565b81811015611690579061063091600052602052604060002090565b61063091600052602052604060002090565b336116b061062460076109c0565b6001600160a01b038216141590816116db575b506116d15761065390611730565b5050604051611192565b90506116ed610a8461062460096109c0565b1415386116c3565b905051906106538261077e565b9061063091602081830312611716576116f5565b61171e61061e565b6116f5565b506040513d6000823e3d90fd5b61173a6000610933565b81146118b65761181761175561175060066109c0565b610693565b61175e81610693565b926370a082319361176e30610693565b9161177860405190565b936117838760e01b90565b85526001600160a01b0384166004860152602085602481865afa9485156118a9575b60009561187f575b50916117c284926117fd9560209533906118ed565b6117e66117cf60066109c0565b976117d960405190565b9586948593849360e01b90565b83526001600160a01b031660048301526024820190565b03915afa908115611872575b600091611854575b50610d71565b9061184f6118457ff1fa0256e6ecba08316eb890d662830768e73136b5b0dbea4c9c8c16ca1747eb92610693565b9261023760405190565b0390a2565b61186c91506118633d82610dde565b3d810190611702565b38611811565b61187a611723565b611809565b60209391955084926117fd9561189c6117c2936118633d82610dde565b97939550509294506117ad565b6118b1611723565b6117a5565b5050604051611151565b610653906116a2565b6001600160a01b039182168152911660208201526060810192916106539160400152565b9061122790611218610653956004956119096323b872dd6111a1565b9361191360405190565b97889560208701908152016118c9565b91903361193361062460076109c0565b6001600160a01b03821614159081611961575b506119545761065392611987565b5050505061119260405190565b9050611971610a846106246109ca565b141538611946565b90610db6610630610ade9290565b9091600092611998610624856109f1565b6001600160a01b03841614611a54576119b084610933565b8114611a3757611a006002946119d0426119ca600a6106bb565b90610d88565b9586916119ed856119e56106308a600461069c565b928301611979565b6119fa8660018301611979565b01610da6565b61184f611a2d7f9ca93988e299d8264919a188c320f8d8efa97e1976a234f3c6c42315fc10b4e094610693565b946105ba60405190565b5050505050611a4560405190565b639dd854d360e01b8152600490fd5b5050505050611a6260405190565b63c1ab6dc160e01b8152600490fd5b906106539291611923565b61065390611a88610a6d565b600390611a98610fa2828461069c565b91600090611aa582610933565b8414611b025761103e83611abb611ac194610933565b9261069c565b611ad582611ace83610693565b33906111e4565b61184f6118457f9dc46f23cfb5ddcad0ae7ea2be38d47fec07bb9382ec7e564efc69e036dd66ce92610693565b505050505061115160405190565b61065390611a7c565b61065390611b25610a6d565b61065390611cc8565b61065390611b19565b61065390611b43610a6d565b61065390611c1c565b61065390611b37565b61065390611b61610a6d565b61065390611c77565b61065390611b55565b61065390611b7f610a6d565b611b8c61062460006109f1565b6001600160a01b03821614611be157611ba6816008610ac7565b611bd07fdfe91dcad2adcb1ecd18d2e830b469081211d6743c1e2dfa893836431fb7879491610693565b90611bda60405190565b808061184f565b505060405163e6c4247b60e01b8152600490fd5b61065390611b73565b61065390611c0a610a6d565b61065390611d2d565b61065390611bfe565b611c2961062460006109f1565b6001600160a01b03821614611c6d57611c43816006610ac7565b611bd07f2ffae89a4970d1ff9bf1a765b00d7eee23cd328cdaaab85b7ce9e5379c1ece3291610693565b5050604051611a62565b611c8461062460006109f1565b6001600160a01b03821614611be157611c9e816009610ac7565b611bd07f5326c5ebddd2feafb723c3b63cc83fb32a9c8dd7d05476832b798d9782bad87891610693565b611cd561062460006109f1565b6001600160a01b03821614611d1957611cef816007610ac7565b611bd07fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91610693565b505060405163ccea9e6f60e01b8152600490fd5b611d38610630610940565b8110611d7757611d4981600a610da6565b610cbf7f676dc704f22ddab12a141690a96616ef0128413803c63394aba7ffe658681a169161023760405190565b50506040516367e00a0760e01b8152600490fdfea3646970667358221220df9a4f3132244f55c35bfb7e8209d5f82cfd6e1d0a80c8c3e1720944ebb5cb286c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x32 JUMPI JUMPDEST PUSH3 0x20 PUSH3 0x19 PUSH3 0x122 JUMP JUMPDEST SWAP2 PUSH3 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DCF PUSH3 0x4FE DUP3 CODECOPY PUSH2 0x1DCF SWAP1 RETURN JUMPDEST PUSH3 0x3C PUSH3 0x42 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x8B PUSH3 0x48 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH3 0xA7 PUSH3 0x9F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EQ ISZERO PUSH3 0x42 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xA7 DUP3 PUSH3 0xB8 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH3 0x112 JUMPI JUMPDEST PUSH3 0xB5 PUSH3 0xF8 DUP5 DUP5 PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH3 0x108 DUP2 PUSH1 0x20 DUP7 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH3 0xCB JUMP JUMPDEST PUSH3 0x11C PUSH3 0x42 JUMP JUMPDEST PUSH3 0xE8 JUMP JUMPDEST PUSH3 0x145 PUSH3 0x22CD DUP1 CODESIZE SUB DUP1 PUSH3 0x139 DUP2 PUSH3 0x90 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH3 0xB5 PUSH3 0xB5 PUSH3 0xB5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xB5 PUSH2 0x2A30 PUSH3 0x14A JUMP JUMPDEST SWAP1 PUSH3 0x18C SWAP1 PUSH3 0x186 PUSH3 0x192 SWAP5 PUSH3 0x180 PUSH3 0x1A6 JUMP JUMPDEST PUSH3 0x306 JUMP JUMPDEST PUSH3 0x3F1 JUMP JUMPDEST PUSH3 0x384 JUMP JUMPDEST PUSH3 0xA7 PUSH3 0x1A0 PUSH3 0x15A JUMP JUMPDEST PUSH3 0x485 JUMP JUMPDEST PUSH3 0xA7 DUP1 CALLER PUSH3 0x22D JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x1D1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x1E7 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x212 PUSH3 0xB5 PUSH3 0x21B SWAP4 PUSH3 0x1F2 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x1B2 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xA7 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x1FD JUMP JUMPDEST PUSH3 0xA7 SWAP1 PUSH3 0x240 PUSH1 0x0 PUSH1 0x1 PUSH3 0x21F JUMP JUMPDEST PUSH3 0x289 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 SLOAD PUSH3 0x246 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x1C7 JUMP JUMPDEST SWAP1 PUSH3 0x281 PUSH3 0xB5 PUSH3 0x21B SWAP3 PUSH3 0x1F2 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x25D JUMP JUMPDEST PUSH3 0x295 PUSH1 0x0 PUSH3 0x251 JUMP JUMPDEST SWAP1 PUSH3 0x2A3 DUP2 PUSH1 0x0 PUSH3 0x26D JUMP JUMPDEST PUSH3 0x2DA PUSH3 0x2D3 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x1F2 JUMP JUMPDEST SWAP2 PUSH3 0x1F2 JUMP JUMPDEST SWAP2 PUSH3 0x2E5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH3 0xA9 PUSH3 0xB5 PUSH3 0xB5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x2EB JUMP JUMPDEST PUSH3 0x316 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x370 JUMPI PUSH3 0x333 DUP2 PUSH1 0x6 PUSH3 0x26D JUMP JUMPDEST PUSH3 0x35F PUSH32 0x2FFAE89A4970D1FF9BF1A765B00D7EEE23CD328CDAAAB85B7CE9E5379C1ECE32 SWAP2 PUSH3 0x1F2 JUMP JUMPDEST SWAP1 PUSH3 0x36A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0x394 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x3DD JUMPI PUSH3 0x3B1 DUP2 PUSH1 0x9 PUSH3 0x26D JUMP JUMPDEST PUSH3 0x35F PUSH32 0x5326C5EBDDD2FEAFB723C3B63CC83FB32A9C8DD7D05476832B798D9782BAD878 SWAP2 PUSH3 0x1F2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0x401 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x44A JUMPI PUSH3 0x41E DUP2 PUSH1 0x7 PUSH3 0x26D JUMP JUMPDEST PUSH3 0x35F PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH3 0x1F2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xCCEA9E6F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x1C7 JUMP JUMPDEST SWAP1 PUSH3 0x47D PUSH3 0xB5 PUSH3 0x21B SWAP3 PUSH3 0x14A JUMP JUMPDEST DUP3 SLOAD PUSH3 0x45E JUMP JUMPDEST PUSH3 0x493 PUSH3 0xB5 PUSH3 0x15A JUMP JUMPDEST DUP2 LT PUSH3 0x4E9 JUMPI PUSH3 0x4A7 DUP2 PUSH1 0xA PUSH3 0x469 JUMP JUMPDEST PUSH3 0x4E4 PUSH32 0x676DC704F22DDAB12A141690A96616EF0128413803C63394ABA7FFE658681A16 SWAP2 PUSH3 0x4D7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x67E00A07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x61E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AAF08B EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xC9CBF0E EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xCC630C7 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x101CEF48 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x33F642F6 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x48A61FF5 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x5512B811 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5B2478EA EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x74C13FDA EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x7FDBA5F6 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x8686EBCC EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x8E3FB0D3 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x960D264D EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA480CA79 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xB688A363 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xD379BE23 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xD66D9E19 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x180 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x61E JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B8 JUMPI JUMPDEST PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DF JUMPI JUMPDEST PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST POP CALLVALUE PUSH2 0x209 JUMPI JUMPDEST PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x211 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x244 JUMPI JUMPDEST PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x61E JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST POP CALLVALUE PUSH2 0x26B JUMPI JUMPDEST PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x273 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST POP CALLVALUE PUSH2 0x292 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x29A PUSH2 0x61E JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST POP CALLVALUE PUSH2 0x2CE JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x2BC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2F5 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x61E JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x31C JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x324 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST POP CALLVALUE PUSH2 0x346 JUMPI JUMPDEST PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x34E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST POP CALLVALUE PUSH2 0x370 JUMPI JUMPDEST PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x95F JUMP JUMPDEST PUSH2 0x378 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST POP CALLVALUE PUSH2 0x39A JUMPI JUMPDEST PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3C1 JUMPI JUMPDEST PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST POP CALLVALUE PUSH2 0x3EB JUMPI JUMPDEST PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x927 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x412 JUMPI JUMPDEST PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x41A PUSH2 0x61E JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST POP CALLVALUE PUSH2 0x43C JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST POP CALLVALUE PUSH2 0x466 JUMPI JUMPDEST PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x909 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST POP CALLVALUE PUSH2 0x490 JUMPI JUMPDEST PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x498 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST POP CALLVALUE PUSH2 0x4BE JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x85B JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4E8 JUMPI JUMPDEST PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x50F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST POP CALLVALUE PUSH2 0x536 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x531 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x53E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST POP CALLVALUE PUSH2 0x55E JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x791 JUMP JUMPDEST SWAP2 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST POP CALLVALUE PUSH2 0x589 JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x591 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5C3 JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x5B3 PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP4 SWAP2 JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x5CB PUSH2 0x61E JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST POP CALLVALUE PUSH2 0x5EA JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x611 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x619 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x61E JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x633 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x669 JUMPI PUSH2 0x646 JUMP JUMPDEST PUSH2 0x671 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x624 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x68A JUMP JUMPDEST SWAP1 PUSH2 0x6A6 SWAP1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x630 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x630 SWAP1 SLOAD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x6D0 SWAP1 PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x6D9 DUP2 PUSH2 0x6BB JUMP JUMPDEST SWAP2 PUSH2 0x630 PUSH1 0x2 PUSH2 0x6EB PUSH1 0x1 DUP6 ADD PUSH2 0x6BB JUMP JUMPDEST SWAP4 ADD PUSH2 0x6BB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x653 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x714 SWAP1 JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x630 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x73C JUMPI JUMPDEST PUSH2 0x733 DUP2 DUP6 PUSH2 0x646 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x646 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 SLOAD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x779 PUSH2 0x630 SWAP3 PUSH2 0x774 PUSH1 0x5 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST DUP1 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x7C2 JUMPI JUMPDEST PUSH2 0x630 PUSH2 0x7AB DUP5 DUP5 PUSH2 0x646 JUMP JUMPDEST SWAP4 PUSH2 0x7B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x784 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x784 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x61E JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x7E3 JUMPI PUSH2 0x784 JUMP JUMPDEST PUSH2 0x7EB PUSH2 0x61E JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x7FB JUMPI JUMP JUMPDEST PUSH2 0x653 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0xA PUSH2 0x754 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x84E JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x841 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x7FB JUMPI JUMP JUMPDEST PUSH2 0x849 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x856 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x8D8 JUMPI JUMPDEST PUSH2 0x872 DUP4 DUP4 PUSH2 0x646 JUMP JUMPDEST SWAP3 PUSH2 0x630 PUSH2 0x883 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x646 JUMP JUMPDEST SWAP4 PUSH2 0x891 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x784 JUMP JUMPDEST SWAP4 PUSH2 0x8B2 DUP5 PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8CB JUMPI JUMPDEST DUP5 ADD PUSH2 0x80F JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x8C2 DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0x784 JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x646 JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 SLOAD PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x9 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x7 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x779 PUSH1 0x3 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x6 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x630 PUSH2 0x630 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x2A30 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x940 JUMP JUMPDEST PUSH2 0x630 PUSH3 0xF4240 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 SLOAD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x992 PUSH1 0x2 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x630 PUSH3 0x186A0 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x8 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x630 SWAP1 SLOAD PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x624 PUSH2 0x630 PUSH2 0x630 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x653 PUSH2 0xA07 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x653 PUSH2 0x9D4 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA1F JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xA69 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x653 PUSH2 0xA78 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0xA91 PUSH2 0xA84 CALLER PUSH2 0x624 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0xAAD PUSH2 0xA6D JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xAD7 PUSH2 0x630 PUSH2 0xADE SWAP3 PUSH2 0x693 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xAB2 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAED DUP2 PUSH1 0x1 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xAF5 PUSH2 0x9CA JUMP JUMPDEST SWAP1 PUSH2 0xB29 PUSH2 0xB23 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0xB33 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xABD JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB6E PUSH2 0x630 PUSH2 0xADE SWAP4 PUSH2 0x693 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x653 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0xB92 PUSH1 0x0 PUSH1 0x1 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xB9C PUSH1 0x0 PUSH2 0x9C0 JUMP JUMPDEST SWAP1 PUSH2 0xBA8 DUP2 PUSH1 0x0 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xB29 PUSH2 0xB23 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x693 JUMP JUMPDEST ISZERO PUSH2 0xBDC JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x653 CALLER PUSH2 0xA07 PUSH2 0xC43 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xC55 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA84 JUMP JUMPDEST EQ PUSH2 0xBD5 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 PUSH2 0xC74 PUSH2 0x630 PUSH2 0xADE SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC5B JUMP JUMPDEST CALLER PUSH2 0xC91 PUSH1 0x1 PUSH2 0xC8C DUP4 PUSH1 0x2 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xCBF PUSH32 0xABF3B3F643594D958297062A019458E27D7766629590AC621AA1000FA1298AB SWAP2 PUSH2 0x1A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST CALLER PUSH2 0xCD5 PUSH1 0x0 PUSH2 0xC8C DUP4 PUSH1 0x2 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xCBF PUSH32 0xBEA911B50CCDD2233B28FAA49766C3CBD0631608F32E5A724D7B83B32B681AD0 SWAP2 PUSH2 0x1A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xD24 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0xD38 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0xD40 PUSH2 0xD03 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD65 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0xD6D PUSH2 0xD44 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xD7C JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xD84 PUSH2 0xD03 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0xD94 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xA14 PUSH2 0xD03 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 PUSH2 0xDB6 PUSH2 0x630 PUSH2 0xADE SWAP3 PUSH2 0x933 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x653 PUSH2 0xE1A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x630 PUSH1 0x60 PUSH2 0xE0D JUMP JUMPDEST SWAP1 PUSH2 0x653 PUSH2 0xE69 PUSH1 0x2 PUSH2 0xE3C PUSH2 0xE21 JUMP JUMPDEST SWAP5 PUSH2 0xE4D PUSH2 0xE49 DUP3 PUSH2 0x6BB JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xE5C PUSH1 0x1 DUP4 ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x6F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0xE9F PUSH2 0xA14 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0xE79 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x653 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xEC0 SWAP1 PUSH2 0x70D JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP4 SWAP1 SWAP5 CALLER PUSH2 0xEE3 PUSH2 0xA84 PUSH2 0x624 PUSH1 0x8 PUSH2 0x9C0 JUMP JUMPDEST EQ ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xEF8 PUSH2 0x624 DUP5 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND EQ PUSH2 0x1160 JUMPI PUSH2 0xF10 DUP4 PUSH2 0x933 JUMP JUMPDEST DUP5 EQ PUSH2 0x113F JUMPI PUSH2 0xF21 PUSH2 0x630 PUSH2 0x997 JUMP JUMPDEST DUP3 GT PUSH2 0x111E JUMPI PUSH2 0xF43 PUSH2 0xF35 DUP8 SWAP4 DUP7 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x953 JUMP JUMPDEST SWAP1 PUSH2 0xD5B JUMP JUMPDEST SWAP5 PUSH2 0xF75 PUSH2 0xF51 DUP8 DUP8 PUSH2 0xD71 JUMP JUMPDEST SWAP7 PUSH2 0xF6F PUSH2 0xF60 DUP7 PUSH1 0x3 PUSH2 0x69C JUMP JUMPDEST SWAP2 PUSH2 0xF6A DUP4 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x4 SWAP2 PUSH2 0xF8A PUSH2 0xF85 DUP6 DUP6 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST SWAP5 PUSH2 0xFA7 DUP8 PUSH2 0xF6A PUSH2 0xFA2 DUP14 PUSH2 0x774 PUSH1 0x5 SWAP11 DUP12 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST SWAP6 DUP2 DUP2 ADD SWAP2 PUSH2 0xFC0 PUSH2 0xD20 PUSH2 0xFBA DUP6 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x933 JUMP JUMPDEST EQ PUSH2 0x10F2 JUMPI PUSH1 0x40 ADD MLOAD TIMESTAMP LT PUSH2 0x10C7 JUMPI SWAP2 PUSH2 0x1023 SWAP2 PUSH2 0xFDF PUSH2 0x1027 SWAP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP12 PUSH2 0x100A PUSH2 0xFED PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0xFFE DUP13 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x101C PUSH2 0x1015 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0x15BD JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x109F JUMPI POP SWAP1 PUSH2 0x103E DUP7 PUSH2 0x774 DUP8 PUSH2 0x1043 SWAP6 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x1056 DUP3 DUP7 PUSH2 0x1051 DUP7 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xB36 PUSH2 0x108C PUSH2 0x1086 PUSH32 0x70FEC9C7F21F70099818A4619C69AF3A4677031E67ACEA18286C0ECA3A754BCE SWAP6 PUSH2 0x693 JUMP JUMPDEST SWAP6 PUSH2 0x693 JUMP JUMPDEST SWAP6 PUSH2 0x1096 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0xA69 SWAP2 POP PUSH2 0x10B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH2 0xA69 SWAP2 POP PUSH2 0x10E0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x995309B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH2 0xA69 SWAP2 POP PUSH2 0x110C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xD16B833 PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1130 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1151 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1172 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3B4F091F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1192 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x11BA PUSH2 0x11B4 PUSH2 0x630 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x653 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x1227 PUSH1 0x4 SWAP3 PUSH2 0x1218 PUSH2 0x653 SWAP6 PUSH2 0x11FE PUSH4 0xA9059CBB PUSH2 0x11A1 JUMP JUMPDEST SWAP3 PUSH2 0x1208 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x133B JUMP JUMPDEST PUSH2 0xA14 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x124B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0xDBD PUSH2 0xDC7 JUMP JUMPDEST SWAP1 PUSH2 0x1265 PUSH2 0x1260 DUP4 PUSH2 0x122C JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x1274 PUSH1 0x20 PUSH2 0x1253 JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x126A JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x63E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x12CE JUMPI PUSH2 0x12AD JUMP JUMPDEST PUSH2 0x12D6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST ISZERO PUSH2 0x12E2 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x653 SWAP2 PUSH2 0x134B PUSH2 0x135A SWAP3 PUSH2 0x693 JUMP JUMPDEST SWAP1 PUSH2 0x1354 PUSH2 0x129D JUMP JUMPDEST SWAP2 PUSH2 0x1398 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1369 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x1378 JUMPI JUMPDEST POP PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x1392 SWAP2 POP PUSH1 0x20 PUSH2 0x1387 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x12BA JUMP JUMPDEST CODESIZE PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x630 SWAP3 SWAP2 PUSH2 0x13A7 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST SWAP2 PUSH2 0x1428 JUMP JUMPDEST ISZERO PUSH2 0x13B4 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1418 RETURNDATASIZE PUSH2 0x1253 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x630 SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x143A PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x1451 PUSH2 0x1447 ADDRESS PUSH2 0x693 JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x1463 PUSH2 0x1409 JUMP JUMPDEST SWAP2 PUSH2 0x14B6 JUMP JUMPDEST ISZERO PUSH2 0x1470 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x14EB JUMPI POP POP DUP2 MLOAD PUSH2 0x14D1 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST EQ PUSH2 0x14DA JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x14E6 PUSH2 0x630 SWAP2 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x653 SWAP3 POP PUSH2 0x157A JUMP JUMPDEST EXTCODESIZE PUSH2 0x1506 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x152A JUMPI POP GT PUSH2 0x1523 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x1560 PUSH2 0xDBD PUSH1 0x20 SWAP4 PUSH2 0xA14 SWAP4 PUSH2 0x1554 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x150A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x630 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x1584 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1591 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST GT ISZERO PUSH2 0x15A0 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA69 SWAP3 POP PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x15DC SWAP3 SWAP4 PUSH2 0xD20 SWAP3 PUSH2 0x15D8 SWAP3 PUSH2 0x15D2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x162E JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0xD94 JUMPI ADD SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x1617 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x161F PUSH2 0x15F0 JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x630 DUP2 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x1638 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x166E JUMPI PUSH2 0x1662 PUSH2 0x1668 SWAP2 PUSH2 0x165C PUSH2 0x1657 DUP8 DUP8 DUP8 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1624 JUMP JUMPDEST SWAP1 PUSH2 0x1675 JUMP JUMPDEST SWAP4 PUSH2 0x15E0 JUMP JUMPDEST SWAP3 PUSH2 0x163A JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1690 JUMPI SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x16B0 PUSH2 0x624 PUSH1 0x7 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO SWAP1 DUP2 PUSH2 0x16DB JUMPI JUMPDEST POP PUSH2 0x16D1 JUMPI PUSH2 0x653 SWAP1 PUSH2 0x1730 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1192 JUMP JUMPDEST SWAP1 POP PUSH2 0x16ED PUSH2 0xA84 PUSH2 0x624 PUSH1 0x9 PUSH2 0x9C0 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1716 JUMPI PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x171E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x16F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x173A PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B6 JUMPI PUSH2 0x1817 PUSH2 0x1755 PUSH2 0x1750 PUSH1 0x6 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH2 0x175E DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP3 PUSH4 0x70A08231 SWAP4 PUSH2 0x176E ADDRESS PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x1778 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x1783 DUP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x18A9 JUMPI JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x187F JUMPI JUMPDEST POP SWAP2 PUSH2 0x17C2 DUP5 SWAP3 PUSH2 0x17FD SWAP6 PUSH1 0x20 SWAP6 CALLER SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x17E6 PUSH2 0x17CF PUSH1 0x6 PUSH2 0x9C0 JUMP JUMPDEST SWAP8 PUSH2 0x17D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1872 JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x1854 JUMPI JUMPDEST POP PUSH2 0xD71 JUMP JUMPDEST SWAP1 PUSH2 0x184F PUSH2 0x1845 PUSH32 0xF1FA0256E6ECBA08316EB890D662830768E73136B5B0DBEA4C9C8C16CA1747EB SWAP3 PUSH2 0x693 JUMP JUMPDEST SWAP3 PUSH2 0x237 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x186C SWAP2 POP PUSH2 0x1863 RETURNDATASIZE DUP3 PUSH2 0xDDE JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x1702 JUMP JUMPDEST CODESIZE PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x187A PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP2 SWAP6 POP DUP5 SWAP3 PUSH2 0x17FD SWAP6 PUSH2 0x189C PUSH2 0x17C2 SWAP4 PUSH2 0x1863 RETURNDATASIZE DUP3 PUSH2 0xDDE JUMP JUMPDEST SWAP8 SWAP4 SWAP6 POP POP SWAP3 SWAP5 POP PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x18B1 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH2 0x653 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1227 SWAP1 PUSH2 0x1218 PUSH2 0x653 SWAP6 PUSH1 0x4 SWAP6 PUSH2 0x1909 PUSH4 0x23B872DD PUSH2 0x11A1 JUMP JUMPDEST SWAP4 PUSH2 0x1913 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x18C9 JUMP JUMPDEST SWAP2 SWAP1 CALLER PUSH2 0x1933 PUSH2 0x624 PUSH1 0x7 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO SWAP1 DUP2 PUSH2 0x1961 JUMPI JUMPDEST POP PUSH2 0x1954 JUMPI PUSH2 0x653 SWAP3 PUSH2 0x1987 JUMP JUMPDEST POP POP POP POP PUSH2 0x1192 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1971 PUSH2 0xA84 PUSH2 0x624 PUSH2 0x9CA JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x1946 JUMP JUMPDEST SWAP1 PUSH2 0xDB6 PUSH2 0x630 PUSH2 0xADE SWAP3 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x1998 PUSH2 0x624 DUP6 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x1A54 JUMPI PUSH2 0x19B0 DUP5 PUSH2 0x933 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A37 JUMPI PUSH2 0x1A00 PUSH1 0x2 SWAP5 PUSH2 0x19D0 TIMESTAMP PUSH2 0x19CA PUSH1 0xA PUSH2 0x6BB JUMP JUMPDEST SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP6 DUP7 SWAP2 PUSH2 0x19ED DUP6 PUSH2 0x19E5 PUSH2 0x630 DUP11 PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST SWAP3 DUP4 ADD PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x19FA DUP7 PUSH1 0x1 DUP4 ADD PUSH2 0x1979 JUMP JUMPDEST ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x184F PUSH2 0x1A2D PUSH32 0x9CA93988E299D8264919A188C320F8D8EFA97E1976A234F3C6C42315FC10B4E0 SWAP5 PUSH2 0x693 JUMP JUMPDEST SWAP5 PUSH2 0x5BA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1A45 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9DD854D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1A62 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x653 SWAP3 SWAP2 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1A88 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x3 SWAP1 PUSH2 0x1A98 PUSH2 0xFA2 DUP3 DUP5 PUSH2 0x69C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x1AA5 DUP3 PUSH2 0x933 JUMP JUMPDEST DUP5 EQ PUSH2 0x1B02 JUMPI PUSH2 0x103E DUP4 PUSH2 0x1ABB PUSH2 0x1AC1 SWAP5 PUSH2 0x933 JUMP JUMPDEST SWAP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1AD5 DUP3 PUSH2 0x1ACE DUP4 PUSH2 0x693 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x184F PUSH2 0x1845 PUSH32 0x9DC46F23CFB5DDCAD0AE7EA2BE38D47FEC07BB9382EC7E564EFC69E036DD66CE SWAP3 PUSH2 0x693 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1151 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B25 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B43 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1C1C JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B61 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B7F PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x1B8C PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1BE1 JUMPI PUSH2 0x1BA6 DUP2 PUSH1 0x8 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0xDFE91DCAD2ADCB1ECD18D2E830B469081211D6743C1E2DFA893836431FB78794 SWAP2 PUSH2 0x693 JUMP JUMPDEST SWAP1 PUSH2 0x1BDA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x184F JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1C0A PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x1C29 PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1C6D JUMPI PUSH2 0x1C43 DUP2 PUSH1 0x6 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0x2FFAE89A4970D1FF9BF1A765B00D7EEE23CD328CDAAAB85B7CE9E5379C1ECE32 SWAP2 PUSH2 0x693 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1C84 PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1BE1 JUMPI PUSH2 0x1C9E DUP2 PUSH1 0x9 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0x5326C5EBDDD2FEAFB723C3B63CC83FB32A9C8DD7D05476832B798D9782BAD878 SWAP2 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x1CD5 PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1D19 JUMPI PUSH2 0x1CEF DUP2 PUSH1 0x7 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH2 0x693 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xCCEA9E6F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1D38 PUSH2 0x630 PUSH2 0x940 JUMP JUMPDEST DUP2 LT PUSH2 0x1D77 JUMPI PUSH2 0x1D49 DUP2 PUSH1 0xA PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0xCBF PUSH32 0x676DC704F22DDAB12A141690A96616EF0128413803C63394ABA7FFE658681A16 SWAP2 PUSH2 0x237 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x67E00A07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP11 0x4F BALANCE ORIGIN 0x24 0x4F SSTORE 0xC3 JUMPDEST 0xFB PUSH31 0x8209D5F82CFD6E1D0A80C8C3E1720944EBB5CB286C6578706572696D656E74 PUSH2 0x6CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"472:10160:23:-:0;;;;;;-1:-1:-1;472:10160:23;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;472:10160:23;;;;;;-1:-1:-1;;;;;472:10160:23;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;472:10160:23;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;472:10160:23;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;759:54;806:7;;;:::i;3168:287::-;;3340:9;3168:287;3303:13;3378:14;3168:287;;;:::i;:::-;3303:13;:::i;:::-;3340:9;:::i;:::-;3378:14;:::i;:::-;3427:20;;;:::i;:::-;;:::i;599:1349:3:-;;;734:10:11;955:12:2;:::i;472:10160:23:-;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;472:10160:23;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;1638:8;:::i;472:10160:23:-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;:::i;:::-;;;;:::i;2426:187:2:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;472:10160:23;;;;2566:40:2;;;;2426:187::o;472:10160:23:-;;;;;;;;;;;:::i;9363:209::-;9431:23;9444:10;9452:1;9444:10;:::i;9431:23::-;-1:-1:-1;;;;;472:10160:23;;9431:23;9427:57;;9495:24;;;;:::i;:::-;9535:30;;;;:::i;:::-;;;472:10160;;;;9535:30;;;;9363:209::o;9427:57::-;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;9463:21:23;;;;;9713:218;9784:25;9799:10;9807:1;9799:10;:::i;9784:25::-;-1:-1:-1;;;;;472:10160:23;;9784:25;9780:61;;9852:27;;;;:::i;:::-;9895:29;;;;:::i;9780:61::-;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;9818:23:23;;;;9463:21;10048:196;10112:23;10125:10;10133:1;10125:10;:::i;10112:23::-;-1:-1:-1;;;;;472:10160:23;;10112:23;10108:60;;10179:20;;;;:::i;:::-;10215:22;;;;:::i;10108:60::-;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;10144:24:23;;;;9463:21;472:10160;;-1:-1:-1;;472:10160:23;;;;;;;;;;:::i;:::-;;;;:::i;10375:255::-;10450:32;10462:20;;:::i;10450:32::-;;;10446:86;;10543:31;;;;:::i;:::-;10590:33;;;;472:10160;;;;10590:33;;;;;472:10160;;;;;;;10590:33;;;;10375:255::o;10446:86::-;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;10503:29:23;;;;9463:21"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":2032,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":1816,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256t_array_bytes32_dyn_calldatat_uint256t_address":{"entryPoint":2139,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_addresst_bytes32t_bytes32":{"entryPoint":1937,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":2063,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":4794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":1924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5877,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":1999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":5890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256":{"entryPoint":6345,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":3705,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256":{"entryPoint":4551,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":1778,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32_uint256":{"entryPoint":1782,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_address_uint256":{"entryPoint":3724,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":5481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":5439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2255":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256_address":{"entryPoint":3749,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":3597,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":4691,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Reward":{"entryPoint":3617,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4652,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes32_dyn_calldata":{"entryPoint":5639,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":3464,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":3419,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":3354,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3441,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1572,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_FEE_BASIS":{"entryPoint":2387,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_FEE":{"entryPoint":2455,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MINIMUM_ACTIVE_TIMER":{"entryPoint":2368,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":1683,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_Address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IERC20_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_RewardHarvester_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1000000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2545,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":2532,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_47fb_to_string":{"entryPoint":4765,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_Reward_storage_to_struct_Reward":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Reward_storage_to_struct_Reward_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":2355,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1674,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1654,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":4513,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":4714,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":5386,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":2277,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":2407,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":1865,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":2487,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bytes32":{"entryPoint":1716,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":5129,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":3550,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":2946,"id":561,"parameterSlots":1,"returnSlots":0},"fun_acceptOwnership":{"entryPoint":3124,"id":583,"parameterSlots":0,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":4923,"id":1278,"parameterSlots":2,"returnSlots":0},"fun_changeActiveTimerDuration":{"entryPoint":7187,"id":8606,"parameterSlots":1,"returnSlots":0},"fun_changeActiveTimerDuration_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_changeClaimer":{"entryPoint":7157,"id":8593,"parameterSlots":1,"returnSlots":0},"fun_changeClaimer_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_changeDefaultToken":{"entryPoint":6988,"id":8551,"parameterSlots":1,"returnSlots":0},"fun_changeDefaultToken_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_changeOperator":{"entryPoint":6958,"id":8538,"parameterSlots":1,"returnSlots":0},"fun_changeOperator_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_changeRewardSwapper":{"entryPoint":7018,"id":8564,"parameterSlots":1,"returnSlots":0},"fun_changeRewardSwapper_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":2669,"id":443,"parameterSlots":0,"returnSlots":0},"fun_claim":{"entryPoint":3791,"id":8348,"parameterSlots":7,"returnSlots":0},"fun_collectFees":{"entryPoint":6928,"id":8525,"parameterSlots":1,"returnSlots":0},"fun_collectFees_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_depositReward":{"entryPoint":6336,"id":8408,"parameterSlots":1,"returnSlots":0},"fun_depositReward_inner":{"entryPoint":5936,"id":null,"parameterSlots":1,"returnSlots":0},"fun_efficientHash":{"entryPoint":null,"id":2443,"parameterSlots":2,"returnSlots":1},"fun_functionCall":{"entryPoint":5016,"id":1417,"parameterSlots":3,"returnSlots":1},"fun_functionCallWithValue":{"entryPoint":5160,"id":1481,"parameterSlots":4,"returnSlots":1},"fun_hashPair":{"entryPoint":5749,"id":2432,"parameterSlots":2,"returnSlots":1},"fun_isContract":{"entryPoint":5368,"id":1345,"parameterSlots":1,"returnSlots":1},"fun_join":{"entryPoint":3195,"id":8170,"parameterSlots":0,"returnSlots":0},"fun_leave":{"entryPoint":3268,"id":8187,"parameterSlots":0,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":2506,"id":429,"parameterSlots":0,"returnSlots":1},"fun_pendingOwner":{"entryPoint":2711,"id":524,"parameterSlots":0,"returnSlots":1},"fun_processProofCalldata":{"entryPoint":5678,"id":2041,"parameterSlots":3,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":2572,"id":457,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":2554,"id":null,"parameterSlots":0,"returnSlots":0},"fun_revert":{"entryPoint":5498,"id":1656,"parameterSlots":2,"returnSlots":0},"fun_safeTransfer":{"entryPoint":4580,"id":984,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":6381,"id":1011,"parameterSlots":4,"returnSlots":0},"fun_setActiveTimerDuration":{"entryPoint":7469,"id":8711,"parameterSlots":1,"returnSlots":0},"fun_setDefaultToken":{"entryPoint":7196,"id":8633,"parameterSlots":1,"returnSlots":0},"fun_setOperator":{"entryPoint":7368,"id":8687,"parameterSlots":1,"returnSlots":0},"fun_setRewardSwapper":{"entryPoint":7287,"id":8660,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":2875,"id":544,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":2786,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updateRewardsMetadata":{"entryPoint":6769,"id":8481,"parameterSlots":3,"returnSlots":0},"fun_updateRewardsMetadata_inner":{"entryPoint":6535,"id":null,"parameterSlots":3,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":5302,"id":1612,"parameterSlots":4,"returnSlots":1},"fun_verifyCalldata":{"entryPoint":5565,"id":1961,"parameterSlots":4,"returnSlots":1},"getter_fun_FEE_BASIS":{"entryPoint":2399,"id":7989,"parameterSlots":0,"returnSlots":1},"getter_fun_MAX_FEE":{"entryPoint":2467,"id":7992,"parameterSlots":0,"returnSlots":1},"getter_fun_MINIMUM_ACTIVE_TIMER":{"entryPoint":2379,"id":7995,"parameterSlots":0,"returnSlots":1},"getter_fun_activeTimerDuration":{"entryPoint":2051,"id":8024,"parameterSlots":0,"returnSlots":1},"getter_fun_claimed":{"entryPoint":1887,"id":8014,"parameterSlots":2,"returnSlots":1},"getter_fun_claimer":{"entryPoint":2475,"id":8020,"parameterSlots":0,"returnSlots":1},"getter_fun_defaultToken":{"entryPoint":2343,"id":8016,"parameterSlots":0,"returnSlots":1},"getter_fun_feesCollected":{"entryPoint":2325,"id":8003,"parameterSlots":1,"returnSlots":1},"getter_fun_isMember":{"entryPoint":2432,"id":7999,"parameterSlots":1,"returnSlots":1},"getter_fun_operator":{"entryPoint":2313,"id":8018,"parameterSlots":0,"returnSlots":1},"getter_fun_rewardSwapper":{"entryPoint":2301,"id":8022,"parameterSlots":0,"returnSlots":1},"getter_fun_rewards":{"entryPoint":1733,"id":8008,"parameterSlots":1,"returnSlots":3},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":5600,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_struct_Reward_storage_of_address":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyOperatorOrOwner":{"entryPoint":6435,"id":8107,"parameterSlots":3,"returnSlots":0},"modifier_onlyOperatorOrRewardSwapper":{"entryPoint":5794,"id":8127,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":7166,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_447":{"entryPoint":2516,"id":420,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_531":{"entryPoint":2721,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_8487":{"entryPoint":6780,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_8531":{"entryPoint":6937,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_8544":{"entryPoint":6967,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_8557":{"entryPoint":6997,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_8570":{"entryPoint":7027,"id":420,"parameterSlots":1,"returnSlots":0},"panic_error_0x11":{"entryPoint":3331,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3396,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5616,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3527,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes32":{"entryPoint":5668,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Reward":{"entryPoint":3627,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":2421,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":1876,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":2496,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":1723,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":3029,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_565f":{"entryPoint":5037,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":2584,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc2e":{"entryPoint":5225,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e11a":{"entryPoint":4827,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":1566,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":5923,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":3517,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":2934,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":2738,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic20":{"entryPoint":2884,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":3484,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":3163,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":2909,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":2759,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":6521,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":3494,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":1587,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":4773,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":1918,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes32":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610018575b61001661061e565b005b60003560e01c806303aaf08b146105f757806306394c9b146105d05780630700037d146105965780630c9cbf0e1461056b5780630cc630c714610543578063101cef481461051c5780631e2720ff146104f557806333f642f6146104cb57806348a61ff51461049d5780635512b81114610473578063570ca735146104495780635b2478ea1461041f578063715018a6146103f857806374c13fda146103ce57806379ba5097146103a75780637fdba5f61461037d5780638686ebcc146103535780638da5cb5b146103295780638e3fb0d314610302578063960d264d146102db578063a230c5241461029f578063a480ca7914610278578063b688a36314610251578063bc063e1a14610216578063d379be23146101ec578063d66d9e19146101c5578063e30c3978146101805763f2fde38b146101565761000e565b34610173575b61001661016a366004610655565b610b3b565b0390f35b61017b61061e565b61015c565b50346101b8575b6101923660046107f0565b61016f61019d610a97565b6040515b918291826001600160a01b03909116815260200190565b6101c061061e565b610187565b50346101df575b6101d73660046107f0565b610016610cc4565b6101e761061e565b6101cc565b5034610209575b6101fe3660046107f0565b61016f61019d6109ab565b61021161061e565b6101f3565b5034610244575b6102283660046107f0565b61016f6102336109a3565b6040515b9182918290815260200190565b61024c61061e565b61021d565b503461026b575b6102633660046107f0565b610016610c7b565b61027361061e565b610258565b5034610292575b61001661028d366004610655565b611b10565b61029a61061e565b61027f565b50346102ce575b61016f6102bc6102b7366004610655565b610980565b60405191829182901515815260200190565b6102d661061e565b6102a6565b50346102f5575b6100166102f03660046107cf565b611c13565b6102fd61061e565b6102e2565b503461031c575b610016610317366004610655565b611b4c565b61032461061e565b610309565b5034610346575b61033b3660046107f0565b61016f61019d6109ca565b61034e61061e565b610330565b5034610370575b6103653660046107f0565b61016f61023361095f565b61037861061e565b61035a565b503461039a575b61038f3660046107f0565b61016f61023361094b565b6103a261061e565b610384565b50346103c1575b6103b93660046107f0565b610016610c34565b6103c961061e565b6103ae565b50346103eb575b6103e03660046107f0565b61016f61019d610927565b6103f361061e565b6103d5565b5034610412575b61040a3660046107f0565b610016610a0c565b61041a61061e565b6103ff565b503461043c575b61016f610233610437366004610655565b610915565b61044461061e565b610426565b5034610466575b61045b3660046107f0565b61016f61019d610909565b61046e61061e565b610450565b5034610490575b6104853660046107f0565b61016f61019d6108fd565b61049861061e565b61047a565b50346104be575b6100166104b236600461085b565b95949094939193610ecf565b6104c661061e565b6104a4565b50346104e8575b6104dd3660046107f0565b61016f610233610803565b6104f061061e565b6104d2565b503461050f575b61001661050a3660046107cf565b6118c0565b61051761061e565b6104fc565b5034610536575b610016610531366004610655565b611bf5565b61053e61061e565b610523565b503461055e575b610016610558366004610791565b91611a71565b61056661061e565b61054a565b5034610589575b61016f610233610583366004610718565b9061075f565b61059161061e565b610572565b50346105c3575b61016f6105b36105ae366004610655565b6106c5565b6040519193915b938493846106f6565b6105cb61061e565b61059d565b50346105ea575b6100166105e5366004610655565b611b2e565b6105f261061e565b6105d7565b5034610611575b61001661060c366004610655565b611b6a565b61061961061e565b6105fe565b50600080fd5b6001600160a01b031690565b90565b6001600160a01b0381165b141561061e57565b9050359061065382610633565b565b906106309160208183031261066957610646565b61067161061e565b610646565b61063090610624906001600160a01b031682565b61063090610676565b6106309061068a565b906106a690610693565b600052602052604060002090565b6106309081565b61063090546106b4565b6106d090600461069c565b6106d9816106bb565b9161063060026106eb600185016106bb565b93016106bb565b9052565b908152606081019392610653929091604091610714905b6020830152565b0152565b91906106309060408482031261073c575b6107338185610646565b93602001610646565b61074461061e565b610729565b610630916008021c81565b906106309154610749565b6107796106309261077460059360009461069c565b61069c565b610754565b8061063e565b905035906106538261077e565b90916060828403126107c2575b6106306107ab8484610646565b936107b98160208601610784565b93604001610784565b6107ca61061e565b61079e565b90610630916020818303126107e357610784565b6107eb61061e565b610784565b60009103126107fb57565b61065361061e565b6106306000600a610754565b909182601f8301121561084e575b602082359267ffffffffffffffff8411610841575b0192602083028401116107fb57565b61084961061e565b610832565b61085661061e565b61081d565b909160c0828403126108d8575b6108728383610646565b926106306108838260208601610646565b936108918360408301610784565b936108b284606084013567ffffffffffffffff81116108cb575b840161080f565b9390946108c28160808601610784565b9360a001610646565b6108d361061e565b6108ab565b6108e061061e565b610868565b610630916008021c610624565b9061063091546108e5565b610630600060096108f2565b610630600060076108f2565b6106309061077960039160009261069c565b610630600060066108f2565b6106306106306106309290565b610630612a30610933565b610630610940565b610630620f4240610933565b610630610953565b610630916008021c60ff1690565b906106309154610967565b6106309061099260029160009261069c565b610975565b610630620186a0610933565b610630610997565b610630600060086108f2565b61063090610624565b61063090546109b7565b61063060006109c0565b6109dc610a6d565b6106536109fa565b6106246106306106309290565b610630906109e4565b610653610a0760006109f1565b610b82565b6106536109d4565b0190565b15610a1f57565b5060405162461bcd60e51b815280610a69600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b610653610a786109ca565b610a91610a8433610624565b916001600160a01b031690565b14610a18565b61063060016109c0565b61065390610aad610a6d565b610ae2565b906001600160a01b03905b9181191691161790565b90610ad7610630610ade92610693565b8254610ab2565b9055565b610aed816001610ac7565b610af56109ca565b90610b29610b237f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270093610693565b91610693565b91610b3360405190565b80805b0390a3565b61065390610aa1565b916001600160a01b0360089290920291821b911b610abd565b9190610b6e610630610ade93610693565b908354610b44565b61065391600091610b5d565b61065390610b9260006001610b76565b610b9c60006109c0565b90610ba8816000610ac7565b610b29610b237f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610693565b15610bdc57565b5060405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b61065333610a07610c43610a97565b610c556001600160a01b038416610a84565b14610bd5565b9060ff90610abd565b90610c74610630610ade92151590565b8254610c5b565b33610c916001610c8c83600261069c565b610c64565b610cbf7f0abf3b3f643594d958297062a019458e27d7766629590ac621aa1000fa1298ab916101a160405190565b0390a1565b33610cd56000610c8c83600261069c565b610cbf7fbea911b50ccdd2233b28faa49766c3cbd0631608f32e5a724d7b83b32b681ad0916101a160405190565b50634e487b7160e01b600052601160045260246000fd5b90610d24565b9190565b908060001904821181151516610d38570290565b610d40610d03565b0290565b50634e487b7160e01b600052601260045260246000fd5b8115610d65570490565b610d6d610d44565b0490565b818110610d7c570390565b610d84610d03565b0390565b81198111610d94570190565b610a14610d03565b9060001990610abd565b90610db6610630610ade92610933565b8254610d9c565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610e0057604052565b610e08610dc7565b604052565b90610653610e1a60405190565b9283610dde565b6106306060610e0d565b90610653610e696002610e3c610e21565b94610e4d610e49826106bb565b8752565b610e63610e5c600183016106bb565b6020880152565b016106bb565b6040840152565b61063090610e2b565b6106f2906001600160a01b031660601b90565b601481610e9f610a149360209695610e79565b01918252565b908152606081019392610653929091604091610ec09061070d565b01906001600160a01b03169052565b93909433610ee3610a8461062460086109c0565b141561118157600091610ef8610624846109f1565b6001600160a01b0388161461116057610f1083610933565b841461113f57610f21610630610997565b821161111e57610f43610f35879386610d1a565b610f3d610953565b90610d5b565b94610f75610f518787610d71565b96610f6f610f6086600361069c565b91610f6a836106bb565b610d88565b90610da6565b600491610f8a610f85858561069c565b610e70565b94610fa787610f6a610fa28d61077460059a8b61069c565b6106bb565b9581810191610fc0610d20610fba855190565b92610933565b146110f2576040015142106110c7579161102391610fdf611027945190565b908b61100a610fed60405190565b8092610ffe8c602084019283610e8c565b90810382520382610dde565b61101c611015825190565b9160200190565b20926115bd565b1590565b61109f57509061103e86610774876110439561069c565b610da6565b611056828661105186610693565b6111e4565b610b3661108c6110867f70fec9c7f21f70099818a4619c69af3a4677031e67acea18286c0eca3a754bce95610693565b95610693565b9561109660405190565b93849384610ea5565b9650505050505050610a6991506110b560405190565b6309bde33960e01b8152918291820190565b5050509650505050505050610a6991506110e060405190565b630995309b60e01b8152918291820190565b505050509650505050505050610a69915061110c60405190565b630d16b83360e31b8152918291820190565b50505050505050505061113060405190565b6358d620b360e01b8152600490fd5b50505050505050505061115160405190565b63162908e360e11b8152600490fd5b50505050505050505061117260405190565b633b4f091f60e21b8152600490fd5b505050505050505061119260405190565b63ea8e4eb560e01b8152600490fd5b6111ba6111b46106309263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b0390911681526040810192916106539160200152565b611227600492611218610653956111fe63a9059cbb6111a1565b9261120860405190565b96879460208601908152016111c7565b60208201810382520383610dde565b61133b565b610a1460209167ffffffffffffffff811161124b57601f01601f191690565b610dbd610dc7565b906112656112608361122c565b610e0d565b918252565b6112746020611253565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b61063061126a565b80151561063e565b90505190610653826112a5565b90610630916020818303126112ce576112ad565b6112d661061e565b6112ad565b156112e257565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6106539161134b61135a92610693565b9061135461129d565b91611398565b8051611369610d206000610933565b14908115611378575b506112db565b61139291506020611387825190565b8183010191016112ba565b38611372565b61063092916113a76000610933565b91611428565b156113b457565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d15611423576114183d611253565b903d6000602084013e565b606090565b9060006106309493819261143a606090565b5061145161144730610693565b83903110156113ad565b60208101905191855af1611463611409565b916114b6565b1561147057565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9192606091156114eb57505081516114d1610d206000610933565b146114da575090565b6114e6610630916114f8565b611469565b909392610653925061157a565b3b611506610d206000610933565b1190565b918091926000905b82821061152a575011611523575050565b6000910152565b91508060209183015181860152018291611512565b611560610dbd602093610a1493611554815190565b80835293849260200190565b9586910161150a565b60208082526106309291019061153f565b9150611584825190565b611591610d206000610933565b11156115a05750805190602001fd5b604051610a69925062461bcd60e51b815291829160048301611569565b6115dc9293610d20926115d8926115d2600090565b5061162e565b9290565b1490565b6001906000198114610d94570190565b50634e487b7160e01b600052603260045260246000fd5b9160209181101561161757020190565b61161f6115f0565b020190565b356106308161077e565b6116386000610933565b925b8284101561166e576116626116689161165c611657878787611607565b611624565b90611675565b936115e0565b9261163a565b9250505090565b81811015611690579061063091600052602052604060002090565b61063091600052602052604060002090565b336116b061062460076109c0565b6001600160a01b038216141590816116db575b506116d15761065390611730565b5050604051611192565b90506116ed610a8461062460096109c0565b1415386116c3565b905051906106538261077e565b9061063091602081830312611716576116f5565b61171e61061e565b6116f5565b506040513d6000823e3d90fd5b61173a6000610933565b81146118b65761181761175561175060066109c0565b610693565b61175e81610693565b926370a082319361176e30610693565b9161177860405190565b936117838760e01b90565b85526001600160a01b0384166004860152602085602481865afa9485156118a9575b60009561187f575b50916117c284926117fd9560209533906118ed565b6117e66117cf60066109c0565b976117d960405190565b9586948593849360e01b90565b83526001600160a01b031660048301526024820190565b03915afa908115611872575b600091611854575b50610d71565b9061184f6118457ff1fa0256e6ecba08316eb890d662830768e73136b5b0dbea4c9c8c16ca1747eb92610693565b9261023760405190565b0390a2565b61186c91506118633d82610dde565b3d810190611702565b38611811565b61187a611723565b611809565b60209391955084926117fd9561189c6117c2936118633d82610dde565b97939550509294506117ad565b6118b1611723565b6117a5565b5050604051611151565b610653906116a2565b6001600160a01b039182168152911660208201526060810192916106539160400152565b9061122790611218610653956004956119096323b872dd6111a1565b9361191360405190565b97889560208701908152016118c9565b91903361193361062460076109c0565b6001600160a01b03821614159081611961575b506119545761065392611987565b5050505061119260405190565b9050611971610a846106246109ca565b141538611946565b90610db6610630610ade9290565b9091600092611998610624856109f1565b6001600160a01b03841614611a54576119b084610933565b8114611a3757611a006002946119d0426119ca600a6106bb565b90610d88565b9586916119ed856119e56106308a600461069c565b928301611979565b6119fa8660018301611979565b01610da6565b61184f611a2d7f9ca93988e299d8264919a188c320f8d8efa97e1976a234f3c6c42315fc10b4e094610693565b946105ba60405190565b5050505050611a4560405190565b639dd854d360e01b8152600490fd5b5050505050611a6260405190565b63c1ab6dc160e01b8152600490fd5b906106539291611923565b61065390611a88610a6d565b600390611a98610fa2828461069c565b91600090611aa582610933565b8414611b025761103e83611abb611ac194610933565b9261069c565b611ad582611ace83610693565b33906111e4565b61184f6118457f9dc46f23cfb5ddcad0ae7ea2be38d47fec07bb9382ec7e564efc69e036dd66ce92610693565b505050505061115160405190565b61065390611a7c565b61065390611b25610a6d565b61065390611cc8565b61065390611b19565b61065390611b43610a6d565b61065390611c1c565b61065390611b37565b61065390611b61610a6d565b61065390611c77565b61065390611b55565b61065390611b7f610a6d565b611b8c61062460006109f1565b6001600160a01b03821614611be157611ba6816008610ac7565b611bd07fdfe91dcad2adcb1ecd18d2e830b469081211d6743c1e2dfa893836431fb7879491610693565b90611bda60405190565b808061184f565b505060405163e6c4247b60e01b8152600490fd5b61065390611b73565b61065390611c0a610a6d565b61065390611d2d565b61065390611bfe565b611c2961062460006109f1565b6001600160a01b03821614611c6d57611c43816006610ac7565b611bd07f2ffae89a4970d1ff9bf1a765b00d7eee23cd328cdaaab85b7ce9e5379c1ece3291610693565b5050604051611a62565b611c8461062460006109f1565b6001600160a01b03821614611be157611c9e816009610ac7565b611bd07f5326c5ebddd2feafb723c3b63cc83fb32a9c8dd7d05476832b798d9782bad87891610693565b611cd561062460006109f1565b6001600160a01b03821614611d1957611cef816007610ac7565b611bd07fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91610693565b505060405163ccea9e6f60e01b8152600490fd5b611d38610630610940565b8110611d7757611d4981600a610da6565b610cbf7f676dc704f22ddab12a141690a96616ef0128413803c63394aba7ffe658681a169161023760405190565b50506040516367e00a0760e01b8152600490fdfea3646970667358221220df9a4f3132244f55c35bfb7e8209d5f82cfd6e1d0a80c8c3e1720944ebb5cb286c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x61E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AAF08B EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xC9CBF0E EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xCC630C7 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x101CEF48 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x33F642F6 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x48A61FF5 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x5512B811 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5B2478EA EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x74C13FDA EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x7FDBA5F6 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x8686EBCC EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x8E3FB0D3 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x960D264D EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA480CA79 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xB688A363 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xD379BE23 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xD66D9E19 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x180 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0x173 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x61E JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B8 JUMPI JUMPDEST PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DF JUMPI JUMPDEST PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST POP CALLVALUE PUSH2 0x209 JUMPI JUMPDEST PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x211 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x244 JUMPI JUMPDEST PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x61E JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST POP CALLVALUE PUSH2 0x26B JUMPI JUMPDEST PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x273 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST POP CALLVALUE PUSH2 0x292 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x29A PUSH2 0x61E JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST POP CALLVALUE PUSH2 0x2CE JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x2BC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2F5 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x2FD PUSH2 0x61E JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x31C JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x324 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST POP CALLVALUE PUSH2 0x346 JUMPI JUMPDEST PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x34E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST POP CALLVALUE PUSH2 0x370 JUMPI JUMPDEST PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x95F JUMP JUMPDEST PUSH2 0x378 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST POP CALLVALUE PUSH2 0x39A JUMPI JUMPDEST PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3C1 JUMPI JUMPDEST PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST POP CALLVALUE PUSH2 0x3EB JUMPI JUMPDEST PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x927 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x412 JUMPI JUMPDEST PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x41A PUSH2 0x61E JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST POP CALLVALUE PUSH2 0x43C JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST POP CALLVALUE PUSH2 0x466 JUMPI JUMPDEST PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x909 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST POP CALLVALUE PUSH2 0x490 JUMPI JUMPDEST PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19D PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x498 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST POP CALLVALUE PUSH2 0x4BE JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x85B JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4E8 JUMPI JUMPDEST PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x50F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x517 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST POP CALLVALUE PUSH2 0x536 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x531 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1BF5 JUMP JUMPDEST PUSH2 0x53E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST POP CALLVALUE PUSH2 0x55E JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x791 JUMP JUMPDEST SWAP2 PUSH2 0x1A71 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST POP CALLVALUE PUSH2 0x589 JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x233 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x591 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST POP CALLVALUE PUSH2 0x5C3 JUMPI JUMPDEST PUSH2 0x16F PUSH2 0x5B3 PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP4 SWAP2 JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x5CB PUSH2 0x61E JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST POP CALLVALUE PUSH2 0x5EA JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x611 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x655 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x619 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x61E JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x633 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x669 JUMPI PUSH2 0x646 JUMP JUMPDEST PUSH2 0x671 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x624 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x68A JUMP JUMPDEST SWAP1 PUSH2 0x6A6 SWAP1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x630 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x630 SWAP1 SLOAD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x6D0 SWAP1 PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x6D9 DUP2 PUSH2 0x6BB JUMP JUMPDEST SWAP2 PUSH2 0x630 PUSH1 0x2 PUSH2 0x6EB PUSH1 0x1 DUP6 ADD PUSH2 0x6BB JUMP JUMPDEST SWAP4 ADD PUSH2 0x6BB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x653 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x714 SWAP1 JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x630 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH2 0x73C JUMPI JUMPDEST PUSH2 0x733 DUP2 DUP6 PUSH2 0x646 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x646 JUMP JUMPDEST PUSH2 0x744 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 SLOAD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x779 PUSH2 0x630 SWAP3 PUSH2 0x774 PUSH1 0x5 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST DUP1 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x7C2 JUMPI JUMPDEST PUSH2 0x630 PUSH2 0x7AB DUP5 DUP5 PUSH2 0x646 JUMP JUMPDEST SWAP4 PUSH2 0x7B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x784 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x784 JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x61E JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x7E3 JUMPI PUSH2 0x784 JUMP JUMPDEST PUSH2 0x7EB PUSH2 0x61E JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x7FB JUMPI JUMP JUMPDEST PUSH2 0x653 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0xA PUSH2 0x754 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x84E JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x841 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x7FB JUMPI JUMP JUMPDEST PUSH2 0x849 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x856 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x8D8 JUMPI JUMPDEST PUSH2 0x872 DUP4 DUP4 PUSH2 0x646 JUMP JUMPDEST SWAP3 PUSH2 0x630 PUSH2 0x883 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x646 JUMP JUMPDEST SWAP4 PUSH2 0x891 DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x784 JUMP JUMPDEST SWAP4 PUSH2 0x8B2 DUP5 PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8CB JUMPI JUMPDEST DUP5 ADD PUSH2 0x80F JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x8C2 DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0x784 JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x646 JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 SLOAD PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x9 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x7 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x779 PUSH1 0x3 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x6 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x630 PUSH2 0x630 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x2A30 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x940 JUMP JUMPDEST PUSH2 0x630 PUSH3 0xF4240 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 SLOAD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x992 PUSH1 0x2 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH2 0x630 PUSH3 0x186A0 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH1 0x8 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x630 SWAP1 SLOAD PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x0 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x624 PUSH2 0x630 PUSH2 0x630 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x653 PUSH2 0xA07 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x653 PUSH2 0x9D4 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA1F JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xA69 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x653 PUSH2 0xA78 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0xA91 PUSH2 0xA84 CALLER PUSH2 0x624 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x630 PUSH1 0x1 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0xAAD PUSH2 0xA6D JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xAD7 PUSH2 0x630 PUSH2 0xADE SWAP3 PUSH2 0x693 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xAB2 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAED DUP2 PUSH1 0x1 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xAF5 PUSH2 0x9CA JUMP JUMPDEST SWAP1 PUSH2 0xB29 PUSH2 0xB23 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0xB33 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xABD JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB6E PUSH2 0x630 PUSH2 0xADE SWAP4 PUSH2 0x693 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x653 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0xB92 PUSH1 0x0 PUSH1 0x1 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xB9C PUSH1 0x0 PUSH2 0x9C0 JUMP JUMPDEST SWAP1 PUSH2 0xBA8 DUP2 PUSH1 0x0 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xB29 PUSH2 0xB23 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x693 JUMP JUMPDEST ISZERO PUSH2 0xBDC JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x653 CALLER PUSH2 0xA07 PUSH2 0xC43 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xC55 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA84 JUMP JUMPDEST EQ PUSH2 0xBD5 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 PUSH2 0xC74 PUSH2 0x630 PUSH2 0xADE SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC5B JUMP JUMPDEST CALLER PUSH2 0xC91 PUSH1 0x1 PUSH2 0xC8C DUP4 PUSH1 0x2 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xCBF PUSH32 0xABF3B3F643594D958297062A019458E27D7766629590AC621AA1000FA1298AB SWAP2 PUSH2 0x1A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST CALLER PUSH2 0xCD5 PUSH1 0x0 PUSH2 0xC8C DUP4 PUSH1 0x2 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xCBF PUSH32 0xBEA911B50CCDD2233B28FAA49766C3CBD0631608F32E5A724D7B83B32B681AD0 SWAP2 PUSH2 0x1A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xD24 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 NOT DIV DUP3 GT DUP2 ISZERO ISZERO AND PUSH2 0xD38 JUMPI MUL SWAP1 JUMP JUMPDEST PUSH2 0xD40 PUSH2 0xD03 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD65 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0xD6D PUSH2 0xD44 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xD7C JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xD84 PUSH2 0xD03 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0xD94 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xA14 PUSH2 0xD03 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 PUSH2 0xDB6 PUSH2 0x630 PUSH2 0xADE SWAP3 PUSH2 0x933 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x653 PUSH2 0xE1A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x630 PUSH1 0x60 PUSH2 0xE0D JUMP JUMPDEST SWAP1 PUSH2 0x653 PUSH2 0xE69 PUSH1 0x2 PUSH2 0xE3C PUSH2 0xE21 JUMP JUMPDEST SWAP5 PUSH2 0xE4D PUSH2 0xE49 DUP3 PUSH2 0x6BB JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xE5C PUSH1 0x1 DUP4 ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x630 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x6F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0xE9F PUSH2 0xA14 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0xE79 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x653 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xEC0 SWAP1 PUSH2 0x70D JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP4 SWAP1 SWAP5 CALLER PUSH2 0xEE3 PUSH2 0xA84 PUSH2 0x624 PUSH1 0x8 PUSH2 0x9C0 JUMP JUMPDEST EQ ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xEF8 PUSH2 0x624 DUP5 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND EQ PUSH2 0x1160 JUMPI PUSH2 0xF10 DUP4 PUSH2 0x933 JUMP JUMPDEST DUP5 EQ PUSH2 0x113F JUMPI PUSH2 0xF21 PUSH2 0x630 PUSH2 0x997 JUMP JUMPDEST DUP3 GT PUSH2 0x111E JUMPI PUSH2 0xF43 PUSH2 0xF35 DUP8 SWAP4 DUP7 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x953 JUMP JUMPDEST SWAP1 PUSH2 0xD5B JUMP JUMPDEST SWAP5 PUSH2 0xF75 PUSH2 0xF51 DUP8 DUP8 PUSH2 0xD71 JUMP JUMPDEST SWAP7 PUSH2 0xF6F PUSH2 0xF60 DUP7 PUSH1 0x3 PUSH2 0x69C JUMP JUMPDEST SWAP2 PUSH2 0xF6A DUP4 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x4 SWAP2 PUSH2 0xF8A PUSH2 0xF85 DUP6 DUP6 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST SWAP5 PUSH2 0xFA7 DUP8 PUSH2 0xF6A PUSH2 0xFA2 DUP14 PUSH2 0x774 PUSH1 0x5 SWAP11 DUP12 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST SWAP6 DUP2 DUP2 ADD SWAP2 PUSH2 0xFC0 PUSH2 0xD20 PUSH2 0xFBA DUP6 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x933 JUMP JUMPDEST EQ PUSH2 0x10F2 JUMPI PUSH1 0x40 ADD MLOAD TIMESTAMP LT PUSH2 0x10C7 JUMPI SWAP2 PUSH2 0x1023 SWAP2 PUSH2 0xFDF PUSH2 0x1027 SWAP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP12 PUSH2 0x100A PUSH2 0xFED PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0xFFE DUP13 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x101C PUSH2 0x1015 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0x15BD JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x109F JUMPI POP SWAP1 PUSH2 0x103E DUP7 PUSH2 0x774 DUP8 PUSH2 0x1043 SWAP6 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x1056 DUP3 DUP7 PUSH2 0x1051 DUP7 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xB36 PUSH2 0x108C PUSH2 0x1086 PUSH32 0x70FEC9C7F21F70099818A4619C69AF3A4677031E67ACEA18286C0ECA3A754BCE SWAP6 PUSH2 0x693 JUMP JUMPDEST SWAP6 PUSH2 0x693 JUMP JUMPDEST SWAP6 PUSH2 0x1096 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0xA69 SWAP2 POP PUSH2 0x10B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH2 0xA69 SWAP2 POP PUSH2 0x10E0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x995309B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH2 0xA69 SWAP2 POP PUSH2 0x110C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xD16B833 PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1130 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1151 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1172 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3B4F091F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x1192 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x11BA PUSH2 0x11B4 PUSH2 0x630 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x653 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x1227 PUSH1 0x4 SWAP3 PUSH2 0x1218 PUSH2 0x653 SWAP6 PUSH2 0x11FE PUSH4 0xA9059CBB PUSH2 0x11A1 JUMP JUMPDEST SWAP3 PUSH2 0x1208 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x133B JUMP JUMPDEST PUSH2 0xA14 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x124B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0xDBD PUSH2 0xDC7 JUMP JUMPDEST SWAP1 PUSH2 0x1265 PUSH2 0x1260 DUP4 PUSH2 0x122C JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x1274 PUSH1 0x20 PUSH2 0x1253 JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x630 PUSH2 0x126A JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x63E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x12CE JUMPI PUSH2 0x12AD JUMP JUMPDEST PUSH2 0x12D6 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x12AD JUMP JUMPDEST ISZERO PUSH2 0x12E2 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x653 SWAP2 PUSH2 0x134B PUSH2 0x135A SWAP3 PUSH2 0x693 JUMP JUMPDEST SWAP1 PUSH2 0x1354 PUSH2 0x129D JUMP JUMPDEST SWAP2 PUSH2 0x1398 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1369 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x1378 JUMPI JUMPDEST POP PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x1392 SWAP2 POP PUSH1 0x20 PUSH2 0x1387 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x12BA JUMP JUMPDEST CODESIZE PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x630 SWAP3 SWAP2 PUSH2 0x13A7 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST SWAP2 PUSH2 0x1428 JUMP JUMPDEST ISZERO PUSH2 0x13B4 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1418 RETURNDATASIZE PUSH2 0x1253 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x630 SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x143A PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x1451 PUSH2 0x1447 ADDRESS PUSH2 0x693 JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x1463 PUSH2 0x1409 JUMP JUMPDEST SWAP2 PUSH2 0x14B6 JUMP JUMPDEST ISZERO PUSH2 0x1470 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x14EB JUMPI POP POP DUP2 MLOAD PUSH2 0x14D1 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST EQ PUSH2 0x14DA JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x14E6 PUSH2 0x630 SWAP2 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x653 SWAP3 POP PUSH2 0x157A JUMP JUMPDEST EXTCODESIZE PUSH2 0x1506 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x152A JUMPI POP GT PUSH2 0x1523 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x1560 PUSH2 0xDBD PUSH1 0x20 SWAP4 PUSH2 0xA14 SWAP4 PUSH2 0x1554 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x150A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x630 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP2 POP PUSH2 0x1584 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1591 PUSH2 0xD20 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST GT ISZERO PUSH2 0x15A0 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA69 SWAP3 POP PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x15DC SWAP3 SWAP4 PUSH2 0xD20 SWAP3 PUSH2 0x15D8 SWAP3 PUSH2 0x15D2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x162E JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0xD94 JUMPI ADD SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x1617 JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x161F PUSH2 0x15F0 JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x630 DUP2 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x1638 PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x166E JUMPI PUSH2 0x1662 PUSH2 0x1668 SWAP2 PUSH2 0x165C PUSH2 0x1657 DUP8 DUP8 DUP8 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1624 JUMP JUMPDEST SWAP1 PUSH2 0x1675 JUMP JUMPDEST SWAP4 PUSH2 0x15E0 JUMP JUMPDEST SWAP3 PUSH2 0x163A JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1690 JUMPI SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x630 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH2 0x16B0 PUSH2 0x624 PUSH1 0x7 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO SWAP1 DUP2 PUSH2 0x16DB JUMPI JUMPDEST POP PUSH2 0x16D1 JUMPI PUSH2 0x653 SWAP1 PUSH2 0x1730 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1192 JUMP JUMPDEST SWAP1 POP PUSH2 0x16ED PUSH2 0xA84 PUSH2 0x624 PUSH1 0x9 PUSH2 0x9C0 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x16C3 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x653 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 PUSH2 0x630 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1716 JUMPI PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x171E PUSH2 0x61E JUMP JUMPDEST PUSH2 0x16F5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x173A PUSH1 0x0 PUSH2 0x933 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B6 JUMPI PUSH2 0x1817 PUSH2 0x1755 PUSH2 0x1750 PUSH1 0x6 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH2 0x175E DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP3 PUSH4 0x70A08231 SWAP4 PUSH2 0x176E ADDRESS PUSH2 0x693 JUMP JUMPDEST SWAP2 PUSH2 0x1778 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x1783 DUP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x18A9 JUMPI JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x187F JUMPI JUMPDEST POP SWAP2 PUSH2 0x17C2 DUP5 SWAP3 PUSH2 0x17FD SWAP6 PUSH1 0x20 SWAP6 CALLER SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x17E6 PUSH2 0x17CF PUSH1 0x6 PUSH2 0x9C0 JUMP JUMPDEST SWAP8 PUSH2 0x17D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1872 JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x1854 JUMPI JUMPDEST POP PUSH2 0xD71 JUMP JUMPDEST SWAP1 PUSH2 0x184F PUSH2 0x1845 PUSH32 0xF1FA0256E6ECBA08316EB890D662830768E73136B5B0DBEA4C9C8C16CA1747EB SWAP3 PUSH2 0x693 JUMP JUMPDEST SWAP3 PUSH2 0x237 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x186C SWAP2 POP PUSH2 0x1863 RETURNDATASIZE DUP3 PUSH2 0xDDE JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x1702 JUMP JUMPDEST CODESIZE PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x187A PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP2 SWAP6 POP DUP5 SWAP3 PUSH2 0x17FD SWAP6 PUSH2 0x189C PUSH2 0x17C2 SWAP4 PUSH2 0x1863 RETURNDATASIZE DUP3 PUSH2 0xDDE JUMP JUMPDEST SWAP8 SWAP4 SWAP6 POP POP SWAP3 SWAP5 POP PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x18B1 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH2 0x653 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1227 SWAP1 PUSH2 0x1218 PUSH2 0x653 SWAP6 PUSH1 0x4 SWAP6 PUSH2 0x1909 PUSH4 0x23B872DD PUSH2 0x11A1 JUMP JUMPDEST SWAP4 PUSH2 0x1913 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x18C9 JUMP JUMPDEST SWAP2 SWAP1 CALLER PUSH2 0x1933 PUSH2 0x624 PUSH1 0x7 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO SWAP1 DUP2 PUSH2 0x1961 JUMPI JUMPDEST POP PUSH2 0x1954 JUMPI PUSH2 0x653 SWAP3 PUSH2 0x1987 JUMP JUMPDEST POP POP POP POP PUSH2 0x1192 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1971 PUSH2 0xA84 PUSH2 0x624 PUSH2 0x9CA JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x1946 JUMP JUMPDEST SWAP1 PUSH2 0xDB6 PUSH2 0x630 PUSH2 0xADE SWAP3 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x1998 PUSH2 0x624 DUP6 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x1A54 JUMPI PUSH2 0x19B0 DUP5 PUSH2 0x933 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A37 JUMPI PUSH2 0x1A00 PUSH1 0x2 SWAP5 PUSH2 0x19D0 TIMESTAMP PUSH2 0x19CA PUSH1 0xA PUSH2 0x6BB JUMP JUMPDEST SWAP1 PUSH2 0xD88 JUMP JUMPDEST SWAP6 DUP7 SWAP2 PUSH2 0x19ED DUP6 PUSH2 0x19E5 PUSH2 0x630 DUP11 PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST SWAP3 DUP4 ADD PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x19FA DUP7 PUSH1 0x1 DUP4 ADD PUSH2 0x1979 JUMP JUMPDEST ADD PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x184F PUSH2 0x1A2D PUSH32 0x9CA93988E299D8264919A188C320F8D8EFA97E1976A234F3C6C42315FC10B4E0 SWAP5 PUSH2 0x693 JUMP JUMPDEST SWAP5 PUSH2 0x5BA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1A45 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9DD854D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1A62 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x653 SWAP3 SWAP2 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1A88 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x3 SWAP1 PUSH2 0x1A98 PUSH2 0xFA2 DUP3 DUP5 PUSH2 0x69C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x1AA5 DUP3 PUSH2 0x933 JUMP JUMPDEST DUP5 EQ PUSH2 0x1B02 JUMPI PUSH2 0x103E DUP4 PUSH2 0x1ABB PUSH2 0x1AC1 SWAP5 PUSH2 0x933 JUMP JUMPDEST SWAP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1AD5 DUP3 PUSH2 0x1ACE DUP4 PUSH2 0x693 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x184F PUSH2 0x1845 PUSH32 0x9DC46F23CFB5DDCAD0AE7EA2BE38D47FEC07BB9382EC7E564EFC69E036DD66CE SWAP3 PUSH2 0x693 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1151 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B25 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B43 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1C1C JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B61 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B7F PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x1B8C PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1BE1 JUMPI PUSH2 0x1BA6 DUP2 PUSH1 0x8 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0xDFE91DCAD2ADCB1ECD18D2E830B469081211D6743C1E2DFA893836431FB78794 SWAP2 PUSH2 0x693 JUMP JUMPDEST SWAP1 PUSH2 0x1BDA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x184F JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1C0A PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1D2D JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x1BFE JUMP JUMPDEST PUSH2 0x1C29 PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1C6D JUMPI PUSH2 0x1C43 DUP2 PUSH1 0x6 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0x2FFAE89A4970D1FF9BF1A765B00D7EEE23CD328CDAAAB85B7CE9E5379C1ECE32 SWAP2 PUSH2 0x693 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1C84 PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1BE1 JUMPI PUSH2 0x1C9E DUP2 PUSH1 0x9 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0x5326C5EBDDD2FEAFB723C3B63CC83FB32A9C8DD7D05476832B798D9782BAD878 SWAP2 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x1CD5 PUSH2 0x624 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1D19 JUMPI PUSH2 0x1CEF DUP2 PUSH1 0x7 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1BD0 PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH2 0x693 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xCCEA9E6F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1D38 PUSH2 0x630 PUSH2 0x940 JUMP JUMPDEST DUP2 LT PUSH2 0x1D77 JUMPI PUSH2 0x1D49 DUP2 PUSH1 0xA PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0xCBF PUSH32 0x676DC704F22DDAB12A141690A96616EF0128413803C63394ABA7FFE658681A16 SWAP2 PUSH2 0x237 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x67E00A07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP11 0x4F BALANCE ORIGIN 0x24 0x4F SSTORE 0xC3 JUMPDEST 0xFB PUSH31 0x8209D5F82CFD6E1D0A80C8C3E1720944EBB5CB286C6578706572696D656E74 PUSH2 0x6CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"472:10160:23:-:0;;;;;;;;;-1:-1:-1;472:10160:23;;:::i;:::-;-1:-1:-1;472:10160:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;472:10160:23;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;472:10160:23;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;472:10160:23;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;1040:41::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;472:10160::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;1166:62::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;472:10160::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;1554:34::-;;;;;:::i;472:10160::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;1430:28::-;;;;;:::i;1320:23::-;;;;;:::i;928:48::-;;;;;;;;;:::i;1263:27::-;;;;;:::i;472:10160::-;;;;;;;759:54;806:7;;;:::i;759:54::-;;;:::i;661:45::-;697:9;;;:::i;661:45::-;;;:::i;472:10160::-;;;;;;;;;;;;;;;;:::i;840:40::-;;;;;;;;;:::i;:::-;;:::i;712:41::-;746:7;;;:::i;712:41::-;;;:::i;1372:22::-;;;;;:::i;472:10160::-;;;;;;;;;;:::i;1201:85:2:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;472:10160:23:-;;;;;;;;;;;:::i;1824:101:2:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;472:10160:23:-;;;:::o;:::-;;;;:::o;:::-;-1:-1:-1;472:10160:23;;-1:-1:-1;;;472:10160:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:2;1414:68;1422:7;;:::i;:::-;:23;;734:10:11;1433:12:2;655:96:11;1422:23:2;;-1:-1:-1;;;;;472:10160:23;;;1422:23:2;;1414:68;:::i;847:99:3:-;926:13;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;472:10160:23:-;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1139:178:3:-;1228:24;;;;:::i;:::-;1292:7;;:::i;:::-;1267:43;;;;;;:::i;:::-;;;:::i;:::-;;;472:10160:23;;;;1267:43:3;;;;;;;1139:178::o;:::-;;;;:::i;472:10160:23:-;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;2518:6:2;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;472:10160:23:-;;;;:::o;:::-;-1:-1:-1;472:10160:23;;-1:-1:-1;;;472:10160:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;472:10160:23;;;;;;;1734:212:3;1932:6;734:10:11;1825:78:3;1833:14;;:::i;:::-;:24;-1:-1:-1;;;;;472:10160:23;;1833:24:3;472:10160:23;1833:24:3;;1825:78;:::i;472:10160:23:-;;;;;;;;;;;;;;;;;;;;:::i;3653:109::-;3697:10;3688:27;3711:4;3688:20;3697:10;3688:8;:20;:::i;:::-;:27;:::i;:::-;3731:24;;;;472:10160;;;;3731:24;;;;3653:109::o;3816:::-;3861:10;3852:28;3875:5;3852:20;3861:10;3852:8;:20;:::i;:28::-;3896:22;;;;472:10160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;-1:-1:-1;;472:10160:23;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;;472:10160:23;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;472:10160:23;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;472:10160:23;;;;4449:1454;;;;4658:10;:21;;4672:7;;;:::i;4658:21::-;;;4654:56;;4744:1;4736:10;4724:22;4736:10;;;:::i;4724:22::-;-1:-1:-1;;;;;472:10160:23;;4724:22;4720:56;;4790:12;;;:::i;:::-;;;4786:47;;4847:14;4854:7;;:::i;4847:14::-;;;4843:46;;4963:28;4964:14;;;;;:::i;:::-;4982:9;;:::i;:::-;4963:28;;:::i;:::-;5025:19;5054:34;5025:19;;;;:::i;:::-;5054:13;:34;:21;:13;;:21;:::i;:::-;:34;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5122:7;:15;5099:38;5122:15;;;;:::i;:::-;5099:38;:::i;:::-;5172:7;:35;:7;:25;;:7;:15;:7;:15;;;:::i;:25::-;;:::i;:35::-;5222:17;;;;;:22;;:17;;472:10160;;;5222:17;:22;;:::i;:::-;;5218:63;;5295:15;;472:10160;5313:15;-1:-1:-1;5291:69:23;;5498:17;5424:176;5498:17;;5423:177;5498:17;472:10160;;;5498:17;5543:42;;;;472:10160;;;;5543:42;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;5533:53;;;472:10160;;;5533:53;;472:10160;;;;5533:53;;5424:176;;:::i;:::-;5423:177;;472:10160;5423:177;5406:233;;5708:15;;:25;:15;;;:42;:15;;:::i;:25::-;:42;:::i;:::-;5800:13;5761:14;;;;;:::i;:::-;5800:13;:::i;:::-;5830:66;;;;;;:::i;:::-;;;:::i;:::-;;;472:10160;;;;5830:66;;;;;;:::i;5406:233::-;5618:21;;;;;;;;;;;;472:10160;;;;5618:21;-1:-1:-1;;;5618:21:23;;;;;;;;472:10160;5291:69;5337:23;;;;;;;;;;;;;;;472:10160;;;;5337:23;-1:-1:-1;;;5337:23:23;;;;;;;;472:10160;5218:63;5253:28;;;;;;;;;;;;;;;;472:10160;;;;5253:28;-1:-1:-1;;;5253:28:23;;;;;;;;472:10160;4843:46;4870:19;;;;;;;;;;472:10160;;;;4870:19;-1:-1:-1;;;4870:19:23;;;;472:10160;4786:47;4811:22;;;;;;;;;;472:10160;;;;4811:22;-1:-1:-1;;;4811:22:23;;;;472:10160;4720:56;4755:21;;;;;;;;;;472:10160;;;;4755:21;-1:-1:-1;;;4755:21:23;;;;472:10160;4654:56;4688:22;;;;;;;;;472:10160;;;;4688:22;-1:-1:-1;;;4688:22:23;;;;472:10160;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;472:10160:23;;;;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;;;;;;;941:175:9;1050:58;;941:175;1050:58;;941:175;1073:23;:14;:23;:::i;:::-;1050:58;;472:10160:23;;;;1050:58:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;472:10160:23:-;;;;;;;;;;;-1:-1:-1;;472:10160:23;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;472:10160:23;;-1:-1:-1;;;472:10160:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;472:10160:23;;;;;;;5196:642:9;5720:111;5196:642;5641:14;:69;5196:642;5641:14;:::i;:::-;:69;;;:::i;:::-;;;:::i;:::-;472:10160:23;;5728:22:9;;5749:1;5728:22;:::i;:::-;;:56;;;;;5196:642;5720:111;;:::i;5728:56::-;5754:30;;;;;;472:10160:23;;;5754:30:9;;;;;;;;:::i;:::-;5728:56;;;4108:223:10;4272:52;;4108:223;4272:52;4308:1;4272:52;:::i;:::-;;;:::i;472:10160:23:-;;;;:::o;:::-;-1:-1:-1;472:10160:23;;-1:-1:-1;;;472:10160:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;472:10160:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;5165:446:10:-;;5487:31;5535:69;5165:446;;;;5330:12;472:10160:23;;;5330:12:10;5370:4;5354:81;5362:13;5370:4;5362:13;:::i;:::-;:30;;:21;:30;;5354:81;:::i;:::-;5487:31;;;;;;;;;;;:::i;:::-;5535:69;;:::i;472:10160:23:-;;;;:::o;:::-;-1:-1:-1;472:10160:23;;-1:-1:-1;;;472:10160:23;;;;;;;;;;;;;;;;;;;;7671:628:10;;;472:10160:23;7875:418:10;;;;-1:-1:-1;;472:10160:23;;7906:22:10;;7927:1;7906:22;:::i;:::-;;7902:286;;8201:17;;:::o;7902:286::-;8121:18;8113:60;8121:18;;:::i;:::-;8113:60;:::i;7875:418::-;8269:12;;;;;;;:::i;1412:320::-;1702:19;:23;;1724:1;1702:23;:::i;:::-;;1412:320;:::o;472:10160:23:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;8821:540:10:-;;;8980:17;;472:10160:23;;;8980:17:10;:21;;9000:1;8980:21;:::i;:::-;;8976:379;;;9152:142;;;;;;;8976:379;472:10160:23;;9324:20:10;;-1:-1:-1;;;;9324:20:10;;472:10160:23;;;9324:20:10;;;;:::i;1411:172:13:-;1535:41;1411:172;;1535:41;1411:172;1535:33;1411:172;1512:4;472:10160:23;;;1512:4:13;1535:33;;:::i;:::-;:41;472:10160:23;;1535:41:13;;1411:172;:::o;472:10160:23:-;;;-1:-1:-1;;472:10160:23;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;2331:300:13:-;2485:13;2497:1;2485:13;:::i;:::-;2480:116;2518:3;2504:12;2500:16;;;;;2552:33;2518:3;2576:8;;;;;;;:::i;:::-;;:::i;:::-;2552:33;;:::i;:::-;2518:3;;:::i;:::-;2485:13;;;2500:16;;;;;2331:300;:::o;9205:147::-;9294:5;;;:51;;;9302:20;;;472:10160:23;;;;;;;;;9294:51:13;9325:20;;9494:119;;;;;;;9358:261;:::o;2899:167:23:-;2952:10;:22;2966:8;;;:::i;2952:22::-;-1:-1:-1;;;;;472:10160:23;;2952:22;;:53;;;;2899:167;2948:100;;;3058:1;;;:::i;2948:100::-;-1:-1:-1;;472:10160:23;;3026:22;472:10160;2952:53;2992:13;;2978:27;;2992:13;;;:::i;2978:27::-;;;2952:53;;;472:10160;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;-1:-1:-1;472:10160:23;;;;;;;;;6051:463;6156:12;6167:1;6156:12;:::i;:::-;;;6152:47;;6451:46;6225:20;6232:12;;;:::i;:::-;6225:20;:::i;:::-;6280:15;;;:::i;:::-;;;6304:4;6296:13;6304:4;6296:13;:::i;:::-;6280:30;;472:10160;;;;6280:30;;;;472:10160;;;;6280:30;;;-1:-1:-1;;;;;472:10160:23;;6280:30;;;472:10160;6280:30;;472:10160;6280:30;;;;;;;;;6051:463;6280:30;;;;6051:463;6344:10;;6371:7;6344:10;;6451:30;6344:10;6451:30;6344:10;;6371:7;;:::i;:::-;6451:30;6425:12;;;:::i;:::-;6451:30;;472:10160;;;;6451:30;;;;;;;;472:10160;;;;6451:30;;;-1:-1:-1;;;;;472:10160:23;6451:30;;;472:10160;;;;;;6451:30;;;;;;;;;;6051:463;6451:30;;;;6051:463;6451:46;;:::i;:::-;6395:112;;;;;;:::i;:::-;;;472:10160;;;;6395:112;;;;6051:463::o;6451:30::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;6280;6451;6280;;;;;;6451;6280;;6371:7;6280:30;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;6152:47;-1:-1:-1;;472:10160:23;;6177:22;472:10160;6051:463;;;;:::i;472:10160::-;-1:-1:-1;;;;;472:10160:23;;;;;;;;;;;;;;;;;;;;;;1355:203:9;;1482:68;1355:203;1482:68;;1355:203;1482:68;1355:203;1505:27;:18;:27;:::i;:::-;1482:68;;472:10160:23;;;;1482:68:9;;;;;;;;;;;;:::i;2654:153:23:-;;;2699:10;:22;2713:8;;;:::i;2699:22::-;-1:-1:-1;;;;;472:10160:23;;2699:22;;:47;;;;2654:153;2695:94;;;2799:1;;;:::i;2695:94::-;2767:22;;;;;472:10160;;;;2699:47;2739:7;;2725:21;;2739:7;;:::i;2725:21::-;;;2699:47;;;472:10160;;;;;;;;6777:693;;;6957:1;6949:10;6939:20;6949:10;;;:::i;6939:20::-;-1:-1:-1;;;;;472:10160:23;;6939:20;6935:54;;7003:16;;;:::i;:::-;;;6999:55;;7356:26;:15;7178;:37;:15;7196:19;;;:::i;:::-;7178:37;;:::i;:::-;7249:7;;;7274:31;7249:7;7225:39;7249:15;:7;;:15;:::i;7225:39::-;7274:17;;;:31;:::i;:::-;7315;:17;;;;:31;:::i;:::-;7356:15;:26;:::i;:::-;7398:65;;;;;:::i;:::-;;;472:10160;;;;6999:55;7028:26;;;;;;472:10160;;;;7028:26;-1:-1:-1;;;7028:26:23;;;;472:10160;6935:54;6968:21;;;;;;472:10160;;;;6968:21;-1:-1:-1;;;6968:21:23;;;;472:10160;6777:693;;;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;7659:13:23;:21;;;;;;:::i;:::-;7704:1;;7694:11;;;;:::i;:::-;;;7690:46;;7747:21;:25;;;;;:::i;:::-;:21;;:::i;:25::-;7822:6;7782:14;;;;:::i;:::-;7810:10;7822:6;;:::i;:::-;7845:29;;;;;:::i;7690:46::-;7714:22;;;;;;472:10160;;;;7576:305;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;8081:9:23;7996:102;8081:9;:::i;7996:102::-;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;8317:9:23;8224:110;8317:9;:::i;8224:110::-;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;8568:11:23;8471:116;8568:11;:::i;8471:116::-;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;8777:22:23;8789:10;8797:1;8789:10;:::i;8777:22::-;-1:-1:-1;;;;;472:10160:23;;8777:22;8773:58;;8842:18;;;;:::i;:::-;8876:20;;;;:::i;:::-;;;472:10160;;;;8876:20;;;;472:10160;8773:58;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;8808:23:23;;;;472:10160;8703:200;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;9128:9:23;9021:124;9128:9;:::i;9021:124::-;;;;:::i;9363:209::-;9431:23;9444:10;9452:1;9444:10;:::i;9431:23::-;-1:-1:-1;;;;;472:10160:23;;9431:23;9427:57;;9495:24;;;;:::i;:::-;9535:30;;;;:::i;9427:57::-;-1:-1:-1;;472:10160:23;;9463:21;472:10160;9713:218;9784:25;9799:10;9807:1;9799:10;:::i;9784:25::-;-1:-1:-1;;;;;472:10160:23;;9784:25;9780:61;;9852:27;;;;:::i;:::-;9895:29;;;;:::i;10048:196::-;10112:23;10125:10;10133:1;10125:10;:::i;10112:23::-;-1:-1:-1;;;;;472:10160:23;;10112:23;10108:60;;10179:20;;;;:::i;:::-;10215:22;;;;:::i;10108:60::-;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;10144:24:23;;;;472:10160;10375:255;10450:32;10462:20;;:::i;10450:32::-;;;10446:86;;10543:31;;;;:::i;:::-;10590:33;;;;472:10160;;;;10446:86;-1:-1:-1;;472:10160:23;;-1:-1:-1;;;10503:29:23;;;;472:10160"},"methodIdentifiers":{"FEE_BASIS()":"8686ebcc","MAX_FEE()":"bc063e1a","MINIMUM_ACTIVE_TIMER()":"7fdba5f6","acceptOwnership()":"79ba5097","activeTimerDuration()":"33f642f6","changeActiveTimerDuration(uint256)":"960d264d","changeClaimer(address)":"101cef48","changeDefaultToken(address)":"8e3fb0d3","changeOperator(address)":"06394c9b","changeRewardSwapper(address)":"03aaf08b","claim(address,address,uint256,bytes32[],uint256,address)":"48a61ff5","claimed(address,address)":"0c9cbf0e","claimer()":"d379be23","collectFees(address)":"a480ca79","defaultToken()":"74c13fda","depositReward(uint256)":"1e2720ff","feesCollected(address)":"5b2478ea","isMember(address)":"a230c524","join()":"b688a363","leave()":"d66d9e19","operator()":"570ca735","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","rewardSwapper()":"5512b811","rewards(address)":"0700037d","transferOwnership(address)":"f2fde38b","updateRewardsMetadata(address,bytes32,bytes32)":"0cc630c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardSwapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimerDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardInactive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"BribeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DefaultTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberLeft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"postFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"}],\"name\":\"RewardMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SetActiveTimerDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"SetClaimer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"SetOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardSwapper\",\"type\":\"address\"}],\"name\":\"SetRewardSwapper\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_BASIS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_ACTIVE_TIMER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeTimerDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"changeActiveTimerDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"changeClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"changeDefaultToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSwapper\",\"type\":\"address\"}],\"name\":\"changeRewardSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"activeAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_hashedData\",\"type\":\"bytes32\"}],\"name\":\"updateRewardsMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"changeActiveTimerDuration(uint256)\":{\"params\":{\"_duration\":\"uint256  Timer duration\"}},\"changeClaimer(address)\":{\"params\":{\"_claimer\":\"address  New claimer address\"}},\"changeDefaultToken(address)\":{\"params\":{\"_newToken\":\"address  New default token address\"}},\"changeOperator(address)\":{\"params\":{\"_operator\":\"address  New operator address\"}},\"changeRewardSwapper(address)\":{\"params\":{\"_newSwapper\":\"address  New reward swapper address\"}},\"claim(address,address,uint256,bytes32[],uint256,address)\":{\"details\":\"Can only be called by the claimer contract\",\"params\":{\"_account\":\"address    Account to claim rewards\",\"_amount\":\"uint256    Amount of rewards to claim\",\"_fee\":\"uint256    Claim fee\",\"_merkleProof\":\"bytes32[]  Merkle proof of the claim\",\"_receiver\":\"address    Receiver of the rewards\",\"_token\":\"address    Token to claim rewards\"}},\"collectFees(address)\":{\"params\":{\"_token\":\"address  Token to collect fees\"}},\"depositReward(uint256)\":{\"params\":{\"_amount\":\"uint256  Amount of `defaultToken` to deposit\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"updateRewardsMetadata(address,bytes32,bytes32)\":{\"params\":{\"_hashedData\":\"bytes32  Hashed data of the rewards\",\"_merkleRoot\":\"bytes32  Merkle root of the rewards\",\"_token\":\"address  Token to update rewards metadata\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"InvalidAmount()\":[{\"notice\":\"invalid input amount\"}],\"InvalidClaim()\":[{\"notice\":\"claim does not exist\"}],\"InvalidDistribution()\":[{\"notice\":\"distribution does not exist\"}],\"InvalidFee()\":[{\"notice\":\"invalid fee\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"invalid merkle root\"}],\"InvalidOperator()\":[{\"notice\":\"Invalid operator address\"}],\"InvalidProof()\":[{\"notice\":\"merkle proof is invalid\"}],\"InvalidTimerDuration()\":[{\"notice\":\"timer duration is invalid\"}],\"InvalidToken()\":[{\"notice\":\"token is address(0)\"}],\"NotAuthorized()\":[{\"notice\":\"not authorized\"}],\"RewardInactive()\":[{\"notice\":\"reward is not yet active for claiming\"}]},\"kind\":\"user\",\"methods\":{\"changeActiveTimerDuration(uint256)\":{\"notice\":\"Set the active timer duration\"},\"changeClaimer(address)\":{\"notice\":\"Change claimer address\"},\"changeDefaultToken(address)\":{\"notice\":\"Change the `defaultToken`\"},\"changeOperator(address)\":{\"notice\":\"Change the operator\"},\"changeRewardSwapper(address)\":{\"notice\":\"Change the RewardSwapper contract\"},\"claim(address,address,uint256,bytes32[],uint256,address)\":{\"notice\":\"Claim rewards based on the specified metadata\"},\"collectFees(address)\":{\"notice\":\"Collect fees\"},\"depositReward(uint256)\":{\"notice\":\"Deposit `defaultToken` to this contract\"},\"join()\":{\"notice\":\"Join the harvester to enable claiming rewards in default token\"},\"leave()\":{\"notice\":\"Leave harvester\"},\"updateRewardsMetadata(address,bytes32,bytes32)\":{\"notice\":\"Update rewards metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardHarvester.sol\":\"RewardHarvester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/RewardHarvester.sol\":{\"keccak256\":\"0x5947a1f2164a86584f3dc53a6fcd1f5657bc462eb550b1fd04f83fd1aaaf4456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e464f36f27b7cf36529d5ddef2c20c9603ebf2be7b335115413af2800f88e6\",\"dweb:/ipfs/Qmes1WkZdJAhuJALv9DzdqxSA4ucj2SkAzLsB3eeidHTnw\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/RewardHarvesterClaim.sol":{"RewardHarvesterClaim":{"abi":[{"inputs":[{"internalType":"address","name":"_harvester","type":"address"},{"internalType":"uint256","name":"_fee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidFee","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"SetFee","type":"event"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32[]","name":"_merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvester","outputs":[{"internalType":"contract RewardHarvester","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_uint256_fromMemory":{"entryPoint":257,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint256_fromMemory":{"entryPoint":242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":160,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":185,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_MAX_FEE":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":535,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_Ownable":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"constructor_Ownable2Step":{"entryPoint":627,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":595,"id":791,"parameterSlots":0,"returnSlots":0},"constructor_RewardHarvesterClaim":{"entryPoint":424,"id":8768,"parameterSlots":2,"returnSlots":0},"convert_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_RewardHarvester":{"entryPoint":413,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":369,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":353,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":519,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_RewardHarvester":{"entryPoint":402,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":380,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_RewardHarvesterClaim":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":2},"extract_from_storage_value_offsett_address":{"entryPoint":734,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":111,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":801,"id":500,"parameterSlots":1,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_setFee":{"entryPoint":913,"id":8832,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":709,"id":561,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":88,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":745,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":82,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":695,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":639,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":547,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":757,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":665,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":773,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":563,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":200,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":235,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a06040523462000042575b62000020620000196200013a565b90620001a8565b604051610a6162000409823960805181818161023a01526108340152610a6190f35b6200004c62000052565b6200000b565b50600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200009157604052565b6200009b62000058565b604052565b90620000b7620000af60405190565b92836200006f565b565b6001600160a01b031690565b90565b6001600160a01b0381165b14156200005257565b90505190620000b782620000c8565b80620000d3565b90505190620000b782620000eb565b9190620000c5906040848203126200012a575b620001208185620000dc565b93602001620000f2565b6200013462000052565b62000114565b6200015d62000e6a803803806200015181620000a0565b92833981019062000101565b9091565b620000b9620000c5620000c59290565b620000c59062000161565b620000c590620000b9906001600160a01b031682565b620000c5906200017c565b620000c59062000192565b90620001b362000253565b620001c3620000b9600062000171565b6001600160a01b03831614620001eb57620001e2620000b7926200019d565b60805262000391565b505050620001f860405190565b63e6c4247b60e01b8152600490fd5b620000c5620000c5620000c59290565b620000c5600162000207565b90600019905b9181191691161790565b9062000247620000c56200024f9262000207565b825462000223565b9055565b6200025d62000273565b620000b76200026b62000217565b600262000233565b620000b78033620002c5565b916001600160a01b0360089290920291821b911b62000229565b9190620002ae620000c56200024f936200019d565b9083546200027f565b620000b79160009162000299565b620000b790620002d860006001620002b7565b62000321565b620000c590620000b9565b620000c59054620002de565b906001600160a01b039062000229565b9062000319620000c56200024f926200019d565b8254620002f5565b6200032d6000620002e9565b906200033b81600062000305565b620003726200036b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936200019d565b916200019d565b916200037d60405190565b600090a3565b620000c5620186a062000207565b6200039f620000c562000383565b8111620003f457620003b381600362000233565b620003ef7e172ddfc5ae88d08b3de01a5a187667c37a5a53989e8c175055cb6c993792a791620003e260405190565b9182918290815260200190565b0390a1565b50506040516358d620b360e01b8152600490fdfe60806040526004361015610018575b61001661026c565b005b60003560e01c80634bdaeac11461021f5780636a1db1bf146101f8578063715018a6146101d157806379ba5097146101aa5780638da5cb5b14610180578063bc063e1a14610156578063ddca3f431461011b578063e30c3978146100e5578063f2fde38b146100be5763fabed412146100905761000e565b346100b1575b6100166100a43660046103f0565b939290926108d0565b0390f35b6100b961026c565b610096565b50346100d8575b6100166100d3366004610383565b6105df565b6100e061026c565b6100c5565b503461010e575b6100f7366004610272565b6100ad61010261053d565b6040519182918261031a565b61011661026c565b6100ec565b5034610149575b61012d366004610272565b6100ad610138610361565b6040515b9182918290815260200190565b61015161026c565b610122565b5034610173575b610168366004610272565b6100ad610138610343565b61017b61026c565b61015d565b503461019d575b610192366004610272565b6100ad610102610472565b6101a561026c565b610187565b50346101c4575b6101bc366004610272565b6100166106e3565b6101cc61026c565b6101b1565b50346101eb575b6101e3366004610272565b6100166104b4565b6101f361026c565b6101d8565b5034610212575b61001661020d3660046102f0565b6109b2565b61021a61026c565b6101ff565b503461025f575b610231366004610272565b604051806100ad7f0000000000000000000000000000000000000000000000000000000000000000826102c9565b61026761026c565b610226565b50600080fd5b600091031261027d57565b61028561026c565b565b61029b9061029e906001600160a01b031682565b90565b6001600160a01b031690565b61029b90610287565b61029b906102aa565b6102c5906102b3565b9052565b60208101929161028591906102bc565b805b141561026c57565b90503590610285826102d9565b9061029b91602081830312610304576102e3565b61030c61026c565b6102e3565b6102c59061029e565b6020810192916102859190610311565b61029b61029b61029b9290565b61029b620186a061032a565b61029b610337565b61029b916008021c81565b9061029b915461034b565b61029b60006003610356565b6102db8161029e565b905035906102858261036d565b9061029b9160208183031261039757610376565b61039f61026c565b610376565b909182601f830112156103e3575b602082359267ffffffffffffffff84116103d6575b01926020830284011161027d57565b6103de61026c565b6103c7565b6103eb61026c565b6103b2565b608081830312610452575b6104058282610376565b926104416104168460208501610376565b9361042481604086016102e3565b9360608101359067ffffffffffffffff8211610445575b016103a4565b9091565b61044d61026c565b61043b565b61045a61026c565b6103fb565b61029b9061029e565b61029b905461045f565b61029b6000610468565b61048461051a565b6102856104a2565b61029e61029b61029b9290565b61029b9061048c565b6102856104af6000610499565b610626565b61028561047c565b0190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b156104fc57565b5060405162461bcd60e51b815280610516600482016104c0565b0390fd5b610285610525610472565b6105376105313361029e565b9161029e565b146104f5565b61029b6001610468565b6102859061055361051a565b610588565b906001600160a01b03905b9181191691161790565b9061057d61029b610584926102b3565b8254610558565b9055565b61059381600161056d565b61059b610472565b906105cf6105c97f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700936102b3565b916102b3565b916105d960405190565b600090a3565b61028590610547565b916001600160a01b0360089290920291821b911b610563565b919061061261029b610584936102b3565b9083546105e8565b61028591600091610601565b610285906106366000600161061a565b6106406000610468565b9061064c81600061056d565b6105cf6105c97f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936102b3565b60208082526029908201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206040820152683732bb9037bbb732b960b91b606082015260800190565b156106c957565b5060405162461bcd60e51b81528061051660048201610679565b610285336104af6106f261053d565b6106fe6105318461029e565b146106c2565b9061071994939291610714610960565b61081f565b610285610992565b61029b9081565b61029b9054610721565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761076b57604052565b610773610732565b604052565b90826000939282370152565b8183526020926104bc919084019384936001600160fb1b0381116107ac575b02938491610778565b6107b461026c565b6107a3565b92906102859698979560a0956107f6610803946107ef61080b976107e560c08b019760008c0190610311565b60208a0190610311565b6040880152565b8583036060870152610784565b966080830152565b0190610311565b506040513d6000823e3d90fd5b916000809461088d84610882949895986108587f00000000000000000000000000000000000000000000000000000000000000006102b3565b966348a61ff5946108696003610728565b92893b156108c3575b6040519c8d9b8c9a8b9960e01b90565b8952600489016107b9565b03925af180156108b6575b61089f5750565b610285906108ad3d82610749565b3d810190610272565b6108be610812565b610898565b6108cb61026c565b610872565b9061028594939291610704565b61029b600261032a565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b1561092557565b5060405162461bcd60e51b815280610516600482016108e7565b9060001990610563565b9061095961029b6105849261032a565b825461093f565b61028561096d6002610728565b6109816109786108dd565b9182141561091e565b6002610949565b61029b600161032a565b610285610981610988565b610285906109a961051a565b610285906109bb565b6102859061099d565b6109c661029b610337565b8111610a09576109d7816003610949565b610a047e172ddfc5ae88d08b3de01a5a187667c37a5a53989e8c175055cb6c993792a79161013c60405190565b0390a1565b50506040516358d620b360e01b8152600490fdfea36469706673582212207878ebdf1a1e3cbdb95fd88252ccdd98fa84fd7f76be2977a4b4d8e056caade16c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x42 JUMPI JUMPDEST PUSH3 0x20 PUSH3 0x19 PUSH3 0x13A JUMP JUMPDEST SWAP1 PUSH3 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA61 PUSH3 0x409 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x23A ADD MSTORE PUSH2 0x834 ADD MSTORE PUSH2 0xA61 SWAP1 RETURN JUMPDEST PUSH3 0x4C PUSH3 0x52 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x91 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x9B PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH3 0xB7 PUSH3 0xAF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x6F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST EQ ISZERO PUSH3 0x52 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xB7 DUP3 PUSH3 0xC8 JUMP JUMPDEST DUP1 PUSH3 0xD3 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xB7 DUP3 PUSH3 0xEB JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0xC5 SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH3 0x12A JUMPI JUMPDEST PUSH3 0x120 DUP2 DUP6 PUSH3 0xDC JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH3 0xF2 JUMP JUMPDEST PUSH3 0x134 PUSH3 0x52 JUMP JUMPDEST PUSH3 0x114 JUMP JUMPDEST PUSH3 0x15D PUSH3 0xE6A DUP1 CODESIZE SUB DUP1 PUSH3 0x151 DUP2 PUSH3 0xA0 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x101 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH3 0xB9 PUSH3 0xC5 PUSH3 0xC5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xC5 SWAP1 PUSH3 0x161 JUMP JUMPDEST PUSH3 0xC5 SWAP1 PUSH3 0xB9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xC5 SWAP1 PUSH3 0x17C JUMP JUMPDEST PUSH3 0xC5 SWAP1 PUSH3 0x192 JUMP JUMPDEST SWAP1 PUSH3 0x1B3 PUSH3 0x253 JUMP JUMPDEST PUSH3 0x1C3 PUSH3 0xB9 PUSH1 0x0 PUSH3 0x171 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH3 0x1EB JUMPI PUSH3 0x1E2 PUSH3 0xB7 SWAP3 PUSH3 0x19D JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH3 0x391 JUMP JUMPDEST POP POP POP PUSH3 0x1F8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0xC5 PUSH3 0xC5 PUSH3 0xC5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xC5 PUSH1 0x1 PUSH3 0x207 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x247 PUSH3 0xC5 PUSH3 0x24F SWAP3 PUSH3 0x207 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x223 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x25D PUSH3 0x273 JUMP JUMPDEST PUSH3 0xB7 PUSH3 0x26B PUSH3 0x217 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x233 JUMP JUMPDEST PUSH3 0xB7 DUP1 CALLER PUSH3 0x2C5 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH3 0x229 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x2AE PUSH3 0xC5 PUSH3 0x24F SWAP4 PUSH3 0x19D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x27F JUMP JUMPDEST PUSH3 0xB7 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x299 JUMP JUMPDEST PUSH3 0xB7 SWAP1 PUSH3 0x2D8 PUSH1 0x0 PUSH1 0x1 PUSH3 0x2B7 JUMP JUMPDEST PUSH3 0x321 JUMP JUMPDEST PUSH3 0xC5 SWAP1 PUSH3 0xB9 JUMP JUMPDEST PUSH3 0xC5 SWAP1 SLOAD PUSH3 0x2DE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x229 JUMP JUMPDEST SWAP1 PUSH3 0x319 PUSH3 0xC5 PUSH3 0x24F SWAP3 PUSH3 0x19D JUMP JUMPDEST DUP3 SLOAD PUSH3 0x2F5 JUMP JUMPDEST PUSH3 0x32D PUSH1 0x0 PUSH3 0x2E9 JUMP JUMPDEST SWAP1 PUSH3 0x33B DUP2 PUSH1 0x0 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x372 PUSH3 0x36B PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x19D JUMP JUMPDEST SWAP2 PUSH3 0x19D JUMP JUMPDEST SWAP2 PUSH3 0x37D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH3 0xC5 PUSH3 0x186A0 PUSH3 0x207 JUMP JUMPDEST PUSH3 0x39F PUSH3 0xC5 PUSH3 0x383 JUMP JUMPDEST DUP2 GT PUSH3 0x3F4 JUMPI PUSH3 0x3B3 DUP2 PUSH1 0x3 PUSH3 0x233 JUMP JUMPDEST PUSH3 0x3EF PUSH31 0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7 SWAP2 PUSH3 0x3E2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BDAEAC1 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBE JUMPI PUSH4 0xFABED412 EQ PUSH2 0x90 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xB1 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F0 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x8D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x96 JUMP JUMPDEST POP CALLVALUE PUSH2 0xD8 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x10E JUMPI JUMPDEST PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x102 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x31A JUMP JUMPDEST PUSH2 0x116 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST POP CALLVALUE PUSH2 0x149 JUMPI JUMPDEST PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x138 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x122 JUMP JUMPDEST POP CALLVALUE PUSH2 0x173 JUMPI JUMPDEST PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x138 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x26C JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST POP CALLVALUE PUSH2 0x19D JUMPI JUMPDEST PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x102 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI JUMPDEST PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x26C JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1EB JUMPI JUMPDEST PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x212 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x26C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST POP CALLVALUE PUSH2 0x25F JUMPI JUMPDEST PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0xAD PUSH32 0x0 DUP3 PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x27D JUMPI JUMP JUMPDEST PUSH2 0x285 PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x29E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x2C5 SWAP1 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST DUP1 JUMPDEST EQ ISZERO PUSH2 0x26C JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x285 DUP3 PUSH2 0x2D9 JUMP JUMPDEST SWAP1 PUSH2 0x29B SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x304 JUMPI PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x26C JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x2C5 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x29B PUSH2 0x29B SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH3 0x186A0 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x337 JUMP JUMPDEST PUSH2 0x29B SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x29B SWAP2 SLOAD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 PUSH1 0x3 PUSH2 0x356 JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x29E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x285 DUP3 PUSH2 0x36D JUMP JUMPDEST SWAP1 PUSH2 0x29B SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x376 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x26C JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3E3 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x3D6 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x27D JUMPI JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x3EB PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x452 JUMPI JUMPDEST PUSH2 0x405 DUP3 DUP3 PUSH2 0x376 JUMP JUMPDEST SWAP3 PUSH2 0x441 PUSH2 0x416 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x376 JUMP JUMPDEST SWAP4 PUSH2 0x424 DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x2E3 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x445 JUMPI JUMPDEST ADD PUSH2 0x3A4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x44D PUSH2 0x26C JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH2 0x45A PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x29B SWAP1 SLOAD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x484 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x285 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x29B PUSH2 0x29B SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x285 PUSH2 0x4AF PUSH1 0x0 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH2 0x285 PUSH2 0x47C JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4FC JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x516 PUSH1 0x4 DUP3 ADD PUSH2 0x4C0 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x285 PUSH2 0x525 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x531 CALLER PUSH2 0x29E JUMP JUMPDEST SWAP2 PUSH2 0x29E JUMP JUMPDEST EQ PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x1 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x553 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x57D PUSH2 0x29B PUSH2 0x584 SWAP3 PUSH2 0x2B3 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x558 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x593 DUP2 PUSH1 0x1 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x59B PUSH2 0x472 JUMP JUMPDEST SWAP1 PUSH2 0x5CF PUSH2 0x5C9 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x2B3 JUMP JUMPDEST SWAP2 PUSH2 0x2B3 JUMP JUMPDEST SWAP2 PUSH2 0x5D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x547 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x563 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x612 PUSH2 0x29B PUSH2 0x584 SWAP4 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x285 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x636 PUSH1 0x0 PUSH1 0x1 PUSH2 0x61A JUMP JUMPDEST PUSH2 0x640 PUSH1 0x0 PUSH2 0x468 JUMP JUMPDEST SWAP1 PUSH2 0x64C DUP2 PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x5CF PUSH2 0x5C9 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x6C9 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x516 PUSH1 0x4 DUP3 ADD PUSH2 0x679 JUMP JUMPDEST PUSH2 0x285 CALLER PUSH2 0x4AF PUSH2 0x6F2 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x531 DUP5 PUSH2 0x29E JUMP JUMPDEST EQ PUSH2 0x6C2 JUMP JUMPDEST SWAP1 PUSH2 0x719 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x714 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x285 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x29B SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x29B SWAP1 SLOAD PUSH2 0x721 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x76B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x773 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH2 0x4BC SWAP2 SWAP1 DUP5 ADD SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x7AC JUMPI JUMPDEST MUL SWAP4 DUP5 SWAP2 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x285 SWAP7 SWAP9 SWAP8 SWAP6 PUSH1 0xA0 SWAP6 PUSH2 0x7F6 PUSH2 0x803 SWAP5 PUSH2 0x7EF PUSH2 0x80B SWAP8 PUSH2 0x7E5 PUSH1 0xC0 DUP12 ADD SWAP8 PUSH1 0x0 DUP13 ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x784 JUMP JUMPDEST SWAP7 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 DUP1 SWAP5 PUSH2 0x88D DUP5 PUSH2 0x882 SWAP5 SWAP9 SWAP6 SWAP9 PUSH2 0x858 PUSH32 0x0 PUSH2 0x2B3 JUMP JUMPDEST SWAP7 PUSH4 0x48A61FF5 SWAP5 PUSH2 0x869 PUSH1 0x3 PUSH2 0x728 JUMP JUMPDEST SWAP3 DUP10 EXTCODESIZE ISZERO PUSH2 0x8C3 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP12 DUP13 SWAP11 DUP12 SWAP10 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x4 DUP10 ADD PUSH2 0x7B9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x8B6 JUMPI JUMPDEST PUSH2 0x89F JUMPI POP JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x8AD RETURNDATASIZE DUP3 PUSH2 0x749 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x8BE PUSH2 0x812 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x8CB PUSH2 0x26C JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST SWAP1 PUSH2 0x285 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x2 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x925 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x516 PUSH1 0x4 DUP3 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x563 JUMP JUMPDEST SWAP1 PUSH2 0x959 PUSH2 0x29B PUSH2 0x584 SWAP3 PUSH2 0x32A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x93F JUMP JUMPDEST PUSH2 0x285 PUSH2 0x96D PUSH1 0x2 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x981 PUSH2 0x978 PUSH2 0x8DD JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x91E JUMP JUMPDEST PUSH1 0x2 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x1 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x285 PUSH2 0x981 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x9A9 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x29B PUSH2 0x337 JUMP JUMPDEST DUP2 GT PUSH2 0xA09 JUMPI PUSH2 0x9D7 DUP2 PUSH1 0x3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0xA04 PUSH31 0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7 SWAP2 PUSH2 0x13C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x78EBDF1A1E3CBDB95FD88252CCDD98FA84FD7F76BE2977A4B4 0xD8 0xE0 JUMP 0xCA 0xAD 0xE1 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"324:2275:24:-:0;;;;;;-1:-1:-1;324:2275:24;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;324:2275:24;;;;;;-1:-1:-1;;;;;324:2275:24;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;324:2275:24;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;324:2275:24;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;324:2275:24;;;;;;;:::i;:::-;;;;:::i;887:197::-;;;;:::i;:::-;947:24;961:10;969:1;961:10;:::i;947:24::-;-1:-1:-1;;;;;324:2275:24;;947:24;943:60;;1026:27;1072:4;1026:27;;:::i;:::-;1014:39;;1072:4;:::i;943:60::-;980:23;;;;324:2275;;;;980:23;-1:-1:-1;;;980:23:24;;;;;324:2275;;;;;;;1676:41:6;1716:1;;;:::i;:::-;;-1:-1:-1;;1716:1:6;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1797:53::-;;;:::i;:::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i;599:1349:3:-;;;734:10:11;955:12:2;:::i;324:2275:24:-;;-1:-1:-1;;;;;324:2275:24;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;1638:8;:::i;324:2275:24:-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;324:2275:24;;1716:1:6;324:2275:24;;;;;;;:::i;:::-;;;;:::i;2426:187:2:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;324:2275:24;;;;2566:40:2;;;;2426:187::o;393:41:24:-;427:7;;;:::i;2433:164::-;2490:17;2500:7;;:::i;2490:17::-;;;2486:49;;2546:13;;;;:::i;:::-;2575:15;;;;324:2275;;;;2575:15;;;;;427:7;;;;;;324:2275;2575:15;;;;2433:164::o;2486:49::-;-1:-1:-1;;324:2275:24;;-1:-1:-1;;;2516:19:24;;;;980:23"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":626,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_array_bytes32_dyn_calldata":{"entryPoint":1008,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":932,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_address":{"entryPoint":899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":785,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_array_bytes32_dyn_calldata_uint256_address":{"entryPoint":1977,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_array_bytes32_dyn_calldata":{"entryPoint":1924,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_contract_RewardHarvester":{"entryPoint":700,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_stringliteral":{"entryPoint":1216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2255":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_RewardHarvester":{"entryPoint":713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":1657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_ebf7":{"entryPoint":2279,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_ENTERED":{"entryPoint":2269,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_FEE":{"entryPoint":823,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":2440,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_RewardHarvester_to_address":{"entryPoint":691,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1164,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":810,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":682,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":647,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":1912,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_dynamict_uint256":{"entryPoint":843,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":1119,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":1825,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1865,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":1574,"id":561,"parameterSlots":1,"returnSlots":0},"fun_acceptOwnership":{"entryPoint":1763,"id":583,"parameterSlots":0,"returnSlots":0},"fun_changeFee":{"entryPoint":2482,"id":8808,"parameterSlots":1,"returnSlots":0},"fun_changeFee_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":1306,"id":443,"parameterSlots":0,"returnSlots":0},"fun_claim":{"entryPoint":2256,"id":8795,"parameterSlots":5,"returnSlots":0},"fun_claim_inner":{"entryPoint":2079,"id":null,"parameterSlots":5,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":2450,"id":825,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":2400,"id":817,"parameterSlots":0,"returnSlots":0},"fun_owner":{"entryPoint":1138,"id":429,"parameterSlots":0,"returnSlots":1},"fun_pendingOwner":{"entryPoint":1341,"id":524,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1204,"id":457,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1186,"id":null,"parameterSlots":0,"returnSlots":0},"fun_setFee":{"entryPoint":2491,"id":8832,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":1503,"id":544,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":1416,"id":null,"parameterSlots":1,"returnSlots":0},"getter_fun_MAX_FEE":{"entryPoint":835,"id":8729,"parameterSlots":0,"returnSlots":1},"getter_fun_fee":{"entryPoint":865,"id":8731,"parameterSlots":0,"returnSlots":1},"getter_fun_harvester":{"entryPoint":null,"id":8734,"parameterSlots":0,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":1796,"id":802,"parameterSlots":5,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":2461,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_447":{"entryPoint":1148,"id":420,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_531":{"entryPoint":1351,"id":420,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":1842,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":854,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":1128,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1832,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1730,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":1269,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ebf7":{"entryPoint":2334,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":620,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2066,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":1562,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":1512,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2367,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":1368,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":1537,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":2377,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":729,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"8734":[{"length":32,"start":570},{"length":32,"start":2100}]},"linkReferences":{},"object":"60806040526004361015610018575b61001661026c565b005b60003560e01c80634bdaeac11461021f5780636a1db1bf146101f8578063715018a6146101d157806379ba5097146101aa5780638da5cb5b14610180578063bc063e1a14610156578063ddca3f431461011b578063e30c3978146100e5578063f2fde38b146100be5763fabed412146100905761000e565b346100b1575b6100166100a43660046103f0565b939290926108d0565b0390f35b6100b961026c565b610096565b50346100d8575b6100166100d3366004610383565b6105df565b6100e061026c565b6100c5565b503461010e575b6100f7366004610272565b6100ad61010261053d565b6040519182918261031a565b61011661026c565b6100ec565b5034610149575b61012d366004610272565b6100ad610138610361565b6040515b9182918290815260200190565b61015161026c565b610122565b5034610173575b610168366004610272565b6100ad610138610343565b61017b61026c565b61015d565b503461019d575b610192366004610272565b6100ad610102610472565b6101a561026c565b610187565b50346101c4575b6101bc366004610272565b6100166106e3565b6101cc61026c565b6101b1565b50346101eb575b6101e3366004610272565b6100166104b4565b6101f361026c565b6101d8565b5034610212575b61001661020d3660046102f0565b6109b2565b61021a61026c565b6101ff565b503461025f575b610231366004610272565b604051806100ad7f0000000000000000000000000000000000000000000000000000000000000000826102c9565b61026761026c565b610226565b50600080fd5b600091031261027d57565b61028561026c565b565b61029b9061029e906001600160a01b031682565b90565b6001600160a01b031690565b61029b90610287565b61029b906102aa565b6102c5906102b3565b9052565b60208101929161028591906102bc565b805b141561026c57565b90503590610285826102d9565b9061029b91602081830312610304576102e3565b61030c61026c565b6102e3565b6102c59061029e565b6020810192916102859190610311565b61029b61029b61029b9290565b61029b620186a061032a565b61029b610337565b61029b916008021c81565b9061029b915461034b565b61029b60006003610356565b6102db8161029e565b905035906102858261036d565b9061029b9160208183031261039757610376565b61039f61026c565b610376565b909182601f830112156103e3575b602082359267ffffffffffffffff84116103d6575b01926020830284011161027d57565b6103de61026c565b6103c7565b6103eb61026c565b6103b2565b608081830312610452575b6104058282610376565b926104416104168460208501610376565b9361042481604086016102e3565b9360608101359067ffffffffffffffff8211610445575b016103a4565b9091565b61044d61026c565b61043b565b61045a61026c565b6103fb565b61029b9061029e565b61029b905461045f565b61029b6000610468565b61048461051a565b6102856104a2565b61029e61029b61029b9290565b61029b9061048c565b6102856104af6000610499565b610626565b61028561047c565b0190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b156104fc57565b5060405162461bcd60e51b815280610516600482016104c0565b0390fd5b610285610525610472565b6105376105313361029e565b9161029e565b146104f5565b61029b6001610468565b6102859061055361051a565b610588565b906001600160a01b03905b9181191691161790565b9061057d61029b610584926102b3565b8254610558565b9055565b61059381600161056d565b61059b610472565b906105cf6105c97f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700936102b3565b916102b3565b916105d960405190565b600090a3565b61028590610547565b916001600160a01b0360089290920291821b911b610563565b919061061261029b610584936102b3565b9083546105e8565b61028591600091610601565b610285906106366000600161061a565b6106406000610468565b9061064c81600061056d565b6105cf6105c97f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936102b3565b60208082526029908201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206040820152683732bb9037bbb732b960b91b606082015260800190565b156106c957565b5060405162461bcd60e51b81528061051660048201610679565b610285336104af6106f261053d565b6106fe6105318461029e565b146106c2565b9061071994939291610714610960565b61081f565b610285610992565b61029b9081565b61029b9054610721565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761076b57604052565b610773610732565b604052565b90826000939282370152565b8183526020926104bc919084019384936001600160fb1b0381116107ac575b02938491610778565b6107b461026c565b6107a3565b92906102859698979560a0956107f6610803946107ef61080b976107e560c08b019760008c0190610311565b60208a0190610311565b6040880152565b8583036060870152610784565b966080830152565b0190610311565b506040513d6000823e3d90fd5b916000809461088d84610882949895986108587f00000000000000000000000000000000000000000000000000000000000000006102b3565b966348a61ff5946108696003610728565b92893b156108c3575b6040519c8d9b8c9a8b9960e01b90565b8952600489016107b9565b03925af180156108b6575b61089f5750565b610285906108ad3d82610749565b3d810190610272565b6108be610812565b610898565b6108cb61026c565b610872565b9061028594939291610704565b61029b600261032a565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b1561092557565b5060405162461bcd60e51b815280610516600482016108e7565b9060001990610563565b9061095961029b6105849261032a565b825461093f565b61028561096d6002610728565b6109816109786108dd565b9182141561091e565b6002610949565b61029b600161032a565b610285610981610988565b610285906109a961051a565b610285906109bb565b6102859061099d565b6109c661029b610337565b8111610a09576109d7816003610949565b610a047e172ddfc5ae88d08b3de01a5a187667c37a5a53989e8c175055cb6c993792a79161013c60405190565b0390a1565b50506040516358d620b360e01b8152600490fdfea36469706673582212207878ebdf1a1e3cbdb95fd88252ccdd98fa84fd7f76be2977a4b4d8e056caade16c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BDAEAC1 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBE JUMPI PUSH4 0xFABED412 EQ PUSH2 0x90 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xB1 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F0 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x8D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x96 JUMP JUMPDEST POP CALLVALUE PUSH2 0xD8 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x10E JUMPI JUMPDEST PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x102 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x31A JUMP JUMPDEST PUSH2 0x116 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST POP CALLVALUE PUSH2 0x149 JUMPI JUMPDEST PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x138 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x122 JUMP JUMPDEST POP CALLVALUE PUSH2 0x173 JUMPI JUMPDEST PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x138 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x26C JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST POP CALLVALUE PUSH2 0x19D JUMPI JUMPDEST PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x102 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI JUMPDEST PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x26C JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1EB JUMPI JUMPDEST PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x212 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x26C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST POP CALLVALUE PUSH2 0x25F JUMPI JUMPDEST PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0xAD PUSH32 0x0 DUP3 PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x27D JUMPI JUMP JUMPDEST PUSH2 0x285 PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x29E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x2C5 SWAP1 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST DUP1 JUMPDEST EQ ISZERO PUSH2 0x26C JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x285 DUP3 PUSH2 0x2D9 JUMP JUMPDEST SWAP1 PUSH2 0x29B SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x304 JUMPI PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x26C JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x2C5 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x29B PUSH2 0x29B SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH3 0x186A0 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x29B PUSH2 0x337 JUMP JUMPDEST PUSH2 0x29B SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x29B SWAP2 SLOAD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 PUSH1 0x3 PUSH2 0x356 JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x29E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x285 DUP3 PUSH2 0x36D JUMP JUMPDEST SWAP1 PUSH2 0x29B SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x397 JUMPI PUSH2 0x376 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x26C JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3E3 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x3D6 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x27D JUMPI JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x3EB PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x452 JUMPI JUMPDEST PUSH2 0x405 DUP3 DUP3 PUSH2 0x376 JUMP JUMPDEST SWAP3 PUSH2 0x441 PUSH2 0x416 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x376 JUMP JUMPDEST SWAP4 PUSH2 0x424 DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x2E3 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x445 JUMPI JUMPDEST ADD PUSH2 0x3A4 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x44D PUSH2 0x26C JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH2 0x45A PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x29B SWAP1 SLOAD PUSH2 0x45F JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x484 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x285 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x29B PUSH2 0x29B SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x29B SWAP1 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x285 PUSH2 0x4AF PUSH1 0x0 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH2 0x285 PUSH2 0x47C JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4FC JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x516 PUSH1 0x4 DUP3 ADD PUSH2 0x4C0 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x285 PUSH2 0x525 PUSH2 0x472 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x531 CALLER PUSH2 0x29E JUMP JUMPDEST SWAP2 PUSH2 0x29E JUMP JUMPDEST EQ PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x1 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x553 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x57D PUSH2 0x29B PUSH2 0x584 SWAP3 PUSH2 0x2B3 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x558 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x593 DUP2 PUSH1 0x1 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x59B PUSH2 0x472 JUMP JUMPDEST SWAP1 PUSH2 0x5CF PUSH2 0x5C9 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x2B3 JUMP JUMPDEST SWAP2 PUSH2 0x2B3 JUMP JUMPDEST SWAP2 PUSH2 0x5D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x547 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x563 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x612 PUSH2 0x29B PUSH2 0x584 SWAP4 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x285 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x636 PUSH1 0x0 PUSH1 0x1 PUSH2 0x61A JUMP JUMPDEST PUSH2 0x640 PUSH1 0x0 PUSH2 0x468 JUMP JUMPDEST SWAP1 PUSH2 0x64C DUP2 PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x5CF PUSH2 0x5C9 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x6C9 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x516 PUSH1 0x4 DUP3 ADD PUSH2 0x679 JUMP JUMPDEST PUSH2 0x285 CALLER PUSH2 0x4AF PUSH2 0x6F2 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x531 DUP5 PUSH2 0x29E JUMP JUMPDEST EQ PUSH2 0x6C2 JUMP JUMPDEST SWAP1 PUSH2 0x719 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x714 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x285 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x29B SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x29B SWAP1 SLOAD PUSH2 0x721 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x76B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x773 PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH2 0x4BC SWAP2 SWAP1 DUP5 ADD SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x7AC JUMPI JUMPDEST MUL SWAP4 DUP5 SWAP2 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x285 SWAP7 SWAP9 SWAP8 SWAP6 PUSH1 0xA0 SWAP6 PUSH2 0x7F6 PUSH2 0x803 SWAP5 PUSH2 0x7EF PUSH2 0x80B SWAP8 PUSH2 0x7E5 PUSH1 0xC0 DUP12 ADD SWAP8 PUSH1 0x0 DUP13 ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x784 JUMP JUMPDEST SWAP7 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x0 DUP1 SWAP5 PUSH2 0x88D DUP5 PUSH2 0x882 SWAP5 SWAP9 SWAP6 SWAP9 PUSH2 0x858 PUSH32 0x0 PUSH2 0x2B3 JUMP JUMPDEST SWAP7 PUSH4 0x48A61FF5 SWAP5 PUSH2 0x869 PUSH1 0x3 PUSH2 0x728 JUMP JUMPDEST SWAP3 DUP10 EXTCODESIZE ISZERO PUSH2 0x8C3 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP12 DUP13 SWAP11 DUP12 SWAP10 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x4 DUP10 ADD PUSH2 0x7B9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x8B6 JUMPI JUMPDEST PUSH2 0x89F JUMPI POP JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x8AD RETURNDATASIZE DUP3 PUSH2 0x749 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x8BE PUSH2 0x812 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x8CB PUSH2 0x26C JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST SWAP1 PUSH2 0x285 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x2 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x925 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x516 PUSH1 0x4 DUP3 ADD PUSH2 0x8E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x563 JUMP JUMPDEST SWAP1 PUSH2 0x959 PUSH2 0x29B PUSH2 0x584 SWAP3 PUSH2 0x32A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x93F JUMP JUMPDEST PUSH2 0x285 PUSH2 0x96D PUSH1 0x2 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x981 PUSH2 0x978 PUSH2 0x8DD JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x91E JUMP JUMPDEST PUSH1 0x2 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x1 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x285 PUSH2 0x981 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x9A9 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x285 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x29B PUSH2 0x337 JUMP JUMPDEST DUP2 GT PUSH2 0xA09 JUMPI PUSH2 0x9D7 DUP2 PUSH1 0x3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0xA04 PUSH31 0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7 SWAP2 PUSH2 0x13C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x58D620B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x78EBDF1A1E3CBDB95FD88252CCDD98FA84FD7F76BE2977A4B4 0xD8 0xE0 JUMP 0xCA 0xAD 0xE1 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"324:2275:24:-:0;;;;;;;;;-1:-1:-1;324:2275:24;;:::i;:::-;-1:-1:-1;324:2275:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;614:42;324:2275;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;;;;;324:2275:24;;;;;;;-1:-1:-1;;;;;324:2275:24;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;393:41;427:7;;;:::i;393:41::-;;;:::i;324:2275::-;;;;;;;;;;;;;;:::i;564:18::-;;;;;:::i;324:2275::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1201:85:2:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;324:2275:24:-;;;;;;;;;;;:::i;1824:101:2:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;324:2275:24:-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;324:2275:24;;-1:-1:-1;;;324:2275:24;;;;;;;;:::i;:::-;;;;1359:130:2;1414:68;1422:7;;:::i;:::-;:23;;734:10:11;1422:23:2;:::i;:::-;;;:::i;:::-;;1414:68;:::i;847:99:3:-;926:13;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;324:2275:24:-;;-1:-1:-1;;;;;324:2275:24;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1139:178:3:-;1228:24;;;;:::i;:::-;1292:7;;:::i;:::-;1267:43;;;;;;:::i;:::-;;;:::i;:::-;;;324:2275:24;;;;1267:43:3;;;;1139:178::o;:::-;;;;:::i;324:2275:24:-;;-1:-1:-1;;;;;324:2275:24;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;2518:6:2;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;324:2275:24:-;;;;;;;;;;;;;;;-1:-1:-1;;;324:2275:24;;;;;;;;;;;;:::o;:::-;-1:-1:-1;324:2275:24;;-1:-1:-1;;;324:2275:24;;;;;;;;:::i;1734:212:3:-;1932:6;734:10:11;1825:78:3;1833:14;;:::i;:::-;:24;;;;:::i;:::-;;1825:78;:::i;2227:103:6:-;;2292:1;2227:103;;;;;;:::i;:::-;2292:1;:::i;:::-;;;:::i;324:2275:24:-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;324:2275:24;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;324:2275:24;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;324:2275:24;;;;;;;;;1602:439;;1963:71;1602:439;;1963:71;1602:439;1963:71;1602:439;;;;1963:15;:9;:15;:::i;:::-;;;2020:3;;;;:::i;:::-;1963:71;;;;;;1602:439;324:2275;;1963:71;;;;;;;324:2275;;;;1963:71;;;;;;;:::i;:::-;;;;;;;;;1602:439;1963:71;;1602:439;:::o;1963:71::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;1602:439;;;;;;;;:::i;1723:37:6:-;1759:1;;;:::i;:::-;;;;;;;;;324:2275:24;1759:1:6;324:2275:24;;;1759:1:6;324:2275:24;;;;1759:1:6;;;;:::o;:::-;-1:-1:-1;324:2275:24;;-1:-1:-1;;;1759:1:6;;;;;;;;:::i;:::-;;-1:-1:-1;;1759:1:6;;324:2275:24;1759:1:6;;;;;;;:::i;:::-;;;;:::i;2336:287::-;2598:18;2468:7;;;:::i;:::-;2460:63;2479:8;;:::i;:::-;2468:19;;;;2460:63;:::i;:::-;2598:18;;:::i;1676:41::-;1716:1;;;:::i;2629:209::-;2809:22;2819:12;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;2212:7:24;2139:88;2212:7;:::i;2139:88::-;;;;:::i;2433:164::-;2490:17;2500:7;;:::i;2490:17::-;;;2486:49;;2546:13;;;;:::i;:::-;2575:15;;;;324:2275;;;;2575:15;;;;2433:164::o;2486:49::-;-1:-1:-1;;324:2275:24;;-1:-1:-1;;;2516:19:24;;;;324:2275"},"methodIdentifiers":{"MAX_FEE()":"bc063e1a","acceptOwnership()":"79ba5097","changeFee(uint256)":"6a1db1bf","claim(address,address,uint256,bytes32[])":"fabed412","fee()":"ddca3f43","harvester()":"4bdaeac1","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_harvester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvester\",\"outputs\":[{\"internalType\":\"contract RewardHarvester\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"changeFee(uint256)\":{\"params\":{\"_newFee\":\"uint256  New fee to set\"}},\"claim(address,address,uint256,bytes32[])\":{\"details\":\"Currently only perform direct claiming for this version\",\"params\":{\"_account\":\"address    Account to claim rewards\",\"_amount\":\"uint256    Amount of rewards to claim\",\"_merkleProof\":\"bytes32[]  Merkle proof of the claim\",\"_token\":\"address    Token to claim rewards\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"InvalidFee()\":[{\"notice\":\"invalid fee\"}]},\"kind\":\"user\",\"methods\":{\"changeFee(uint256)\":{\"notice\":\"Change fee\"},\"claim(address,address,uint256,bytes32[])\":{\"notice\":\"Claim rewards based on the specified metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardHarvesterClaim.sol\":\"RewardHarvesterClaim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/RewardHarvester.sol\":{\"keccak256\":\"0x5947a1f2164a86584f3dc53a6fcd1f5657bc462eb550b1fd04f83fd1aaaf4456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e464f36f27b7cf36529d5ddef2c20c9603ebf2be7b335115413af2800f88e6\",\"dweb:/ipfs/Qmes1WkZdJAhuJALv9DzdqxSA4ucj2SkAzLsB3eeidHTnw\"]},\"contracts/RewardHarvesterClaim.sol\":{\"keccak256\":\"0x3cd19deb215f1a84424a0960e361705eb5aa49c87963ab52d4924c12ac4bdb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff959ed941b6beed1709a35370112ce6778c03654001db11b3c331e4cb52932d\",\"dweb:/ipfs/QmbFJEDuZ1e7ZSCr4EqoiECriMojVo9bmMtyc2CpdLFTfL\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/RewardSwapper.sol":{"RewardSwapper":{"abi":[{"inputs":[{"internalType":"address","name":"_rewardDistributor","type":"address"},{"internalType":"address","name":"_rewardHarvester","type":"address"},{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"DeadlineBreach","type":"error"},{"inputs":[],"name":"ExchangeDataArrayMismatch","type":"error"},{"inputs":[],"name":"ExternalCallFailure","type":"error"},{"inputs":[],"name":"InsufficientReturn","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidArray","type":"error"},{"inputs":[],"name":"NotAuthorized","type":"error"},{"inputs":[],"name":"TransferFromCall","type":"error"},{"inputs":[],"name":"ZeroExpectedReturns","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"BribeTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"SetOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"rewardDistributor","type":"address"}],"name":"SetRewardDistributor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"rewardHarvester","type":"address"}],"name":"SetRewardHarvester","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"name":"changeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_distributor","type":"address"}],"name":"changeRewardDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_harvester","type":"address"}],"name":"changeRewardHarvester","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"rwIdentifier","type":"bytes32"},{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"uint256","name":"toAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address[]","name":"callees","type":"address[]"},{"internalType":"uint256[]","name":"callLengths","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"exchangeData","type":"bytes"},{"internalType":"bytes32[]","name":"rwMerkleProof","type":"bytes32[]"}],"internalType":"struct Common.ClaimAndSwapData[]","name":"_claimSwapData","type":"tuple[]"}],"name":"claimSwapAndDepositReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"operator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardDistributor","outputs":[{"internalType":"contract IRewardDistributor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardHarvester","outputs":[{"internalType":"contract IRewardHarvester","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_address_fromMemory":{"entryPoint":218,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":144,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_Ownable":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"constructor_Ownable2Step":{"entryPoint":373,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_RewardSwapper":{"entryPoint":330,"id":8918,"parameterSlots":3,"returnSlots":0},"convert_address_to_address":{"entryPoint":449,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardDistributor_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardHarvester_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":714,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":698,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":438,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":416,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_RewardSwapper":{"entryPoint":290,"id":null,"parameterSlots":0,"returnSlots":3},"extract_from_storage_value_offsett_address":{"entryPoint":533,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":95,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":600,"id":500,"parameterSlots":1,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_setOperator":{"entryPoint":725,"id":9173,"parameterSlots":1,"returnSlots":0},"fun_setRewardDistributor":{"entryPoint":950,"id":9231,"parameterSlots":1,"returnSlots":0},"fun_setRewardHarvester":{"entryPoint":851,"id":9202,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":508,"id":561,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":72,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":66,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":494,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":385,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":460,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":572,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_IRewardDistributor_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_IRewardHarvester_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":184,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000032575b620000206200001962000122565b916200014a565b604051611dea6200041a8239611dea90f35b6200003c62000042565b6200000b565b50600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200008157604052565b6200008b62000048565b604052565b90620000a76200009f60405190565b92836200005f565b565b6001600160a01b031690565b90565b6001600160a01b03811614156200004257565b90505190620000a782620000b8565b909160608284031262000112575b620000b5620000f88484620000cb565b93620001088160208601620000cb565b93604001620000cb565b6200011c62000042565b620000e8565b620001456200220480380380620001398162000090565b928339810190620000da565b909192565b620000a79291620001696200016f926200016362000175565b620003b6565b62000353565b620002d5565b620000a78033620001fc565b916001600160a01b0360089290920291821b911b5b9181191691161790565b620000b590620000a9906001600160a01b031682565b620000b590620001a0565b620000b590620001b6565b9190620001e1620000b5620001ea93620001c1565b90835462000181565b9055565b620000a791600091620001cc565b620000a7906200020f60006001620001ee565b62000258565b620000b590620000a9565b620000b5905462000215565b906001600160a01b039062000196565b9062000250620000b5620001ea92620001c1565b82546200022c565b62000264600062000220565b90620002728160006200023c565b620002a9620002a27f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093620001c1565b91620001c1565b91620002b460405190565b600090a3565b620000a9620000b5620000b59290565b620000b590620002ba565b620002e5620000a96000620002ca565b6001600160a01b038216146200033f57620003028160046200023c565b6200032e7fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91620001c1565b906200033960405190565b600090a2565b505060405163e6c4247b60e01b8152600490fd5b62000363620000a96000620002ca565b6001600160a01b038216146200033f576200038a6200038282620001c1565b60036200023c565b6200032e7f04c6985b6bcdff2e07f21d65fe227c4afaa9769e02b23c2a32c0e8a66fc707f891620001c1565b620003c6620000a96000620002ca565b6001600160a01b038216146200033f57620003ed620003e582620001c1565b60026200023c565b6200032e7f07011b0b15512f533140457fca55819676a0497d4afe5c3d7a3524d951a0c4c891620001c156fe60806040526004361015610018575b6100166102b2565b005b60003560e01c806227edb11461028a57806306394c9b1461026357806328f59f051461023c578063570ca73514610212578063715018a6146101eb57806379ba5097146101c45780638da5cb5b1461019a578063a10843ec14610173578063acc2166a14610149578063b966b68314610113578063e30c3978146100cf5763f2fde38b146100a55761000e565b346100c2575b6100166100b9366004610384565b6105b8565b0390f35b6100ca6102b2565b6100ab565b5034610106575b6100e13660046103a5565b6100be6100ec610516565b604051918291826001600160a01b03909116815260200190565b61010e6102b2565b6100d6565b503461013c575b6101253660046103a5565b6100be61013061042a565b6040519182918261041a565b6101446102b2565b61011a565b5034610166575b61015b3660046103a5565b6100be6101306103df565b61016e6102b2565b610150565b503461018d575b610016610188366004610384565b611896565b6101956102b2565b61017a565b50346101b7575b6101ac3660046103a5565b6100be6100ec610449565b6101bf6102b2565b6101a1565b50346101de575b6101d63660046103a5565b6100166106b1565b6101e66102b2565b6101cb565b5034610205575b6101fd3660046103a5565b61001661048b565b61020d6102b2565b6101f2565b503461022f575b6102243660046103a5565b6100be6100ec6103cf565b6102376102b2565b610219565b5034610256575b610016610251366004610384565b6118b4565b61025e6102b2565b610243565b503461027d575b610016610278366004610384565b611878565b6102856102b2565b61026a565b50346102a5575b61001661029f36600461030e565b90611353565b6102ad6102b2565b610291565b50600080fd5b909182601f83011215610301575b602082359267ffffffffffffffff84116102f4575b0192602083028401116102ea57565b6102f26102b2565b565b6102fc6102b2565b6102db565b6103096102b2565b6102c6565b9061033791602081830312610348575b80359067ffffffffffffffff821161033b575b016102b8565b9091565b6103436102b2565b610331565b6103506102b2565b61031e565b6001600160a01b031690565b90565b6001600160a01b0381165b14156102b257565b905035906102f282610364565b906103619160208183031261039857610377565b6103a06102b2565b610377565b60009103126102ea57565b610361916008021c6001600160a01b031690565b9061036191546103b0565b610361600060046103c4565b9052565b610361600060026103c4565b61036190610355906001600160a01b031682565b610361906103eb565b610361906103ff565b6103db90610408565b6020810192916102f29190610411565b610361600060036103c4565b61036190610355565b6103619054610436565b610361600061043f565b61045b6104ec565b6102f2610479565b6103556103616103619290565b61036190610463565b6102f26104866000610470565b6105ff565b6102f2610453565b0190565b1561049e57565b5060405162461bcd60e51b8152806104e8600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6102f26104f7610449565b61051061050333610355565b916001600160a01b031690565b14610497565b610361600161043f565b6102f29061052c6104ec565b610561565b906001600160a01b03905b9181191691161790565b9061055661036161055d92610408565b8254610531565b9055565b61056c816001610546565b610574610449565b906105a86105a27f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270093610408565b91610408565b916105b260405190565b600090a3565b6102f290610520565b916001600160a01b0360089290920291821b911b61053c565b91906105eb61036161055d93610408565b9083546105c1565b6102f2916000916105da565b6102f29061060f600060016105f3565b610619600061043f565b90610625816000610546565b6105a86105a27f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610408565b1561065957565b5060405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b6102f2336104866106c0610516565b6106d26001600160a01b038416610503565b14610652565b90336106ea610503610355600461043f565b14156106f9576102f291610eaa565b50505061070560405190565b63ea8e4eb560e01b8152600490fd5b6103616103616103619290565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761076457604052565b61076c61072b565b604052565b905051906102f282610364565b906103619160208183031261079257610771565b61079a6102b2565b610771565b506040513d6000823e3d90fd5b8061036f565b905051906102f2826107ac565b90610361916020818303126107d3576107b2565b6107db6102b2565b6107b2565b906102f26107ed60405190565b9283610742565b6020809167ffffffffffffffff811161080c57020190565b61081461072b565b020190565b9061082b610826836107f4565b6107e0565b918252565b61036160806107e0565b610842610830565b600080825260208201819052604082015260608082015290565b61036161083a565b60005b82811061087357505050565b60209061087e61085c565b8184015201610867565b906102f261089e61089884610819565b936107f4565b601f190160208401610864565b50634e487b7160e01b600052603260045260246000fd5b90359061015e1936829003018212156108d9570190565b6104936102b2565b90610361926020918110156108fa575b028101906108c2565b6109026108ab565b6108f1565b35610361816107ac565b906020809161091e845190565b81101561092c575b02010190565b6109346108ab565b610926565b903590601e19368290030182121561097f575b01602081359167ffffffffffffffff8311610972575b019160208202360383136102ea57565b61097a6102b2565b610962565b6109876102b2565b61094c565b905035906102f2826107ac565b909291926109a9610826826107f4565b93818552602080860192028301928184116109e7575b915b8383106109ce5750505050565b602080916109dc848661098c565b8152019201916109c1565b6109ef6102b2565b6109bf565b610361913691610999565b90610a1f610a18610a0e845190565b8084529260200190565b9260200190565b9060005b818110610a305750505090565b909192610a4d610a466001928651815260200190565b9460200190565b929101610a23565b805182526020808201516001600160a01b031690830152610361916080810191606090610a8760408201516040850152565b01519060608184039101526109ff565b9061036191610a55565b90610ab7610aad835190565b8083529160200190565b9081610ac96020830284019460200190565b926000915b838310610add57505050505090565b90919293946020610b00610af983856001950387528951610a97565b9760200190565b9301930191939290610ace565b602080825261036192910190610aa1565b90929192610b2e610826826107f4565b9381855260208086019202830192818411610b6c575b915b838310610b535750505050565b60208091610b618486610377565b815201920191610b46565b610b746102b2565b610b44565b906103619181601f82011215610b95575b602081359101610b1e565b610b9d6102b2565b610b8a565b90929192610bb2610826826107f4565b9381855260208086019202830192818411610bf0575b915b838310610bd75750505050565b60208091610be5848661098c565b815201920191610bca565b610bf86102b2565b610bc8565b906103619181601f82011215610c19575b602081359101610ba2565b610c216102b2565b610c0e565b61049360209167ffffffffffffffff8111610c4557601f01601f191690565b61072161072b565b90826000939282370152565b9291906102f291610c6c61082683610c26565b94828652602086019183820111610c8257610c4d565b610c8a6102b2565b610c4d565b906103619181601f82011215610cab575b602081359101610c59565b610cb36102b2565b610ca0565b906103619181601f82011215610cd4575b602081359101610999565b610cdc6102b2565b610cc9565b9190610e1d9061016084820312610e59575b610cfe6101606107e0565b936000610d0b838361098c565b908601526020610d1d83828401610377565b908601526040610d2f83828401610377565b908601526060610d418382840161098c565b908601526080610d538382840161098c565b9086015260a0610d658382840161098c565b90860152610d898260c083013567ffffffffffffffff8111610e4c575b8301610b79565b60c0860152610dae8260e083013567ffffffffffffffff8111610e3f575b8301610bfd565b60e0860152610dd38261010083013567ffffffffffffffff8111610e3f578301610bfd565b610100860152610dfa8261012083013567ffffffffffffffff8111610e32575b8301610c8f565b6101208601526101408101359067ffffffffffffffff8211610e25575b01610cb8565b610140830152565b610e2d6102b2565b610e17565b610e3a6102b2565b610df3565b610e476102b2565b610da7565b610e546102b2565b610d82565b610e616102b2565b610cf3565b610361903690610ce1565b50634e487b7160e01b600052601160045260246000fd5b90610e92565b9190565b90818110610e9e570390565b610ea6610e71565b0390565b90919060009083610eba83610714565b811461133657610f11610ef26020610eda610ed5600361043f565b610408565b6374c13fda90610ee960405190565b93849260e01b90565b825260049082905afa908115611329575b60009161130b575b50610408565b92610f1b84610408565b916370a0823195610f2b30610408565b93610f3560405190565b96610f408960e01b90565b88526001600160a01b0386166004890152602088602481855afa9788156112fe575b6000986112e7575b50610f7484610888565b976000998a5b8c8782101561103557908b6110288260606110208f8f8f8983610fe961100d946020610fd96110309f8e610fd4898f9a610fc490610fbe6110189f8e9788916108e1565b01610907565b90610fcf8585610911565b510152565b610911565b5101906001600160a01b03169052565b6110088a6040610fcf866110028c610fbe838a8a6108e1565b93610911565b6108e1565b610140810190610939565b939095610911565b5101926109f4565b905260010190565b610f7a565b5050919397989961108187611097939598979c611055610ed5600261043f565b611076836356853398833b156112da575b6040519687958694859360e01b90565b835260048301610b0d565b03925af180156112cd575b6112b9575b5090505b895b8110156110cf576110c8816110c16110bc6110b78f95611097968f6108e1565b610e66565b6119f9565b5060010190565b9050611095565b5090919396506111ae959850611125929497506110f56110ee60405190565b9160e01b90565b81526001600160a01b03881660048201526020816024818a5afa9081156112ac575b600091611297575b50610e88565b94602061114e63dd62ed3e61116d611140610ed5600361043f565b604051958694859460e01b90565b84526001600160a01b0390811660048501521660248301526044820190565b0381885afa90811561128a575b60009161126c575b50851161124d575b50611198610ed5600361043f565b631e2720ff90803b15611240575b604051610ee9565b825260048201869052602490829084905af18015611233575b611216575b506112116111fa7ff1fa0256e6ecba08316eb890d662830768e73136b5b0dbea4c9c8c16ca1747eb92610408565b9261120460405190565b9182918290815260200190565b0390a2565b61122d906112243d82610742565b3d8101906103a5565b386111cc565b61123b61079f565b6111c7565b6112486102b2565b6111a6565b6112669061125e610ed5600361043f565b83199161140c565b3861118a565b611284915061127b3d82610742565b3d8101906107bf565b38611182565b61129261079f565b61117a565b6112a6915061127b3d82610742565b3861111f565b6112b461079f565b611117565b6112c7906112243d82610742565b38611091565b6112d561079f565b61108c565b6112e26102b2565b611066565b6112f791985061127b3d82610742565b9638610f6a565b61130661079f565b610f62565b611323915061131a3d82610742565b3d81019061077e565b38610f0b565b61133161079f565b610f03565b505050505061134460405190565b631ec5aa5160e01b8152600490fd5b906102f2916106d8565b1561136457565b5060405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b6113e26113dc6103619263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b0390911681526040810192916102f29160200152565b61146f6004926114606102f29561143960008461142882610714565b8414918215611474575b505061135d565b61144663095ea7b36113c9565b9261145060405190565b96879460208601908152016113ef565b60208201810382520383610742565b6115e1565b909150602061148289610408565b63dd62ed3e9061114e61149430610408565b926114ae6114a160405190565b9788958694859460e01b90565b03915afa9182156114f6575b6000926114d7575b50610e8e6114cf91610714565b148438611432565b6114cf9192506114ee610e8e9161127b3d82610742565b9291506114c2565b6114fe61079f565b6114ba565b9061082b61082683610c26565b61151a6020611503565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b610361611510565b80151561036f565b905051906102f28261154b565b906103619160208183031261157457611553565b61157c6102b2565b611553565b1561158857565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6102f2916115f161160092610408565b906115fa611543565b9161163e565b805161160f610e8e6000610714565b1490811561161e575b50611581565b6116389150602061162d825190565b818301019101611560565b38611618565b610361929161164d6000610714565b916116ce565b1561165a57565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d156116c9576116be3d611503565b903d6000602084013e565b606090565b906000610361949381926116e0606090565b506116f76116ed30610408565b8390311015611653565b60208101905191855af16117096116af565b9161175c565b1561171657565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9192606091156117915750508151611777610e8e6000610714565b14611780575090565b61178c6103619161179e565b61170f565b9093926102f29250611820565b3b6117ac610e8e6000610714565b1190565b918091926000905b8282106117d05750116117c9575050565b6000910152565b915080602091830151818601520182916117b8565b611806610721602093610493936117fa815190565b80835293849260200190565b958691016117b0565b6020808252610361929101906117e5565b915061182a825190565b611837610e8e6000610714565b11156118465750805190602001fd5b6040516104e8925062461bcd60e51b81529182916004830161180f565b6102f29061186f6104ec565b6102f2906118bd565b6102f290611863565b6102f29061188d6104ec565b6102f290611933565b6102f290611881565b6102f2906118ab6104ec565b6102f29061198c565b6102f29061189f565b6118ca6103556000610470565b6001600160a01b0382161461191f576118e4816004610546565b61190e7fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91610408565b9061191860405190565b8080611211565b505060405163e6c4247b60e01b8152600490fd5b6119406103556000610470565b6001600160a01b0382161461191f5761196261195b82610408565b6003610546565b61190e7f04c6985b6bcdff2e07f21d65fe227c4afaa9769e02b23c2a32c0e8a66fc707f891610408565b6119996103556000610470565b6001600160a01b0382161461191f576119bb6119b482610408565b6002610546565b61190e7f07011b0b15512f533140457fca55819676a0497d4afe5c3d7a3524d951a0c4c891610408565b811981116119f1570190565b610493610e71565b60c0810180515160009392909160e0820192611a1a610e8e61036186515190565b1480611d61575b155b611d445760a08201514211611d27576080820193611a3f855190565b600090611a4e610e8e83610714565b14611d085761012084015191611a6384515190565b96611a6d83610714565b8814611cf6576323b872dd60e01b926040870190611a96610ed58084516001600160a01b031690565b916370a0823190611aa630610408565b926020611ab260405190565b8096611abe8660e01b90565b82526001600160a01b038716600483015260249082905afa948515611ce9575b600095611cca575b509b611afb611af6829f9e610714565b9d9190565b811015611bee57611b1160208e018a01516113e2565b6001600160e01b0319898116911614611bc857611b7a611b768a8f8f908f918f611b6588611b69611b6582610100611b5d611b5083611b709951610911565b516001600160a01b031690565b990151610911565b5190565b9351610911565b92611d89565b1590565b611ba2578d9c818d5190611b8d91610911565b51611b97916119e5565b90600101909c611afb565b5050505050505050505050505050611bb960405190565b639db50ff160e01b8152600490fd5b5050505050505050505050505050611bdf60405190565b6399df362b60e01b8152600490fd5b50909550611c4e9b50611c37949a50611c20939950610ed592985060209750610ed5919650516001600160a01b031690565b91611c2a60405190565b9889948593849360e01b90565b83526001600160a01b031660048301526024820190565b03915afa938415611cbd575b600094611c96575b50610e8e610361611c76611c7b9387610e88565b935190565b10611c8257565b50506040516308c613a960e41b8152600490fd5b611c7b919450610361611c76611cb3610e8e9361127b3d82610742565b9693505050611c62565b611cc561079f565b611c5a565b611afb919550611ce1611af69161127b3d82610742565b959150611ae6565b611cf161079f565b611ade565b50505050505050505061134460405190565b50505050505050611d1860405190565b637817658f60e11b8152600490fd5b5050505050611d3560405190565b63096e447160e21b8152600490fd5b5050505050611d5260405190565b637f53694f60e11b8152600490fd5b50611a23611d6e82515190565b611d81610e8e6103616101008701515190565b149050611a21565b906000949392611d97600090565b506020604051950101915af19056fea36469706673582212209d24f7a63290f453fed126fadc6d6b5a55c957de75ea6892b3b2bae17adef79c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x32 JUMPI JUMPDEST PUSH3 0x20 PUSH3 0x19 PUSH3 0x122 JUMP JUMPDEST SWAP2 PUSH3 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DEA PUSH3 0x41A DUP3 CODECOPY PUSH2 0x1DEA SWAP1 RETURN JUMPDEST PUSH3 0x3C PUSH3 0x42 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x8B PUSH3 0x48 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH3 0xA7 PUSH3 0x9F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EQ ISZERO PUSH3 0x42 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xA7 DUP3 PUSH3 0xB8 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH3 0x112 JUMPI JUMPDEST PUSH3 0xB5 PUSH3 0xF8 DUP5 DUP5 PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH3 0x108 DUP2 PUSH1 0x20 DUP7 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH3 0xCB JUMP JUMPDEST PUSH3 0x11C PUSH3 0x42 JUMP JUMPDEST PUSH3 0xE8 JUMP JUMPDEST PUSH3 0x145 PUSH3 0x2204 DUP1 CODESIZE SUB DUP1 PUSH3 0x139 DUP2 PUSH3 0x90 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH3 0xA7 SWAP3 SWAP2 PUSH3 0x169 PUSH3 0x16F SWAP3 PUSH3 0x163 PUSH3 0x175 JUMP JUMPDEST PUSH3 0x3B6 JUMP JUMPDEST PUSH3 0x353 JUMP JUMPDEST PUSH3 0x2D5 JUMP JUMPDEST PUSH3 0xA7 DUP1 CALLER PUSH3 0x1FC JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x1A0 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x1B6 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x1E1 PUSH3 0xB5 PUSH3 0x1EA SWAP4 PUSH3 0x1C1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x181 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xA7 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x1CC JUMP JUMPDEST PUSH3 0xA7 SWAP1 PUSH3 0x20F PUSH1 0x0 PUSH1 0x1 PUSH3 0x1EE JUMP JUMPDEST PUSH3 0x258 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 SLOAD PUSH3 0x215 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x196 JUMP JUMPDEST SWAP1 PUSH3 0x250 PUSH3 0xB5 PUSH3 0x1EA SWAP3 PUSH3 0x1C1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x22C JUMP JUMPDEST PUSH3 0x264 PUSH1 0x0 PUSH3 0x220 JUMP JUMPDEST SWAP1 PUSH3 0x272 DUP2 PUSH1 0x0 PUSH3 0x23C JUMP JUMPDEST PUSH3 0x2A9 PUSH3 0x2A2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x1C1 JUMP JUMPDEST SWAP2 PUSH3 0x1C1 JUMP JUMPDEST SWAP2 PUSH3 0x2B4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH3 0xA9 PUSH3 0xB5 PUSH3 0xB5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x2BA JUMP JUMPDEST PUSH3 0x2E5 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x33F JUMPI PUSH3 0x302 DUP2 PUSH1 0x4 PUSH3 0x23C JUMP JUMPDEST PUSH3 0x32E PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH3 0x1C1 JUMP JUMPDEST SWAP1 PUSH3 0x339 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0x363 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x33F JUMPI PUSH3 0x38A PUSH3 0x382 DUP3 PUSH3 0x1C1 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x23C JUMP JUMPDEST PUSH3 0x32E PUSH32 0x4C6985B6BCDFF2E07F21D65FE227C4AFAA9769E02B23C2A32C0E8A66FC707F8 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST PUSH3 0x3C6 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x33F JUMPI PUSH3 0x3ED PUSH3 0x3E5 DUP3 PUSH3 0x1C1 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x23C JUMP JUMPDEST PUSH3 0x32E PUSH32 0x7011B0B15512F533140457FCA55819676A0497D4AFE5C3D7A3524D951A0C4C8 SWAP2 PUSH3 0x1C1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x27EDB1 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x28F59F05 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xA10843EC EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xACC2166A EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xB966B683 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xCF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xC2 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST POP CALLVALUE PUSH2 0x106 JUMPI JUMPDEST PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xEC PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI JUMPDEST PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0x130 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x41A JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST POP CALLVALUE PUSH2 0x166 JUMPI JUMPDEST PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0x130 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x16E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B7 JUMPI JUMPDEST PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xEC PUSH2 0x449 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DE JUMPI JUMPDEST PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI JUMPDEST PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x20D PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22F JUMPI JUMPDEST PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xEC PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST POP CALLVALUE PUSH2 0x256 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST POP CALLVALUE PUSH2 0x27D JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A5 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x30E JUMP JUMPDEST SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x2F4 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x2EA JUMPI JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x2B2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x309 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST SWAP1 PUSH2 0x337 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x348 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x33B JUMPI JUMPDEST ADD PUSH2 0x2B8 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x343 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x350 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x2B2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x364 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x398 JUMPI PUSH2 0x377 JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2EA JUMPI JUMP JUMPDEST PUSH2 0x361 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 SLOAD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH1 0x2 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x355 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x3DB SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH1 0x3 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x361 SWAP1 SLOAD PUSH2 0x436 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x45B PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x355 PUSH2 0x361 PUSH2 0x361 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x486 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x453 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x49E JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x4E8 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0x4F7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x510 PUSH2 0x503 CALLER PUSH2 0x355 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x497 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x52C PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x556 PUSH2 0x361 PUSH2 0x55D SWAP3 PUSH2 0x408 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x531 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x56C DUP2 PUSH1 0x1 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x574 PUSH2 0x449 JUMP JUMPDEST SWAP1 PUSH2 0x5A8 PUSH2 0x5A2 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x408 JUMP JUMPDEST SWAP2 PUSH2 0x408 JUMP JUMPDEST SWAP2 PUSH2 0x5B2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x520 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x53C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5EB PUSH2 0x361 PUSH2 0x55D SWAP4 PUSH2 0x408 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x2F2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x60F PUSH1 0x0 PUSH1 0x1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x619 PUSH1 0x0 PUSH2 0x43F JUMP JUMPDEST SWAP1 PUSH2 0x625 DUP2 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x5A2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x408 JUMP JUMPDEST ISZERO PUSH2 0x659 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F2 CALLER PUSH2 0x486 PUSH2 0x6C0 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x6D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x503 JUMP JUMPDEST EQ PUSH2 0x652 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x6EA PUSH2 0x503 PUSH2 0x355 PUSH1 0x4 PUSH2 0x43F JUMP JUMPDEST EQ ISZERO PUSH2 0x6F9 JUMPI PUSH2 0x2F2 SWAP2 PUSH2 0xEAA JUMP JUMPDEST POP POP POP PUSH2 0x705 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x361 PUSH2 0x361 PUSH2 0x361 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x764 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x76C PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x364 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x792 JUMPI PUSH2 0x771 JUMP JUMPDEST PUSH2 0x79A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x36F JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x7D3 JUMPI PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST SWAP1 PUSH2 0x2F2 PUSH2 0x7ED PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x80C JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x814 PUSH2 0x72B JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x82B PUSH2 0x826 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x361 PUSH1 0x80 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x842 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x873 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x87E PUSH2 0x85C JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x867 JUMP JUMPDEST SWAP1 PUSH2 0x2F2 PUSH2 0x89E PUSH2 0x898 DUP5 PUSH2 0x819 JUMP JUMPDEST SWAP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x864 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH2 0x15E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x8D9 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x493 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP3 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x8FA JUMPI JUMPDEST MUL DUP2 ADD SWAP1 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x902 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x361 DUP2 PUSH2 0x7AC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0x91E DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x92C JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x934 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x97F JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x972 JUMPI JUMPDEST ADD SWAP2 PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT PUSH2 0x2EA JUMPI JUMP JUMPDEST PUSH2 0x97A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH2 0x987 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x9A9 PUSH2 0x826 DUP3 PUSH2 0x7F4 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x9E7 JUMPI JUMPDEST SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x9CE JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9DC DUP5 DUP7 PUSH2 0x98C JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x9EF PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST PUSH2 0x361 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x999 JUMP JUMPDEST SWAP1 PUSH2 0xA1F PUSH2 0xA18 PUSH2 0xA0E DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA30 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA4D PUSH2 0xA46 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xA23 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x361 SWAP2 PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x60 SWAP1 PUSH2 0xA87 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH2 0xA55 JUMP JUMPDEST SWAP1 PUSH2 0xAB7 PUSH2 0xAAD DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xAC9 PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xADD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xB00 PUSH2 0xAF9 DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xA97 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x361 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xB2E PUSH2 0x826 DUP3 PUSH2 0x7F4 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xB6C JUMPI JUMPDEST SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xB53 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xB61 DUP5 DUP7 PUSH2 0x377 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xB74 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xB95 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xB1E JUMP JUMPDEST PUSH2 0xB9D PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xBB2 PUSH2 0x826 DUP3 PUSH2 0x7F4 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xBF0 JUMPI JUMPDEST SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xBD7 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xBE5 DUP5 DUP7 PUSH2 0x98C JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xC19 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xC21 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x493 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC45 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x72B JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2F2 SWAP2 PUSH2 0xC6C PUSH2 0x826 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 DUP4 DUP3 ADD GT PUSH2 0xC82 JUMPI PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xC8A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xCAB JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xCD4 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0x999 JUMP JUMPDEST PUSH2 0xCDC PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xE1D SWAP1 PUSH2 0x160 DUP5 DUP3 SUB SLT PUSH2 0xE59 JUMPI JUMPDEST PUSH2 0xCFE PUSH2 0x160 PUSH2 0x7E0 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH2 0xD0B DUP4 DUP4 PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH2 0xD1D DUP4 DUP3 DUP5 ADD PUSH2 0x377 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 PUSH2 0xD2F DUP4 DUP3 DUP5 ADD PUSH2 0x377 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x60 PUSH2 0xD41 DUP4 DUP3 DUP5 ADD PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x80 PUSH2 0xD53 DUP4 DUP3 DUP5 ADD PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 PUSH2 0xD65 DUP4 DUP3 DUP5 ADD PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0xD89 DUP3 PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4C JUMPI JUMPDEST DUP4 ADD PUSH2 0xB79 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0xDAE DUP3 PUSH1 0xE0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3F JUMPI JUMPDEST DUP4 ADD PUSH2 0xBFD JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0xDD3 DUP3 PUSH2 0x100 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3F JUMPI DUP4 ADD PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0xDFA DUP3 PUSH2 0x120 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE32 JUMPI JUMPDEST DUP4 ADD PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE25 JUMPI JUMPDEST ADD PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xE2D PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xE3A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xE47 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0xE54 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xE61 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x361 SWAP1 CALLDATASIZE SWAP1 PUSH2 0xCE1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xE92 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 DUP2 LT PUSH2 0xE9E JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xEA6 PUSH2 0xE71 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 DUP4 PUSH2 0xEBA DUP4 PUSH2 0x714 JUMP JUMPDEST DUP2 EQ PUSH2 0x1336 JUMPI PUSH2 0xF11 PUSH2 0xEF2 PUSH1 0x20 PUSH2 0xEDA PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH4 0x74C13FDA SWAP1 PUSH2 0xEE9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1329 JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x130B JUMPI JUMPDEST POP PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH2 0xF1B DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP2 PUSH4 0x70A08231 SWAP6 PUSH2 0xF2B ADDRESS PUSH2 0x408 JUMP JUMPDEST SWAP4 PUSH2 0xF35 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0xF40 DUP10 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP10 ADD MSTORE PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x12FE JUMPI JUMPDEST PUSH1 0x0 SWAP9 PUSH2 0x12E7 JUMPI JUMPDEST POP PUSH2 0xF74 DUP5 PUSH2 0x888 JUMP JUMPDEST SWAP8 PUSH1 0x0 SWAP10 DUP11 JUMPDEST DUP13 DUP8 DUP3 LT ISZERO PUSH2 0x1035 JUMPI SWAP1 DUP12 PUSH2 0x1028 DUP3 PUSH1 0x60 PUSH2 0x1020 DUP16 DUP16 DUP16 DUP10 DUP4 PUSH2 0xFE9 PUSH2 0x100D SWAP5 PUSH1 0x20 PUSH2 0xFD9 PUSH2 0x1030 SWAP16 DUP15 PUSH2 0xFD4 DUP10 DUP16 SWAP11 PUSH2 0xFC4 SWAP1 PUSH2 0xFBE PUSH2 0x1018 SWAP16 DUP15 SWAP8 DUP9 SWAP2 PUSH2 0x8E1 JUMP JUMPDEST ADD PUSH2 0x907 JUMP JUMPDEST SWAP1 PUSH2 0xFCF DUP6 DUP6 PUSH2 0x911 JUMP JUMPDEST MLOAD ADD MSTORE JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST MLOAD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1008 DUP11 PUSH1 0x40 PUSH2 0xFCF DUP7 PUSH2 0x1002 DUP13 PUSH2 0xFBE DUP4 DUP11 DUP11 PUSH2 0x8E1 JUMP JUMPDEST SWAP4 PUSH2 0x911 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP4 SWAP1 SWAP6 PUSH2 0x911 JUMP JUMPDEST MLOAD ADD SWAP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP8 SWAP9 SWAP10 PUSH2 0x1081 DUP8 PUSH2 0x1097 SWAP4 SWAP6 SWAP9 SWAP8 SWAP13 PUSH2 0x1055 PUSH2 0xED5 PUSH1 0x2 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1076 DUP4 PUSH4 0x56853398 DUP4 EXTCODESIZE ISZERO PUSH2 0x12DA JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0xB0D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x12CD JUMPI JUMPDEST PUSH2 0x12B9 JUMPI JUMPDEST POP SWAP1 POP JUMPDEST DUP10 JUMPDEST DUP2 LT ISZERO PUSH2 0x10CF JUMPI PUSH2 0x10C8 DUP2 PUSH2 0x10C1 PUSH2 0x10BC PUSH2 0x10B7 DUP16 SWAP6 PUSH2 0x1097 SWAP7 DUP16 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x19F9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1095 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP4 SWAP7 POP PUSH2 0x11AE SWAP6 SWAP9 POP PUSH2 0x1125 SWAP3 SWAP5 SWAP8 POP PUSH2 0x10F5 PUSH2 0x10EE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12AC JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x1297 JUMPI JUMPDEST POP PUSH2 0xE88 JUMP JUMPDEST SWAP5 PUSH1 0x20 PUSH2 0x114E PUSH4 0xDD62ED3E PUSH2 0x116D PUSH2 0x1140 PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x128A JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x126C JUMPI JUMPDEST POP DUP6 GT PUSH2 0x124D JUMPI JUMPDEST POP PUSH2 0x1198 PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST PUSH4 0x1E2720FF SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x1240 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE9 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1233 JUMPI JUMPDEST PUSH2 0x1216 JUMPI JUMPDEST POP PUSH2 0x1211 PUSH2 0x11FA PUSH32 0xF1FA0256E6ECBA08316EB890D662830768E73136B5B0DBEA4C9C8C16CA1747EB SWAP3 PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH2 0x1204 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x122D SWAP1 PUSH2 0x1224 RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x3A5 JUMP JUMPDEST CODESIZE PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x123B PUSH2 0x79F JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x1248 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x1266 SWAP1 PUSH2 0x125E PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST DUP4 NOT SWAP2 PUSH2 0x140C JUMP JUMPDEST CODESIZE PUSH2 0x118A JUMP JUMPDEST PUSH2 0x1284 SWAP2 POP PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x7BF JUMP JUMPDEST CODESIZE PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x1292 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x117A JUMP JUMPDEST PUSH2 0x12A6 SWAP2 POP PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST CODESIZE PUSH2 0x111F JUMP JUMPDEST PUSH2 0x12B4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x12C7 SWAP1 PUSH2 0x1224 RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST CODESIZE PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x108C JUMP JUMPDEST PUSH2 0x12E2 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x12F7 SWAP2 SWAP9 POP PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x1306 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x1323 SWAP2 POP PUSH2 0x131A RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x77E JUMP JUMPDEST CODESIZE PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1344 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1EC5AA51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2F2 SWAP2 PUSH2 0x6D8 JUMP JUMPDEST ISZERO PUSH2 0x1364 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x13E2 PUSH2 0x13DC PUSH2 0x361 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x146F PUSH1 0x4 SWAP3 PUSH2 0x1460 PUSH2 0x2F2 SWAP6 PUSH2 0x1439 PUSH1 0x0 DUP5 PUSH2 0x1428 DUP3 PUSH2 0x714 JUMP JUMPDEST DUP5 EQ SWAP2 DUP3 ISZERO PUSH2 0x1474 JUMPI JUMPDEST POP POP PUSH2 0x135D JUMP JUMPDEST PUSH2 0x1446 PUSH4 0x95EA7B3 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 PUSH2 0x1450 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 PUSH2 0x1482 DUP10 PUSH2 0x408 JUMP JUMPDEST PUSH4 0xDD62ED3E SWAP1 PUSH2 0x114E PUSH2 0x1494 ADDRESS PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH2 0x14AE PUSH2 0x14A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x14F6 JUMPI JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x14D7 JUMPI JUMPDEST POP PUSH2 0xE8E PUSH2 0x14CF SWAP2 PUSH2 0x714 JUMP JUMPDEST EQ DUP5 CODESIZE PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x14CF SWAP2 SWAP3 POP PUSH2 0x14EE PUSH2 0xE8E SWAP2 PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x14C2 JUMP JUMPDEST PUSH2 0x14FE PUSH2 0x79F JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST SWAP1 PUSH2 0x82B PUSH2 0x826 DUP4 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x151A PUSH1 0x20 PUSH2 0x1503 JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x1510 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x36F JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x154B JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1574 JUMPI PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x157C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST ISZERO PUSH2 0x1588 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F2 SWAP2 PUSH2 0x15F1 PUSH2 0x1600 SWAP3 PUSH2 0x408 JUMP JUMPDEST SWAP1 PUSH2 0x15FA PUSH2 0x1543 JUMP JUMPDEST SWAP2 PUSH2 0x163E JUMP JUMPDEST DUP1 MLOAD PUSH2 0x160F PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x161E JUMPI JUMPDEST POP PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x1638 SWAP2 POP PUSH1 0x20 PUSH2 0x162D DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x1560 JUMP JUMPDEST CODESIZE PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x361 SWAP3 SWAP2 PUSH2 0x164D PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST SWAP2 PUSH2 0x16CE JUMP JUMPDEST ISZERO PUSH2 0x165A JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16BE RETURNDATASIZE PUSH2 0x1503 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x361 SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x16E0 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x16F7 PUSH2 0x16ED ADDRESS PUSH2 0x408 JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x1709 PUSH2 0x16AF JUMP JUMPDEST SWAP2 PUSH2 0x175C JUMP JUMPDEST ISZERO PUSH2 0x1716 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x1791 JUMPI POP POP DUP2 MLOAD PUSH2 0x1777 PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST EQ PUSH2 0x1780 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x178C PUSH2 0x361 SWAP2 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x170F JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x2F2 SWAP3 POP PUSH2 0x1820 JUMP JUMPDEST EXTCODESIZE PUSH2 0x17AC PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x17D0 JUMPI POP GT PUSH2 0x17C9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x17B8 JUMP JUMPDEST PUSH2 0x1806 PUSH2 0x721 PUSH1 0x20 SWAP4 PUSH2 0x493 SWAP4 PUSH2 0x17FA DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x361 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x17E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x182A DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1837 PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST GT ISZERO PUSH2 0x1846 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP3 POP PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x180F JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x186F PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x188D PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x18AB PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x189F JUMP JUMPDEST PUSH2 0x18CA PUSH2 0x355 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x191F JUMPI PUSH2 0x18E4 DUP2 PUSH1 0x4 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x190E PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH2 0x408 JUMP JUMPDEST SWAP1 PUSH2 0x1918 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1211 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1940 PUSH2 0x355 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x191F JUMPI PUSH2 0x1962 PUSH2 0x195B DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x190E PUSH32 0x4C6985B6BCDFF2E07F21D65FE227C4AFAA9769E02B23C2A32C0E8A66FC707F8 SWAP2 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x1999 PUSH2 0x355 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x191F JUMPI PUSH2 0x19BB PUSH2 0x19B4 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x190E PUSH32 0x7011B0B15512F533140457FCA55819676A0497D4AFE5C3D7A3524D951A0C4C8 SWAP2 PUSH2 0x408 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x19F1 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x493 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD DUP1 MLOAD MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xE0 DUP3 ADD SWAP3 PUSH2 0x1A1A PUSH2 0xE8E PUSH2 0x361 DUP7 MLOAD MLOAD SWAP1 JUMP JUMPDEST EQ DUP1 PUSH2 0x1D61 JUMPI JUMPDEST ISZERO JUMPDEST PUSH2 0x1D44 JUMPI PUSH1 0xA0 DUP3 ADD MLOAD TIMESTAMP GT PUSH2 0x1D27 JUMPI PUSH1 0x80 DUP3 ADD SWAP4 PUSH2 0x1A3F DUP6 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1A4E PUSH2 0xE8E DUP4 PUSH2 0x714 JUMP JUMPDEST EQ PUSH2 0x1D08 JUMPI PUSH2 0x120 DUP5 ADD MLOAD SWAP2 PUSH2 0x1A63 DUP5 MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x1A6D DUP4 PUSH2 0x714 JUMP JUMPDEST DUP9 EQ PUSH2 0x1CF6 JUMPI PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP3 PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x1A96 PUSH2 0xED5 DUP1 DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AA6 ADDRESS PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH2 0x1AB2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP7 PUSH2 0x1ABE DUP7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1CE9 JUMPI JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x1CCA JUMPI JUMPDEST POP SWAP12 PUSH2 0x1AFB PUSH2 0x1AF6 DUP3 SWAP16 SWAP15 PUSH2 0x714 JUMP JUMPDEST SWAP14 SWAP2 SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1BEE JUMPI PUSH2 0x1B11 PUSH1 0x20 DUP15 ADD DUP11 ADD MLOAD PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 DUP2 AND SWAP2 AND EQ PUSH2 0x1BC8 JUMPI PUSH2 0x1B7A PUSH2 0x1B76 DUP11 DUP16 DUP16 SWAP1 DUP16 SWAP2 DUP16 PUSH2 0x1B65 DUP9 PUSH2 0x1B69 PUSH2 0x1B65 DUP3 PUSH2 0x100 PUSH2 0x1B5D PUSH2 0x1B50 DUP4 PUSH2 0x1B70 SWAP10 MLOAD PUSH2 0x911 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP10 ADD MLOAD PUSH2 0x911 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x911 JUMP JUMPDEST SWAP3 PUSH2 0x1D89 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1BA2 JUMPI DUP14 SWAP13 DUP2 DUP14 MLOAD SWAP1 PUSH2 0x1B8D SWAP2 PUSH2 0x911 JUMP JUMPDEST MLOAD PUSH2 0x1B97 SWAP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP1 PUSH1 0x1 ADD SWAP1 SWAP13 PUSH2 0x1AFB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x1BB9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9DB50FF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x1BDF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x99DF362B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP1 SWAP6 POP PUSH2 0x1C4E SWAP12 POP PUSH2 0x1C37 SWAP5 SWAP11 POP PUSH2 0x1C20 SWAP4 SWAP10 POP PUSH2 0xED5 SWAP3 SWAP9 POP PUSH1 0x20 SWAP8 POP PUSH2 0xED5 SWAP2 SWAP7 POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1C2A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1CBD JUMPI JUMPDEST PUSH1 0x0 SWAP5 PUSH2 0x1C96 JUMPI JUMPDEST POP PUSH2 0xE8E PUSH2 0x361 PUSH2 0x1C76 PUSH2 0x1C7B SWAP4 DUP8 PUSH2 0xE88 JUMP JUMPDEST SWAP4 MLOAD SWAP1 JUMP JUMPDEST LT PUSH2 0x1C82 JUMPI JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x8C613A9 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1C7B SWAP2 SWAP5 POP PUSH2 0x361 PUSH2 0x1C76 PUSH2 0x1CB3 PUSH2 0xE8E SWAP4 PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP7 SWAP4 POP POP POP PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1CC5 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x1C5A JUMP JUMPDEST PUSH2 0x1AFB SWAP2 SWAP6 POP PUSH2 0x1CE1 PUSH2 0x1AF6 SWAP2 PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1CF1 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1344 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1D18 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7817658F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1D35 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x96E4471 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1D52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7F53694F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1A23 PUSH2 0x1D6E DUP3 MLOAD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D81 PUSH2 0xE8E PUSH2 0x361 PUSH2 0x100 DUP8 ADD MLOAD MLOAD SWAP1 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x1A21 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 PUSH2 0x1D97 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP6 ADD ADD SWAP2 GAS CALL SWAP1 JUMP INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x24 0xF7 0xA6 ORIGIN SWAP1 DELEGATECALL MSTORE8 INVALID 0xD1 0x26 STATICCALL 0xDC PUSH14 0x6B5A55C957DE75EA6892B3B2BAE1 PUSH27 0xDEF79C6C6578706572696D656E74616CF564736F6C634300080C00 COINBASE ","sourceMap":"524:8443:25:-:0;;;;;;-1:-1:-1;524:8443:25;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;524:8443:25;;;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;524:8443:25;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;524:8443:25;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;1378:253::-;1614:9;1378:253;;1525:18;1574:16;1378:253;;;:::i;:::-;1525:18;:::i;:::-;1574:16;:::i;:::-;1614:9;:::i;599:1349:3:-;;;734:10:11;955:12:2;:::i;524:8443:25:-;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;1638:8;:::i;524:8443:25:-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;:::i;:::-;;;;:::i;2426:187:2:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;524:8443:25;;;;2566:40:2;;;;2426:187::o;524:8443:25:-;;;;;;;;;;;:::i;4499:195::-;4563:23;4576:10;4584:1;4576:10;:::i;4563:23::-;-1:-1:-1;;;;;524:8443:25;;4563:23;4559:59;;4629:20;;;;:::i;:::-;4665:22;;;;:::i;:::-;;;524:8443;;;;4665:22;;;;4499:195::o;4559:59::-;-1:-1:-1;;524:8443:25;;-1:-1:-1;;;4595:23:25;;;;;4831:238;4903:24;4917:10;4925:1;4917:10;:::i;4903:24::-;-1:-1:-1;;;;;524:8443:25;;4903:24;4899:60;;4970:46;4988:28;;;:::i;:::-;4970:46;;:::i;:::-;5032:30;;;;:::i;5205:254::-;5281:26;5297:10;5305:1;5297:10;:::i;5281:26::-;-1:-1:-1;;;;;524:8443:25;;5281:26;5277:62;;5350:52;5370:32;;;:::i;:::-;5350:52;;:::i;:::-;5418:34;;;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":933,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":2937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn":{"entryPoint":3256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_struct_ClaimAndSwapData_calldata_dyn_calldata":{"entryPoint":696,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_struct_ClaimAndSwapData_calldata_ptr_dyn_calldata_ptr":{"entryPoint":782,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn":{"entryPoint":3069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_array_address_dyn":{"entryPoint":2846,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":2457,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_array_uint256_dyn":{"entryPoint":2978,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":3161,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":2444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_struct_ClaimAndSwapData":{"entryPoint":3297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":5459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":1918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":1983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_Claim":{"entryPoint":2711,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256":{"entryPoint":5103,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":2559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Claim_dyn":{"entryPoint":2721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Claim_memory_ptr_dyn_memory_ptr":{"entryPoint":2829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IRewardDistributor":{"entryPoint":1041,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_contract_IRewardHarvester_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":6159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":6117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2255":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ef94":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Claim":{"entryPoint":2645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IRewardDistributor":{"entryPoint":1050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_565f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_e11a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_array_bytes32_dyn_calldata":{"entryPoint":2361,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_struct_ClaimAndSwapData_calldata":{"entryPoint":2242,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_Claim_dyn":{"entryPoint":2184,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Claim":{"entryPoint":2106,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2016,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_struct_Claim_dyn":{"entryPoint":2073,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":5379,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Claim":{"entryPoint":2096,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_struct_Claim_dyn":{"entryPoint":2036,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":3110,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_Claim_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_ClaimAndSwapData_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_array_struct_Claim_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_struct_Claim_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_array_struct_Claim_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_struct_ClaimAndSwapData_calldata_dyn_calldata":{"entryPoint":2273,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":6629,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3720,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":853,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_bytes32_dyn_calldata_to_array_bytes32_dyn":{"entryPoint":2548,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes32_to_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_Address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IERC20_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardDistributor_to_address":{"entryPoint":1032,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardDistributor_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardHarvester_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardHarvester_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_RewardSwapper_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_SafeERC20_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1136,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1123,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":1812,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_47fb_to_string":{"entryPoint":5443,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_ClaimAndSwapData_calldata_to_struct_ClaimAndSwapData":{"entryPoint":3686,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1023,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1003,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_bytes4":{"entryPoint":5065,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":3149,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":5392,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":6064,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":944,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":1078,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":5807,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1858,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":1535,"id":561,"parameterSlots":1,"returnSlots":0},"fun_acceptOwnership":{"entryPoint":1713,"id":583,"parameterSlots":0,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":5601,"id":1278,"parameterSlots":2,"returnSlots":0},"fun_changeOperator":{"entryPoint":6264,"id":9120,"parameterSlots":1,"returnSlots":0},"fun_changeOperator_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_changeRewardDistributor":{"entryPoint":6324,"id":9146,"parameterSlots":1,"returnSlots":0},"fun_changeRewardDistributor_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_changeRewardHarvester":{"entryPoint":6294,"id":9133,"parameterSlots":1,"returnSlots":0},"fun_changeRewardHarvester_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":1260,"id":443,"parameterSlots":0,"returnSlots":0},"fun_claimSwapAndDepositReward":{"entryPoint":4947,"id":9107,"parameterSlots":2,"returnSlots":0},"fun_claimSwapAndDepositReward_inner":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":0},"fun_externalCall":{"entryPoint":7561,"id":9446,"parameterSlots":5,"returnSlots":1},"fun_functionCall":{"entryPoint":5694,"id":1417,"parameterSlots":3,"returnSlots":1},"fun_functionCallWithValue":{"entryPoint":5838,"id":1481,"parameterSlots":4,"returnSlots":1},"fun_isContract":{"entryPoint":6046,"id":1345,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":1097,"id":429,"parameterSlots":0,"returnSlots":1},"fun_pendingOwner":{"entryPoint":1302,"id":524,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1163,"id":457,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1145,"id":null,"parameterSlots":0,"returnSlots":0},"fun_revert":{"entryPoint":6176,"id":1656,"parameterSlots":2,"returnSlots":0},"fun_safeApprove":{"entryPoint":5132,"id":1055,"parameterSlots":3,"returnSlots":0},"fun_setOperator":{"entryPoint":6333,"id":9173,"parameterSlots":1,"returnSlots":0},"fun_setRewardDistributor":{"entryPoint":6540,"id":9231,"parameterSlots":1,"returnSlots":0},"fun_setRewardHarvester":{"entryPoint":6451,"id":9202,"parameterSlots":1,"returnSlots":0},"fun_swap":{"entryPoint":6649,"id":9423,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership":{"entryPoint":1464,"id":544,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":1377,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":5980,"id":1612,"parameterSlots":4,"returnSlots":1},"getter_fun_operator":{"entryPoint":975,"id":8863,"parameterSlots":0,"returnSlots":1},"getter_fun_rewardDistributor":{"entryPoint":991,"id":8858,"parameterSlots":0,"returnSlots":1},"getter_fun_rewardHarvester":{"entryPoint":1066,"id":8861,"parameterSlots":0,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_Claim_dyn":{"entryPoint":2321,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyOperator":{"entryPoint":1752,"id":8896,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":6303,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_447":{"entryPoint":1107,"id":420,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_531":{"entryPoint":1312,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_9113":{"entryPoint":6243,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_9126":{"entryPoint":6273,"id":420,"parameterSlots":1,"returnSlots":0},"panic_error_0x11":{"entryPoint":3697,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2219,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1835,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes32":{"entryPoint":2311,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":964,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":1087,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1618,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_565f":{"entryPoint":5715,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":1175,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc2e":{"entryPoint":5903,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e11a":{"entryPoint":5505,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ef94":{"entryPoint":4957,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":690,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":1951,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":1825,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":1523,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":1473,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":1329,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":1498,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":1350,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_IRewardDistributor_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_IRewardHarvester_to_contract_IRewardHarvester":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":868,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":5451,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":1964,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_complex_memory_array_array_struct_Claim_dyn":{"entryPoint":2148,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_bytes32":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes32":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_struct_Claim":{"entryPoint":2140,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610018575b6100166102b2565b005b60003560e01c806227edb11461028a57806306394c9b1461026357806328f59f051461023c578063570ca73514610212578063715018a6146101eb57806379ba5097146101c45780638da5cb5b1461019a578063a10843ec14610173578063acc2166a14610149578063b966b68314610113578063e30c3978146100cf5763f2fde38b146100a55761000e565b346100c2575b6100166100b9366004610384565b6105b8565b0390f35b6100ca6102b2565b6100ab565b5034610106575b6100e13660046103a5565b6100be6100ec610516565b604051918291826001600160a01b03909116815260200190565b61010e6102b2565b6100d6565b503461013c575b6101253660046103a5565b6100be61013061042a565b6040519182918261041a565b6101446102b2565b61011a565b5034610166575b61015b3660046103a5565b6100be6101306103df565b61016e6102b2565b610150565b503461018d575b610016610188366004610384565b611896565b6101956102b2565b61017a565b50346101b7575b6101ac3660046103a5565b6100be6100ec610449565b6101bf6102b2565b6101a1565b50346101de575b6101d63660046103a5565b6100166106b1565b6101e66102b2565b6101cb565b5034610205575b6101fd3660046103a5565b61001661048b565b61020d6102b2565b6101f2565b503461022f575b6102243660046103a5565b6100be6100ec6103cf565b6102376102b2565b610219565b5034610256575b610016610251366004610384565b6118b4565b61025e6102b2565b610243565b503461027d575b610016610278366004610384565b611878565b6102856102b2565b61026a565b50346102a5575b61001661029f36600461030e565b90611353565b6102ad6102b2565b610291565b50600080fd5b909182601f83011215610301575b602082359267ffffffffffffffff84116102f4575b0192602083028401116102ea57565b6102f26102b2565b565b6102fc6102b2565b6102db565b6103096102b2565b6102c6565b9061033791602081830312610348575b80359067ffffffffffffffff821161033b575b016102b8565b9091565b6103436102b2565b610331565b6103506102b2565b61031e565b6001600160a01b031690565b90565b6001600160a01b0381165b14156102b257565b905035906102f282610364565b906103619160208183031261039857610377565b6103a06102b2565b610377565b60009103126102ea57565b610361916008021c6001600160a01b031690565b9061036191546103b0565b610361600060046103c4565b9052565b610361600060026103c4565b61036190610355906001600160a01b031682565b610361906103eb565b610361906103ff565b6103db90610408565b6020810192916102f29190610411565b610361600060036103c4565b61036190610355565b6103619054610436565b610361600061043f565b61045b6104ec565b6102f2610479565b6103556103616103619290565b61036190610463565b6102f26104866000610470565b6105ff565b6102f2610453565b0190565b1561049e57565b5060405162461bcd60e51b8152806104e8600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6102f26104f7610449565b61051061050333610355565b916001600160a01b031690565b14610497565b610361600161043f565b6102f29061052c6104ec565b610561565b906001600160a01b03905b9181191691161790565b9061055661036161055d92610408565b8254610531565b9055565b61056c816001610546565b610574610449565b906105a86105a27f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270093610408565b91610408565b916105b260405190565b600090a3565b6102f290610520565b916001600160a01b0360089290920291821b911b61053c565b91906105eb61036161055d93610408565b9083546105c1565b6102f2916000916105da565b6102f29061060f600060016105f3565b610619600061043f565b90610625816000610546565b6105a86105a27f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610408565b1561065957565b5060405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b6102f2336104866106c0610516565b6106d26001600160a01b038416610503565b14610652565b90336106ea610503610355600461043f565b14156106f9576102f291610eaa565b50505061070560405190565b63ea8e4eb560e01b8152600490fd5b6103616103616103619290565b601f01601f191690565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761076457604052565b61076c61072b565b604052565b905051906102f282610364565b906103619160208183031261079257610771565b61079a6102b2565b610771565b506040513d6000823e3d90fd5b8061036f565b905051906102f2826107ac565b90610361916020818303126107d3576107b2565b6107db6102b2565b6107b2565b906102f26107ed60405190565b9283610742565b6020809167ffffffffffffffff811161080c57020190565b61081461072b565b020190565b9061082b610826836107f4565b6107e0565b918252565b61036160806107e0565b610842610830565b600080825260208201819052604082015260608082015290565b61036161083a565b60005b82811061087357505050565b60209061087e61085c565b8184015201610867565b906102f261089e61089884610819565b936107f4565b601f190160208401610864565b50634e487b7160e01b600052603260045260246000fd5b90359061015e1936829003018212156108d9570190565b6104936102b2565b90610361926020918110156108fa575b028101906108c2565b6109026108ab565b6108f1565b35610361816107ac565b906020809161091e845190565b81101561092c575b02010190565b6109346108ab565b610926565b903590601e19368290030182121561097f575b01602081359167ffffffffffffffff8311610972575b019160208202360383136102ea57565b61097a6102b2565b610962565b6109876102b2565b61094c565b905035906102f2826107ac565b909291926109a9610826826107f4565b93818552602080860192028301928184116109e7575b915b8383106109ce5750505050565b602080916109dc848661098c565b8152019201916109c1565b6109ef6102b2565b6109bf565b610361913691610999565b90610a1f610a18610a0e845190565b8084529260200190565b9260200190565b9060005b818110610a305750505090565b909192610a4d610a466001928651815260200190565b9460200190565b929101610a23565b805182526020808201516001600160a01b031690830152610361916080810191606090610a8760408201516040850152565b01519060608184039101526109ff565b9061036191610a55565b90610ab7610aad835190565b8083529160200190565b9081610ac96020830284019460200190565b926000915b838310610add57505050505090565b90919293946020610b00610af983856001950387528951610a97565b9760200190565b9301930191939290610ace565b602080825261036192910190610aa1565b90929192610b2e610826826107f4565b9381855260208086019202830192818411610b6c575b915b838310610b535750505050565b60208091610b618486610377565b815201920191610b46565b610b746102b2565b610b44565b906103619181601f82011215610b95575b602081359101610b1e565b610b9d6102b2565b610b8a565b90929192610bb2610826826107f4565b9381855260208086019202830192818411610bf0575b915b838310610bd75750505050565b60208091610be5848661098c565b815201920191610bca565b610bf86102b2565b610bc8565b906103619181601f82011215610c19575b602081359101610ba2565b610c216102b2565b610c0e565b61049360209167ffffffffffffffff8111610c4557601f01601f191690565b61072161072b565b90826000939282370152565b9291906102f291610c6c61082683610c26565b94828652602086019183820111610c8257610c4d565b610c8a6102b2565b610c4d565b906103619181601f82011215610cab575b602081359101610c59565b610cb36102b2565b610ca0565b906103619181601f82011215610cd4575b602081359101610999565b610cdc6102b2565b610cc9565b9190610e1d9061016084820312610e59575b610cfe6101606107e0565b936000610d0b838361098c565b908601526020610d1d83828401610377565b908601526040610d2f83828401610377565b908601526060610d418382840161098c565b908601526080610d538382840161098c565b9086015260a0610d658382840161098c565b90860152610d898260c083013567ffffffffffffffff8111610e4c575b8301610b79565b60c0860152610dae8260e083013567ffffffffffffffff8111610e3f575b8301610bfd565b60e0860152610dd38261010083013567ffffffffffffffff8111610e3f578301610bfd565b610100860152610dfa8261012083013567ffffffffffffffff8111610e32575b8301610c8f565b6101208601526101408101359067ffffffffffffffff8211610e25575b01610cb8565b610140830152565b610e2d6102b2565b610e17565b610e3a6102b2565b610df3565b610e476102b2565b610da7565b610e546102b2565b610d82565b610e616102b2565b610cf3565b610361903690610ce1565b50634e487b7160e01b600052601160045260246000fd5b90610e92565b9190565b90818110610e9e570390565b610ea6610e71565b0390565b90919060009083610eba83610714565b811461133657610f11610ef26020610eda610ed5600361043f565b610408565b6374c13fda90610ee960405190565b93849260e01b90565b825260049082905afa908115611329575b60009161130b575b50610408565b92610f1b84610408565b916370a0823195610f2b30610408565b93610f3560405190565b96610f408960e01b90565b88526001600160a01b0386166004890152602088602481855afa9788156112fe575b6000986112e7575b50610f7484610888565b976000998a5b8c8782101561103557908b6110288260606110208f8f8f8983610fe961100d946020610fd96110309f8e610fd4898f9a610fc490610fbe6110189f8e9788916108e1565b01610907565b90610fcf8585610911565b510152565b610911565b5101906001600160a01b03169052565b6110088a6040610fcf866110028c610fbe838a8a6108e1565b93610911565b6108e1565b610140810190610939565b939095610911565b5101926109f4565b905260010190565b610f7a565b5050919397989961108187611097939598979c611055610ed5600261043f565b611076836356853398833b156112da575b6040519687958694859360e01b90565b835260048301610b0d565b03925af180156112cd575b6112b9575b5090505b895b8110156110cf576110c8816110c16110bc6110b78f95611097968f6108e1565b610e66565b6119f9565b5060010190565b9050611095565b5090919396506111ae959850611125929497506110f56110ee60405190565b9160e01b90565b81526001600160a01b03881660048201526020816024818a5afa9081156112ac575b600091611297575b50610e88565b94602061114e63dd62ed3e61116d611140610ed5600361043f565b604051958694859460e01b90565b84526001600160a01b0390811660048501521660248301526044820190565b0381885afa90811561128a575b60009161126c575b50851161124d575b50611198610ed5600361043f565b631e2720ff90803b15611240575b604051610ee9565b825260048201869052602490829084905af18015611233575b611216575b506112116111fa7ff1fa0256e6ecba08316eb890d662830768e73136b5b0dbea4c9c8c16ca1747eb92610408565b9261120460405190565b9182918290815260200190565b0390a2565b61122d906112243d82610742565b3d8101906103a5565b386111cc565b61123b61079f565b6111c7565b6112486102b2565b6111a6565b6112669061125e610ed5600361043f565b83199161140c565b3861118a565b611284915061127b3d82610742565b3d8101906107bf565b38611182565b61129261079f565b61117a565b6112a6915061127b3d82610742565b3861111f565b6112b461079f565b611117565b6112c7906112243d82610742565b38611091565b6112d561079f565b61108c565b6112e26102b2565b611066565b6112f791985061127b3d82610742565b9638610f6a565b61130661079f565b610f62565b611323915061131a3d82610742565b3d81019061077e565b38610f0b565b61133161079f565b610f03565b505050505061134460405190565b631ec5aa5160e01b8152600490fd5b906102f2916106d8565b1561136457565b5060405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b6113e26113dc6103619263ffffffff1690565b60e01b90565b6001600160e01b03191690565b6001600160a01b0390911681526040810192916102f29160200152565b61146f6004926114606102f29561143960008461142882610714565b8414918215611474575b505061135d565b61144663095ea7b36113c9565b9261145060405190565b96879460208601908152016113ef565b60208201810382520383610742565b6115e1565b909150602061148289610408565b63dd62ed3e9061114e61149430610408565b926114ae6114a160405190565b9788958694859460e01b90565b03915afa9182156114f6575b6000926114d7575b50610e8e6114cf91610714565b148438611432565b6114cf9192506114ee610e8e9161127b3d82610742565b9291506114c2565b6114fe61079f565b6114ba565b9061082b61082683610c26565b61151a6020611503565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602082015290565b610361611510565b80151561036f565b905051906102f28261154b565b906103619160208183031261157457611553565b61157c6102b2565b611553565b1561158857565b5060405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6102f2916115f161160092610408565b906115fa611543565b9161163e565b805161160f610e8e6000610714565b1490811561161e575b50611581565b6116389150602061162d825190565b818301019101611560565b38611618565b610361929161164d6000610714565b916116ce565b1561165a57565b5060405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b3d156116c9576116be3d611503565b903d6000602084013e565b606090565b906000610361949381926116e0606090565b506116f76116ed30610408565b8390311015611653565b60208101905191855af16117096116af565b9161175c565b1561171657565b5060405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9192606091156117915750508151611777610e8e6000610714565b14611780575090565b61178c6103619161179e565b61170f565b9093926102f29250611820565b3b6117ac610e8e6000610714565b1190565b918091926000905b8282106117d05750116117c9575050565b6000910152565b915080602091830151818601520182916117b8565b611806610721602093610493936117fa815190565b80835293849260200190565b958691016117b0565b6020808252610361929101906117e5565b915061182a825190565b611837610e8e6000610714565b11156118465750805190602001fd5b6040516104e8925062461bcd60e51b81529182916004830161180f565b6102f29061186f6104ec565b6102f2906118bd565b6102f290611863565b6102f29061188d6104ec565b6102f290611933565b6102f290611881565b6102f2906118ab6104ec565b6102f29061198c565b6102f29061189f565b6118ca6103556000610470565b6001600160a01b0382161461191f576118e4816004610546565b61190e7fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91610408565b9061191860405190565b8080611211565b505060405163e6c4247b60e01b8152600490fd5b6119406103556000610470565b6001600160a01b0382161461191f5761196261195b82610408565b6003610546565b61190e7f04c6985b6bcdff2e07f21d65fe227c4afaa9769e02b23c2a32c0e8a66fc707f891610408565b6119996103556000610470565b6001600160a01b0382161461191f576119bb6119b482610408565b6002610546565b61190e7f07011b0b15512f533140457fca55819676a0497d4afe5c3d7a3524d951a0c4c891610408565b811981116119f1570190565b610493610e71565b60c0810180515160009392909160e0820192611a1a610e8e61036186515190565b1480611d61575b155b611d445760a08201514211611d27576080820193611a3f855190565b600090611a4e610e8e83610714565b14611d085761012084015191611a6384515190565b96611a6d83610714565b8814611cf6576323b872dd60e01b926040870190611a96610ed58084516001600160a01b031690565b916370a0823190611aa630610408565b926020611ab260405190565b8096611abe8660e01b90565b82526001600160a01b038716600483015260249082905afa948515611ce9575b600095611cca575b509b611afb611af6829f9e610714565b9d9190565b811015611bee57611b1160208e018a01516113e2565b6001600160e01b0319898116911614611bc857611b7a611b768a8f8f908f918f611b6588611b69611b6582610100611b5d611b5083611b709951610911565b516001600160a01b031690565b990151610911565b5190565b9351610911565b92611d89565b1590565b611ba2578d9c818d5190611b8d91610911565b51611b97916119e5565b90600101909c611afb565b5050505050505050505050505050611bb960405190565b639db50ff160e01b8152600490fd5b5050505050505050505050505050611bdf60405190565b6399df362b60e01b8152600490fd5b50909550611c4e9b50611c37949a50611c20939950610ed592985060209750610ed5919650516001600160a01b031690565b91611c2a60405190565b9889948593849360e01b90565b83526001600160a01b031660048301526024820190565b03915afa938415611cbd575b600094611c96575b50610e8e610361611c76611c7b9387610e88565b935190565b10611c8257565b50506040516308c613a960e41b8152600490fd5b611c7b919450610361611c76611cb3610e8e9361127b3d82610742565b9693505050611c62565b611cc561079f565b611c5a565b611afb919550611ce1611af69161127b3d82610742565b959150611ae6565b611cf161079f565b611ade565b50505050505050505061134460405190565b50505050505050611d1860405190565b637817658f60e11b8152600490fd5b5050505050611d3560405190565b63096e447160e21b8152600490fd5b5050505050611d5260405190565b637f53694f60e11b8152600490fd5b50611a23611d6e82515190565b611d81610e8e6103616101008701515190565b149050611a21565b906000949392611d97600090565b506020604051950101915af19056fea36469706673582212209d24f7a63290f453fed126fadc6d6b5a55c957de75ea6892b3b2bae17adef79c6c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x27EDB1 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x28F59F05 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xA10843EC EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xACC2166A EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xB966B683 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xCF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xC2 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST POP CALLVALUE PUSH2 0x106 JUMPI JUMPDEST PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xEC PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13C JUMPI JUMPDEST PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0x130 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x41A JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST POP CALLVALUE PUSH2 0x166 JUMPI JUMPDEST PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0x130 PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x16E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B7 JUMPI JUMPDEST PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xEC PUSH2 0x449 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DE JUMPI JUMPDEST PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x205 JUMPI JUMPDEST PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x20D PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22F JUMPI JUMPDEST PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xEC PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST POP CALLVALUE PUSH2 0x256 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST POP CALLVALUE PUSH2 0x27D JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A5 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x30E JUMP JUMPDEST SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x2F4 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x2EA JUMPI JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x2B2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x309 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST SWAP1 PUSH2 0x337 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x348 JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x33B JUMPI JUMPDEST ADD PUSH2 0x2B8 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x343 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH2 0x350 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST EQ ISZERO PUSH2 0x2B2 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x364 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x398 JUMPI PUSH2 0x377 JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2EA JUMPI JUMP JUMPDEST PUSH2 0x361 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 SLOAD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH1 0x2 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x355 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x3DB SWAP1 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH1 0x3 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x361 SWAP1 SLOAD PUSH2 0x436 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x0 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x45B PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x355 PUSH2 0x361 PUSH2 0x361 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x361 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x486 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x2F2 PUSH2 0x453 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x49E JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x4E8 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0x4F7 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x510 PUSH2 0x503 CALLER PUSH2 0x355 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x497 JUMP JUMPDEST PUSH2 0x361 PUSH1 0x1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x52C PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x556 PUSH2 0x361 PUSH2 0x55D SWAP3 PUSH2 0x408 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x531 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x56C DUP2 PUSH1 0x1 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x574 PUSH2 0x449 JUMP JUMPDEST SWAP1 PUSH2 0x5A8 PUSH2 0x5A2 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x408 JUMP JUMPDEST SWAP2 PUSH2 0x408 JUMP JUMPDEST SWAP2 PUSH2 0x5B2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x520 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x53C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5EB PUSH2 0x361 PUSH2 0x55D SWAP4 PUSH2 0x408 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x2F2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x60F PUSH1 0x0 PUSH1 0x1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x619 PUSH1 0x0 PUSH2 0x43F JUMP JUMPDEST SWAP1 PUSH2 0x625 DUP2 PUSH1 0x0 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x5A2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x408 JUMP JUMPDEST ISZERO PUSH2 0x659 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F2 CALLER PUSH2 0x486 PUSH2 0x6C0 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x6D2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x503 JUMP JUMPDEST EQ PUSH2 0x652 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x6EA PUSH2 0x503 PUSH2 0x355 PUSH1 0x4 PUSH2 0x43F JUMP JUMPDEST EQ ISZERO PUSH2 0x6F9 JUMPI PUSH2 0x2F2 SWAP2 PUSH2 0xEAA JUMP JUMPDEST POP POP POP PUSH2 0x705 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x361 PUSH2 0x361 PUSH2 0x361 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x764 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x76C PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x364 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x792 JUMPI PUSH2 0x771 JUMP JUMPDEST PUSH2 0x79A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x36F JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x7D3 JUMPI PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST SWAP1 PUSH2 0x2F2 PUSH2 0x7ED PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x80C JUMPI MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x814 PUSH2 0x72B JUMP JUMPDEST MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x82B PUSH2 0x826 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x361 PUSH1 0x80 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x842 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x873 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x87E PUSH2 0x85C JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x867 JUMP JUMPDEST SWAP1 PUSH2 0x2F2 PUSH2 0x89E PUSH2 0x898 DUP5 PUSH2 0x819 JUMP JUMPDEST SWAP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x864 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH2 0x15E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x8D9 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x493 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP3 PUSH1 0x20 SWAP2 DUP2 LT ISZERO PUSH2 0x8FA JUMPI JUMPDEST MUL DUP2 ADD SWAP1 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x902 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x361 DUP2 PUSH2 0x7AC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0x91E DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x92C JUMPI JUMPDEST MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x934 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT CALLDATASIZE DUP3 SWAP1 SUB ADD DUP3 SLT ISZERO PUSH2 0x97F JUMPI JUMPDEST ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x972 JUMPI JUMPDEST ADD SWAP2 PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT PUSH2 0x2EA JUMPI JUMP JUMPDEST PUSH2 0x97A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH2 0x987 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x9A9 PUSH2 0x826 DUP3 PUSH2 0x7F4 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x9E7 JUMPI JUMPDEST SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x9CE JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x9DC DUP5 DUP7 PUSH2 0x98C JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x9EF PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST PUSH2 0x361 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x999 JUMP JUMPDEST SWAP1 PUSH2 0xA1F PUSH2 0xA18 PUSH2 0xA0E DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA30 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA4D PUSH2 0xA46 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xA23 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x361 SWAP2 PUSH1 0x80 DUP2 ADD SWAP2 PUSH1 0x60 SWAP1 PUSH2 0xA87 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9FF JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH2 0xA55 JUMP JUMPDEST SWAP1 PUSH2 0xAB7 PUSH2 0xAAD DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xAC9 PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xADD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xB00 PUSH2 0xAF9 DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xA97 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x361 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xB2E PUSH2 0x826 DUP3 PUSH2 0x7F4 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xB6C JUMPI JUMPDEST SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xB53 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xB61 DUP5 DUP7 PUSH2 0x377 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xB74 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xB95 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xB1E JUMP JUMPDEST PUSH2 0xB9D PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xBB2 PUSH2 0x826 DUP3 PUSH2 0x7F4 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xBF0 JUMPI JUMPDEST SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xBD7 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xBE5 DUP5 DUP7 PUSH2 0x98C JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xC19 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xC21 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x493 PUSH1 0x20 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC45 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x721 PUSH2 0x72B JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2F2 SWAP2 PUSH2 0xC6C PUSH2 0x826 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 DUP4 DUP3 ADD GT PUSH2 0xC82 JUMPI PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xC8A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xCAB JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xCD4 JUMPI JUMPDEST PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD PUSH2 0x999 JUMP JUMPDEST PUSH2 0xCDC PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xE1D SWAP1 PUSH2 0x160 DUP5 DUP3 SUB SLT PUSH2 0xE59 JUMPI JUMPDEST PUSH2 0xCFE PUSH2 0x160 PUSH2 0x7E0 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH2 0xD0B DUP4 DUP4 PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH2 0xD1D DUP4 DUP3 DUP5 ADD PUSH2 0x377 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 PUSH2 0xD2F DUP4 DUP3 DUP5 ADD PUSH2 0x377 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x60 PUSH2 0xD41 DUP4 DUP3 DUP5 ADD PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x80 PUSH2 0xD53 DUP4 DUP3 DUP5 ADD PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 PUSH2 0xD65 DUP4 DUP3 DUP5 ADD PUSH2 0x98C JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0xD89 DUP3 PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE4C JUMPI JUMPDEST DUP4 ADD PUSH2 0xB79 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0xDAE DUP3 PUSH1 0xE0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3F JUMPI JUMPDEST DUP4 ADD PUSH2 0xBFD JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0xDD3 DUP3 PUSH2 0x100 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3F JUMPI DUP4 ADD PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0xDFA DUP3 PUSH2 0x120 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE32 JUMPI JUMPDEST DUP4 ADD PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP2 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE25 JUMPI JUMPDEST ADD PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xE2D PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xE3A PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xE47 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0xE54 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xE61 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x361 SWAP1 CALLDATASIZE SWAP1 PUSH2 0xCE1 JUMP JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xE92 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 DUP2 LT PUSH2 0xE9E JUMPI SUB SWAP1 JUMP JUMPDEST PUSH2 0xEA6 PUSH2 0xE71 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 DUP4 PUSH2 0xEBA DUP4 PUSH2 0x714 JUMP JUMPDEST DUP2 EQ PUSH2 0x1336 JUMPI PUSH2 0xF11 PUSH2 0xEF2 PUSH1 0x20 PUSH2 0xEDA PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH4 0x74C13FDA SWAP1 PUSH2 0xEE9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1329 JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x130B JUMPI JUMPDEST POP PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH2 0xF1B DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP2 PUSH4 0x70A08231 SWAP6 PUSH2 0xF2B ADDRESS PUSH2 0x408 JUMP JUMPDEST SWAP4 PUSH2 0xF35 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0xF40 DUP10 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP10 ADD MSTORE PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x12FE JUMPI JUMPDEST PUSH1 0x0 SWAP9 PUSH2 0x12E7 JUMPI JUMPDEST POP PUSH2 0xF74 DUP5 PUSH2 0x888 JUMP JUMPDEST SWAP8 PUSH1 0x0 SWAP10 DUP11 JUMPDEST DUP13 DUP8 DUP3 LT ISZERO PUSH2 0x1035 JUMPI SWAP1 DUP12 PUSH2 0x1028 DUP3 PUSH1 0x60 PUSH2 0x1020 DUP16 DUP16 DUP16 DUP10 DUP4 PUSH2 0xFE9 PUSH2 0x100D SWAP5 PUSH1 0x20 PUSH2 0xFD9 PUSH2 0x1030 SWAP16 DUP15 PUSH2 0xFD4 DUP10 DUP16 SWAP11 PUSH2 0xFC4 SWAP1 PUSH2 0xFBE PUSH2 0x1018 SWAP16 DUP15 SWAP8 DUP9 SWAP2 PUSH2 0x8E1 JUMP JUMPDEST ADD PUSH2 0x907 JUMP JUMPDEST SWAP1 PUSH2 0xFCF DUP6 DUP6 PUSH2 0x911 JUMP JUMPDEST MLOAD ADD MSTORE JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST MLOAD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1008 DUP11 PUSH1 0x40 PUSH2 0xFCF DUP7 PUSH2 0x1002 DUP13 PUSH2 0xFBE DUP4 DUP11 DUP11 PUSH2 0x8E1 JUMP JUMPDEST SWAP4 PUSH2 0x911 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP4 SWAP1 SWAP6 PUSH2 0x911 JUMP JUMPDEST MLOAD ADD SWAP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP8 SWAP9 SWAP10 PUSH2 0x1081 DUP8 PUSH2 0x1097 SWAP4 SWAP6 SWAP9 SWAP8 SWAP13 PUSH2 0x1055 PUSH2 0xED5 PUSH1 0x2 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1076 DUP4 PUSH4 0x56853398 DUP4 EXTCODESIZE ISZERO PUSH2 0x12DA JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0xB0D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x12CD JUMPI JUMPDEST PUSH2 0x12B9 JUMPI JUMPDEST POP SWAP1 POP JUMPDEST DUP10 JUMPDEST DUP2 LT ISZERO PUSH2 0x10CF JUMPI PUSH2 0x10C8 DUP2 PUSH2 0x10C1 PUSH2 0x10BC PUSH2 0x10B7 DUP16 SWAP6 PUSH2 0x1097 SWAP7 DUP16 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x19F9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1095 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP4 SWAP7 POP PUSH2 0x11AE SWAP6 SWAP9 POP PUSH2 0x1125 SWAP3 SWAP5 SWAP8 POP PUSH2 0x10F5 PUSH2 0x10EE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12AC JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x1297 JUMPI JUMPDEST POP PUSH2 0xE88 JUMP JUMPDEST SWAP5 PUSH1 0x20 PUSH2 0x114E PUSH4 0xDD62ED3E PUSH2 0x116D PUSH2 0x1140 PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x128A JUMPI JUMPDEST PUSH1 0x0 SWAP2 PUSH2 0x126C JUMPI JUMPDEST POP DUP6 GT PUSH2 0x124D JUMPI JUMPDEST POP PUSH2 0x1198 PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST PUSH4 0x1E2720FF SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x1240 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE9 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1233 JUMPI JUMPDEST PUSH2 0x1216 JUMPI JUMPDEST POP PUSH2 0x1211 PUSH2 0x11FA PUSH32 0xF1FA0256E6ECBA08316EB890D662830768E73136B5B0DBEA4C9C8C16CA1747EB SWAP3 PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH2 0x1204 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x122D SWAP1 PUSH2 0x1224 RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x3A5 JUMP JUMPDEST CODESIZE PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x123B PUSH2 0x79F JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH2 0x1248 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x1266 SWAP1 PUSH2 0x125E PUSH2 0xED5 PUSH1 0x3 PUSH2 0x43F JUMP JUMPDEST DUP4 NOT SWAP2 PUSH2 0x140C JUMP JUMPDEST CODESIZE PUSH2 0x118A JUMP JUMPDEST PUSH2 0x1284 SWAP2 POP PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x7BF JUMP JUMPDEST CODESIZE PUSH2 0x1182 JUMP JUMPDEST PUSH2 0x1292 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x117A JUMP JUMPDEST PUSH2 0x12A6 SWAP2 POP PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST CODESIZE PUSH2 0x111F JUMP JUMPDEST PUSH2 0x12B4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x12C7 SWAP1 PUSH2 0x1224 RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST CODESIZE PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x108C JUMP JUMPDEST PUSH2 0x12E2 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x12F7 SWAP2 SWAP9 POP PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x1306 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x1323 SWAP2 POP PUSH2 0x131A RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x77E JUMP JUMPDEST CODESIZE PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1344 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1EC5AA51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2F2 SWAP2 PUSH2 0x6D8 JUMP JUMPDEST ISZERO PUSH2 0x1364 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x13E2 PUSH2 0x13DC PUSH2 0x361 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x146F PUSH1 0x4 SWAP3 PUSH2 0x1460 PUSH2 0x2F2 SWAP6 PUSH2 0x1439 PUSH1 0x0 DUP5 PUSH2 0x1428 DUP3 PUSH2 0x714 JUMP JUMPDEST DUP5 EQ SWAP2 DUP3 ISZERO PUSH2 0x1474 JUMPI JUMPDEST POP POP PUSH2 0x135D JUMP JUMPDEST PUSH2 0x1446 PUSH4 0x95EA7B3 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 PUSH2 0x1450 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 PUSH2 0x1482 DUP10 PUSH2 0x408 JUMP JUMPDEST PUSH4 0xDD62ED3E SWAP1 PUSH2 0x114E PUSH2 0x1494 ADDRESS PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH2 0x14AE PUSH2 0x14A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x14F6 JUMPI JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x14D7 JUMPI JUMPDEST POP PUSH2 0xE8E PUSH2 0x14CF SWAP2 PUSH2 0x714 JUMP JUMPDEST EQ DUP5 CODESIZE PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x14CF SWAP2 SWAP3 POP PUSH2 0x14EE PUSH2 0xE8E SWAP2 PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x14C2 JUMP JUMPDEST PUSH2 0x14FE PUSH2 0x79F JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST SWAP1 PUSH2 0x82B PUSH2 0x826 DUP4 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x151A PUSH1 0x20 PUSH2 0x1503 JUMP JUMPDEST PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x1510 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x36F JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2F2 DUP3 PUSH2 0x154B JUMP JUMPDEST SWAP1 PUSH2 0x361 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1574 JUMPI PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x157C PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST ISZERO PUSH2 0x1588 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F2 SWAP2 PUSH2 0x15F1 PUSH2 0x1600 SWAP3 PUSH2 0x408 JUMP JUMPDEST SWAP1 PUSH2 0x15FA PUSH2 0x1543 JUMP JUMPDEST SWAP2 PUSH2 0x163E JUMP JUMPDEST DUP1 MLOAD PUSH2 0x160F PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x161E JUMPI JUMPDEST POP PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x1638 SWAP2 POP PUSH1 0x20 PUSH2 0x162D DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x1560 JUMP JUMPDEST CODESIZE PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x361 SWAP3 SWAP2 PUSH2 0x164D PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST SWAP2 PUSH2 0x16CE JUMP JUMPDEST ISZERO PUSH2 0x165A JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16BE RETURNDATASIZE PUSH2 0x1503 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x361 SWAP5 SWAP4 DUP2 SWAP3 PUSH2 0x16E0 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH2 0x16F7 PUSH2 0x16ED ADDRESS PUSH2 0x408 JUMP JUMPDEST DUP4 SWAP1 BALANCE LT ISZERO PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 MLOAD SWAP2 DUP6 GAS CALL PUSH2 0x1709 PUSH2 0x16AF JUMP JUMPDEST SWAP2 PUSH2 0x175C JUMP JUMPDEST ISZERO PUSH2 0x1716 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP2 ISZERO PUSH2 0x1791 JUMPI POP POP DUP2 MLOAD PUSH2 0x1777 PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST EQ PUSH2 0x1780 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x178C PUSH2 0x361 SWAP2 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x170F JUMP JUMPDEST SWAP1 SWAP4 SWAP3 PUSH2 0x2F2 SWAP3 POP PUSH2 0x1820 JUMP JUMPDEST EXTCODESIZE PUSH2 0x17AC PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST GT SWAP1 JUMP JUMPDEST SWAP2 DUP1 SWAP2 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x17D0 JUMPI POP GT PUSH2 0x17C9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP7 ADD MSTORE ADD DUP3 SWAP2 PUSH2 0x17B8 JUMP JUMPDEST PUSH2 0x1806 PUSH2 0x721 PUSH1 0x20 SWAP4 PUSH2 0x493 SWAP4 PUSH2 0x17FA DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x361 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x17E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x182A DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1837 PUSH2 0xE8E PUSH1 0x0 PUSH2 0x714 JUMP JUMPDEST GT ISZERO PUSH2 0x1846 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP3 POP PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x180F JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x186F PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x1863 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x188D PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x18AB PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x2F2 SWAP1 PUSH2 0x189F JUMP JUMPDEST PUSH2 0x18CA PUSH2 0x355 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x191F JUMPI PUSH2 0x18E4 DUP2 PUSH1 0x4 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x190E PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH2 0x408 JUMP JUMPDEST SWAP1 PUSH2 0x1918 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1211 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1940 PUSH2 0x355 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x191F JUMPI PUSH2 0x1962 PUSH2 0x195B DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x190E PUSH32 0x4C6985B6BCDFF2E07F21D65FE227C4AFAA9769E02B23C2A32C0E8A66FC707F8 SWAP2 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x1999 PUSH2 0x355 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x191F JUMPI PUSH2 0x19BB PUSH2 0x19B4 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x190E PUSH32 0x7011B0B15512F533140457FCA55819676A0497D4AFE5C3D7A3524D951A0C4C8 SWAP2 PUSH2 0x408 JUMP JUMPDEST DUP2 NOT DUP2 GT PUSH2 0x19F1 JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0x493 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD DUP1 MLOAD MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xE0 DUP3 ADD SWAP3 PUSH2 0x1A1A PUSH2 0xE8E PUSH2 0x361 DUP7 MLOAD MLOAD SWAP1 JUMP JUMPDEST EQ DUP1 PUSH2 0x1D61 JUMPI JUMPDEST ISZERO JUMPDEST PUSH2 0x1D44 JUMPI PUSH1 0xA0 DUP3 ADD MLOAD TIMESTAMP GT PUSH2 0x1D27 JUMPI PUSH1 0x80 DUP3 ADD SWAP4 PUSH2 0x1A3F DUP6 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1A4E PUSH2 0xE8E DUP4 PUSH2 0x714 JUMP JUMPDEST EQ PUSH2 0x1D08 JUMPI PUSH2 0x120 DUP5 ADD MLOAD SWAP2 PUSH2 0x1A63 DUP5 MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x1A6D DUP4 PUSH2 0x714 JUMP JUMPDEST DUP9 EQ PUSH2 0x1CF6 JUMPI PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP3 PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x1A96 PUSH2 0xED5 DUP1 DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AA6 ADDRESS PUSH2 0x408 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH2 0x1AB2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP7 PUSH2 0x1ABE DUP7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1CE9 JUMPI JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x1CCA JUMPI JUMPDEST POP SWAP12 PUSH2 0x1AFB PUSH2 0x1AF6 DUP3 SWAP16 SWAP15 PUSH2 0x714 JUMP JUMPDEST SWAP14 SWAP2 SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1BEE JUMPI PUSH2 0x1B11 PUSH1 0x20 DUP15 ADD DUP11 ADD MLOAD PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP10 DUP2 AND SWAP2 AND EQ PUSH2 0x1BC8 JUMPI PUSH2 0x1B7A PUSH2 0x1B76 DUP11 DUP16 DUP16 SWAP1 DUP16 SWAP2 DUP16 PUSH2 0x1B65 DUP9 PUSH2 0x1B69 PUSH2 0x1B65 DUP3 PUSH2 0x100 PUSH2 0x1B5D PUSH2 0x1B50 DUP4 PUSH2 0x1B70 SWAP10 MLOAD PUSH2 0x911 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP10 ADD MLOAD PUSH2 0x911 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x911 JUMP JUMPDEST SWAP3 PUSH2 0x1D89 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1BA2 JUMPI DUP14 SWAP13 DUP2 DUP14 MLOAD SWAP1 PUSH2 0x1B8D SWAP2 PUSH2 0x911 JUMP JUMPDEST MLOAD PUSH2 0x1B97 SWAP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP1 PUSH1 0x1 ADD SWAP1 SWAP13 PUSH2 0x1AFB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x1BB9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x9DB50FF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x1BDF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x99DF362B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP1 SWAP6 POP PUSH2 0x1C4E SWAP12 POP PUSH2 0x1C37 SWAP5 SWAP11 POP PUSH2 0x1C20 SWAP4 SWAP10 POP PUSH2 0xED5 SWAP3 SWAP9 POP PUSH1 0x20 SWAP8 POP PUSH2 0xED5 SWAP2 SWAP7 POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1C2A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1CBD JUMPI JUMPDEST PUSH1 0x0 SWAP5 PUSH2 0x1C96 JUMPI JUMPDEST POP PUSH2 0xE8E PUSH2 0x361 PUSH2 0x1C76 PUSH2 0x1C7B SWAP4 DUP8 PUSH2 0xE88 JUMP JUMPDEST SWAP4 MLOAD SWAP1 JUMP JUMPDEST LT PUSH2 0x1C82 JUMPI JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x8C613A9 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1C7B SWAP2 SWAP5 POP PUSH2 0x361 PUSH2 0x1C76 PUSH2 0x1CB3 PUSH2 0xE8E SWAP4 PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP7 SWAP4 POP POP POP PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1CC5 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x1C5A JUMP JUMPDEST PUSH2 0x1AFB SWAP2 SWAP6 POP PUSH2 0x1CE1 PUSH2 0x1AF6 SWAP2 PUSH2 0x127B RETURNDATASIZE DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1CF1 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x1344 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1D18 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7817658F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1D35 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x96E4471 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1D52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7F53694F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x1A23 PUSH2 0x1D6E DUP3 MLOAD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D81 PUSH2 0xE8E PUSH2 0x361 PUSH2 0x100 DUP8 ADD MLOAD MLOAD SWAP1 JUMP JUMPDEST EQ SWAP1 POP PUSH2 0x1A21 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 PUSH2 0x1D97 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP6 ADD ADD SWAP2 GAS CALL SWAP1 JUMP INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x24 0xF7 0xA6 ORIGIN SWAP1 DELEGATECALL MSTORE8 INVALID 0xD1 0x26 STATICCALL 0xDC PUSH14 0x6B5A55C957DE75EA6892B3B2BAE1 PUSH27 0xDEF79C6C6578706572696D656E74616CF564736F6C634300080C00 COINBASE ","sourceMap":"524:8443:25:-:0;;;;;;;;;-1:-1:-1;524:8443:25;;:::i;:::-;-1:-1:-1;524:8443:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;524:8443:25;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;524:8443:25;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;:::i;721:23::-;;;;;:::i;524:8443::-;;;:::o;602:43::-;;;;;:::i;524:8443::-;;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;651:39::-;;;;;:::i;524:8443::-;;;;;;;;;;:::i;1201:85:2:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;524:8443:25:-;;;;;;;;;;;:::i;1824:101:2:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;524:8443:25:-;;;:::o;:::-;;;;:::o;:::-;-1:-1:-1;524:8443:25;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:2;1414:68;1422:7;;:::i;:::-;:23;;734:10:11;1433:12:2;655:96:11;1422:23:2;;-1:-1:-1;;;;;524:8443:25;;;1422:23:2;;1414:68;:::i;847:99:3:-;926:13;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;524:8443:25:-;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1139:178:3:-;1228:24;;;;:::i;:::-;1292:7;;:::i;:::-;1267:43;;;;;;:::i;:::-;;;:::i;:::-;;;524:8443:25;;;;1267:43:3;;;;1139:178::o;:::-;;;;:::i;524:8443:25:-;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;2518:6:2;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;524:8443:25:-;;;;:::o;:::-;-1:-1:-1;524:8443:25;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:8443:25;;;;;;;1734:212:3;1932:6;734:10:11;1825:78:3;1833:14;;:::i;:::-;:24;-1:-1:-1;;;;;524:8443:25;;1833:24:3;524:8443:25;1833:24:3;;1825:78;:::i;1167:109:25:-;;1205:10;:22;;1219:8;;;:::i;1205:22::-;;;1201:57;;1268:1;;;:::i;1201:57::-;1236:22;;;;524:8443;;;;1236:22;-1:-1:-1;;;1236:22:25;;;;524:8443;;;;;;;;;;;-1:-1:-1;;524:8443:25;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;524:8443:25;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;-1:-1:-1;524:8443:25;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;524:8443:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;524:8443:25;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;524:8443:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;524:8443:25;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;1876:1673::-;;;;2067:1;;1876:1673;2059:9;2067:1;2059:9;:::i;:::-;;;2055:43;;2131:38;2138:30;;:28;:15;;;:::i;:::-;:28;:::i;:::-;;:30;;524:8443;;;;2138:30;;;;524:8443;;;;2138:30;;;;;;;;;;;;;;1876:1673;2138:30;;;;1876:1673;2131:38;;:::i;:::-;2203:22;;;;:::i;:::-;;;2234:4;2226:13;2234:4;2226:13;:::i;:::-;2203:37;;524:8443;;;;2203:37;;;;524:8443;;;;2203:37;;;-1:-1:-1;;;;;524:8443:25;;2203:37;;;524:8443;2203:37;;524:8443;2203:37;;;;;;;;;1876:1673;2203:37;;;;1876:1673;2285:63;;;;:::i;:::-;2389:9;524:8443;2389:9;;;2400:8;;;;;;;2452:17;;2610:58;2452:17;2610:24;:12;2452:17;;;;;2496:36;2637:17;2452;2496:20;:12;2711:3;2452:17;;2426:56;2452:17;;;:30;:17;;2637:31;2452:17;;;;;;:::i;:::-;:30;;:::i;:::-;2426:12;;;;;:::i;:::-;;:23;524:8443;;2426:56;2496:12;:::i;:::-;;:20;524:8443;-1:-1:-1;;;;;524:8443:25;;;;2496:36;2546:50;2568:17;2546:19;:12;2568:17;:28;:17;;;;;;:::i;:28::-;2546:12;;:::i;:50::-;2637:17;:::i;:::-;:31;;;;;:::i;:::-;2610:12;;;;:::i;:::-;;:24;:58;;:::i;:::-;;;524:8443;;;;2711:3;2389:9;;2400:8;;;;;;;;2749:34;2400:8;2857;2400;;;;;2749:23;:17;;;:::i;:23::-;:34;:23;;:34;;;;;2384:355;524:8443;;2749:34;;;;;;;524:8443;;;;2749:34;;;;;;;:::i;:::-;;;;;;;;;2384:355;2749:34;;2384:355;2846:9;;;;2857:8;;;;;;;2950:3;2889:17;2883:24;;2889:17;;;2857:8;2889:17;;;:::i;:::-;2883:24;:::i;:::-;;:::i;:::-;;524:8443;;;;2950:3;2846:9;;;;2857:8;;;;;;;3428:44;2857:8;;;3012:64;2857:8;;;;3012:37;;524:8443;;;;3012:37;;524:8443;;;;3012:37;;;-1:-1:-1;;;;;524:8443:25;;3012:37;;;524:8443;3012:37;;524:8443;3012:37;;;;;;;;;2841:137;3012:37;;;;2841:137;3012:64;;:::i;:::-;3150:22;:63;;:22;:63;3188:24;3196:15;;;:::i;3188:24::-;524:8443;;3150:63;;;;;524:8443;;;;3150:63;;;-1:-1:-1;;;;;524:8443:25;;;3150:63;;;524:8443;;;;;;;;;;;3150:63;;;;;;;;;;;2841:137;3150:63;;;;2841:137;-1:-1:-1;3150:91:25;-1:-1:-1;3133:259:25;;2841:137;3428:15;:29;:15;;;:::i;:29::-;;:44;;;;;;2841:137;524:8443;;3428:44;524:8443;3428:44;;;;;;524:8443;;;;;3428:44;;;;;;;;;;2841:137;3428:44;;2841:137;3488:54;;;;;;:::i;:::-;;;524:8443;;;;3488:54;;;;;524:8443;;;;;;;3488:54;;;;1876:1673::o;3428:44::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;3133:259;3350:17;3316:15;3308:24;3316:15;;;:::i;3308:24::-;3350:17;;;;:::i;:::-;3133:259;;;3150:63;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3012:37;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;2749:34;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;2203:37;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;2138:30;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;2055:43;2077:21;;;;;;524:8443;;;;2077:21;-1:-1:-1;;;2077:21:25;;;;524:8443;1876:1673;;;;;:::i;524:8443::-;;;;:::o;:::-;-1:-1:-1;524:8443:25;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;524:8443:25;;;;-1:-1:-1;;;;;524:8443:25;;;;;;;;;;;;;;;;1818:573:9;2321:62;;1818:573;2321:62;;1818:573;2121:163;2152:1;2143:10;;;;:::i;:::-;;;2142:62;;;;;1818:573;2121:163;;;:::i;:::-;2344:22;:13;:22;:::i;:::-;2321:62;;524:8443:25;;;;2321:62:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;2142:::-;2159:15;;;:39;:15;;;:::i;:::-;;2183:4;2159:39;2175:13;2183:4;2175:13;:::i;:::-;2159:39;;;524:8443:25;;;;2159:39:9;;;;;;;;524:8443:25;;;;2159:39:9;;;;;;;;;;2142:62;2159:39;;;;2142:62;2159:44;;;;;:::i;:::-;;2142:62;;;;2159:39;:44;:39;;;;:44;:39;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;524:8443:25;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;524:8443:25;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:8443:25;;;;;;;5196:642:9;5720:111;5196:642;5641:14;:69;5196:642;5641:14;:::i;:::-;:69;;;:::i;:::-;;;:::i;:::-;524:8443:25;;5728:22:9;;5749:1;5728:22;:::i;:::-;;:56;;;;;5196:642;5720:111;;:::i;5728:56::-;5754:30;;;;;;524:8443:25;;;5754:30:9;;;;;;;;:::i;:::-;5728:56;;;4108:223:10;4272:52;;4108:223;4272:52;4308:1;4272:52;:::i;:::-;;;:::i;524:8443:25:-;;;;:::o;:::-;-1:-1:-1;524:8443:25;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;5165:446:10:-;;5487:31;5535:69;5165:446;;;;5330:12;524:8443:25;;;5330:12:10;5370:4;5354:81;5362:13;5370:4;5362:13;:::i;:::-;:30;;:21;:30;;5354:81;:::i;:::-;5487:31;;;;;;;;;;;:::i;:::-;5535:69;;:::i;524:8443:25:-;;;;:::o;:::-;-1:-1:-1;524:8443:25;;-1:-1:-1;;;524:8443:25;;;;;;;;;;;;;;;;;;;;7671:628:10;;;524:8443:25;7875:418:10;;;;-1:-1:-1;;524:8443:25;;7906:22:10;;7927:1;7906:22;:::i;:::-;;7902:286;;8201:17;;:::o;7902:286::-;8121:18;8113:60;8121:18;;:::i;:::-;8113:60;:::i;7875:418::-;8269:12;;;;;;;:::i;1412:320::-;1702:19;:23;;1724:1;1702:23;:::i;:::-;;1412:320;:::o;524:8443:25:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;8821:540:10:-;;;8980:17;;524:8443:25;;;8980:17:10;:21;;9000:1;8980:21;:::i;:::-;;8976:379;;;9152:142;;;;;;;8976:379;524:8443:25;;9324:20:10;;-1:-1:-1;;;;9324:20:10;;524:8443:25;;;9324:20:10;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;3749:9:25;3664:102;3749:9;:::i;3664:102::-;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;3999:10:25;3899:118;3999:10;:::i;3899:118::-;;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;4262:12:25;4156:126;4262:12;:::i;4156:126::-;;;;:::i;4499:195::-;4563:23;4576:10;4584:1;4576:10;:::i;4563:23::-;-1:-1:-1;;;;;524:8443:25;;4563:23;4559:59;;4629:20;;;;:::i;:::-;4665:22;;;;:::i;:::-;;;524:8443;;;;4665:22;;;;524:8443;4559:59;-1:-1:-1;;524:8443:25;;-1:-1:-1;;;4595:23:25;;;;524:8443;4831:238;4903:24;4917:10;4925:1;4917:10;:::i;4903:24::-;-1:-1:-1;;;;;524:8443:25;;4903:24;4899:60;;4970:46;4988:28;;;:::i;:::-;4970:46;;:::i;:::-;5032:30;;;;:::i;5205:254::-;5281:26;5297:10;5305:1;5297:10;:::i;5281:26::-;-1:-1:-1;;;;;524:8443:25;;5281:26;5277:62;;5350:52;5370:32;;;:::i;:::-;5350:52;;:::i;:::-;5418:34;;;;:::i;524:8443::-;;;;;;;;;:::o;:::-;;;:::i;5693:2237::-;5835:17;;;;;524:8443;;;5693:2237;;5863:21;;;;;5835:56;;5863:28;:21;;524:8443;;;5835:56;;:127;;;5693:2237;5833:130;;5816:224;;6054:18;;;524:8443;6075:15;-1:-1:-1;6050:97:25;;6161:18;;;;;;524:8443;;;6161:18;6183:1;6161:23;;;;;:::i;:::-;;6157:89;;6284:22;;;;6340:17;:24;:17;;524:8443;;;6340:24;6379:18;;;;:::i;:::-;;;6375:52;;-1:-1:-1;;;6468:28:25;6537:17;;;;6530:35;:25;;6537:17;524:8443;-1:-1:-1;;;;;524:8443:25;;;6530:35;;;6587:4;6579:13;6587:4;6579:13;:::i;:::-;6530:72;;;524:8443;;;;6530:72;;;;;524:8443;;;;6530:72;;;-1:-1:-1;;;;;524:8443:25;;6530:72;;;524:8443;;;6530:72;;;;;;;;;5693:2237;6530:72;;;;5693:2237;6613:33;;6672:17;6613:33;;;;;:::i;:::-;6661:9;6656:1062;524:8443;;6672:17;;;;;;7024:16;6886:117;6852:16;6886:117;;;;7024:16;:::i;:::-;-1:-1:-1;;;;;;524:8443:25;;;;;7024:40;7020:119;;7509:7;7180:311;7211:17;;;;;;;7383:24;7211:17;7263:19;;7211:17;7263:16;7211:20;;:17;7383:24;7211:17;;:20;:::i;:::-;524:8443;-1:-1:-1;;;;;524:8443:25;;;7211:20;7263:16;;;:19;:::i;:::-;524:8443;;;7263:19;7383:21;;:24;:::i;:::-;7180:311;;:::i;:::-;7509:7;;524:8443;7509:7;7505:81;;7624:21;;;;;:24;;;;:::i;:::-;524:8443;7599:49;;;:::i;:::-;7690:3;524:8443;;6661:9;;6672:17;524:8443;7505:81;7543:28;;;;;;;;;;;;;;;524:8443;;;;7543:28;-1:-1:-1;;;7543:28:25;;;;524:8443;7020:119;7095:25;;;;;;;;;;;;;;;524:8443;;;;7095:25;-1:-1:-1;;;7095:25:25;;;;524:8443;6672:17;;;;;7745:50;6672:17;;7745:50;6672:17;;;7745:35;6672:17;;;7745:25;6672:17;;;7745:50;6672:17;;7752;6672;;;524:8443;-1:-1:-1;;;;;524:8443:25;;;7745:35;:50;;524:8443;;;;7745:50;;;;;;;;524:8443;;;;7745:50;;;-1:-1:-1;;;;;524:8443:25;7745:50;;;524:8443;;;;;;7745:50;;;;;;;;;;6656:1062;7745:50;;;;6656:1062;7728:67;7810:53;7845:18;7811:30;7810:53;7728:67;;7811:30;:::i;:::-;7845:18;524:8443;;;7810:53;;7806:118;;5693:2237::o;7806:118::-;-1:-1:-1;;524:8443:25;;-1:-1:-1;;;7886:27:25;;;;524:8443;7745:50;7810:53;7745:50;;;7845:18;7811:30;7745:50;7810:53;7745:50;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;6530:72;6672:17;6530:72;;;;6613:33;6530:72;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;6375:52;6406:21;;;;;;;;;;524:8443;;;;6157:89;6207:28;;;;;;;;524:8443;;;;6207:28;-1:-1:-1;;;6207:28:25;;;;524:8443;6050:97;6113:23;;;;;;524:8443;;;;6113:23;-1:-1:-1;;;6113:23:25;;;;524:8443;5816:224;5995:34;;;;;;524:8443;;;;5995:34;-1:-1:-1;;;5995:34:25;;;;524:8443;5835:127;5911:17;5833:130;5911:24;:17;;524:8443;;;5911:24;:51;;5939:23;:16;;;;524:8443;;;5911:51;;5835:127;;;;8097:868;;8321:615;8097:868;;;8284:4;524:8443;;;8284:4;8321:615;;;;;;;;;;8097:868;:::o"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","changeOperator(address)":"06394c9b","changeRewardDistributor(address)":"28f59f05","changeRewardHarvester(address)":"a10843ec","claimSwapAndDepositReward((bytes32,address,address,uint256,uint256,uint256,address[],uint256[],uint256[],bytes,bytes32[])[])":"0027edb1","operator()":"570ca735","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","rewardDistributor()":"acc2166a","rewardHarvester()":"b966b683","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardHarvester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeadlineBreach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeDataArrayMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalCallFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientReturn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroExpectedReturns\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"BribeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"SetOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardDistributor\",\"type\":\"address\"}],\"name\":\"SetRewardDistributor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardHarvester\",\"type\":\"address\"}],\"name\":\"SetRewardHarvester\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"changeRewardDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_harvester\",\"type\":\"address\"}],\"name\":\"changeRewardHarvester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"rwIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"callees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"callLengths\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"exchangeData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"rwMerkleProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct Common.ClaimAndSwapData[]\",\"name\":\"_claimSwapData\",\"type\":\"tuple[]\"}],\"name\":\"claimSwapAndDepositReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDistributor\",\"outputs\":[{\"internalType\":\"contract IRewardDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardHarvester\",\"outputs\":[{\"internalType\":\"contract IRewardHarvester\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"changeOperator(address)\":{\"params\":{\"_operator\":\"address  New operator address\"}},\"changeRewardDistributor(address)\":{\"params\":{\"_distributor\":\"address  New distributor address\"}},\"changeRewardHarvester(address)\":{\"params\":{\"_harvester\":\"address  New harvester address\"}},\"claimSwapAndDepositReward((bytes32,address,address,uint256,uint256,uint256,address[],uint256[],uint256[],bytes,bytes32[])[])\":{\"params\":{\"_claimSwapData\":\"Common.ClaimAndSwapData[]  The data for the claims+swaps\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlineBreach()\":[{\"notice\":\"swapDeadline expired\"}],\"ExchangeDataArrayMismatch()\":[{\"notice\":\"arrays in SwapData.exchangeData have wrong lengths\"}],\"ExternalCallFailure()\":[{\"notice\":\"external call failed\"}],\"InsufficientReturn()\":[{\"notice\":\"returned tokens too few\"}],\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"InvalidArray()\":[{\"notice\":\"no array given\"}],\"NotAuthorized()\":[{\"notice\":\"not authorized\"}],\"TransferFromCall()\":[{\"notice\":\"calling TransferFrom\"}],\"ZeroExpectedReturns()\":[{\"notice\":\"expected tokens returned are 0\"}]},\"kind\":\"user\",\"methods\":{\"changeOperator(address)\":{\"notice\":\"Change the operator\"},\"changeRewardDistributor(address)\":{\"notice\":\"Change the reward distributor address\"},\"changeRewardHarvester(address)\":{\"notice\":\"Change the reward harvester address\"},\"claimSwapAndDepositReward((bytes32,address,address,uint256,uint256,uint256,address[],uint256[],uint256[],bytes,bytes32[])[])\":{\"notice\":\"Executes swaps via DEX\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardSwapper.sol\":\"RewardSwapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/RewardSwapper.sol\":{\"keccak256\":\"0x65ebc43368623b6f8ea1f12badec340eabfe8017311d6159ac5e1ebb47f738e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f59278f36810bbdf1ac79da2848398ce32ad2a72973015a90ff3707a3b07ccb6\",\"dweb:/ipfs/QmXS3jVjLzaJNGCjtTskYKHxnfMJXXv6rXXRcGRJiuacgm\"]},\"contracts/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x19cf8b1c3257a2aa6844a67c2c0ac3f2a41a78abfca29fc3203918e9e315e9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7326fa3edfafe5ddd68c5a3f0c878e872785ed72471e51d49666dc7a879fc634\",\"dweb:/ipfs/QmQnTuyTrzLMapEgqSErHvPtWob1gjrSHMydqCRugvay9R\"]},\"contracts/interfaces/IRewardHarvester.sol\":{\"keccak256\":\"0x55c472af75430b8691ab7aa1f6b9665ca435471408f2724c87ab1277eb2948d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873daeaee18d750c4f986ef5797e4930e7146c1d4f3c3b085bbb05fc8cf56432\",\"dweb:/ipfs/QmduPueSnnpJoye59Y2LRGNJvmZ4Swh4yGi7zRD3J2THUT\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/VaultOperator.sol":{"VaultOperator":{"abi":[{"inputs":[{"internalType":"address","name":"_bribeVault","type":"address"},{"internalType":"address","name":"_rewardDistributor","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"NotAuthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"}],"name":"SetOperator","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bribeVault","outputs":[{"internalType":"contract IBribeVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"operator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardDistributor","outputs":[{"internalType":"contract IRewardDistributor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"name":"setOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"setPauseState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"rewardIdentifiers","type":"bytes32[]"}],"name":"transferBribes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"proof","type":"bytes32"}],"internalType":"struct Common.Distribution[]","name":"distributions","type":"tuple[]"}],"name":"updateRewardsMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address_fromMemory":{"entryPoint":257,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":183,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":208,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_Ownable":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"constructor_Ownable2Step":{"entryPoint":633,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_VaultOperator":{"entryPoint":477,"id":9523,"parameterSlots":2,"returnSlots":0},"convert_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IBribeVault":{"entryPoint":413,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":369,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":353,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IBribeVault":{"entryPoint":402,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":380,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_VaultOperator":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":2},"extract_from_storage_value_offsett_address":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":134,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":763,"id":500,"parameterSlots":1,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership":{"entryPoint":715,"id":561,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":111,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":751,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":105,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":701,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":645,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":424,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":671,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":445,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":223,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c06040523462000059575b62000020620000196200013a565b90620001dd565b604051610c206200035e82396080518181816102350152610927015260a0518181816101bb01528181610ae70152610b710152610c2090f35b6200006362000069565b6200000b565b50600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117620000a857604052565b620000b26200006f565b604052565b90620000ce620000c660405190565b928362000086565b565b6001600160a01b031690565b90565b6001600160a01b03811614156200006957565b90505190620000ce82620000df565b9190620000dc906040848203126200012a575b620001208185620000f2565b93602001620000f2565b6200013462000069565b62000114565b6200015d62000f7e803803806200015181620000b7565b92833981019062000101565b9091565b620000d0620000dc620000dc9290565b620000dc9062000161565b620000dc90620000d0906001600160a01b031682565b620000dc906200017c565b620000dc9062000192565b906001600160a01b03905b9181191691161790565b90620001d1620000dc620001d9926200019d565b8254620001a8565b9055565b90620001e862000279565b620001f4600062000171565b6001600160a01b0381166001600160a01b038416146200026b576001600160a01b03166001600160a01b038216146200024f57620002366200023f926200019d565b6080526200019d565b60a052620000ce336002620001bd565b5050506200025c60405190565b63e6c4247b60e01b8152600490fd5b505050506200025c60405190565b620000ce8033620002cb565b916001600160a01b0360089290920291821b911b620001b3565b9190620002b4620000dc620001d9936200019d565b90835462000285565b620000ce916000916200029f565b620000ce90620002de60006001620002bd565b620002fb565b620000dc90620000d0565b620000dc9054620002e4565b620003076000620002ef565b9062000315816000620001bd565b6200034c620003457f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936200019d565b916200019d565b916200035760405190565b600090a356fe60806040526004361015610018575b6100166102de565b005b60003560e01c8063570ca735146102b4578063715018a61461028d57806379ba509714610266578063833d657e1461021e5780638da5cb5b146101f4578063acc2166a146101a4578063b2d7edb21461017c578063b3ab15fb14610155578063cdb88ad11461012e578063df45c75214610106578063e30c3978146100d05763f2fde38b146100a65761000e565b346100c3575b6100166100ba366004610435565b61069b565b0390f35b6100cb6102de565b6100ac565b50346100f9575b6100e23660046102e4565b6100bf6100ed6105f9565b60405191829182610335565b6101016102de565b6100d7565b5034610121575b61001661011b3660046104d8565b90610b32565b6101296102de565b61010d565b5034610148575b61001661014336600461046b565b610bd3565b6101506102de565b610135565b503461016f575b61001661016a366004610435565b610835565b6101776102de565b61015c565b5034610197575b6100166101913660046103d0565b906109c3565b61019f6102de565b610183565b50346101e7575b6101b63660046102e4565b6100bf7f00000000000000000000000000000000000000000000000000000000000000005b60405191829182610374565b6101ef6102de565b6101ab565b5034610211575b6102063660046102e4565b6100bf6100ed61052e565b6102196102de565b6101fb565b5034610259575b6102303660046102e4565b6100bf7f00000000000000000000000000000000000000000000000000000000000000006101db565b6102616102de565b610225565b5034610280575b6102783660046102e4565b610016610794565b6102886102de565b61026d565b50346102a7575b61029f3660046102e4565b610016610570565b6102af6102de565b610294565b50346102d1575b6102c63660046102e4565b6100bf6100ed61031c565b6102d96102de565b6102bb565b50600080fd5b60009103126102ef57565b6102f76102de565b565b61030e916008021c5b6001600160a01b031690565b90565b9061030e91546102f9565b61030e60006002610311565b61033190610302565b9052565b6020810192916102f79190610328565b61030e90610302906001600160a01b031682565b61030e90610345565b61030e90610359565b61033190610362565b6020810192916102f7919061036b565b909182601f830112156103c3575b602082359267ffffffffffffffff84116103b6575b0192602083028401116102ef57565b6103be6102de565b6103a7565b6103cb6102de565b610392565b906103f99160208183031261040a575b80359067ffffffffffffffff82116103fd575b01610384565b9091565b6104056102de565b6103f3565b6104126102de565b6103e0565b61042081610302565b14156102de57565b905035906102f782610417565b9061030e9160208183031261044957610428565b6104516102de565b610428565b801515610420565b905035906102f782610456565b9061030e9160208183031261047f5761045e565b6104876102de565b61045e565b909182601f830112156104cb575b602082359267ffffffffffffffff84116104be575b0192608083028401116102ef57565b6104c66102de565b6104af565b6104d36102de565b61049a565b906103f99160208183031261050e575b80359067ffffffffffffffff8211610501575b0161048c565b6105096102de565b6104fb565b6105166102de565b6104e8565b61030e90610302565b61030e905461051b565b61030e6000610524565b6105406105d1565b6102f761055e565b61030261030e61030e9290565b61030e90610548565b6102f761056b6000610555565b6106e2565b6102f7610538565b0190565b1561058357565b5060405162461bcd60e51b8152806105cd600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6102f76105dc61052e565b6105f36105ed33610302565b610302565b91610302565b1461057c565b61030e6001610524565b6102f79061060f6105d1565b610644565b906001600160a01b03905b9181191691161790565b9061063961030e61064092610362565b8254610614565b9055565b61064f816001610629565b61065761052e565b9061068b6106857f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270093610362565b91610362565b9161069560405190565b600090a3565b6102f790610603565b916001600160a01b0360089290920291821b911b61061f565b91906106ce61030e61064093610362565b9083546106a4565b6102f7916000916106bd565b6102f7906106f2600060016106d6565b6106fc6000610524565b90610708816000610629565b61068b6106857f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610362565b1561073c57565b5060405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b6102f73361056b6107a36105f9565b6107af6105ed84610302565b14610735565b6102f7906107c16105d1565b6107ce6105e86000610555565b6107d782610302565b14610821576107e7816002610629565b6108117fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91610362565b9061081b60405190565b600090a2565b505060405163e6c4247b60e01b8152600490fd5b6102f7906107b5565b90336108506105ed6105e86002610524565b141561085f576102f79161091f565b50505061086b60405190565b63ea8e4eb560e01b8152600490fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108b357604052565b6108bb61087a565b604052565b90826000939282370152565b818352602092610578919084019384936001600160fb1b0381116108f4575b029384916108c0565b6108fc6102de565b6108eb565b602080825261030e939101916108cc565b506040513d6000823e3d90fd5b60009061094b7f0000000000000000000000000000000000000000000000000000000000000000610362565b6109758363b2d7edb2833b156109b6575b61098061096860405190565b9788968795869460e01b90565b845260048401610901565b03925af180156109a9575b6109925750565b6102f7906109a03d82610891565b3d8101906102e4565b6109b1610912565b61098b565b6109be6102de565b61095c565b906102f79161083e565b90336109df6105ed6105e86002610524565b141561085f576102f791610adf565b80610420565b905035906102f7826109ee565b5061030e9060208101906109f4565b5061030e906020810190610428565b906060610a776102f793610a3d610a396000830183610a01565b8552565b610a57610a4d6020830183610a10565b6020860190610328565b610a6e610a676040830183610a01565b6040860152565b82810190610a01565b910152565b9061057881608093610a1f565b818352602090920191906000825b828210610aa5575050505090565b90919293610ac5610abe600192610ab98890565b610a7c565b9560800190565b93920190610a97565b602080825261030e93910191610a89565b600090610b0b7f0000000000000000000000000000000000000000000000000000000000000000610362565b610b278363df45c752833b156109b65761098061096860405190565b845260048401610ace565b906102f7916109cd565b33610b4d6105ed6105e86002610524565b1415610b5c576102f790610b66565b505060405161086b565b600061098091610b957f0000000000000000000000000000000000000000000000000000000000000000610362565b610bb68363cdb88ad1833b15610bc6575b6040519687958694859360e01b90565b8352151560048301526024820190565b610bce6102de565b610ba6565b6102f790610b3c56fea364697066735822122035e0b1ecff1e69f95fd8d5a34a55a206049cbc0d717d5a35d05e16da33d1cdb56c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x59 JUMPI JUMPDEST PUSH3 0x20 PUSH3 0x19 PUSH3 0x13A JUMP JUMPDEST SWAP1 PUSH3 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC20 PUSH3 0x35E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x235 ADD MSTORE PUSH2 0x927 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1BB ADD MSTORE DUP2 DUP2 PUSH2 0xAE7 ADD MSTORE PUSH2 0xB71 ADD MSTORE PUSH2 0xC20 SWAP1 RETURN JUMPDEST PUSH3 0x63 PUSH3 0x69 JUMP JUMPDEST PUSH3 0xB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0xA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0xB2 PUSH3 0x6F JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH3 0xCE PUSH3 0xC6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EQ ISZERO PUSH3 0x69 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xCE DUP3 PUSH3 0xDF JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0xDC SWAP1 PUSH1 0x40 DUP5 DUP3 SUB SLT PUSH3 0x12A JUMPI JUMPDEST PUSH3 0x120 DUP2 DUP6 PUSH3 0xF2 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH3 0xF2 JUMP JUMPDEST PUSH3 0x134 PUSH3 0x69 JUMP JUMPDEST PUSH3 0x114 JUMP JUMPDEST PUSH3 0x15D PUSH3 0xF7E DUP1 CODESIZE SUB DUP1 PUSH3 0x151 DUP2 PUSH3 0xB7 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x101 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH3 0xD0 PUSH3 0xDC PUSH3 0xDC SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xDC SWAP1 PUSH3 0x161 JUMP JUMPDEST PUSH3 0xDC SWAP1 PUSH3 0xD0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xDC SWAP1 PUSH3 0x17C JUMP JUMPDEST PUSH3 0xDC SWAP1 PUSH3 0x192 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x1D1 PUSH3 0xDC PUSH3 0x1D9 SWAP3 PUSH3 0x19D JUMP JUMPDEST DUP3 SLOAD PUSH3 0x1A8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH3 0x1E8 PUSH3 0x279 JUMP JUMPDEST PUSH3 0x1F4 PUSH1 0x0 PUSH3 0x171 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH3 0x26B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x24F JUMPI PUSH3 0x236 PUSH3 0x23F SWAP3 PUSH3 0x19D JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH3 0x19D JUMP JUMPDEST PUSH1 0xA0 MSTORE PUSH3 0xCE CALLER PUSH1 0x2 PUSH3 0x1BD JUMP JUMPDEST POP POP POP PUSH3 0x25C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP POP POP PUSH3 0x25C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xCE DUP1 CALLER PUSH3 0x2CB JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH3 0x1B3 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x2B4 PUSH3 0xDC PUSH3 0x1D9 SWAP4 PUSH3 0x19D JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x285 JUMP JUMPDEST PUSH3 0xCE SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x29F JUMP JUMPDEST PUSH3 0xCE SWAP1 PUSH3 0x2DE PUSH1 0x0 PUSH1 0x1 PUSH3 0x2BD JUMP JUMPDEST PUSH3 0x2FB JUMP JUMPDEST PUSH3 0xDC SWAP1 PUSH3 0xD0 JUMP JUMPDEST PUSH3 0xDC SWAP1 SLOAD PUSH3 0x2E4 JUMP JUMPDEST PUSH3 0x307 PUSH1 0x0 PUSH3 0x2EF JUMP JUMPDEST SWAP1 PUSH3 0x315 DUP2 PUSH1 0x0 PUSH3 0x1BD JUMP JUMPDEST PUSH3 0x34C PUSH3 0x345 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x19D JUMP JUMPDEST SWAP2 PUSH3 0x19D JUMP JUMPDEST SWAP2 PUSH3 0x357 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x833D657E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xACC2166A EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xB2D7EDB2 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xDF45C752 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xD0 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xC3 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST POP CALLVALUE PUSH2 0xF9 JUMPI JUMPDEST PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x4D8 JUMP JUMPDEST SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST POP CALLVALUE PUSH2 0x148 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST POP CALLVALUE PUSH2 0x197 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E7 JUMPI JUMPDEST PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x52E JUMP JUMPDEST PUSH2 0x219 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST POP CALLVALUE PUSH2 0x259 JUMPI JUMPDEST PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH32 0x0 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x261 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST POP CALLVALUE PUSH2 0x280 JUMPI JUMPDEST PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A7 JUMPI JUMPDEST PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2D1 JUMPI JUMPDEST PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x31C JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x2DE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30E SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x30E SWAP2 SLOAD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x30E PUSH1 0x0 PUSH1 0x2 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x331 SWAP1 PUSH2 0x302 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x302 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x331 SWAP1 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3C3 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x3B6 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST SWAP1 PUSH2 0x3F9 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x40A JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3FD JUMPI JUMPDEST ADD PUSH2 0x384 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x405 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x302 JUMP JUMPDEST EQ ISZERO PUSH2 0x2DE JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F7 DUP3 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH2 0x30E SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x449 JUMPI PUSH2 0x428 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x420 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F7 DUP3 PUSH2 0x456 JUMP JUMPDEST SWAP1 PUSH2 0x30E SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x47F JUMPI PUSH2 0x45E JUMP JUMPDEST PUSH2 0x487 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4CB JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x4BE JUMPI JUMPDEST ADD SWAP3 PUSH1 0x80 DUP4 MUL DUP5 ADD GT PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x4D3 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST SWAP1 PUSH2 0x3F9 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x50E JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x501 JUMPI JUMPDEST ADD PUSH2 0x48C JUMP JUMPDEST PUSH2 0x509 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x516 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x30E SWAP1 SLOAD PUSH2 0x51B JUMP JUMPDEST PUSH2 0x30E PUSH1 0x0 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x540 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x302 PUSH2 0x30E PUSH2 0x30E SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x56B PUSH1 0x0 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x538 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x583 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x5CD PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F7 PUSH2 0x5DC PUSH2 0x52E JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x5ED CALLER PUSH2 0x302 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST SWAP2 PUSH2 0x302 JUMP JUMPDEST EQ PUSH2 0x57C JUMP JUMPDEST PUSH2 0x30E PUSH1 0x1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x60F PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x639 PUSH2 0x30E PUSH2 0x640 SWAP3 PUSH2 0x362 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x614 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x64F DUP2 PUSH1 0x1 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x657 PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH2 0x68B PUSH2 0x685 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x362 JUMP JUMPDEST SWAP2 PUSH2 0x362 JUMP JUMPDEST SWAP2 PUSH2 0x695 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x603 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x61F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6CE PUSH2 0x30E PUSH2 0x640 SWAP4 PUSH2 0x362 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x2F7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x6F2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6FC PUSH1 0x0 PUSH2 0x524 JUMP JUMPDEST SWAP1 PUSH2 0x708 DUP2 PUSH1 0x0 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x685 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x362 JUMP JUMPDEST ISZERO PUSH2 0x73C JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F7 CALLER PUSH2 0x56B PUSH2 0x7A3 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x5ED DUP5 PUSH2 0x302 JUMP JUMPDEST EQ PUSH2 0x735 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x7C1 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x5E8 PUSH1 0x0 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x7D7 DUP3 PUSH2 0x302 JUMP JUMPDEST EQ PUSH2 0x821 JUMPI PUSH2 0x7E7 DUP2 PUSH1 0x2 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x811 PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH2 0x362 JUMP JUMPDEST SWAP1 PUSH2 0x81B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x850 PUSH2 0x5ED PUSH2 0x5E8 PUSH1 0x2 PUSH2 0x524 JUMP JUMPDEST EQ ISZERO PUSH2 0x85F JUMPI PUSH2 0x2F7 SWAP2 PUSH2 0x91F JUMP JUMPDEST POP POP POP PUSH2 0x86B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH2 0x578 SWAP2 SWAP1 DUP5 ADD SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x8F4 JUMPI JUMPDEST MUL SWAP4 DUP5 SWAP2 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x8FC PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x30E SWAP4 SWAP2 ADD SWAP2 PUSH2 0x8CC JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x94B PUSH32 0x0 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x975 DUP4 PUSH4 0xB2D7EDB2 DUP4 EXTCODESIZE ISZERO PUSH2 0x9B6 JUMPI JUMPDEST PUSH2 0x980 PUSH2 0x968 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x901 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A9 JUMPI JUMPDEST PUSH2 0x992 JUMPI POP JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x9A0 RETURNDATASIZE DUP3 PUSH2 0x891 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH2 0x9BE PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST SWAP1 PUSH2 0x2F7 SWAP2 PUSH2 0x83E JUMP JUMPDEST SWAP1 CALLER PUSH2 0x9DF PUSH2 0x5ED PUSH2 0x5E8 PUSH1 0x2 PUSH2 0x524 JUMP JUMPDEST EQ ISZERO PUSH2 0x85F JUMPI PUSH2 0x2F7 SWAP2 PUSH2 0xADF JUMP JUMPDEST DUP1 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F7 DUP3 PUSH2 0x9EE JUMP JUMPDEST POP PUSH2 0x30E SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9F4 JUMP JUMPDEST POP PUSH2 0x30E SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP1 PUSH1 0x60 PUSH2 0xA77 PUSH2 0x2F7 SWAP4 PUSH2 0xA3D PUSH2 0xA39 PUSH1 0x0 DUP4 ADD DUP4 PUSH2 0xA01 JUMP JUMPDEST DUP6 MSTORE JUMP JUMPDEST PUSH2 0xA57 PUSH2 0xA4D PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH2 0xA6E PUSH2 0xA67 PUSH1 0x40 DUP4 ADD DUP4 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST DUP3 DUP2 ADD SWAP1 PUSH2 0xA01 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x578 DUP2 PUSH1 0x80 SWAP4 PUSH2 0xA1F JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 PUSH1 0x0 DUP3 JUMPDEST DUP3 DUP3 LT PUSH2 0xAA5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0xAC5 PUSH2 0xABE PUSH1 0x1 SWAP3 PUSH2 0xAB9 DUP9 SWAP1 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST SWAP6 PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 ADD SWAP1 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x30E SWAP4 SWAP2 ADD SWAP2 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0xB0B PUSH32 0x0 PUSH2 0x362 JUMP JUMPDEST PUSH2 0xB27 DUP4 PUSH4 0xDF45C752 DUP4 EXTCODESIZE ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x980 PUSH2 0x968 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xACE JUMP JUMPDEST SWAP1 PUSH2 0x2F7 SWAP2 PUSH2 0x9CD JUMP JUMPDEST CALLER PUSH2 0xB4D PUSH2 0x5ED PUSH2 0x5E8 PUSH1 0x2 PUSH2 0x524 JUMP JUMPDEST EQ ISZERO PUSH2 0xB5C JUMPI PUSH2 0x2F7 SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x86B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 SWAP2 PUSH2 0xB95 PUSH32 0x0 PUSH2 0x362 JUMP JUMPDEST PUSH2 0xBB6 DUP4 PUSH4 0xCDB88AD1 DUP4 EXTCODESIZE ISZERO PUSH2 0xBC6 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE ISZERO ISZERO PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xBCE PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0xB3C JUMP INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xE0 0xB1 0xEC SELFDESTRUCT 0x1E PUSH10 0xF95FD8D5A34A55A20604 SWAP13 0xBC 0xD PUSH18 0x7D5A35D05E16DA33D1CDB56C657870657269 PUSH14 0x656E74616CF564736F6C63430008 0xC STOP COINBASE ","sourceMap":"360:2187:26:-:0;;;;;;-1:-1:-1;360:2187:26;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:2187:26;;;;;;-1:-1:-1;;;;;360:2187:26;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;360:2187:26;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;360:2187:26;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;360:2187:26;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;360:2187:26;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;738:400::-;;;;:::i;:::-;828:10;836:1;828:10;:::i;:::-;-1:-1:-1;;;;;360:2187:26;;-1:-1:-1;;;;;360:2187:26;;813:25;809:61;;-1:-1:-1;;;;;360:2187:26;-1:-1:-1;;;;;360:2187:26;;884:32;880:68;;972:24;1026:38;972:24;;:::i;:::-;959:37;;1026:38;:::i;:::-;1006:58;;1110:21;1121:10;1110:21;;:::i;880:68::-;925:23;;;;360:2187;;;;925:23;-1:-1:-1;;;925:23:26;;;;;809:61;847:23;;;;;360:2187;;;;599:1349:3;;;734:10:11;955:12:2;:::i;360:2187:26:-;;-1:-1:-1;;;;;360:2187:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;1638:8;:::i;360:2187:26:-;;;;;;;;;;:::i;2426:187:2:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;360:2187:26;;;;2566:40:2;;;;2426:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":740,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":900,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_bytes32_dyn_calldata_ptr":{"entryPoint":976,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_struct_Distribution_calldata_dyn_calldata":{"entryPoint":1240,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_struct_Distribution_calldata_ptr_dyn_calldata_ptr":{"entryPoint":1164,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool":{"entryPoint":1131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":2548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_t_bool":{"entryPoint":1118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_Distribution_calldata":{"entryPoint":2684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":808,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_bytes32_dyn_calldata":{"entryPoint":2252,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_bytes32_dyn_calldata_ptr":{"entryPoint":2305,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_Distribution_calldata_dyn_calldata":{"entryPoint":2697,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_struct_Distribution_calldata_ptr_dyn_calldata_ptr":{"entryPoint":2766,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IBribeVault":{"entryPoint":875,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2255":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Distribution_calldata":{"entryPoint":2591,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IBribeVault":{"entryPoint":884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IRewardDistributor":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_array_struct_Distribution_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_struct_Distribution_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_array_struct_Distribution_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_address":{"entryPoint":2576,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_bytes32":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_struct_Distribution_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IBribeVault_to_address":{"entryPoint":866,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IRewardDistributor_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1365,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1352,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":857,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":837,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2240,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":761,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":1307,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2193,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":1762,"id":561,"parameterSlots":1,"returnSlots":0},"fun_acceptOwnership":{"entryPoint":1940,"id":583,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":1489,"id":443,"parameterSlots":0,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1669,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":1326,"id":429,"parameterSlots":0,"returnSlots":1},"fun_pendingOwner":{"entryPoint":1529,"id":524,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1392,"id":457,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1374,"id":null,"parameterSlots":0,"returnSlots":0},"fun_setOperator":{"entryPoint":2101,"id":9566,"parameterSlots":1,"returnSlots":0},"fun_setOperator_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setPauseState":{"entryPoint":3027,"id":9614,"parameterSlots":1,"returnSlots":0},"fun_setPauseState_inner":{"entryPoint":2918,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferBribes":{"entryPoint":2499,"id":9582,"parameterSlots":2,"returnSlots":0},"fun_transferBribes_inner":{"entryPoint":2335,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership":{"entryPoint":1691,"id":544,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_500":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":1604,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updateRewardsMetadata":{"entryPoint":2866,"id":9599,"parameterSlots":2,"returnSlots":0},"fun_updateRewardsMetadata_inner":{"entryPoint":2783,"id":null,"parameterSlots":2,"returnSlots":0},"getter_fun_bribeVault":{"entryPoint":null,"id":9464,"parameterSlots":0,"returnSlots":1},"getter_fun_operator":{"entryPoint":796,"id":9469,"parameterSlots":0,"returnSlots":1},"getter_fun_rewardDistributor":{"entryPoint":null,"id":9467,"parameterSlots":0,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_onlyOperator":{"entryPoint":2509,"id":9537,"parameterSlots":2,"returnSlots":0},"modifier_onlyOperator_9573":{"entryPoint":2110,"id":9537,"parameterSlots":2,"returnSlots":0},"modifier_onlyOperator_9605":{"entryPoint":2876,"id":9537,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":1973,"id":420,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_447":{"entryPoint":1336,"id":420,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_531":{"entryPoint":1539,"id":420,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":2170,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":785,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":1316,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1845,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":1404,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":734,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2322,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_address":{"entryPoint":1750,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic20":{"entryPoint":1700,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":1556,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":1725,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":1577,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":1047,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":2542,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"9464":[{"length":32,"start":565},{"length":32,"start":2343}],"9467":[{"length":32,"start":443},{"length":32,"start":2791},{"length":32,"start":2929}]},"linkReferences":{},"object":"60806040526004361015610018575b6100166102de565b005b60003560e01c8063570ca735146102b4578063715018a61461028d57806379ba509714610266578063833d657e1461021e5780638da5cb5b146101f4578063acc2166a146101a4578063b2d7edb21461017c578063b3ab15fb14610155578063cdb88ad11461012e578063df45c75214610106578063e30c3978146100d05763f2fde38b146100a65761000e565b346100c3575b6100166100ba366004610435565b61069b565b0390f35b6100cb6102de565b6100ac565b50346100f9575b6100e23660046102e4565b6100bf6100ed6105f9565b60405191829182610335565b6101016102de565b6100d7565b5034610121575b61001661011b3660046104d8565b90610b32565b6101296102de565b61010d565b5034610148575b61001661014336600461046b565b610bd3565b6101506102de565b610135565b503461016f575b61001661016a366004610435565b610835565b6101776102de565b61015c565b5034610197575b6100166101913660046103d0565b906109c3565b61019f6102de565b610183565b50346101e7575b6101b63660046102e4565b6100bf7f00000000000000000000000000000000000000000000000000000000000000005b60405191829182610374565b6101ef6102de565b6101ab565b5034610211575b6102063660046102e4565b6100bf6100ed61052e565b6102196102de565b6101fb565b5034610259575b6102303660046102e4565b6100bf7f00000000000000000000000000000000000000000000000000000000000000006101db565b6102616102de565b610225565b5034610280575b6102783660046102e4565b610016610794565b6102886102de565b61026d565b50346102a7575b61029f3660046102e4565b610016610570565b6102af6102de565b610294565b50346102d1575b6102c63660046102e4565b6100bf6100ed61031c565b6102d96102de565b6102bb565b50600080fd5b60009103126102ef57565b6102f76102de565b565b61030e916008021c5b6001600160a01b031690565b90565b9061030e91546102f9565b61030e60006002610311565b61033190610302565b9052565b6020810192916102f79190610328565b61030e90610302906001600160a01b031682565b61030e90610345565b61030e90610359565b61033190610362565b6020810192916102f7919061036b565b909182601f830112156103c3575b602082359267ffffffffffffffff84116103b6575b0192602083028401116102ef57565b6103be6102de565b6103a7565b6103cb6102de565b610392565b906103f99160208183031261040a575b80359067ffffffffffffffff82116103fd575b01610384565b9091565b6104056102de565b6103f3565b6104126102de565b6103e0565b61042081610302565b14156102de57565b905035906102f782610417565b9061030e9160208183031261044957610428565b6104516102de565b610428565b801515610420565b905035906102f782610456565b9061030e9160208183031261047f5761045e565b6104876102de565b61045e565b909182601f830112156104cb575b602082359267ffffffffffffffff84116104be575b0192608083028401116102ef57565b6104c66102de565b6104af565b6104d36102de565b61049a565b906103f99160208183031261050e575b80359067ffffffffffffffff8211610501575b0161048c565b6105096102de565b6104fb565b6105166102de565b6104e8565b61030e90610302565b61030e905461051b565b61030e6000610524565b6105406105d1565b6102f761055e565b61030261030e61030e9290565b61030e90610548565b6102f761056b6000610555565b6106e2565b6102f7610538565b0190565b1561058357565b5060405162461bcd60e51b8152806105cd600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6102f76105dc61052e565b6105f36105ed33610302565b610302565b91610302565b1461057c565b61030e6001610524565b6102f79061060f6105d1565b610644565b906001600160a01b03905b9181191691161790565b9061063961030e61064092610362565b8254610614565b9055565b61064f816001610629565b61065761052e565b9061068b6106857f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270093610362565b91610362565b9161069560405190565b600090a3565b6102f790610603565b916001600160a01b0360089290920291821b911b61061f565b91906106ce61030e61064093610362565b9083546106a4565b6102f7916000916106bd565b6102f7906106f2600060016106d6565b6106fc6000610524565b90610708816000610629565b61068b6106857f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610362565b1561073c57565b5060405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608490fd5b6102f73361056b6107a36105f9565b6107af6105ed84610302565b14610735565b6102f7906107c16105d1565b6107ce6105e86000610555565b6107d782610302565b14610821576107e7816002610629565b6108117fdbebfba65bd6398fb722063efc10c99f624f9cd8ba657201056af918a676d5ee91610362565b9061081b60405190565b600090a2565b505060405163e6c4247b60e01b8152600490fd5b6102f7906107b5565b90336108506105ed6105e86002610524565b141561085f576102f79161091f565b50505061086b60405190565b63ea8e4eb560e01b8152600490fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108b357604052565b6108bb61087a565b604052565b90826000939282370152565b818352602092610578919084019384936001600160fb1b0381116108f4575b029384916108c0565b6108fc6102de565b6108eb565b602080825261030e939101916108cc565b506040513d6000823e3d90fd5b60009061094b7f0000000000000000000000000000000000000000000000000000000000000000610362565b6109758363b2d7edb2833b156109b6575b61098061096860405190565b9788968795869460e01b90565b845260048401610901565b03925af180156109a9575b6109925750565b6102f7906109a03d82610891565b3d8101906102e4565b6109b1610912565b61098b565b6109be6102de565b61095c565b906102f79161083e565b90336109df6105ed6105e86002610524565b141561085f576102f791610adf565b80610420565b905035906102f7826109ee565b5061030e9060208101906109f4565b5061030e906020810190610428565b906060610a776102f793610a3d610a396000830183610a01565b8552565b610a57610a4d6020830183610a10565b6020860190610328565b610a6e610a676040830183610a01565b6040860152565b82810190610a01565b910152565b9061057881608093610a1f565b818352602090920191906000825b828210610aa5575050505090565b90919293610ac5610abe600192610ab98890565b610a7c565b9560800190565b93920190610a97565b602080825261030e93910191610a89565b600090610b0b7f0000000000000000000000000000000000000000000000000000000000000000610362565b610b278363df45c752833b156109b65761098061096860405190565b845260048401610ace565b906102f7916109cd565b33610b4d6105ed6105e86002610524565b1415610b5c576102f790610b66565b505060405161086b565b600061098091610b957f0000000000000000000000000000000000000000000000000000000000000000610362565b610bb68363cdb88ad1833b15610bc6575b6040519687958694859360e01b90565b8352151560048301526024820190565b610bce6102de565b610ba6565b6102f790610b3c56fea364697066735822122035e0b1ecff1e69f95fd8d5a34a55a206049cbc0d717d5a35d05e16da33d1cdb56c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x18 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x833D657E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xACC2166A EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xB2D7EDB2 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xDF45C752 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xD0 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI PUSH2 0xE JUMP JUMPDEST CALLVALUE PUSH2 0xC3 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST POP CALLVALUE PUSH2 0xF9 JUMPI JUMPDEST PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x121 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x4D8 JUMP JUMPDEST SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST POP CALLVALUE PUSH2 0x148 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST POP CALLVALUE PUSH2 0x197 JUMPI JUMPDEST PUSH2 0x16 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E7 JUMPI JUMPDEST PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST POP CALLVALUE PUSH2 0x211 JUMPI JUMPDEST PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x52E JUMP JUMPDEST PUSH2 0x219 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST POP CALLVALUE PUSH2 0x259 JUMPI JUMPDEST PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH32 0x0 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x261 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST POP CALLVALUE PUSH2 0x280 JUMPI JUMPDEST PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST POP CALLVALUE PUSH2 0x2A7 JUMPI JUMPDEST PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x16 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2D1 JUMPI JUMPDEST PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xBF PUSH2 0xED PUSH2 0x31C JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x2DE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x30E SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x30E SWAP2 SLOAD PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x30E PUSH1 0x0 PUSH1 0x2 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x331 SWAP1 PUSH2 0x302 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x302 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x331 SWAP1 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3C3 JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x3B6 JUMPI JUMPDEST ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST SWAP1 PUSH2 0x3F9 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x40A JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3FD JUMPI JUMPDEST ADD PUSH2 0x384 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x405 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x420 DUP2 PUSH2 0x302 JUMP JUMPDEST EQ ISZERO PUSH2 0x2DE JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F7 DUP3 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH2 0x30E SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x449 JUMPI PUSH2 0x428 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x420 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F7 DUP3 PUSH2 0x456 JUMP JUMPDEST SWAP1 PUSH2 0x30E SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x47F JUMPI PUSH2 0x45E JUMP JUMPDEST PUSH2 0x487 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4CB JUMPI JUMPDEST PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x4BE JUMPI JUMPDEST ADD SWAP3 PUSH1 0x80 DUP4 MUL DUP5 ADD GT PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x4D3 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST SWAP1 PUSH2 0x3F9 SWAP2 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x50E JUMPI JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x501 JUMPI JUMPDEST ADD PUSH2 0x48C JUMP JUMPDEST PUSH2 0x509 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x516 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x30E SWAP1 SLOAD PUSH2 0x51B JUMP JUMPDEST PUSH2 0x30E PUSH1 0x0 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x540 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x302 PUSH2 0x30E PUSH2 0x30E SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x30E SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x56B PUSH1 0x0 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x538 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x583 JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x5CD PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F7 PUSH2 0x5DC PUSH2 0x52E JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x5ED CALLER PUSH2 0x302 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST SWAP2 PUSH2 0x302 JUMP JUMPDEST EQ PUSH2 0x57C JUMP JUMPDEST PUSH2 0x30E PUSH1 0x1 PUSH2 0x524 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x60F PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x639 PUSH2 0x30E PUSH2 0x640 SWAP3 PUSH2 0x362 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x614 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x64F DUP2 PUSH1 0x1 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x657 PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH2 0x68B PUSH2 0x685 PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 SWAP4 PUSH2 0x362 JUMP JUMPDEST SWAP2 PUSH2 0x362 JUMP JUMPDEST SWAP2 PUSH2 0x695 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x603 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x61F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6CE PUSH2 0x30E PUSH2 0x640 SWAP4 PUSH2 0x362 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x2F7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x6F2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6FC PUSH1 0x0 PUSH2 0x524 JUMP JUMPDEST SWAP1 PUSH2 0x708 DUP2 PUSH1 0x0 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x685 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x362 JUMP JUMPDEST ISZERO PUSH2 0x73C JUMPI JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F7 CALLER PUSH2 0x56B PUSH2 0x7A3 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x5ED DUP5 PUSH2 0x302 JUMP JUMPDEST EQ PUSH2 0x735 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x7C1 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x5E8 PUSH1 0x0 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x7D7 DUP3 PUSH2 0x302 JUMP JUMPDEST EQ PUSH2 0x821 JUMPI PUSH2 0x7E7 DUP2 PUSH1 0x2 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x811 PUSH32 0xDBEBFBA65BD6398FB722063EFC10C99F624F9CD8BA657201056AF918A676D5EE SWAP2 PUSH2 0x362 JUMP JUMPDEST SWAP1 PUSH2 0x81B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x850 PUSH2 0x5ED PUSH2 0x5E8 PUSH1 0x2 PUSH2 0x524 JUMP JUMPDEST EQ ISZERO PUSH2 0x85F JUMPI PUSH2 0x2F7 SWAP2 PUSH2 0x91F JUMP JUMPDEST POP POP POP PUSH2 0x86B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP3 PUSH2 0x578 SWAP2 SWAP1 DUP5 ADD SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x8F4 JUMPI JUMPDEST MUL SWAP4 DUP5 SWAP2 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x8FC PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x30E SWAP4 SWAP2 ADD SWAP2 PUSH2 0x8CC JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x94B PUSH32 0x0 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x975 DUP4 PUSH4 0xB2D7EDB2 DUP4 EXTCODESIZE ISZERO PUSH2 0x9B6 JUMPI JUMPDEST PUSH2 0x980 PUSH2 0x968 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x901 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A9 JUMPI JUMPDEST PUSH2 0x992 JUMPI POP JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0x9A0 RETURNDATASIZE DUP3 PUSH2 0x891 JUMP JUMPDEST RETURNDATASIZE DUP2 ADD SWAP1 PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH2 0x9BE PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST SWAP1 PUSH2 0x2F7 SWAP2 PUSH2 0x83E JUMP JUMPDEST SWAP1 CALLER PUSH2 0x9DF PUSH2 0x5ED PUSH2 0x5E8 PUSH1 0x2 PUSH2 0x524 JUMP JUMPDEST EQ ISZERO PUSH2 0x85F JUMPI PUSH2 0x2F7 SWAP2 PUSH2 0xADF JUMP JUMPDEST DUP1 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2F7 DUP3 PUSH2 0x9EE JUMP JUMPDEST POP PUSH2 0x30E SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9F4 JUMP JUMPDEST POP PUSH2 0x30E SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP1 PUSH1 0x60 PUSH2 0xA77 PUSH2 0x2F7 SWAP4 PUSH2 0xA3D PUSH2 0xA39 PUSH1 0x0 DUP4 ADD DUP4 PUSH2 0xA01 JUMP JUMPDEST DUP6 MSTORE JUMP JUMPDEST PUSH2 0xA57 PUSH2 0xA4D PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH2 0xA6E PUSH2 0xA67 PUSH1 0x40 DUP4 ADD DUP4 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST DUP3 DUP2 ADD SWAP1 PUSH2 0xA01 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x578 DUP2 PUSH1 0x80 SWAP4 PUSH2 0xA1F JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 PUSH1 0x0 DUP3 JUMPDEST DUP3 DUP3 LT PUSH2 0xAA5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0xAC5 PUSH2 0xABE PUSH1 0x1 SWAP3 PUSH2 0xAB9 DUP9 SWAP1 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST SWAP6 PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 ADD SWAP1 PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x30E SWAP4 SWAP2 ADD SWAP2 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0xB0B PUSH32 0x0 PUSH2 0x362 JUMP JUMPDEST PUSH2 0xB27 DUP4 PUSH4 0xDF45C752 DUP4 EXTCODESIZE ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x980 PUSH2 0x968 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xACE JUMP JUMPDEST SWAP1 PUSH2 0x2F7 SWAP2 PUSH2 0x9CD JUMP JUMPDEST CALLER PUSH2 0xB4D PUSH2 0x5ED PUSH2 0x5E8 PUSH1 0x2 PUSH2 0x524 JUMP JUMPDEST EQ ISZERO PUSH2 0xB5C JUMPI PUSH2 0x2F7 SWAP1 PUSH2 0xB66 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x86B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 SWAP2 PUSH2 0xB95 PUSH32 0x0 PUSH2 0x362 JUMP JUMPDEST PUSH2 0xBB6 DUP4 PUSH4 0xCDB88AD1 DUP4 EXTCODESIZE ISZERO PUSH2 0xBC6 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE ISZERO ISZERO PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xBCE PUSH2 0x2DE JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x2F7 SWAP1 PUSH2 0xB3C JUMP INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xE0 0xB1 0xEC SELFDESTRUCT 0x1E PUSH10 0xF95FD8D5A34A55A20604 SWAP13 0xBC 0xD PUSH18 0x7D5A35D05E16DA33D1CDB56C657870657269 PUSH14 0x656E74616CF564736F6C63430008 0xC STOP COINBASE ","sourceMap":"360:2187:26:-:0;;;;;;;;;-1:-1:-1;360:2187:26;;:::i;:::-;-1:-1:-1;360:2187:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;450:53;360:2187;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;405:39;360:2187;405:39;360:2187;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;:::o;:::-;;;;;;;-1:-1:-1;;;;;360:2187:26;;;;;:::o;:::-;;;;;;:::i;509:23::-;;;;;:::i;360:2187::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;360:2187:26;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1201:85:2:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;360:2187:26:-;;;;;;;;;;;:::i;1824:101:2:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;360:2187:26:-;;;:::o;:::-;;;;:::o;:::-;-1:-1:-1;360:2187:26;;-1:-1:-1;;;360:2187:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:2;1414:68;1422:7;;:::i;:::-;:23;;734:10:11;1422:23:2;:::i;1433:12::-;1422:23;:::i;:::-;;;:::i;:::-;;1414:68;:::i;847:99:3:-;926:13;;;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;360:2187:26:-;;-1:-1:-1;;;;;360:2187:26;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1139:178:3:-;1228:24;;;;:::i;:::-;1292:7;;:::i;:::-;1267:43;;;;;;:::i;:::-;;;:::i;:::-;;;360:2187:26;;;;1267:43:3;;;;1139:178::o;:::-;;;;:::i;360:2187:26:-;;-1:-1:-1;;;;;360:2187:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1501:153:3:-;1638:8;1501:153;1583:20;;;;:::i;:::-;2518:6:2;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;360:2187:26:-;;;;:::o;:::-;-1:-1:-1;360:2187:26;;-1:-1:-1;;;360:2187:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;360:2187:26;;;;;;;1734:212:3;1932:6;734:10:11;1825:78:3;1833:14;;:::i;:::-;:24;;;;:::i;:::-;;1825:78;:::i;1063:62:2:-;1117:1;1063:62;;;:::i;:::-;1434:23:26;1447:10;1455:1;1447:10;:::i;1434:23::-;;;;:::i;:::-;;1430:59;;1500:20;;;;:::i;:::-;1536:22;;;;:::i;:::-;;;360:2187;;;;1536:22;;;;1361:204::o;1430:59::-;-1:-1:-1;;360:2187:26;;-1:-1:-1;;;1466:23:26;;;;360:2187;1361:204;;;;:::i;1144:109::-;;1182:10;:22;;1196:8;;;:::i;1182:22::-;;;1178:57;;1245:1;;;:::i;1178:57::-;1213:22;;;;360:2187;;;;1213:22;-1:-1:-1;;;1213:22:26;;;;360:2187;;;;;;;;;;;;;;;;;;-1:-1:-1;;360:2187:26;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;360:2187:26;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;360:2187:26;;;;;;;;;1744:159;1852:44;1744:159;1852:25;:10;:25;:::i;:::-;:44;:25;;:44;;;;;1744:159;1852:44;;360:2187;;;;1852:44;;;;;;;;360:2187;;;;1852:44;;;;;;;:::i;:::-;;;;;;;;;1744:159;1852:44;;1744:159;:::o;1852:44::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;1744:159;;;;;:::i;1144:109::-;;1182:10;:22;;1196:8;;;:::i;1182:22::-;;;1178:57;;1245:1;;;:::i;360:2187::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;2107:184::-;2230:54;2107:184;2230:39;:17;:39;:::i;:::-;:54;:39;;:54;;;;;;;360:2187;;;;2230:54;;;;;;;:::i;2107:184::-;;;;;:::i;1144:109::-;1182:10;:22;;1196:8;;;:::i;1182:22::-;;;1178:57;;1245:1;;;:::i;1178:57::-;-1:-1:-1;;360:2187:26;;1213:22;360:2187;2433:112;2500:38;;2433:112;2500:31;:17;:31;:::i;:::-;:38;:31;;:38;;;;;2433:112;360:2187;;2500:38;;;;;;;360:2187;;;;2500:38;;;360:2187;;2500:38;;;360:2187;;;;;;2500:38;;;:::i;:::-;;;2433:112;;;;:::i"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","bribeVault()":"833d657e","operator()":"570ca735","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","rewardDistributor()":"acc2166a","setOperator(address)":"b3ab15fb","setPauseState(bool)":"cdb88ad1","transferBribes(bytes32[])":"b2d7edb2","transferOwnership(address)":"f2fde38b","updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])":"df45c752"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bribeVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardDistributor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"SetOperator\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bribeVault\",\"outputs\":[{\"internalType\":\"contract IBribeVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDistributor\",\"outputs\":[{\"internalType\":\"contract IRewardDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"rewardIdentifiers\",\"type\":\"bytes32[]\"}],\"name\":\"transferBribes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"}],\"internalType\":\"struct Common.Distribution[]\",\"name\":\"distributions\",\"type\":\"tuple[]\"}],\"name\":\"updateRewardsMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"params\":{\"_bribeVault\":\"Address of the bribe vault\",\"_rewardDistributor\":\"Address of the reward distributor\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setOperator(address)\":{\"params\":{\"_operator\":\"address  Operator address\"}},\"setPauseState(bool)\":{\"params\":{\"state\":\"bool  Pause state\"}},\"transferBribes(bytes32[])\":{\"params\":{\"rewardIdentifiers\":\"bytes32[]  List of rewardIdentifiers\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])\":{\"params\":{\"distributions\":\"Distribution[]  List of reward distribution details\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"NotAuthorized()\":[{\"notice\":\"not authorized\"}]},\"kind\":\"user\",\"methods\":{\"setOperator(address)\":{\"notice\":\"Set the operator\"},\"setPauseState(bool)\":{\"notice\":\"Set pause state on the rewardDistributor for approved operator\"},\"transferBribes(bytes32[])\":{\"notice\":\"Redirect transferBribes call to the bribeVault for approved operator\"},\"updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])\":{\"notice\":\"Redirect updateRewardsMetadata call to the rewardDistributor for approved operator\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultOperator.sol\":\"VaultOperator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/VaultOperator.sol\":{\"keccak256\":\"0xecaaced3287b20158d25efe33e5ed2168ac917f70791d95645d8aa2cdb041c70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef253d7ea6b0559d7952d10c4c8e03744ecd5d17d189e901e9012fde6f933b4e\",\"dweb:/ipfs/QmTEUZG9SiW5NwBw4kEVD2sbnM4sHwriuXt69F5piqn4Fh\"]},\"contracts/interfaces/IBribeVault.sol\":{\"keccak256\":\"0x82bf444d894abacfec1f69dd5dc5140fd6b941ee8922738aee1783ede00d91b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fb794fb92bb601f019b8d73bf05d029a4cd545107a2f429ed874b04040fc41\",\"dweb:/ipfs/QmT8J8huF1RezxApkk23wRqZF3xtxf2bXdUonwRsmXeUty\"]},\"contracts/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x19cf8b1c3257a2aa6844a67c2c0ac3f2a41a78abfca29fc3203918e9e315e9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7326fa3edfafe5ddd68c5a3f0c878e872785ed72471e51d49666dc7a879fc634\",\"dweb:/ipfs/QmQnTuyTrzLMapEgqSErHvPtWob1gjrSHMydqCRugvay9R\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}},"contracts/interfaces/IBribeMarket.sol":{"IBribeMarket":{"abi":[{"inputs":[{"internalType":"address","name":"_bribeVault","type":"address"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"string","name":"_protocol","type":"string"},{"internalType":"uint256","name":"_maxPeriods","type":"uint256"},{"internalType":"uint256","name":"_periodDuration","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"initialize(address,address,string,uint256,uint256)":"8d23507f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bribeVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_protocol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxPeriods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodDuration\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initialize(address,address,string,uint256,uint256)\":{\"params\":{\"_admin\":\"Admin address\",\"_bribeVault\":\"Bribe vault address\",\"_maxPeriods\":\"Maximum number of periods\",\"_periodDuration\":\"Period duration\",\"_protocol\":\"Protocol name\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,address,string,uint256,uint256)\":{\"notice\":\"Initialize the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBribeMarket.sol\":\"IBribeMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBribeMarket.sol\":{\"keccak256\":\"0xa8769c89e8327117f0dfffc4f7ac26233d8c48655aac54b3498f3d806af1459a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2808bbbd7e28fb3ca4bc215308d19a0f24f07fe6a4285e62ffabeb449c1e42f3\",\"dweb:/ipfs/QmT8Nrypd1fvbReqNgJqNyDxWjLm5SVXQY4fUMb2gfLZRa\"]}},\"version\":1}"}},"contracts/interfaces/IBribeVault.sol":{"IBribeVault":{"abi":[{"inputs":[{"components":[{"internalType":"bytes32","name":"proposal","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"briber","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensPerVote","type":"uint256"},{"internalType":"uint256","name":"periods","type":"uint256"},{"internalType":"uint256","name":"periodDuration","type":"uint256"},{"internalType":"uint256","name":"proposalDeadline","type":"uint256"},{"internalType":"uint256","name":"permitDeadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct Common.DepositBribeParams","name":"_depositParams","type":"tuple"}],"name":"depositBribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_bribeIdentifier","type":"bytes32"}],"name":"getBribe","outputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_depositor","type":"address"}],"name":"grantDepositorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_rewardIdentifiers","type":"bytes32[]"}],"name":"transferBribes","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"depositBribe((bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes))":"5c2a802b","getBribe(bytes32)":"2c4ef0d5","grantDepositorRole(address)":"172becff","transferBribes(bytes32[])":"b2d7edb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposal\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"briber\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensPerVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"permitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Common.DepositBribeParams\",\"name\":\"_depositParams\",\"type\":\"tuple\"}],\"name\":\"depositBribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_bribeIdentifier\",\"type\":\"bytes32\"}],\"name\":\"getBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"grantDepositorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_rewardIdentifiers\",\"type\":\"bytes32[]\"}],\"name\":\"transferBribes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositBribe((bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes))\":{\"params\":{\"_depositParams\":\"DepositBribeParams  Deposit data\"}},\"getBribe(bytes32)\":{\"params\":{\"_bribeIdentifier\":\"bytes32  The specified bribe identifier\"}},\"grantDepositorRole(address)\":{\"params\":{\"_depositor\":\"address  Address to grant the depositor role\"}},\"transferBribes(bytes32[])\":{\"params\":{\"_rewardIdentifiers\":\"bytes32[]  List of rewardIdentifiers\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositBribe((bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes))\":{\"notice\":\"Deposit bribe (ERC20 only)\"},\"getBribe(bytes32)\":{\"notice\":\"Get bribe information based on the specified identifier\"},\"grantDepositorRole(address)\":{\"notice\":\"Grant the depositor role to an address\"},\"transferBribes(bytes32[])\":{\"notice\":\"Transfer fees to fee recipient and bribes to distributor and update rewards metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBribeVault.sol\":\"IBribeVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBribeVault.sol\":{\"keccak256\":\"0x82bf444d894abacfec1f69dd5dc5140fd6b941ee8922738aee1783ede00d91b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fb794fb92bb601f019b8d73bf05d029a4cd545107a2f429ed874b04040fc41\",\"dweb:/ipfs/QmT8J8huF1RezxApkk23wRqZF3xtxf2bXdUonwRsmXeUty\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]}},\"version\":1}"}},"contracts/interfaces/IPermit2.sol":{"IPermit2":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IPermit2.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IPermit2.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address,address)":"927da105","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","transferFrom(address,address,uint160,address)":"36c78516"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IPermit2.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPermit2.sol\":\"IPermit2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/interfaces/IPermit2.sol\":{\"keccak256\":\"0x39f0de68f34581fecd80de920f70a613214822bdd1d5b30c2f9427efa4181c08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83928510bd281517757cd9ff7f1fd45079eeba6d80e62b079badb3090f57cf65\",\"dweb:/ipfs/QmPVRh1G1cpaY8yhhogTPRw1LLcjFZ1FWnN7cb1zvvkJdh\"]}},\"version\":1}"}},"contracts/interfaces/IRewardDistributor.sol":{"IRewardDistributor":{"abi":[{"inputs":[{"components":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"internalType":"struct Common.Claim[]","name":"_claims","type":"tuple[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"state","type":"bool"}],"name":"setPauseState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"proof","type":"bytes32"}],"internalType":"struct Common.Distribution[]","name":"distributions","type":"tuple[]"}],"name":"updateRewardsMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"claim((bytes32,address,uint256,bytes32[])[])":"56853398","setPauseState(bool)":"cdb88ad1","updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])":"df45c752"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct Common.Claim[]\",\"name\":\"_claims\",\"type\":\"tuple[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"}],\"internalType\":\"struct Common.Distribution[]\",\"name\":\"distributions\",\"type\":\"tuple[]\"}],\"name\":\"updateRewardsMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim((bytes32,address,uint256,bytes32[])[])\":{\"params\":{\"_claims\":\"Claim[] List of claim metadata\"}},\"setPauseState(bool)\":{\"params\":{\"state\":\"bool  Pause state\"}},\"updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])\":{\"params\":{\"distributions\":\"Distribution[] List of reward distribution details\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim((bytes32,address,uint256,bytes32[])[])\":{\"notice\":\"Claim rewards based on the specified metadata\"},\"setPauseState(bool)\":{\"notice\":\"Set the contract's pause state (ie. before taking snapshot for the harvester)\"},\"updateRewardsMetadata((bytes32,address,bytes32,bytes32)[])\":{\"notice\":\"Update rewards metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRewardDistributor.sol\":\"IRewardDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x19cf8b1c3257a2aa6844a67c2c0ac3f2a41a78abfca29fc3203918e9e315e9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7326fa3edfafe5ddd68c5a3f0c878e872785ed72471e51d49666dc7a879fc634\",\"dweb:/ipfs/QmQnTuyTrzLMapEgqSErHvPtWob1gjrSHMydqCRugvay9R\"]},\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]}},\"version\":1}"}},"contracts/interfaces/IRewardHarvester.sol":{"IRewardHarvester":{"abi":[{"inputs":[],"name":"defaultToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositReward","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"defaultToken()":"74c13fda","depositReward(uint256)":"1e2720ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"defaultToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositReward(uint256)\":{\"params\":{\"_amount\":\"uint256  Amount of `defaultToken` to deposit\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"defaultToken()\":{\"notice\":\"Return the default token address\"},\"depositReward(uint256)\":{\"notice\":\"Deposit `defaultToken` to this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRewardHarvester.sol\":\"IRewardHarvester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IRewardHarvester.sol\":{\"keccak256\":\"0x55c472af75430b8691ab7aa1f6b9665ca435471408f2724c87ab1277eb2948d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873daeaee18d750c4f986ef5797e4930e7146c1d4f3c3b085bbb05fc8cf56432\",\"dweb:/ipfs/QmduPueSnnpJoye59Y2LRGNJvmZ4Swh4yGi7zRD3J2THUT\"]}},\"version\":1}"}},"contracts/interfaces/IvlAura.sol":{"vlAura":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address)":"70a08231","delegates(address)":"587cde1e","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"user\":\"address  User account\"}},\"delegates(address)\":{\"params\":{\"account\":\"address  Account\"}},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Balance of the specified user\"},\"delegates(address)\":{\"notice\":\"Delegate of the specified account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IvlAura.sol\":\"vlAura\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IvlAura.sol\":{\"keccak256\":\"0x54760c2ce67f5a32778cc2a679c3d578ecfddb6cf400448de2890018de4a4d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d1db1d5cf829913d02ee66f3056184c8c794f1aca8926880a65a95e409fd4fb\",\"dweb:/ipfs/QmX8EqruixLQD1Xm6QZ5mWsBUxUNVbkrq1Fh6LP5R9k8BC\"]}},\"version\":1}"}},"contracts/libraries/Common.sol":{"Common":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea3646970667358221220cbb32d7723dac6071681231a90e9e40a423391980949df44d35a62a2e9902ee56c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xB3 0x2D PUSH24 0x23DAC6071681231A90E9E40A423391980949DF44D35A62A2 0xE9 SWAP1 0x2E 0xE5 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"57:3108:33:-:0;;;;;;-1:-1:-1;57:3108:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea3646970667358221220cbb32d7723dac6071681231a90e9e40a423391980949df44d35a62a2e9902ee56c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xB3 0x2D PUSH24 0x23DAC6071681231A90E9E40A423391980949DF44D35A62A2 0xE9 SWAP1 0x2E 0xE5 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"57:3108:33:-:0;;;;;:::i;:::-;-1:-1:-1;57:3108:33;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Common.sol\":\"Common\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/Common.sol\":{\"keccak256\":\"0x7053ccf3ec4478e5afad3f32740911ecf9cbc3761a1e9cd40469a056b00c0337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122ddd3a672e55c1ae721d53aa4e84a40ccf67a92a7a9582871eb2bb771e25cf\",\"dweb:/ipfs/QmUFWiyji4VQD8NAZ2x4c9uxrR2GrBmYkefU8wBtS8xAki\"]}},\"version\":1}"}},"contracts/libraries/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"AlreadyInitialized","type":"error"},{"inputs":[],"name":"BribeAlreadyTransferred","type":"error"},{"inputs":[],"name":"DeadlineBreach","type":"error"},{"inputs":[],"name":"DeadlinePassed","type":"error"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"ExchangeDataArrayMismatch","type":"error"},{"inputs":[],"name":"ExternalCallFailure","type":"error"},{"inputs":[],"name":"InsufficientReturn","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidArray","type":"error"},{"inputs":[],"name":"InvalidBriber","type":"error"},{"inputs":[],"name":"InvalidChoiceCount","type":"error"},{"inputs":[],"name":"InvalidClaim","type":"error"},{"inputs":[],"name":"InvalidDeadline","type":"error"},{"inputs":[],"name":"InvalidDistribution","type":"error"},{"inputs":[],"name":"InvalidDistributor","type":"error"},{"inputs":[],"name":"InvalidFee","type":"error"},{"inputs":[],"name":"InvalidFeeRecipient","type":"error"},{"inputs":[],"name":"InvalidIdentifier","type":"error"},{"inputs":[],"name":"InvalidMaxFee","type":"error"},{"inputs":[],"name":"InvalidMaxPeriod","type":"error"},{"inputs":[],"name":"InvalidMerkleRoot","type":"error"},{"inputs":[],"name":"InvalidOperator","type":"error"},{"inputs":[],"name":"InvalidPeriod","type":"error"},{"inputs":[],"name":"InvalidPeriodDuration","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidProtocol","type":"error"},{"inputs":[],"name":"InvalidRewardIdentifier","type":"error"},{"inputs":[],"name":"InvalidTimerDuration","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"NoWhitelistBribeVault","type":"error"},{"inputs":[],"name":"NotAContract","type":"error"},{"inputs":[],"name":"NotAuthorized","type":"error"},{"inputs":[],"name":"NotDepositor","type":"error"},{"inputs":[],"name":"NotTeamMember","type":"error"},{"inputs":[],"name":"RewardInactive","type":"error"},{"inputs":[],"name":"TokenNotWhitelisted","type":"error"},{"inputs":[],"name":"TokenTransferProxyCall","type":"error"},{"inputs":[],"name":"TokenWhitelisted","type":"error"},{"inputs":[],"name":"TransferFromCall","type":"error"},{"inputs":[],"name":"VoterBlacklisted","type":"error"},{"inputs":[],"name":"VoterNotBlacklisted","type":"error"},{"inputs":[],"name":"ZeroExpectedReturns","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601b575b6040516056602c823930815050605690f35b60216025565b6009565b50600080fdfe6080604052600a600c565b005b50600080fdfea36469706673582212201bb82c14975d2b3876d3473978f95bdb1f0ca6ec0a3d8789aea0eeac1170f9d86c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x56 PUSH1 0x2C DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x56 SWAP1 RETURN JUMPDEST PUSH1 0x21 PUSH1 0x25 JUMP JUMPDEST PUSH1 0x9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xB8 0x2C EQ SWAP8 0x5D 0x2B CODESIZE PUSH23 0xD3473978F95BDB1F0CA6EC0A3D8789AEA0EEAC1170F9D8 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"57:3853:34:-:0;;;;;;-1:-1:-1;57:3853:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":12,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b50600080fdfea36469706673582212201bb82c14975d2b3876d3473978f95bdb1f0ca6ec0a3d8789aea0eeac1170f9d86c6578706572696d656e74616cf564736f6c634300080c0041","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT INVALID LOG3 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xB8 0x2C EQ SWAP8 0x5D 0x2B CODESIZE PUSH23 0xD3473978F95BDB1F0CA6EC0A3D8789AEA0EEAC1170F9D8 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP COINBASE ","sourceMap":"57:3853:34:-:0;;;;;:::i;:::-;-1:-1:-1;57:3853:34;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BribeAlreadyTransferred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineBreach\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeDataArrayMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalCallFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientReturn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBriber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChoiceCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDistributor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIdentifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeriodDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProtocol\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardIdentifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimerDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoWhitelistBribeVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDepositor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTeamMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferProxyCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoterBlacklisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoterNotBlacklisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroExpectedReturns\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"contract already initialized\"}],\"BribeAlreadyTransferred()\":[{\"notice\":\"bribe has already been transferred\"}],\"DeadlineBreach()\":[{\"notice\":\"swapDeadline expired\"}],\"DeadlinePassed()\":[{\"notice\":\"deadline has passed\"}],\"ETHTransferFailed()\":[{\"notice\":\"ETH transfer failed\"}],\"ExchangeDataArrayMismatch()\":[{\"notice\":\"arrays in SwapData.exchangeData have wrong lengths\"}],\"ExternalCallFailure()\":[{\"notice\":\"external call failed\"}],\"InsufficientReturn()\":[{\"notice\":\"returned tokens too few\"}],\"InvalidAddress()\":[{\"notice\":\"address(0)\"}],\"InvalidAmount()\":[{\"notice\":\"invalid input amount\"}],\"InvalidArray()\":[{\"notice\":\"no array given\"}],\"InvalidBriber()\":[{\"notice\":\"invalid briber\"}],\"InvalidChoiceCount()\":[{\"notice\":\"invalid number of choices\"}],\"InvalidClaim()\":[{\"notice\":\"claim does not exist\"}],\"InvalidDeadline()\":[{\"notice\":\"invalid deadline\"}],\"InvalidDistribution()\":[{\"notice\":\"distribution does not exist\"}],\"InvalidDistributor()\":[{\"notice\":\"invalid distributor\"}],\"InvalidFee()\":[{\"notice\":\"invalid fee\"}],\"InvalidFeeRecipient()\":[{\"notice\":\"invalid fee recipient\"}],\"InvalidIdentifier()\":[{\"notice\":\"empty bytes identifier\"}],\"InvalidMaxFee()\":[{\"notice\":\"invalid max fee\"}],\"InvalidMaxPeriod()\":[{\"notice\":\"max period 0 or greater than MAX_PERIODS\"}],\"InvalidMerkleRoot()\":[{\"notice\":\"invalid merkle root\"}],\"InvalidOperator()\":[{\"notice\":\"Invalid operator address\"}],\"InvalidPeriod()\":[{\"notice\":\"invalid period\"}],\"InvalidPeriodDuration()\":[{\"notice\":\"period duration 0 or greater than MAX_PERIOD_DURATION\"}],\"InvalidProof()\":[{\"notice\":\"merkle proof is invalid\"}],\"InvalidProtocol()\":[{\"notice\":\"invalid protocol name\"}],\"InvalidRewardIdentifier()\":[{\"notice\":\"invalid reward identifier\"}],\"InvalidTimerDuration()\":[{\"notice\":\"timer duration is invalid\"}],\"InvalidToken()\":[{\"notice\":\"token is address(0)\"}],\"NoWhitelistBribeVault()\":[{\"notice\":\"cannot whitelist BRIBE_VAULT\"}],\"NotAContract()\":[{\"notice\":\"address provided is not a contract\"}],\"NotAuthorized()\":[{\"notice\":\"not authorized\"}],\"NotDepositor()\":[{\"notice\":\"address does not have DEPOSITOR_ROLE\"}],\"NotTeamMember()\":[{\"notice\":\"not team member\"}],\"RewardInactive()\":[{\"notice\":\"reward is not yet active for claiming\"}],\"TokenNotWhitelisted()\":[{\"notice\":\"token not whitelisted\"}],\"TokenTransferProxyCall()\":[{\"notice\":\"call to TokenTransferProxy contract\"}],\"TokenWhitelisted()\":[{\"notice\":\"token already whitelisted\"}],\"TransferFromCall()\":[{\"notice\":\"calling TransferFrom\"}],\"VoterBlacklisted()\":[{\"notice\":\"voter already blacklisted\"}],\"VoterNotBlacklisted()\":[{\"notice\":\"voter not blacklisted\"}],\"ZeroExpectedReturns()\":[{\"notice\":\"expected tokens returned are 0\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x320e9e49c0b74f095eab0b4805b474e62a9e847c992083e7e9350703df4f10e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f4892579c2f810f48826ac75bda0930813fc74a998970ff3cca518a1a0b935c\",\"dweb:/ipfs/QmWAaaGfzr1UUTwzNa7C7BqSf7zphRdZfWaCM9WvQWwaBA\"]}},\"version\":1}"}}}}}